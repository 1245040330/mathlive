{"version":3,"file":"mathlive.mjs","sources":["../src/common/types.ts","../src/core/font-metrics-data.ts","../src/core/font-metrics.ts","../src/core/mathstyle.ts","../src/core/context.ts","../src/core/svg-span.ts","../src/core/modes-utils.ts","../src/core/span.ts","../src/core/definitions-utils.ts","../src/core/definitions-accents.ts","../src/core/definitions-enclose.ts","../src/core/definitions-environments.ts","../src/core/definitions-extensible-symbols.ts","../src/core/definitions-functions.ts","../src/core/color.ts","../src/core/definitions-styling.ts","../src/core/definitions-symbols.ts","../src/core/delimiters.ts","../src/core/atom-to-latex.ts","../src/core/atom-utils.ts","../src/core/grapheme-splitter.ts","../src/core/lexer.ts","../src/core/atom-genfrac.ts","../src/core/atom-array.ts","../src/core/atom-overunder.ts","../src/core/atom-accent.ts","../src/core/atom-enclose.ts","../src/core/atom-box.ts","../src/core/atom-op.ts","../src/core/atom-line.ts","../src/core/atom-leftright.ts","../src/core/atom-surd.ts","../src/core/modes-math.ts","../src/core/modes-text.ts","../src/core/parser.ts","../src/editor/model-utils.ts","../src/editor/path.ts","../src/editor/model-array-utils.ts","../src/editor/model-class.ts","../src/editor/model-listeners.ts","../src/editor/model-selection.ts","../src/editor/shortcuts-definitions-inline.ts","../src/editor/shortcuts-definitions-keyboard.ts","../src/editor/shortcuts.ts","../src/editor/mathfield-utils.ts","../src/editor/mathfield-buttons.ts","../src/editor/popover.ts","../src/editor/model-command-mode.ts","../src/addons/math-ml.ts","../src/editor/mathfield-render.ts","../src/editor/commands.ts","../src/editor/model-array.ts","../src/editor/model-delete.ts","../src/editor/parse-math-string.ts","../src/editor/model-smartfence.ts","../src/editor/model-styling.ts","../src/editor/model-insert.ts","../src/editor/model-commands.ts","../src/editor/editor-keyboard.ts","../src/editor/undo.ts","../src/editor/atom-to-ascii-math.ts","../src/editor/l10n-strings.ts","../src/editor/l10n.ts","../src/editor/autocomplete.ts","../src/editor/atom-to-speakable-text.ts","../src/editor/speech.ts","../src/editor/a11y.ts","../src/editor/config.ts","../src/editor/mathfield-smartmode.ts","../src/editor/mathfield-keyboard-input.ts","../src/editor/mathfield-commands.ts","../src/editor/mathfield-clipboard.ts","../src/editor/mathfield-pointer-input.ts","../src/editor/virtual-keyboard-utils.ts","../src/editor/virtual-keyboard-commands.ts","../src/addons/math-json.ts","../src/editor/mathfield-class.ts","../src/addons/auto-render.ts","../src/addons/debug.ts","../src/editor/speech-read-aloud.ts","../src/addons/definitions-metadata.ts","../src/mathlive.ts"],"sourcesContent":["export function isArray(array: any): array is any[] {\r\n    return Array.isArray(array);\r\n}\r\n\r\nexport function isString(str: any): str is string {\r\n    return typeof str === 'string';\r\n}\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n    return typeof obj === 'number' && !isNaN(obj);\r\n}\r\n\r\nexport function isFunction(obj: any): obj is Function {\r\n    return typeof obj === 'function';\r\n}\r\n","export default {\r\n    'AMS-Regular': {\r\n        '65': [0, 0.68889, 0, 0],\r\n        '66': [0, 0.68889, 0, 0],\r\n        '67': [0, 0.68889, 0, 0],\r\n        '68': [0, 0.68889, 0, 0],\r\n        '69': [0, 0.68889, 0, 0],\r\n        '70': [0, 0.68889, 0, 0],\r\n        '71': [0, 0.68889, 0, 0],\r\n        '72': [0, 0.68889, 0, 0],\r\n        '73': [0, 0.68889, 0, 0],\r\n        '74': [0.16667, 0.68889, 0, 0],\r\n        '75': [0, 0.68889, 0, 0],\r\n        '76': [0, 0.68889, 0, 0],\r\n        '77': [0, 0.68889, 0, 0],\r\n        '78': [0, 0.68889, 0, 0],\r\n        '79': [0.16667, 0.68889, 0, 0],\r\n        '80': [0, 0.68889, 0, 0],\r\n        '81': [0.16667, 0.68889, 0, 0],\r\n        '82': [0, 0.68889, 0, 0],\r\n        '83': [0, 0.68889, 0, 0],\r\n        '84': [0, 0.68889, 0, 0],\r\n        '85': [0, 0.68889, 0, 0],\r\n        '86': [0, 0.68889, 0, 0],\r\n        '87': [0, 0.68889, 0, 0],\r\n        '88': [0, 0.68889, 0, 0],\r\n        '89': [0, 0.68889, 0, 0],\r\n        '90': [0, 0.68889, 0, 0],\r\n        '107': [0, 0.68889, 0, 0],\r\n        '165': [0, 0.675, 0.025, 0],\r\n        '174': [0.15559, 0.69224, 0, 0],\r\n        '240': [0, 0.68889, 0, 0],\r\n        '295': [0, 0.68889, 0, 0],\r\n        '710': [0, 0.825, 0, 0],\r\n        '732': [0, 0.9, 0, 0],\r\n        '770': [0, 0.825, 0, 0],\r\n        '771': [0, 0.9, 0, 0],\r\n        '989': [0.08167, 0.58167, 0, 0],\r\n        '1008': [0, 0.43056, 0.04028, 0],\r\n        '8245': [0, 0.54986, 0, 0],\r\n        '8463': [0, 0.68889, 0, 0],\r\n        '8487': [0, 0.68889, 0, 0],\r\n        '8498': [0, 0.68889, 0, 0],\r\n        '8502': [0, 0.68889, 0, 0],\r\n        '8503': [0, 0.68889, 0, 0],\r\n        '8504': [0, 0.68889, 0, 0],\r\n        '8513': [0, 0.68889, 0, 0],\r\n        '8592': [-0.03598, 0.46402, 0, 0],\r\n        '8594': [-0.03598, 0.46402, 0, 0],\r\n        '8602': [-0.13313, 0.36687, 0, 0],\r\n        '8603': [-0.13313, 0.36687, 0, 0],\r\n        '8606': [0.01354, 0.52239, 0, 0],\r\n        '8608': [0.01354, 0.52239, 0, 0],\r\n        '8610': [0.01354, 0.52239, 0, 0],\r\n        '8611': [0.01354, 0.52239, 0, 0],\r\n        '8619': [0, 0.54986, 0, 0],\r\n        '8620': [0, 0.54986, 0, 0],\r\n        '8621': [-0.13313, 0.37788, 0, 0],\r\n        '8622': [-0.13313, 0.36687, 0, 0],\r\n        '8624': [0, 0.69224, 0, 0],\r\n        '8625': [0, 0.69224, 0, 0],\r\n        '8630': [0, 0.43056, 0, 0],\r\n        '8631': [0, 0.43056, 0, 0],\r\n        '8634': [0.08198, 0.58198, 0, 0],\r\n        '8635': [0.08198, 0.58198, 0, 0],\r\n        '8638': [0.19444, 0.69224, 0, 0],\r\n        '8639': [0.19444, 0.69224, 0, 0],\r\n        '8642': [0.19444, 0.69224, 0, 0],\r\n        '8643': [0.19444, 0.69224, 0, 0],\r\n        '8644': [0.1808, 0.675, 0, 0],\r\n        '8646': [0.1808, 0.675, 0, 0],\r\n        '8647': [0.1808, 0.675, 0, 0],\r\n        '8648': [0.19444, 0.69224, 0, 0],\r\n        '8649': [0.1808, 0.675, 0, 0],\r\n        '8650': [0.19444, 0.69224, 0, 0],\r\n        '8651': [0.01354, 0.52239, 0, 0],\r\n        '8652': [0.01354, 0.52239, 0, 0],\r\n        '8653': [-0.13313, 0.36687, 0, 0],\r\n        '8654': [-0.13313, 0.36687, 0, 0],\r\n        '8655': [-0.13313, 0.36687, 0, 0],\r\n        '8666': [0.13667, 0.63667, 0, 0],\r\n        '8667': [0.13667, 0.63667, 0, 0],\r\n        '8669': [-0.13313, 0.37788, 0, 0],\r\n        '8672': [-0.064, 0.437, 0, 0],\r\n        '8674': [-0.064, 0.437, 0, 0],\r\n        '8705': [0, 0.825, 0, 0],\r\n        '8708': [0, 0.68889, 0, 0],\r\n        '8709': [0.08167, 0.58167, 0, 0],\r\n        '8717': [0, 0.43056, 0, 0],\r\n        '8722': [-0.03598, 0.46402, 0, 0],\r\n        '8724': [0.08198, 0.69224, 0, 0],\r\n        '8726': [0.08167, 0.58167, 0, 0],\r\n        '8733': [0, 0.69224, 0, 0],\r\n        '8736': [0, 0.69224, 0, 0],\r\n        '8737': [0, 0.69224, 0, 0],\r\n        '8738': [0.03517, 0.52239, 0, 0],\r\n        '8739': [0.08167, 0.58167, 0, 0],\r\n        '8740': [0.25142, 0.74111, 0, 0],\r\n        '8741': [0.08167, 0.58167, 0, 0],\r\n        '8742': [0.25142, 0.74111, 0, 0],\r\n        '8756': [0, 0.69224, 0, 0],\r\n        '8757': [0, 0.69224, 0, 0],\r\n        '8764': [-0.13313, 0.36687, 0, 0],\r\n        '8765': [-0.13313, 0.37788, 0, 0],\r\n        '8769': [-0.13313, 0.36687, 0, 0],\r\n        '8770': [-0.03625, 0.46375, 0, 0],\r\n        '8774': [0.30274, 0.79383, 0, 0],\r\n        '8776': [-0.01688, 0.48312, 0, 0],\r\n        '8778': [0.08167, 0.58167, 0, 0],\r\n        '8782': [0.06062, 0.54986, 0, 0],\r\n        '8783': [0.06062, 0.54986, 0, 0],\r\n        '8785': [0.08198, 0.58198, 0, 0],\r\n        '8786': [0.08198, 0.58198, 0, 0],\r\n        '8787': [0.08198, 0.58198, 0, 0],\r\n        '8790': [0, 0.69224, 0, 0],\r\n        '8791': [0.22958, 0.72958, 0, 0],\r\n        '8796': [0.08198, 0.91667, 0, 0],\r\n        '8806': [0.25583, 0.75583, 0, 0],\r\n        '8807': [0.25583, 0.75583, 0, 0],\r\n        '8808': [0.25142, 0.75726, 0, 0],\r\n        '8809': [0.25142, 0.75726, 0, 0],\r\n        '8812': [0.25583, 0.75583, 0, 0],\r\n        '8814': [0.20576, 0.70576, 0, 0],\r\n        '8815': [0.20576, 0.70576, 0, 0],\r\n        '8816': [0.30274, 0.79383, 0, 0],\r\n        '8817': [0.30274, 0.79383, 0, 0],\r\n        '8818': [0.22958, 0.72958, 0, 0],\r\n        '8819': [0.22958, 0.72958, 0, 0],\r\n        '8822': [0.1808, 0.675, 0, 0],\r\n        '8823': [0.1808, 0.675, 0, 0],\r\n        '8828': [0.13667, 0.63667, 0, 0],\r\n        '8829': [0.13667, 0.63667, 0, 0],\r\n        '8830': [0.22958, 0.72958, 0, 0],\r\n        '8831': [0.22958, 0.72958, 0, 0],\r\n        '8832': [0.20576, 0.70576, 0, 0],\r\n        '8833': [0.20576, 0.70576, 0, 0],\r\n        '8840': [0.30274, 0.79383, 0, 0],\r\n        '8841': [0.30274, 0.79383, 0, 0],\r\n        '8842': [0.13597, 0.63597, 0, 0],\r\n        '8843': [0.13597, 0.63597, 0, 0],\r\n        '8847': [0.03517, 0.54986, 0, 0],\r\n        '8848': [0.03517, 0.54986, 0, 0],\r\n        '8858': [0.08198, 0.58198, 0, 0],\r\n        '8859': [0.08198, 0.58198, 0, 0],\r\n        '8861': [0.08198, 0.58198, 0, 0],\r\n        '8862': [0, 0.675, 0, 0],\r\n        '8863': [0, 0.675, 0, 0],\r\n        '8864': [0, 0.675, 0, 0],\r\n        '8865': [0, 0.675, 0, 0],\r\n        '8872': [0, 0.69224, 0, 0],\r\n        '8873': [0, 0.69224, 0, 0],\r\n        '8874': [0, 0.69224, 0, 0],\r\n        '8876': [0, 0.68889, 0, 0],\r\n        '8877': [0, 0.68889, 0, 0],\r\n        '8878': [0, 0.68889, 0, 0],\r\n        '8879': [0, 0.68889, 0, 0],\r\n        '8882': [0.03517, 0.54986, 0, 0],\r\n        '8883': [0.03517, 0.54986, 0, 0],\r\n        '8884': [0.13667, 0.63667, 0, 0],\r\n        '8885': [0.13667, 0.63667, 0, 0],\r\n        '8888': [0, 0.54986, 0, 0],\r\n        '8890': [0.19444, 0.43056, 0, 0],\r\n        '8891': [0.19444, 0.69224, 0, 0],\r\n        '8892': [0.19444, 0.69224, 0, 0],\r\n        '8901': [0, 0.54986, 0, 0],\r\n        '8903': [0.08167, 0.58167, 0, 0],\r\n        '8905': [0.08167, 0.58167, 0, 0],\r\n        '8906': [0.08167, 0.58167, 0, 0],\r\n        '8907': [0, 0.69224, 0, 0],\r\n        '8908': [0, 0.69224, 0, 0],\r\n        '8909': [-0.03598, 0.46402, 0, 0],\r\n        '8910': [0, 0.54986, 0, 0],\r\n        '8911': [0, 0.54986, 0, 0],\r\n        '8912': [0.03517, 0.54986, 0, 0],\r\n        '8913': [0.03517, 0.54986, 0, 0],\r\n        '8914': [0, 0.54986, 0, 0],\r\n        '8915': [0, 0.54986, 0, 0],\r\n        '8916': [0, 0.69224, 0, 0],\r\n        '8918': [0.0391, 0.5391, 0, 0],\r\n        '8919': [0.0391, 0.5391, 0, 0],\r\n        '8920': [0.03517, 0.54986, 0, 0],\r\n        '8921': [0.03517, 0.54986, 0, 0],\r\n        '8922': [0.38569, 0.88569, 0, 0],\r\n        '8923': [0.38569, 0.88569, 0, 0],\r\n        '8926': [0.13667, 0.63667, 0, 0],\r\n        '8927': [0.13667, 0.63667, 0, 0],\r\n        '8928': [0.30274, 0.79383, 0, 0],\r\n        '8929': [0.30274, 0.79383, 0, 0],\r\n        '8934': [0.23222, 0.74111, 0, 0],\r\n        '8935': [0.23222, 0.74111, 0, 0],\r\n        '8936': [0.23222, 0.74111, 0, 0],\r\n        '8937': [0.23222, 0.74111, 0, 0],\r\n        '8938': [0.20576, 0.70576, 0, 0],\r\n        '8939': [0.20576, 0.70576, 0, 0],\r\n        '8940': [0.30274, 0.79383, 0, 0],\r\n        '8941': [0.30274, 0.79383, 0, 0],\r\n        '8994': [0.19444, 0.69224, 0, 0],\r\n        '8995': [0.19444, 0.69224, 0, 0],\r\n        '9416': [0.15559, 0.69224, 0, 0],\r\n        '9484': [0, 0.69224, 0, 0],\r\n        '9488': [0, 0.69224, 0, 0],\r\n        '9492': [0, 0.37788, 0, 0],\r\n        '9496': [0, 0.37788, 0, 0],\r\n        '9585': [0.19444, 0.68889, 0, 0],\r\n        '9586': [0.19444, 0.74111, 0, 0],\r\n        '9632': [0, 0.675, 0, 0],\r\n        '9633': [0, 0.675, 0, 0],\r\n        '9650': [0, 0.54986, 0, 0],\r\n        '9651': [0, 0.54986, 0, 0],\r\n        '9654': [0.03517, 0.54986, 0, 0],\r\n        '9660': [0, 0.54986, 0, 0],\r\n        '9661': [0, 0.54986, 0, 0],\r\n        '9664': [0.03517, 0.54986, 0, 0],\r\n        '9674': [0.11111, 0.69224, 0, 0],\r\n        '9733': [0.19444, 0.69224, 0, 0],\r\n        '10003': [0, 0.69224, 0, 0],\r\n        '10016': [0, 0.69224, 0, 0],\r\n        '10731': [0.11111, 0.69224, 0, 0],\r\n        '10846': [0.19444, 0.75583, 0, 0],\r\n        '10877': [0.13667, 0.63667, 0, 0],\r\n        '10878': [0.13667, 0.63667, 0, 0],\r\n        '10885': [0.25583, 0.75583, 0, 0],\r\n        '10886': [0.25583, 0.75583, 0, 0],\r\n        '10887': [0.13597, 0.63597, 0, 0],\r\n        '10888': [0.13597, 0.63597, 0, 0],\r\n        '10889': [0.26167, 0.75726, 0, 0],\r\n        '10890': [0.26167, 0.75726, 0, 0],\r\n        '10891': [0.48256, 0.98256, 0, 0],\r\n        '10892': [0.48256, 0.98256, 0, 0],\r\n        '10901': [0.13667, 0.63667, 0, 0],\r\n        '10902': [0.13667, 0.63667, 0, 0],\r\n        '10933': [0.25142, 0.75726, 0, 0],\r\n        '10934': [0.25142, 0.75726, 0, 0],\r\n        '10935': [0.26167, 0.75726, 0, 0],\r\n        '10936': [0.26167, 0.75726, 0, 0],\r\n        '10937': [0.26167, 0.75726, 0, 0],\r\n        '10938': [0.26167, 0.75726, 0, 0],\r\n        '10949': [0.25583, 0.75583, 0, 0],\r\n        '10950': [0.25583, 0.75583, 0, 0],\r\n        '10955': [0.28481, 0.79383, 0, 0],\r\n        '10956': [0.28481, 0.79383, 0, 0],\r\n        '57350': [0.08167, 0.58167, 0, 0],\r\n        '57351': [0.08167, 0.58167, 0, 0],\r\n        '57352': [0.08167, 0.58167, 0, 0],\r\n        '57353': [0, 0.43056, 0.04028, 0],\r\n        '57356': [0.25142, 0.75726, 0, 0],\r\n        '57357': [0.25142, 0.75726, 0, 0],\r\n        '57358': [0.41951, 0.91951, 0, 0],\r\n        '57359': [0.30274, 0.79383, 0, 0],\r\n        '57360': [0.30274, 0.79383, 0, 0],\r\n        '57361': [0.41951, 0.91951, 0, 0],\r\n        '57366': [0.25142, 0.75726, 0, 0],\r\n        '57367': [0.25142, 0.75726, 0, 0],\r\n        '57368': [0.25142, 0.75726, 0, 0],\r\n        '57369': [0.25142, 0.75726, 0, 0],\r\n        '57370': [0.13597, 0.63597, 0, 0],\r\n        '57371': [0.13597, 0.63597, 0, 0],\r\n    },\r\n    'Caligraphic-Regular': {\r\n        '48': [0, 0.43056, 0, 0],\r\n        '49': [0, 0.43056, 0, 0],\r\n        '50': [0, 0.43056, 0, 0],\r\n        '51': [0.19444, 0.43056, 0, 0],\r\n        '52': [0.19444, 0.43056, 0, 0],\r\n        '53': [0.19444, 0.43056, 0, 0],\r\n        '54': [0, 0.64444, 0, 0],\r\n        '55': [0.19444, 0.43056, 0, 0],\r\n        '56': [0, 0.64444, 0, 0],\r\n        '57': [0.19444, 0.43056, 0, 0],\r\n        '65': [0, 0.68333, 0, 0.19445],\r\n        '66': [0, 0.68333, 0.03041, 0.13889],\r\n        '67': [0, 0.68333, 0.05834, 0.13889],\r\n        '68': [0, 0.68333, 0.02778, 0.08334],\r\n        '69': [0, 0.68333, 0.08944, 0.11111],\r\n        '70': [0, 0.68333, 0.09931, 0.11111],\r\n        '71': [0.09722, 0.68333, 0.0593, 0.11111],\r\n        '72': [0, 0.68333, 0.00965, 0.11111],\r\n        '73': [0, 0.68333, 0.07382, 0],\r\n        '74': [0.09722, 0.68333, 0.18472, 0.16667],\r\n        '75': [0, 0.68333, 0.01445, 0.05556],\r\n        '76': [0, 0.68333, 0, 0.13889],\r\n        '77': [0, 0.68333, 0, 0.13889],\r\n        '78': [0, 0.68333, 0.14736, 0.08334],\r\n        '79': [0, 0.68333, 0.02778, 0.11111],\r\n        '80': [0, 0.68333, 0.08222, 0.08334],\r\n        '81': [0.09722, 0.68333, 0, 0.11111],\r\n        '82': [0, 0.68333, 0, 0.08334],\r\n        '83': [0, 0.68333, 0.075, 0.13889],\r\n        '84': [0, 0.68333, 0.25417, 0],\r\n        '85': [0, 0.68333, 0.09931, 0.08334],\r\n        '86': [0, 0.68333, 0.08222, 0],\r\n        '87': [0, 0.68333, 0.08222, 0.08334],\r\n        '88': [0, 0.68333, 0.14643, 0.13889],\r\n        '89': [0.09722, 0.68333, 0.08222, 0.08334],\r\n        '90': [0, 0.68333, 0.07944, 0.13889],\r\n    },\r\n    'Fraktur-Regular': {\r\n        '33': [0, 0.69141, 0, 0],\r\n        '34': [0, 0.69141, 0, 0],\r\n        '38': [0, 0.69141, 0, 0],\r\n        '39': [0, 0.69141, 0, 0],\r\n        '40': [0.24982, 0.74947, 0, 0],\r\n        '41': [0.24982, 0.74947, 0, 0],\r\n        '42': [0, 0.62119, 0, 0],\r\n        '43': [0.08319, 0.58283, 0, 0],\r\n        '44': [0, 0.10803, 0, 0],\r\n        '45': [0.08319, 0.58283, 0, 0],\r\n        '46': [0, 0.10803, 0, 0],\r\n        '47': [0.24982, 0.74947, 0, 0],\r\n        '48': [0, 0.47534, 0, 0],\r\n        '49': [0, 0.47534, 0, 0],\r\n        '50': [0, 0.47534, 0, 0],\r\n        '51': [0.18906, 0.47534, 0, 0],\r\n        '52': [0.18906, 0.47534, 0, 0],\r\n        '53': [0.18906, 0.47534, 0, 0],\r\n        '54': [0, 0.69141, 0, 0],\r\n        '55': [0.18906, 0.47534, 0, 0],\r\n        '56': [0, 0.69141, 0, 0],\r\n        '57': [0.18906, 0.47534, 0, 0],\r\n        '58': [0, 0.47534, 0, 0],\r\n        '59': [0.12604, 0.47534, 0, 0],\r\n        '61': [-0.13099, 0.36866, 0, 0],\r\n        '63': [0, 0.69141, 0, 0],\r\n        '65': [0, 0.69141, 0, 0],\r\n        '66': [0, 0.69141, 0, 0],\r\n        '67': [0, 0.69141, 0, 0],\r\n        '68': [0, 0.69141, 0, 0],\r\n        '69': [0, 0.69141, 0, 0],\r\n        '70': [0.12604, 0.69141, 0, 0],\r\n        '71': [0, 0.69141, 0, 0],\r\n        '72': [0.06302, 0.69141, 0, 0],\r\n        '73': [0, 0.69141, 0, 0],\r\n        '74': [0.12604, 0.69141, 0, 0],\r\n        '75': [0, 0.69141, 0, 0],\r\n        '76': [0, 0.69141, 0, 0],\r\n        '77': [0, 0.69141, 0, 0],\r\n        '78': [0, 0.69141, 0, 0],\r\n        '79': [0, 0.69141, 0, 0],\r\n        '80': [0.18906, 0.69141, 0, 0],\r\n        '81': [0.03781, 0.69141, 0, 0],\r\n        '82': [0, 0.69141, 0, 0],\r\n        '83': [0, 0.69141, 0, 0],\r\n        '84': [0, 0.69141, 0, 0],\r\n        '85': [0, 0.69141, 0, 0],\r\n        '86': [0, 0.69141, 0, 0],\r\n        '87': [0, 0.69141, 0, 0],\r\n        '88': [0, 0.69141, 0, 0],\r\n        '89': [0.18906, 0.69141, 0, 0],\r\n        '90': [0.12604, 0.69141, 0, 0],\r\n        '91': [0.24982, 0.74947, 0, 0],\r\n        '93': [0.24982, 0.74947, 0, 0],\r\n        '94': [0, 0.69141, 0, 0],\r\n        '97': [0, 0.47534, 0, 0],\r\n        '98': [0, 0.69141, 0, 0],\r\n        '99': [0, 0.47534, 0, 0],\r\n        '100': [0, 0.62119, 0, 0],\r\n        '101': [0, 0.47534, 0, 0],\r\n        '102': [0.18906, 0.69141, 0, 0],\r\n        '103': [0.18906, 0.47534, 0, 0],\r\n        '104': [0.18906, 0.69141, 0, 0],\r\n        '105': [0, 0.69141, 0, 0],\r\n        '106': [0, 0.69141, 0, 0],\r\n        '107': [0, 0.69141, 0, 0],\r\n        '108': [0, 0.69141, 0, 0],\r\n        '109': [0, 0.47534, 0, 0],\r\n        '110': [0, 0.47534, 0, 0],\r\n        '111': [0, 0.47534, 0, 0],\r\n        '112': [0.18906, 0.52396, 0, 0],\r\n        '113': [0.18906, 0.47534, 0, 0],\r\n        '114': [0, 0.47534, 0, 0],\r\n        '115': [0, 0.47534, 0, 0],\r\n        '116': [0, 0.62119, 0, 0],\r\n        '117': [0, 0.47534, 0, 0],\r\n        '118': [0, 0.52396, 0, 0],\r\n        '119': [0, 0.52396, 0, 0],\r\n        '120': [0.18906, 0.47534, 0, 0],\r\n        '121': [0.18906, 0.47534, 0, 0],\r\n        '122': [0.18906, 0.47534, 0, 0],\r\n        '8216': [0, 0.69141, 0, 0],\r\n        '8217': [0, 0.69141, 0, 0],\r\n        '58112': [0, 0.62119, 0, 0],\r\n        '58113': [0, 0.62119, 0, 0],\r\n        '58114': [0.18906, 0.69141, 0, 0],\r\n        '58115': [0.18906, 0.69141, 0, 0],\r\n        '58116': [0.18906, 0.47534, 0, 0],\r\n        '58117': [0, 0.69141, 0, 0],\r\n        '58118': [0, 0.62119, 0, 0],\r\n        '58119': [0, 0.47534, 0, 0],\r\n    },\r\n    'Main-Bold': {\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.13333, 0.63333, 0, 0],\r\n        '44': [0.19444, 0.15556, 0, 0],\r\n        '45': [0, 0.44444, 0, 0],\r\n        '46': [0, 0.15556, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.64444, 0, 0],\r\n        '49': [0, 0.64444, 0, 0],\r\n        '50': [0, 0.64444, 0, 0],\r\n        '51': [0, 0.64444, 0, 0],\r\n        '52': [0, 0.64444, 0, 0],\r\n        '53': [0, 0.64444, 0, 0],\r\n        '54': [0, 0.64444, 0, 0],\r\n        '55': [0, 0.64444, 0, 0],\r\n        '56': [0, 0.64444, 0, 0],\r\n        '57': [0, 0.64444, 0, 0],\r\n        '58': [0, 0.44444, 0, 0],\r\n        '59': [0.19444, 0.44444, 0, 0],\r\n        '60': [0.08556, 0.58556, 0, 0],\r\n        '61': [-0.10889, 0.39111, 0, 0],\r\n        '62': [0.08556, 0.58556, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.68611, 0, 0],\r\n        '66': [0, 0.68611, 0, 0],\r\n        '67': [0, 0.68611, 0, 0],\r\n        '68': [0, 0.68611, 0, 0],\r\n        '69': [0, 0.68611, 0, 0],\r\n        '70': [0, 0.68611, 0, 0],\r\n        '71': [0, 0.68611, 0, 0],\r\n        '72': [0, 0.68611, 0, 0],\r\n        '73': [0, 0.68611, 0, 0],\r\n        '74': [0, 0.68611, 0, 0],\r\n        '75': [0, 0.68611, 0, 0],\r\n        '76': [0, 0.68611, 0, 0],\r\n        '77': [0, 0.68611, 0, 0],\r\n        '78': [0, 0.68611, 0, 0],\r\n        '79': [0, 0.68611, 0, 0],\r\n        '80': [0, 0.68611, 0, 0],\r\n        '81': [0.19444, 0.68611, 0, 0],\r\n        '82': [0, 0.68611, 0, 0],\r\n        '83': [0, 0.68611, 0, 0],\r\n        '84': [0, 0.68611, 0, 0],\r\n        '85': [0, 0.68611, 0, 0],\r\n        '86': [0, 0.68611, 0.01597, 0],\r\n        '87': [0, 0.68611, 0.01597, 0],\r\n        '88': [0, 0.68611, 0, 0],\r\n        '89': [0, 0.68611, 0.02875, 0],\r\n        '90': [0, 0.68611, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '92': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.31, 0.13444, 0.03194, 0],\r\n        '97': [0, 0.44444, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.44444, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.44444, 0, 0],\r\n        '102': [0, 0.69444, 0.10903, 0],\r\n        '103': [0.19444, 0.44444, 0.01597, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.69444, 0, 0],\r\n        '106': [0.19444, 0.69444, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.44444, 0, 0],\r\n        '110': [0, 0.44444, 0, 0],\r\n        '111': [0, 0.44444, 0, 0],\r\n        '112': [0.19444, 0.44444, 0, 0],\r\n        '113': [0.19444, 0.44444, 0, 0],\r\n        '114': [0, 0.44444, 0, 0],\r\n        '115': [0, 0.44444, 0, 0],\r\n        '116': [0, 0.63492, 0, 0],\r\n        '117': [0, 0.44444, 0, 0],\r\n        '118': [0, 0.44444, 0.01597, 0],\r\n        '119': [0, 0.44444, 0.01597, 0],\r\n        '120': [0, 0.44444, 0, 0],\r\n        '121': [0.19444, 0.44444, 0.01597, 0],\r\n        '122': [0, 0.44444, 0, 0],\r\n        '123': [0.25, 0.75, 0, 0],\r\n        '124': [0.25, 0.75, 0, 0],\r\n        '125': [0.25, 0.75, 0, 0],\r\n        '126': [0.35, 0.34444, 0, 0],\r\n        '168': [0, 0.69444, 0, 0],\r\n        '172': [0, 0.44444, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '177': [0.13333, 0.63333, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68611, 0, 0],\r\n        '215': [0.13333, 0.63333, 0, 0],\r\n        '216': [0.04861, 0.73472, 0, 0],\r\n        '223': [0, 0.69444, 0, 0],\r\n        '230': [0, 0.44444, 0, 0],\r\n        '247': [0.13333, 0.63333, 0, 0],\r\n        '248': [0.09722, 0.54167, 0, 0],\r\n        '305': [0, 0.44444, 0, 0],\r\n        '338': [0, 0.68611, 0, 0],\r\n        '339': [0, 0.44444, 0, 0],\r\n        '567': [0.19444, 0.44444, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.63194, 0, 0],\r\n        '713': [0, 0.59611, 0, 0],\r\n        '714': [0, 0.69444, 0, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.69444, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.69444, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.68611, 0, 0],\r\n        '916': [0, 0.68611, 0, 0],\r\n        '920': [0, 0.68611, 0, 0],\r\n        '923': [0, 0.68611, 0, 0],\r\n        '926': [0, 0.68611, 0, 0],\r\n        '928': [0, 0.68611, 0, 0],\r\n        '931': [0, 0.68611, 0, 0],\r\n        '933': [0, 0.68611, 0, 0],\r\n        '934': [0, 0.68611, 0, 0],\r\n        '936': [0, 0.68611, 0, 0],\r\n        '937': [0, 0.68611, 0, 0],\r\n        '8211': [0, 0.44444, 0.03194, 0],\r\n        '8212': [0, 0.44444, 0.03194, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n        '8224': [0.19444, 0.69444, 0, 0],\r\n        '8225': [0.19444, 0.69444, 0, 0],\r\n        '8242': [0, 0.55556, 0, 0],\r\n        '8407': [0, 0.72444, 0.15486, 0],\r\n        '8463': [0, 0.69444, 0, 0],\r\n        '8465': [0, 0.69444, 0, 0],\r\n        '8467': [0, 0.69444, 0, 0],\r\n        '8472': [0.19444, 0.44444, 0, 0],\r\n        '8476': [0, 0.69444, 0, 0],\r\n        '8501': [0, 0.69444, 0, 0],\r\n        '8592': [-0.10889, 0.39111, 0, 0],\r\n        '8593': [0.19444, 0.69444, 0, 0],\r\n        '8594': [-0.10889, 0.39111, 0, 0],\r\n        '8595': [0.19444, 0.69444, 0, 0],\r\n        '8596': [-0.10889, 0.39111, 0, 0],\r\n        '8597': [0.25, 0.75, 0, 0],\r\n        '8598': [0.19444, 0.69444, 0, 0],\r\n        '8599': [0.19444, 0.69444, 0, 0],\r\n        '8600': [0.19444, 0.69444, 0, 0],\r\n        '8601': [0.19444, 0.69444, 0, 0],\r\n        '8636': [-0.10889, 0.39111, 0, 0],\r\n        '8637': [-0.10889, 0.39111, 0, 0],\r\n        '8640': [-0.10889, 0.39111, 0, 0],\r\n        '8641': [-0.10889, 0.39111, 0, 0],\r\n        '8656': [-0.10889, 0.39111, 0, 0],\r\n        '8657': [0.19444, 0.69444, 0, 0],\r\n        '8658': [-0.10889, 0.39111, 0, 0],\r\n        '8659': [0.19444, 0.69444, 0, 0],\r\n        '8660': [-0.10889, 0.39111, 0, 0],\r\n        '8661': [0.25, 0.75, 0, 0],\r\n        '8704': [0, 0.69444, 0, 0],\r\n        '8706': [0, 0.69444, 0.06389, 0],\r\n        '8707': [0, 0.69444, 0, 0],\r\n        '8709': [0.05556, 0.75, 0, 0],\r\n        '8711': [0, 0.68611, 0, 0],\r\n        '8712': [0.08556, 0.58556, 0, 0],\r\n        '8715': [0.08556, 0.58556, 0, 0],\r\n        '8722': [0.13333, 0.63333, 0, 0],\r\n        '8723': [0.13333, 0.63333, 0, 0],\r\n        '8725': [0.25, 0.75, 0, 0],\r\n        '8726': [0.25, 0.75, 0, 0],\r\n        '8727': [-0.02778, 0.47222, 0, 0],\r\n        '8728': [-0.02639, 0.47361, 0, 0],\r\n        '8729': [-0.02639, 0.47361, 0, 0],\r\n        '8730': [0.18, 0.82, 0, 0],\r\n        '8733': [0, 0.44444, 0, 0],\r\n        '8734': [0, 0.44444, 0, 0],\r\n        '8736': [0, 0.69224, 0, 0],\r\n        '8739': [0.25, 0.75, 0, 0],\r\n        '8741': [0.25, 0.75, 0, 0],\r\n        '8743': [0, 0.55556, 0, 0],\r\n        '8744': [0, 0.55556, 0, 0],\r\n        '8745': [0, 0.55556, 0, 0],\r\n        '8746': [0, 0.55556, 0, 0],\r\n        '8747': [0.19444, 0.69444, 0.12778, 0],\r\n        '8764': [-0.10889, 0.39111, 0, 0],\r\n        '8768': [0.19444, 0.69444, 0, 0],\r\n        '8771': [0.00222, 0.50222, 0, 0],\r\n        '8776': [0.02444, 0.52444, 0, 0],\r\n        '8781': [0.00222, 0.50222, 0, 0],\r\n        '8801': [0.00222, 0.50222, 0, 0],\r\n        '8804': [0.19667, 0.69667, 0, 0],\r\n        '8805': [0.19667, 0.69667, 0, 0],\r\n        '8810': [0.08556, 0.58556, 0, 0],\r\n        '8811': [0.08556, 0.58556, 0, 0],\r\n        '8826': [0.08556, 0.58556, 0, 0],\r\n        '8827': [0.08556, 0.58556, 0, 0],\r\n        '8834': [0.08556, 0.58556, 0, 0],\r\n        '8835': [0.08556, 0.58556, 0, 0],\r\n        '8838': [0.19667, 0.69667, 0, 0],\r\n        '8839': [0.19667, 0.69667, 0, 0],\r\n        '8846': [0, 0.55556, 0, 0],\r\n        '8849': [0.19667, 0.69667, 0, 0],\r\n        '8850': [0.19667, 0.69667, 0, 0],\r\n        '8851': [0, 0.55556, 0, 0],\r\n        '8852': [0, 0.55556, 0, 0],\r\n        '8853': [0.13333, 0.63333, 0, 0],\r\n        '8854': [0.13333, 0.63333, 0, 0],\r\n        '8855': [0.13333, 0.63333, 0, 0],\r\n        '8856': [0.13333, 0.63333, 0, 0],\r\n        '8857': [0.13333, 0.63333, 0, 0],\r\n        '8866': [0, 0.69444, 0, 0],\r\n        '8867': [0, 0.69444, 0, 0],\r\n        '8868': [0, 0.69444, 0, 0],\r\n        '8869': [0, 0.69444, 0, 0],\r\n        '8900': [-0.02639, 0.47361, 0, 0],\r\n        '8901': [-0.02639, 0.47361, 0, 0],\r\n        '8902': [-0.02778, 0.47222, 0, 0],\r\n        '8968': [0.25, 0.75, 0, 0],\r\n        '8969': [0.25, 0.75, 0, 0],\r\n        '8970': [0.25, 0.75, 0, 0],\r\n        '8971': [0.25, 0.75, 0, 0],\r\n        '8994': [-0.13889, 0.36111, 0, 0],\r\n        '8995': [-0.13889, 0.36111, 0, 0],\r\n        '9651': [0.19444, 0.69444, 0, 0],\r\n        '9657': [-0.02778, 0.47222, 0, 0],\r\n        '9661': [0.19444, 0.69444, 0, 0],\r\n        '9667': [-0.02778, 0.47222, 0, 0],\r\n        '9711': [0.19444, 0.69444, 0, 0],\r\n        '9824': [0.12963, 0.69444, 0, 0],\r\n        '9825': [0.12963, 0.69444, 0, 0],\r\n        '9826': [0.12963, 0.69444, 0, 0],\r\n        '9827': [0.12963, 0.69444, 0, 0],\r\n        '9837': [0, 0.75, 0, 0],\r\n        '9838': [0.19444, 0.69444, 0, 0],\r\n        '9839': [0.19444, 0.69444, 0, 0],\r\n        '10216': [0.25, 0.75, 0, 0],\r\n        '10217': [0.25, 0.75, 0, 0],\r\n        '10815': [0, 0.68611, 0, 0],\r\n        '10927': [0.19667, 0.69667, 0, 0],\r\n        '10928': [0.19667, 0.69667, 0, 0],\r\n        '57376': [0.19444, 0.69444, 0, 0],\r\n    },\r\n    'Main-BoldItalic': {\r\n        '33': [0, 0.69444, 0.11417, 0],\r\n        '34': [0, 0.69444, 0.07939, 0],\r\n        '35': [0.19444, 0.69444, 0.06833, 0],\r\n        '37': [0.05556, 0.75, 0.12861, 0],\r\n        '38': [0, 0.69444, 0.08528, 0],\r\n        '39': [0, 0.69444, 0.12945, 0],\r\n        '40': [0.25, 0.75, 0.15806, 0],\r\n        '41': [0.25, 0.75, 0.03306, 0],\r\n        '42': [0, 0.75, 0.14333, 0],\r\n        '43': [0.10333, 0.60333, 0.03306, 0],\r\n        '44': [0.19444, 0.14722, 0, 0],\r\n        '45': [0, 0.44444, 0.02611, 0],\r\n        '46': [0, 0.14722, 0, 0],\r\n        '47': [0.25, 0.75, 0.15806, 0],\r\n        '48': [0, 0.64444, 0.13167, 0],\r\n        '49': [0, 0.64444, 0.13167, 0],\r\n        '50': [0, 0.64444, 0.13167, 0],\r\n        '51': [0, 0.64444, 0.13167, 0],\r\n        '52': [0.19444, 0.64444, 0.13167, 0],\r\n        '53': [0, 0.64444, 0.13167, 0],\r\n        '54': [0, 0.64444, 0.13167, 0],\r\n        '55': [0.19444, 0.64444, 0.13167, 0],\r\n        '56': [0, 0.64444, 0.13167, 0],\r\n        '57': [0, 0.64444, 0.13167, 0],\r\n        '58': [0, 0.44444, 0.06695, 0],\r\n        '59': [0.19444, 0.44444, 0.06695, 0],\r\n        '61': [-0.10889, 0.39111, 0.06833, 0],\r\n        '63': [0, 0.69444, 0.11472, 0],\r\n        '64': [0, 0.69444, 0.09208, 0],\r\n        '65': [0, 0.68611, 0, 0],\r\n        '66': [0, 0.68611, 0.0992, 0],\r\n        '67': [0, 0.68611, 0.14208, 0],\r\n        '68': [0, 0.68611, 0.09062, 0],\r\n        '69': [0, 0.68611, 0.11431, 0],\r\n        '70': [0, 0.68611, 0.12903, 0],\r\n        '71': [0, 0.68611, 0.07347, 0],\r\n        '72': [0, 0.68611, 0.17208, 0],\r\n        '73': [0, 0.68611, 0.15681, 0],\r\n        '74': [0, 0.68611, 0.145, 0],\r\n        '75': [0, 0.68611, 0.14208, 0],\r\n        '76': [0, 0.68611, 0, 0],\r\n        '77': [0, 0.68611, 0.17208, 0],\r\n        '78': [0, 0.68611, 0.17208, 0],\r\n        '79': [0, 0.68611, 0.09062, 0],\r\n        '80': [0, 0.68611, 0.0992, 0],\r\n        '81': [0.19444, 0.68611, 0.09062, 0],\r\n        '82': [0, 0.68611, 0.02559, 0],\r\n        '83': [0, 0.68611, 0.11264, 0],\r\n        '84': [0, 0.68611, 0.12903, 0],\r\n        '85': [0, 0.68611, 0.17208, 0],\r\n        '86': [0, 0.68611, 0.18625, 0],\r\n        '87': [0, 0.68611, 0.18625, 0],\r\n        '88': [0, 0.68611, 0.15681, 0],\r\n        '89': [0, 0.68611, 0.19803, 0],\r\n        '90': [0, 0.68611, 0.14208, 0],\r\n        '91': [0.25, 0.75, 0.1875, 0],\r\n        '93': [0.25, 0.75, 0.09972, 0],\r\n        '94': [0, 0.69444, 0.06709, 0],\r\n        '95': [0.31, 0.13444, 0.09811, 0],\r\n        '97': [0, 0.44444, 0.09426, 0],\r\n        '98': [0, 0.69444, 0.07861, 0],\r\n        '99': [0, 0.44444, 0.05222, 0],\r\n        '100': [0, 0.69444, 0.10861, 0],\r\n        '101': [0, 0.44444, 0.085, 0],\r\n        '102': [0.19444, 0.69444, 0.21778, 0],\r\n        '103': [0.19444, 0.44444, 0.105, 0],\r\n        '104': [0, 0.69444, 0.09426, 0],\r\n        '105': [0, 0.69326, 0.11387, 0],\r\n        '106': [0.19444, 0.69326, 0.1672, 0],\r\n        '107': [0, 0.69444, 0.11111, 0],\r\n        '108': [0, 0.69444, 0.10861, 0],\r\n        '109': [0, 0.44444, 0.09426, 0],\r\n        '110': [0, 0.44444, 0.09426, 0],\r\n        '111': [0, 0.44444, 0.07861, 0],\r\n        '112': [0.19444, 0.44444, 0.07861, 0],\r\n        '113': [0.19444, 0.44444, 0.105, 0],\r\n        '114': [0, 0.44444, 0.11111, 0],\r\n        '115': [0, 0.44444, 0.08167, 0],\r\n        '116': [0, 0.63492, 0.09639, 0],\r\n        '117': [0, 0.44444, 0.09426, 0],\r\n        '118': [0, 0.44444, 0.11111, 0],\r\n        '119': [0, 0.44444, 0.11111, 0],\r\n        '120': [0, 0.44444, 0.12583, 0],\r\n        '121': [0.19444, 0.44444, 0.105, 0],\r\n        '122': [0, 0.44444, 0.13889, 0],\r\n        '126': [0.35, 0.34444, 0.11472, 0],\r\n        '163': [0, 0.69444, 0, 0],\r\n        '168': [0, 0.69444, 0.11473, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68611, 0.11431, 0],\r\n        '216': [0.04861, 0.73472, 0.09062, 0],\r\n        '223': [0.19444, 0.69444, 0.09736, 0],\r\n        '230': [0, 0.44444, 0.085, 0],\r\n        '248': [0.09722, 0.54167, 0.09458, 0],\r\n        '305': [0, 0.44444, 0.09426, 0],\r\n        '338': [0, 0.68611, 0.11431, 0],\r\n        '339': [0, 0.44444, 0.085, 0],\r\n        '567': [0.19444, 0.44444, 0.04611, 0],\r\n        '710': [0, 0.69444, 0.06709, 0],\r\n        '711': [0, 0.63194, 0.08271, 0],\r\n        '713': [0, 0.59444, 0.10444, 0],\r\n        '714': [0, 0.69444, 0.08528, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0.10333, 0],\r\n        '729': [0, 0.69444, 0.12945, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.69444, 0.11472, 0],\r\n        '733': [0, 0.69444, 0.11472, 0],\r\n        '915': [0, 0.68611, 0.12903, 0],\r\n        '916': [0, 0.68611, 0, 0],\r\n        '920': [0, 0.68611, 0.09062, 0],\r\n        '923': [0, 0.68611, 0, 0],\r\n        '926': [0, 0.68611, 0.15092, 0],\r\n        '928': [0, 0.68611, 0.17208, 0],\r\n        '931': [0, 0.68611, 0.11431, 0],\r\n        '933': [0, 0.68611, 0.10778, 0],\r\n        '934': [0, 0.68611, 0.05632, 0],\r\n        '936': [0, 0.68611, 0.10778, 0],\r\n        '937': [0, 0.68611, 0.0992, 0],\r\n        '8211': [0, 0.44444, 0.09811, 0],\r\n        '8212': [0, 0.44444, 0.09811, 0],\r\n        '8216': [0, 0.69444, 0.12945, 0],\r\n        '8217': [0, 0.69444, 0.12945, 0],\r\n        '8220': [0, 0.69444, 0.16772, 0],\r\n        '8221': [0, 0.69444, 0.07939, 0],\r\n    },\r\n    'Main-Italic': {\r\n        '33': [0, 0.69444, 0.12417, 0],\r\n        '34': [0, 0.69444, 0.06961, 0],\r\n        '35': [0.19444, 0.69444, 0.06616, 0],\r\n        '37': [0.05556, 0.75, 0.13639, 0],\r\n        '38': [0, 0.69444, 0.09694, 0],\r\n        '39': [0, 0.69444, 0.12417, 0],\r\n        '40': [0.25, 0.75, 0.16194, 0],\r\n        '41': [0.25, 0.75, 0.03694, 0],\r\n        '42': [0, 0.75, 0.14917, 0],\r\n        '43': [0.05667, 0.56167, 0.03694, 0],\r\n        '44': [0.19444, 0.10556, 0, 0],\r\n        '45': [0, 0.43056, 0.02826, 0],\r\n        '46': [0, 0.10556, 0, 0],\r\n        '47': [0.25, 0.75, 0.16194, 0],\r\n        '48': [0, 0.64444, 0.13556, 0],\r\n        '49': [0, 0.64444, 0.13556, 0],\r\n        '50': [0, 0.64444, 0.13556, 0],\r\n        '51': [0, 0.64444, 0.13556, 0],\r\n        '52': [0.19444, 0.64444, 0.13556, 0],\r\n        '53': [0, 0.64444, 0.13556, 0],\r\n        '54': [0, 0.64444, 0.13556, 0],\r\n        '55': [0.19444, 0.64444, 0.13556, 0],\r\n        '56': [0, 0.64444, 0.13556, 0],\r\n        '57': [0, 0.64444, 0.13556, 0],\r\n        '58': [0, 0.43056, 0.0582, 0],\r\n        '59': [0.19444, 0.43056, 0.0582, 0],\r\n        '61': [-0.13313, 0.36687, 0.06616, 0],\r\n        '63': [0, 0.69444, 0.1225, 0],\r\n        '64': [0, 0.69444, 0.09597, 0],\r\n        '65': [0, 0.68333, 0, 0],\r\n        '66': [0, 0.68333, 0.10257, 0],\r\n        '67': [0, 0.68333, 0.14528, 0],\r\n        '68': [0, 0.68333, 0.09403, 0],\r\n        '69': [0, 0.68333, 0.12028, 0],\r\n        '70': [0, 0.68333, 0.13305, 0],\r\n        '71': [0, 0.68333, 0.08722, 0],\r\n        '72': [0, 0.68333, 0.16389, 0],\r\n        '73': [0, 0.68333, 0.15806, 0],\r\n        '74': [0, 0.68333, 0.14028, 0],\r\n        '75': [0, 0.68333, 0.14528, 0],\r\n        '76': [0, 0.68333, 0, 0],\r\n        '77': [0, 0.68333, 0.16389, 0],\r\n        '78': [0, 0.68333, 0.16389, 0],\r\n        '79': [0, 0.68333, 0.09403, 0],\r\n        '80': [0, 0.68333, 0.10257, 0],\r\n        '81': [0.19444, 0.68333, 0.09403, 0],\r\n        '82': [0, 0.68333, 0.03868, 0],\r\n        '83': [0, 0.68333, 0.11972, 0],\r\n        '84': [0, 0.68333, 0.13305, 0],\r\n        '85': [0, 0.68333, 0.16389, 0],\r\n        '86': [0, 0.68333, 0.18361, 0],\r\n        '87': [0, 0.68333, 0.18361, 0],\r\n        '88': [0, 0.68333, 0.15806, 0],\r\n        '89': [0, 0.68333, 0.19383, 0],\r\n        '90': [0, 0.68333, 0.14528, 0],\r\n        '91': [0.25, 0.75, 0.1875, 0],\r\n        '93': [0.25, 0.75, 0.10528, 0],\r\n        '94': [0, 0.69444, 0.06646, 0],\r\n        '95': [0.31, 0.12056, 0.09208, 0],\r\n        '97': [0, 0.43056, 0.07671, 0],\r\n        '98': [0, 0.69444, 0.06312, 0],\r\n        '99': [0, 0.43056, 0.05653, 0],\r\n        '100': [0, 0.69444, 0.10333, 0],\r\n        '101': [0, 0.43056, 0.07514, 0],\r\n        '102': [0.19444, 0.69444, 0.21194, 0],\r\n        '103': [0.19444, 0.43056, 0.08847, 0],\r\n        '104': [0, 0.69444, 0.07671, 0],\r\n        '105': [0, 0.65536, 0.1019, 0],\r\n        '106': [0.19444, 0.65536, 0.14467, 0],\r\n        '107': [0, 0.69444, 0.10764, 0],\r\n        '108': [0, 0.69444, 0.10333, 0],\r\n        '109': [0, 0.43056, 0.07671, 0],\r\n        '110': [0, 0.43056, 0.07671, 0],\r\n        '111': [0, 0.43056, 0.06312, 0],\r\n        '112': [0.19444, 0.43056, 0.06312, 0],\r\n        '113': [0.19444, 0.43056, 0.08847, 0],\r\n        '114': [0, 0.43056, 0.10764, 0],\r\n        '115': [0, 0.43056, 0.08208, 0],\r\n        '116': [0, 0.61508, 0.09486, 0],\r\n        '117': [0, 0.43056, 0.07671, 0],\r\n        '118': [0, 0.43056, 0.10764, 0],\r\n        '119': [0, 0.43056, 0.10764, 0],\r\n        '120': [0, 0.43056, 0.12042, 0],\r\n        '121': [0.19444, 0.43056, 0.08847, 0],\r\n        '122': [0, 0.43056, 0.12292, 0],\r\n        '126': [0.35, 0.31786, 0.11585, 0],\r\n        '163': [0, 0.69444, 0, 0],\r\n        '168': [0, 0.66786, 0.10474, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68333, 0.12028, 0],\r\n        '216': [0.04861, 0.73194, 0.09403, 0],\r\n        '223': [0.19444, 0.69444, 0.10514, 0],\r\n        '230': [0, 0.43056, 0.07514, 0],\r\n        '248': [0.09722, 0.52778, 0.09194, 0],\r\n        '305': [0, 0.43056, 0, 0.02778],\r\n        '338': [0, 0.68333, 0.12028, 0],\r\n        '339': [0, 0.43056, 0.07514, 0],\r\n        '567': [0.19444, 0.43056, 0, 0.08334],\r\n        '710': [0, 0.69444, 0.06646, 0],\r\n        '711': [0, 0.62847, 0.08295, 0],\r\n        '713': [0, 0.56167, 0.10333, 0],\r\n        '714': [0, 0.69444, 0.09694, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0.10806, 0],\r\n        '729': [0, 0.66786, 0.11752, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.66786, 0.11585, 0],\r\n        '733': [0, 0.69444, 0.1225, 0],\r\n        '915': [0, 0.68333, 0.13305, 0],\r\n        '916': [0, 0.68333, 0, 0],\r\n        '920': [0, 0.68333, 0.09403, 0],\r\n        '923': [0, 0.68333, 0, 0],\r\n        '926': [0, 0.68333, 0.15294, 0],\r\n        '928': [0, 0.68333, 0.16389, 0],\r\n        '931': [0, 0.68333, 0.12028, 0],\r\n        '933': [0, 0.68333, 0.11111, 0],\r\n        '934': [0, 0.68333, 0.05986, 0],\r\n        '936': [0, 0.68333, 0.11111, 0],\r\n        '937': [0, 0.68333, 0.10257, 0],\r\n        '8211': [0, 0.43056, 0.09208, 0],\r\n        '8212': [0, 0.43056, 0.09208, 0],\r\n        '8216': [0, 0.69444, 0.12417, 0],\r\n        '8217': [0, 0.69444, 0.12417, 0],\r\n        '8220': [0, 0.69444, 0.1685, 0],\r\n        '8221': [0, 0.69444, 0.06961, 0],\r\n        '8463': [0, 0.68889, 0, 0],\r\n    },\r\n    'Main-Regular': {\r\n        '32': [0, 0, 0, 0],\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.08333, 0.58333, 0, 0],\r\n        '44': [0.19444, 0.10556, 0, 0],\r\n        '45': [0, 0.43056, 0, 0],\r\n        '46': [0, 0.10556, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.64444, 0, 0],\r\n        '49': [0, 0.64444, 0, 0],\r\n        '50': [0, 0.64444, 0, 0],\r\n        '51': [0, 0.64444, 0, 0],\r\n        '52': [0, 0.64444, 0, 0],\r\n        '53': [0, 0.64444, 0, 0],\r\n        '54': [0, 0.64444, 0, 0],\r\n        '55': [0, 0.64444, 0, 0],\r\n        '56': [0, 0.64444, 0, 0],\r\n        '57': [0, 0.64444, 0, 0],\r\n        '58': [0, 0.43056, 0, 0],\r\n        '59': [0.19444, 0.43056, 0, 0],\r\n        '60': [0.0391, 0.5391, 0, 0],\r\n        '61': [-0.13313, 0.36687, 0, 0],\r\n        '62': [0.0391, 0.5391, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.68333, 0, 0],\r\n        '66': [0, 0.68333, 0, 0],\r\n        '67': [0, 0.68333, 0, 0],\r\n        '68': [0, 0.68333, 0, 0],\r\n        '69': [0, 0.68333, 0, 0],\r\n        '70': [0, 0.68333, 0, 0],\r\n        '71': [0, 0.68333, 0, 0],\r\n        '72': [0, 0.68333, 0, 0],\r\n        '73': [0, 0.68333, 0, 0],\r\n        '74': [0, 0.68333, 0, 0],\r\n        '75': [0, 0.68333, 0, 0],\r\n        '76': [0, 0.68333, 0, 0],\r\n        '77': [0, 0.68333, 0, 0],\r\n        '78': [0, 0.68333, 0, 0],\r\n        '79': [0, 0.68333, 0, 0],\r\n        '80': [0, 0.68333, 0, 0],\r\n        '81': [0.19444, 0.68333, 0, 0],\r\n        '82': [0, 0.68333, 0, 0],\r\n        '83': [0, 0.68333, 0, 0],\r\n        '84': [0, 0.68333, 0, 0],\r\n        '85': [0, 0.68333, 0, 0],\r\n        '86': [0, 0.68333, 0.01389, 0],\r\n        '87': [0, 0.68333, 0.01389, 0],\r\n        '88': [0, 0.68333, 0, 0],\r\n        '89': [0, 0.68333, 0.025, 0],\r\n        '90': [0, 0.68333, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '92': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.31, 0.12056, 0.02778, 0],\r\n        '97': [0, 0.43056, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.43056, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.43056, 0, 0],\r\n        '102': [0, 0.69444, 0.07778, 0],\r\n        '103': [0.19444, 0.43056, 0.01389, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.66786, 0, 0],\r\n        '106': [0.19444, 0.66786, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.43056, 0, 0],\r\n        '110': [0, 0.43056, 0, 0],\r\n        '111': [0, 0.43056, 0, 0],\r\n        '112': [0.19444, 0.43056, 0, 0],\r\n        '113': [0.19444, 0.43056, 0, 0],\r\n        '114': [0, 0.43056, 0, 0],\r\n        '115': [0, 0.43056, 0, 0],\r\n        '116': [0, 0.61508, 0, 0],\r\n        '117': [0, 0.43056, 0, 0],\r\n        '118': [0, 0.43056, 0.01389, 0],\r\n        '119': [0, 0.43056, 0.01389, 0],\r\n        '120': [0, 0.43056, 0, 0],\r\n        '121': [0.19444, 0.43056, 0.01389, 0],\r\n        '122': [0, 0.43056, 0, 0],\r\n        '123': [0.25, 0.75, 0, 0],\r\n        '124': [0.25, 0.75, 0, 0],\r\n        '125': [0.25, 0.75, 0, 0],\r\n        '126': [0.35, 0.31786, 0, 0],\r\n        '160': [0, 0, 0, 0],\r\n        '167': [0.19444, 0.69444, 0, 0],\r\n        '168': [0, 0.66786, 0, 0],\r\n        '172': [0, 0.43056, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '177': [0.08333, 0.58333, 0, 0],\r\n        '182': [0.19444, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68333, 0, 0],\r\n        '215': [0.08333, 0.58333, 0, 0],\r\n        '216': [0.04861, 0.73194, 0, 0],\r\n        '223': [0, 0.69444, 0, 0],\r\n        '230': [0, 0.43056, 0, 0],\r\n        '247': [0.08333, 0.58333, 0, 0],\r\n        '248': [0.09722, 0.52778, 0, 0],\r\n        '305': [0, 0.43056, 0, 0],\r\n        '338': [0, 0.68333, 0, 0],\r\n        '339': [0, 0.43056, 0, 0],\r\n        '567': [0.19444, 0.43056, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.62847, 0, 0],\r\n        '713': [0, 0.56778, 0, 0],\r\n        '714': [0, 0.69444, 0, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.66786, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.66786, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.68333, 0, 0],\r\n        '916': [0, 0.68333, 0, 0],\r\n        '920': [0, 0.68333, 0, 0],\r\n        '923': [0, 0.68333, 0, 0],\r\n        '926': [0, 0.68333, 0, 0],\r\n        '928': [0, 0.68333, 0, 0],\r\n        '931': [0, 0.68333, 0, 0],\r\n        '933': [0, 0.68333, 0, 0],\r\n        '934': [0, 0.68333, 0, 0],\r\n        '936': [0, 0.68333, 0, 0],\r\n        '937': [0, 0.68333, 0, 0],\r\n        '8211': [0, 0.43056, 0.02778, 0],\r\n        '8212': [0, 0.43056, 0.02778, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n        '8224': [0.19444, 0.69444, 0, 0],\r\n        '8225': [0.19444, 0.69444, 0, 0],\r\n        '8230': [0, 0.12, 0, 0],\r\n        '8242': [0, 0.55556, 0, 0],\r\n        '8407': [0, 0.71444, 0.15382, 0],\r\n        '8463': [0, 0.68889, 0, 0],\r\n        '8465': [0, 0.69444, 0, 0],\r\n        '8467': [0, 0.69444, 0, 0.11111],\r\n        '8472': [0.19444, 0.43056, 0, 0.11111],\r\n        '8476': [0, 0.69444, 0, 0],\r\n        '8501': [0, 0.69444, 0, 0],\r\n        '8592': [-0.13313, 0.36687, 0, 0],\r\n        '8593': [0.19444, 0.69444, 0, 0],\r\n        '8594': [-0.13313, 0.36687, 0, 0],\r\n        '8595': [0.19444, 0.69444, 0, 0],\r\n        '8596': [-0.13313, 0.36687, 0, 0],\r\n        '8597': [0.25, 0.75, 0, 0],\r\n        '8598': [0.19444, 0.69444, 0, 0],\r\n        '8599': [0.19444, 0.69444, 0, 0],\r\n        '8600': [0.19444, 0.69444, 0, 0],\r\n        '8601': [0.19444, 0.69444, 0, 0],\r\n        '8614': [0.011, 0.511, 0, 0],\r\n        '8617': [0.011, 0.511, 0, 0],\r\n        '8618': [0.011, 0.511, 0, 0],\r\n        '8636': [-0.13313, 0.36687, 0, 0],\r\n        '8637': [-0.13313, 0.36687, 0, 0],\r\n        '8640': [-0.13313, 0.36687, 0, 0],\r\n        '8641': [-0.13313, 0.36687, 0, 0],\r\n        '8652': [0.011, 0.671, 0, 0],\r\n        '8656': [-0.13313, 0.36687, 0, 0],\r\n        '8657': [0.19444, 0.69444, 0, 0],\r\n        '8658': [-0.13313, 0.36687, 0, 0],\r\n        '8659': [0.19444, 0.69444, 0, 0],\r\n        '8660': [-0.13313, 0.36687, 0, 0],\r\n        '8661': [0.25, 0.75, 0, 0],\r\n        '8704': [0, 0.69444, 0, 0],\r\n        '8706': [0, 0.69444, 0.05556, 0.08334],\r\n        '8707': [0, 0.69444, 0, 0],\r\n        '8709': [0.05556, 0.75, 0, 0],\r\n        '8711': [0, 0.68333, 0, 0],\r\n        '8712': [0.0391, 0.5391, 0, 0],\r\n        '8715': [0.0391, 0.5391, 0, 0],\r\n        '8722': [0.08333, 0.58333, 0, 0],\r\n        '8723': [0.08333, 0.58333, 0, 0],\r\n        '8725': [0.25, 0.75, 0, 0],\r\n        '8726': [0.25, 0.75, 0, 0],\r\n        '8727': [-0.03472, 0.46528, 0, 0],\r\n        '8728': [-0.05555, 0.44445, 0, 0],\r\n        '8729': [-0.05555, 0.44445, 0, 0],\r\n        '8730': [0.2, 0.8, 0, 0],\r\n        '8733': [0, 0.43056, 0, 0],\r\n        '8734': [0, 0.43056, 0, 0],\r\n        '8736': [0, 0.69224, 0, 0],\r\n        '8739': [0.25, 0.75, 0, 0],\r\n        '8741': [0.25, 0.75, 0, 0],\r\n        '8743': [0, 0.55556, 0, 0],\r\n        '8744': [0, 0.55556, 0, 0],\r\n        '8745': [0, 0.55556, 0, 0],\r\n        '8746': [0, 0.55556, 0, 0],\r\n        '8747': [0.19444, 0.69444, 0.11111, 0],\r\n        '8764': [-0.13313, 0.36687, 0, 0],\r\n        '8768': [0.19444, 0.69444, 0, 0],\r\n        '8771': [-0.03625, 0.46375, 0, 0],\r\n        '8773': [-0.022, 0.589, 0, 0],\r\n        '8776': [-0.01688, 0.48312, 0, 0],\r\n        '8781': [-0.03625, 0.46375, 0, 0],\r\n        '8784': [-0.133, 0.67, 0, 0],\r\n        '8801': [-0.03625, 0.46375, 0, 0],\r\n        '8804': [0.13597, 0.63597, 0, 0],\r\n        '8805': [0.13597, 0.63597, 0, 0],\r\n        '8810': [0.0391, 0.5391, 0, 0],\r\n        '8811': [0.0391, 0.5391, 0, 0],\r\n        '8826': [0.0391, 0.5391, 0, 0],\r\n        '8827': [0.0391, 0.5391, 0, 0],\r\n        '8834': [0.0391, 0.5391, 0, 0],\r\n        '8835': [0.0391, 0.5391, 0, 0],\r\n        '8838': [0.13597, 0.63597, 0, 0],\r\n        '8839': [0.13597, 0.63597, 0, 0],\r\n        '8846': [0, 0.55556, 0, 0],\r\n        '8849': [0.13597, 0.63597, 0, 0],\r\n        '8850': [0.13597, 0.63597, 0, 0],\r\n        '8851': [0, 0.55556, 0, 0],\r\n        '8852': [0, 0.55556, 0, 0],\r\n        '8853': [0.08333, 0.58333, 0, 0],\r\n        '8854': [0.08333, 0.58333, 0, 0],\r\n        '8855': [0.08333, 0.58333, 0, 0],\r\n        '8856': [0.08333, 0.58333, 0, 0],\r\n        '8857': [0.08333, 0.58333, 0, 0],\r\n        '8866': [0, 0.69444, 0, 0],\r\n        '8867': [0, 0.69444, 0, 0],\r\n        '8868': [0, 0.69444, 0, 0],\r\n        '8869': [0, 0.69444, 0, 0],\r\n        '8872': [0.249, 0.75, 0, 0],\r\n        '8900': [-0.05555, 0.44445, 0, 0],\r\n        '8901': [-0.05555, 0.44445, 0, 0],\r\n        '8902': [-0.03472, 0.46528, 0, 0],\r\n        '8904': [0.005, 0.505, 0, 0],\r\n        '8942': [0.03, 0.9, 0, 0],\r\n        '8943': [-0.19, 0.31, 0, 0],\r\n        '8945': [-0.1, 0.82, 0, 0],\r\n        '8968': [0.25, 0.75, 0, 0],\r\n        '8969': [0.25, 0.75, 0, 0],\r\n        '8970': [0.25, 0.75, 0, 0],\r\n        '8971': [0.25, 0.75, 0, 0],\r\n        '8994': [-0.14236, 0.35764, 0, 0],\r\n        '8995': [-0.14236, 0.35764, 0, 0],\r\n        '9136': [0.244, 0.744, 0, 0],\r\n        '9137': [0.244, 0.744, 0, 0],\r\n        '9651': [0.19444, 0.69444, 0, 0],\r\n        '9657': [-0.03472, 0.46528, 0, 0],\r\n        '9661': [0.19444, 0.69444, 0, 0],\r\n        '9667': [-0.03472, 0.46528, 0, 0],\r\n        '9711': [0.19444, 0.69444, 0, 0],\r\n        '9824': [0.12963, 0.69444, 0, 0],\r\n        '9825': [0.12963, 0.69444, 0, 0],\r\n        '9826': [0.12963, 0.69444, 0, 0],\r\n        '9827': [0.12963, 0.69444, 0, 0],\r\n        '9837': [0, 0.75, 0, 0],\r\n        '9838': [0.19444, 0.69444, 0, 0],\r\n        '9839': [0.19444, 0.69444, 0, 0],\r\n        '10216': [0.25, 0.75, 0, 0],\r\n        '10217': [0.25, 0.75, 0, 0],\r\n        '10222': [0.244, 0.744, 0, 0],\r\n        '10223': [0.244, 0.744, 0, 0],\r\n        '10229': [0.011, 0.511, 0, 0],\r\n        '10230': [0.011, 0.511, 0, 0],\r\n        '10231': [0.011, 0.511, 0, 0],\r\n        '10232': [0.024, 0.525, 0, 0],\r\n        '10233': [0.024, 0.525, 0, 0],\r\n        '10234': [0.024, 0.525, 0, 0],\r\n        '10236': [0.011, 0.511, 0, 0],\r\n        '10815': [0, 0.68333, 0, 0],\r\n        '10927': [0.13597, 0.63597, 0, 0],\r\n        '10928': [0.13597, 0.63597, 0, 0],\r\n        '57376': [0.19444, 0.69444, 0, 0],\r\n    },\r\n    'Math-BoldItalic': {\r\n        '65': [0, 0.68611, 0, 0],\r\n        '66': [0, 0.68611, 0.04835, 0],\r\n        '67': [0, 0.68611, 0.06979, 0],\r\n        '68': [0, 0.68611, 0.03194, 0],\r\n        '69': [0, 0.68611, 0.05451, 0],\r\n        '70': [0, 0.68611, 0.15972, 0],\r\n        '71': [0, 0.68611, 0, 0],\r\n        '72': [0, 0.68611, 0.08229, 0],\r\n        '73': [0, 0.68611, 0.07778, 0],\r\n        '74': [0, 0.68611, 0.10069, 0],\r\n        '75': [0, 0.68611, 0.06979, 0],\r\n        '76': [0, 0.68611, 0, 0],\r\n        '77': [0, 0.68611, 0.11424, 0],\r\n        '78': [0, 0.68611, 0.11424, 0],\r\n        '79': [0, 0.68611, 0.03194, 0],\r\n        '80': [0, 0.68611, 0.15972, 0],\r\n        '81': [0.19444, 0.68611, 0, 0],\r\n        '82': [0, 0.68611, 0.00421, 0],\r\n        '83': [0, 0.68611, 0.05382, 0],\r\n        '84': [0, 0.68611, 0.15972, 0],\r\n        '85': [0, 0.68611, 0.11424, 0],\r\n        '86': [0, 0.68611, 0.25555, 0],\r\n        '87': [0, 0.68611, 0.15972, 0],\r\n        '88': [0, 0.68611, 0.07778, 0],\r\n        '89': [0, 0.68611, 0.25555, 0],\r\n        '90': [0, 0.68611, 0.06979, 0],\r\n        '97': [0, 0.44444, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.44444, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.44444, 0, 0],\r\n        '102': [0.19444, 0.69444, 0.11042, 0],\r\n        '103': [0.19444, 0.44444, 0.03704, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.69326, 0, 0],\r\n        '106': [0.19444, 0.69326, 0.0622, 0],\r\n        '107': [0, 0.69444, 0.01852, 0],\r\n        '108': [0, 0.69444, 0.0088, 0],\r\n        '109': [0, 0.44444, 0, 0],\r\n        '110': [0, 0.44444, 0, 0],\r\n        '111': [0, 0.44444, 0, 0],\r\n        '112': [0.19444, 0.44444, 0, 0],\r\n        '113': [0.19444, 0.44444, 0.03704, 0],\r\n        '114': [0, 0.44444, 0.03194, 0],\r\n        '115': [0, 0.44444, 0, 0],\r\n        '116': [0, 0.63492, 0, 0],\r\n        '117': [0, 0.44444, 0, 0],\r\n        '118': [0, 0.44444, 0.03704, 0],\r\n        '119': [0, 0.44444, 0.02778, 0],\r\n        '120': [0, 0.44444, 0, 0],\r\n        '121': [0.19444, 0.44444, 0.03704, 0],\r\n        '122': [0, 0.44444, 0.04213, 0],\r\n        '915': [0, 0.68611, 0.15972, 0],\r\n        '916': [0, 0.68611, 0, 0],\r\n        '920': [0, 0.68611, 0.03194, 0],\r\n        '923': [0, 0.68611, 0, 0],\r\n        '926': [0, 0.68611, 0.07458, 0],\r\n        '928': [0, 0.68611, 0.08229, 0],\r\n        '931': [0, 0.68611, 0.05451, 0],\r\n        '933': [0, 0.68611, 0.15972, 0],\r\n        '934': [0, 0.68611, 0, 0],\r\n        '936': [0, 0.68611, 0.11653, 0],\r\n        '937': [0, 0.68611, 0.04835, 0],\r\n        '945': [0, 0.44444, 0, 0],\r\n        '946': [0.19444, 0.69444, 0.03403, 0],\r\n        '947': [0.19444, 0.44444, 0.06389, 0],\r\n        '948': [0, 0.69444, 0.03819, 0],\r\n        '949': [0, 0.44444, 0, 0],\r\n        '950': [0.19444, 0.69444, 0.06215, 0],\r\n        '951': [0.19444, 0.44444, 0.03704, 0],\r\n        '952': [0, 0.69444, 0.03194, 0],\r\n        '953': [0, 0.44444, 0, 0],\r\n        '954': [0, 0.44444, 0, 0],\r\n        '955': [0, 0.69444, 0, 0],\r\n        '956': [0.19444, 0.44444, 0, 0],\r\n        '957': [0, 0.44444, 0.06898, 0],\r\n        '958': [0.19444, 0.69444, 0.03021, 0],\r\n        '959': [0, 0.44444, 0, 0],\r\n        '960': [0, 0.44444, 0.03704, 0],\r\n        '961': [0.19444, 0.44444, 0, 0],\r\n        '962': [0.09722, 0.44444, 0.07917, 0],\r\n        '963': [0, 0.44444, 0.03704, 0],\r\n        '964': [0, 0.44444, 0.13472, 0],\r\n        '965': [0, 0.44444, 0.03704, 0],\r\n        '966': [0.19444, 0.44444, 0, 0],\r\n        '967': [0.19444, 0.44444, 0, 0],\r\n        '968': [0.19444, 0.69444, 0.03704, 0],\r\n        '969': [0, 0.44444, 0.03704, 0],\r\n        '977': [0, 0.69444, 0, 0],\r\n        '981': [0.19444, 0.69444, 0, 0],\r\n        '982': [0, 0.44444, 0.03194, 0],\r\n        '1009': [0.19444, 0.44444, 0, 0],\r\n        '1013': [0, 0.44444, 0, 0],\r\n    },\r\n    'Math-Italic': {\r\n        '65': [0, 0.68333, 0, 0.13889],\r\n        '66': [0, 0.68333, 0.05017, 0.08334],\r\n        '67': [0, 0.68333, 0.07153, 0.08334],\r\n        '68': [0, 0.68333, 0.02778, 0.05556],\r\n        '69': [0, 0.68333, 0.05764, 0.08334],\r\n        '70': [0, 0.68333, 0.13889, 0.08334],\r\n        '71': [0, 0.68333, 0, 0.08334],\r\n        '72': [0, 0.68333, 0.08125, 0.05556],\r\n        '73': [0, 0.68333, 0.07847, 0.11111],\r\n        '74': [0, 0.68333, 0.09618, 0.16667],\r\n        '75': [0, 0.68333, 0.07153, 0.05556],\r\n        '76': [0, 0.68333, 0, 0.02778],\r\n        '77': [0, 0.68333, 0.10903, 0.08334],\r\n        '78': [0, 0.68333, 0.10903, 0.08334],\r\n        '79': [0, 0.68333, 0.02778, 0.08334],\r\n        '80': [0, 0.68333, 0.13889, 0.08334],\r\n        '81': [0.19444, 0.68333, 0, 0.08334],\r\n        '82': [0, 0.68333, 0.00773, 0.08334],\r\n        '83': [0, 0.68333, 0.05764, 0.08334],\r\n        '84': [0, 0.68333, 0.13889, 0.08334],\r\n        '85': [0, 0.68333, 0.10903, 0.02778],\r\n        '86': [0, 0.68333, 0.22222, 0],\r\n        '87': [0, 0.68333, 0.13889, 0],\r\n        '88': [0, 0.68333, 0.07847, 0.08334],\r\n        '89': [0, 0.68333, 0.22222, 0],\r\n        '90': [0, 0.68333, 0.07153, 0.08334],\r\n        '97': [0, 0.43056, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.43056, 0, 0.05556],\r\n        '100': [0, 0.69444, 0, 0.16667],\r\n        '101': [0, 0.43056, 0, 0.05556],\r\n        '102': [0.19444, 0.69444, 0.10764, 0.16667],\r\n        '103': [0.19444, 0.43056, 0.03588, 0.02778],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.65952, 0, 0],\r\n        '106': [0.19444, 0.65952, 0.05724, 0],\r\n        '107': [0, 0.69444, 0.03148, 0],\r\n        '108': [0, 0.69444, 0.01968, 0.08334],\r\n        '109': [0, 0.43056, 0, 0],\r\n        '110': [0, 0.43056, 0, 0],\r\n        '111': [0, 0.43056, 0, 0.05556],\r\n        '112': [0.19444, 0.43056, 0, 0.08334],\r\n        '113': [0.19444, 0.43056, 0.03588, 0.08334],\r\n        '114': [0, 0.43056, 0.02778, 0.05556],\r\n        '115': [0, 0.43056, 0, 0.05556],\r\n        '116': [0, 0.61508, 0, 0.08334],\r\n        '117': [0, 0.43056, 0, 0.02778],\r\n        '118': [0, 0.43056, 0.03588, 0.02778],\r\n        '119': [0, 0.43056, 0.02691, 0.08334],\r\n        '120': [0, 0.43056, 0, 0.02778],\r\n        '121': [0.19444, 0.43056, 0.03588, 0.05556],\r\n        '122': [0, 0.43056, 0.04398, 0.05556],\r\n        '915': [0, 0.68333, 0.13889, 0.08334],\r\n        '916': [0, 0.68333, 0, 0.16667],\r\n        '920': [0, 0.68333, 0.02778, 0.08334],\r\n        '923': [0, 0.68333, 0, 0.16667],\r\n        '926': [0, 0.68333, 0.07569, 0.08334],\r\n        '928': [0, 0.68333, 0.08125, 0.05556],\r\n        '931': [0, 0.68333, 0.05764, 0.08334],\r\n        '933': [0, 0.68333, 0.13889, 0.05556],\r\n        '934': [0, 0.68333, 0, 0.08334],\r\n        '936': [0, 0.68333, 0.11, 0.05556],\r\n        '937': [0, 0.68333, 0.05017, 0.08334],\r\n        '945': [0, 0.43056, 0.0037, 0.02778],\r\n        '946': [0.19444, 0.69444, 0.05278, 0.08334],\r\n        '947': [0.19444, 0.43056, 0.05556, 0],\r\n        '948': [0, 0.69444, 0.03785, 0.05556],\r\n        '949': [0, 0.43056, 0, 0.08334],\r\n        '950': [0.19444, 0.69444, 0.07378, 0.08334],\r\n        '951': [0.19444, 0.43056, 0.03588, 0.05556],\r\n        '952': [0, 0.69444, 0.02778, 0.08334],\r\n        '953': [0, 0.43056, 0, 0.05556],\r\n        '954': [0, 0.43056, 0, 0],\r\n        '955': [0, 0.69444, 0, 0],\r\n        '956': [0.19444, 0.43056, 0, 0.02778],\r\n        '957': [0, 0.43056, 0.06366, 0.02778],\r\n        '958': [0.19444, 0.69444, 0.04601, 0.11111],\r\n        '959': [0, 0.43056, 0, 0.05556],\r\n        '960': [0, 0.43056, 0.03588, 0],\r\n        '961': [0.19444, 0.43056, 0, 0.08334],\r\n        '962': [0.09722, 0.43056, 0.07986, 0.08334],\r\n        '963': [0, 0.43056, 0.03588, 0],\r\n        '964': [0, 0.43056, 0.1132, 0.02778],\r\n        '965': [0, 0.43056, 0.03588, 0.02778],\r\n        '966': [0.19444, 0.43056, 0, 0.08334],\r\n        '967': [0.19444, 0.43056, 0, 0.05556],\r\n        '968': [0.19444, 0.69444, 0.03588, 0.11111],\r\n        '969': [0, 0.43056, 0.03588, 0],\r\n        '977': [0, 0.69444, 0, 0.08334],\r\n        '981': [0.19444, 0.69444, 0, 0.08334],\r\n        '982': [0, 0.43056, 0.02778, 0],\r\n        '1009': [0.19444, 0.43056, 0, 0.08334],\r\n        '1013': [0, 0.43056, 0, 0.05556],\r\n    },\r\n    'SansSerif-Bold': {\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.11667, 0.61667, 0, 0],\r\n        '44': [0.10556, 0.13056, 0, 0],\r\n        '45': [0, 0.45833, 0, 0],\r\n        '46': [0, 0.13056, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.69444, 0, 0],\r\n        '49': [0, 0.69444, 0, 0],\r\n        '50': [0, 0.69444, 0, 0],\r\n        '51': [0, 0.69444, 0, 0],\r\n        '52': [0, 0.69444, 0, 0],\r\n        '53': [0, 0.69444, 0, 0],\r\n        '54': [0, 0.69444, 0, 0],\r\n        '55': [0, 0.69444, 0, 0],\r\n        '56': [0, 0.69444, 0, 0],\r\n        '57': [0, 0.69444, 0, 0],\r\n        '58': [0, 0.45833, 0, 0],\r\n        '59': [0.10556, 0.45833, 0, 0],\r\n        '61': [-0.09375, 0.40625, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.69444, 0, 0],\r\n        '66': [0, 0.69444, 0, 0],\r\n        '67': [0, 0.69444, 0, 0],\r\n        '68': [0, 0.69444, 0, 0],\r\n        '69': [0, 0.69444, 0, 0],\r\n        '70': [0, 0.69444, 0, 0],\r\n        '71': [0, 0.69444, 0, 0],\r\n        '72': [0, 0.69444, 0, 0],\r\n        '73': [0, 0.69444, 0, 0],\r\n        '74': [0, 0.69444, 0, 0],\r\n        '75': [0, 0.69444, 0, 0],\r\n        '76': [0, 0.69444, 0, 0],\r\n        '77': [0, 0.69444, 0, 0],\r\n        '78': [0, 0.69444, 0, 0],\r\n        '79': [0, 0.69444, 0, 0],\r\n        '80': [0, 0.69444, 0, 0],\r\n        '81': [0.10556, 0.69444, 0, 0],\r\n        '82': [0, 0.69444, 0, 0],\r\n        '83': [0, 0.69444, 0, 0],\r\n        '84': [0, 0.69444, 0, 0],\r\n        '85': [0, 0.69444, 0, 0],\r\n        '86': [0, 0.69444, 0.01528, 0],\r\n        '87': [0, 0.69444, 0.01528, 0],\r\n        '88': [0, 0.69444, 0, 0],\r\n        '89': [0, 0.69444, 0.0275, 0],\r\n        '90': [0, 0.69444, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.35, 0.10833, 0.03056, 0],\r\n        '97': [0, 0.45833, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.45833, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.45833, 0, 0],\r\n        '102': [0, 0.69444, 0.07639, 0],\r\n        '103': [0.19444, 0.45833, 0.01528, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.69444, 0, 0],\r\n        '106': [0.19444, 0.69444, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.45833, 0, 0],\r\n        '110': [0, 0.45833, 0, 0],\r\n        '111': [0, 0.45833, 0, 0],\r\n        '112': [0.19444, 0.45833, 0, 0],\r\n        '113': [0.19444, 0.45833, 0, 0],\r\n        '114': [0, 0.45833, 0.01528, 0],\r\n        '115': [0, 0.45833, 0, 0],\r\n        '116': [0, 0.58929, 0, 0],\r\n        '117': [0, 0.45833, 0, 0],\r\n        '118': [0, 0.45833, 0.01528, 0],\r\n        '119': [0, 0.45833, 0.01528, 0],\r\n        '120': [0, 0.45833, 0, 0],\r\n        '121': [0.19444, 0.45833, 0.01528, 0],\r\n        '122': [0, 0.45833, 0, 0],\r\n        '126': [0.35, 0.34444, 0, 0],\r\n        '168': [0, 0.69444, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '180': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '305': [0, 0.45833, 0, 0],\r\n        '567': [0.19444, 0.45833, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.63542, 0, 0],\r\n        '713': [0, 0.63778, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.69444, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.69444, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.69444, 0, 0],\r\n        '916': [0, 0.69444, 0, 0],\r\n        '920': [0, 0.69444, 0, 0],\r\n        '923': [0, 0.69444, 0, 0],\r\n        '926': [0, 0.69444, 0, 0],\r\n        '928': [0, 0.69444, 0, 0],\r\n        '931': [0, 0.69444, 0, 0],\r\n        '933': [0, 0.69444, 0, 0],\r\n        '934': [0, 0.69444, 0, 0],\r\n        '936': [0, 0.69444, 0, 0],\r\n        '937': [0, 0.69444, 0, 0],\r\n        '8211': [0, 0.45833, 0.03056, 0],\r\n        '8212': [0, 0.45833, 0.03056, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n    },\r\n    'SansSerif-Italic': {\r\n        '33': [0, 0.69444, 0.05733, 0],\r\n        '34': [0, 0.69444, 0.00316, 0],\r\n        '35': [0.19444, 0.69444, 0.05087, 0],\r\n        '36': [0.05556, 0.75, 0.11156, 0],\r\n        '37': [0.05556, 0.75, 0.03126, 0],\r\n        '38': [0, 0.69444, 0.03058, 0],\r\n        '39': [0, 0.69444, 0.07816, 0],\r\n        '40': [0.25, 0.75, 0.13164, 0],\r\n        '41': [0.25, 0.75, 0.02536, 0],\r\n        '42': [0, 0.75, 0.11775, 0],\r\n        '43': [0.08333, 0.58333, 0.02536, 0],\r\n        '44': [0.125, 0.08333, 0, 0],\r\n        '45': [0, 0.44444, 0.01946, 0],\r\n        '46': [0, 0.08333, 0, 0],\r\n        '47': [0.25, 0.75, 0.13164, 0],\r\n        '48': [0, 0.65556, 0.11156, 0],\r\n        '49': [0, 0.65556, 0.11156, 0],\r\n        '50': [0, 0.65556, 0.11156, 0],\r\n        '51': [0, 0.65556, 0.11156, 0],\r\n        '52': [0, 0.65556, 0.11156, 0],\r\n        '53': [0, 0.65556, 0.11156, 0],\r\n        '54': [0, 0.65556, 0.11156, 0],\r\n        '55': [0, 0.65556, 0.11156, 0],\r\n        '56': [0, 0.65556, 0.11156, 0],\r\n        '57': [0, 0.65556, 0.11156, 0],\r\n        '58': [0, 0.44444, 0.02502, 0],\r\n        '59': [0.125, 0.44444, 0.02502, 0],\r\n        '61': [-0.13, 0.37, 0.05087, 0],\r\n        '63': [0, 0.69444, 0.11809, 0],\r\n        '64': [0, 0.69444, 0.07555, 0],\r\n        '65': [0, 0.69444, 0, 0],\r\n        '66': [0, 0.69444, 0.08293, 0],\r\n        '67': [0, 0.69444, 0.11983, 0],\r\n        '68': [0, 0.69444, 0.07555, 0],\r\n        '69': [0, 0.69444, 0.11983, 0],\r\n        '70': [0, 0.69444, 0.13372, 0],\r\n        '71': [0, 0.69444, 0.11983, 0],\r\n        '72': [0, 0.69444, 0.08094, 0],\r\n        '73': [0, 0.69444, 0.13372, 0],\r\n        '74': [0, 0.69444, 0.08094, 0],\r\n        '75': [0, 0.69444, 0.11983, 0],\r\n        '76': [0, 0.69444, 0, 0],\r\n        '77': [0, 0.69444, 0.08094, 0],\r\n        '78': [0, 0.69444, 0.08094, 0],\r\n        '79': [0, 0.69444, 0.07555, 0],\r\n        '80': [0, 0.69444, 0.08293, 0],\r\n        '81': [0.125, 0.69444, 0.07555, 0],\r\n        '82': [0, 0.69444, 0.08293, 0],\r\n        '83': [0, 0.69444, 0.09205, 0],\r\n        '84': [0, 0.69444, 0.13372, 0],\r\n        '85': [0, 0.69444, 0.08094, 0],\r\n        '86': [0, 0.69444, 0.1615, 0],\r\n        '87': [0, 0.69444, 0.1615, 0],\r\n        '88': [0, 0.69444, 0.13372, 0],\r\n        '89': [0, 0.69444, 0.17261, 0],\r\n        '90': [0, 0.69444, 0.11983, 0],\r\n        '91': [0.25, 0.75, 0.15942, 0],\r\n        '93': [0.25, 0.75, 0.08719, 0],\r\n        '94': [0, 0.69444, 0.0799, 0],\r\n        '95': [0.35, 0.09444, 0.08616, 0],\r\n        '97': [0, 0.44444, 0.00981, 0],\r\n        '98': [0, 0.69444, 0.03057, 0],\r\n        '99': [0, 0.44444, 0.08336, 0],\r\n        '100': [0, 0.69444, 0.09483, 0],\r\n        '101': [0, 0.44444, 0.06778, 0],\r\n        '102': [0, 0.69444, 0.21705, 0],\r\n        '103': [0.19444, 0.44444, 0.10836, 0],\r\n        '104': [0, 0.69444, 0.01778, 0],\r\n        '105': [0, 0.67937, 0.09718, 0],\r\n        '106': [0.19444, 0.67937, 0.09162, 0],\r\n        '107': [0, 0.69444, 0.08336, 0],\r\n        '108': [0, 0.69444, 0.09483, 0],\r\n        '109': [0, 0.44444, 0.01778, 0],\r\n        '110': [0, 0.44444, 0.01778, 0],\r\n        '111': [0, 0.44444, 0.06613, 0],\r\n        '112': [0.19444, 0.44444, 0.0389, 0],\r\n        '113': [0.19444, 0.44444, 0.04169, 0],\r\n        '114': [0, 0.44444, 0.10836, 0],\r\n        '115': [0, 0.44444, 0.0778, 0],\r\n        '116': [0, 0.57143, 0.07225, 0],\r\n        '117': [0, 0.44444, 0.04169, 0],\r\n        '118': [0, 0.44444, 0.10836, 0],\r\n        '119': [0, 0.44444, 0.10836, 0],\r\n        '120': [0, 0.44444, 0.09169, 0],\r\n        '121': [0.19444, 0.44444, 0.10836, 0],\r\n        '122': [0, 0.44444, 0.08752, 0],\r\n        '126': [0.35, 0.32659, 0.08826, 0],\r\n        '168': [0, 0.67937, 0.06385, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '305': [0, 0.44444, 0.04169, 0],\r\n        '567': [0.19444, 0.44444, 0.04169, 0],\r\n        '710': [0, 0.69444, 0.0799, 0],\r\n        '711': [0, 0.63194, 0.08432, 0],\r\n        '713': [0, 0.60889, 0.08776, 0],\r\n        '714': [0, 0.69444, 0.09205, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0.09483, 0],\r\n        '729': [0, 0.67937, 0.07774, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.67659, 0.08826, 0],\r\n        '733': [0, 0.69444, 0.09205, 0],\r\n        '915': [0, 0.69444, 0.13372, 0],\r\n        '916': [0, 0.69444, 0, 0],\r\n        '920': [0, 0.69444, 0.07555, 0],\r\n        '923': [0, 0.69444, 0, 0],\r\n        '926': [0, 0.69444, 0.12816, 0],\r\n        '928': [0, 0.69444, 0.08094, 0],\r\n        '931': [0, 0.69444, 0.11983, 0],\r\n        '933': [0, 0.69444, 0.09031, 0],\r\n        '934': [0, 0.69444, 0.04603, 0],\r\n        '936': [0, 0.69444, 0.09031, 0],\r\n        '937': [0, 0.69444, 0.08293, 0],\r\n        '8211': [0, 0.44444, 0.08616, 0],\r\n        '8212': [0, 0.44444, 0.08616, 0],\r\n        '8216': [0, 0.69444, 0.07816, 0],\r\n        '8217': [0, 0.69444, 0.07816, 0],\r\n        '8220': [0, 0.69444, 0.14205, 0],\r\n        '8221': [0, 0.69444, 0.00316, 0],\r\n    },\r\n    'SansSerif-Regular': {\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.08333, 0.58333, 0, 0],\r\n        '44': [0.125, 0.08333, 0, 0],\r\n        '45': [0, 0.44444, 0, 0],\r\n        '46': [0, 0.08333, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.65556, 0, 0],\r\n        '49': [0, 0.65556, 0, 0],\r\n        '50': [0, 0.65556, 0, 0],\r\n        '51': [0, 0.65556, 0, 0],\r\n        '52': [0, 0.65556, 0, 0],\r\n        '53': [0, 0.65556, 0, 0],\r\n        '54': [0, 0.65556, 0, 0],\r\n        '55': [0, 0.65556, 0, 0],\r\n        '56': [0, 0.65556, 0, 0],\r\n        '57': [0, 0.65556, 0, 0],\r\n        '58': [0, 0.44444, 0, 0],\r\n        '59': [0.125, 0.44444, 0, 0],\r\n        '61': [-0.13, 0.37, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.69444, 0, 0],\r\n        '66': [0, 0.69444, 0, 0],\r\n        '67': [0, 0.69444, 0, 0],\r\n        '68': [0, 0.69444, 0, 0],\r\n        '69': [0, 0.69444, 0, 0],\r\n        '70': [0, 0.69444, 0, 0],\r\n        '71': [0, 0.69444, 0, 0],\r\n        '72': [0, 0.69444, 0, 0],\r\n        '73': [0, 0.69444, 0, 0],\r\n        '74': [0, 0.69444, 0, 0],\r\n        '75': [0, 0.69444, 0, 0],\r\n        '76': [0, 0.69444, 0, 0],\r\n        '77': [0, 0.69444, 0, 0],\r\n        '78': [0, 0.69444, 0, 0],\r\n        '79': [0, 0.69444, 0, 0],\r\n        '80': [0, 0.69444, 0, 0],\r\n        '81': [0.125, 0.69444, 0, 0],\r\n        '82': [0, 0.69444, 0, 0],\r\n        '83': [0, 0.69444, 0, 0],\r\n        '84': [0, 0.69444, 0, 0],\r\n        '85': [0, 0.69444, 0, 0],\r\n        '86': [0, 0.69444, 0.01389, 0],\r\n        '87': [0, 0.69444, 0.01389, 0],\r\n        '88': [0, 0.69444, 0, 0],\r\n        '89': [0, 0.69444, 0.025, 0],\r\n        '90': [0, 0.69444, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.35, 0.09444, 0.02778, 0],\r\n        '97': [0, 0.44444, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.44444, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.44444, 0, 0],\r\n        '102': [0, 0.69444, 0.06944, 0],\r\n        '103': [0.19444, 0.44444, 0.01389, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.67937, 0, 0],\r\n        '106': [0.19444, 0.67937, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.44444, 0, 0],\r\n        '110': [0, 0.44444, 0, 0],\r\n        '111': [0, 0.44444, 0, 0],\r\n        '112': [0.19444, 0.44444, 0, 0],\r\n        '113': [0.19444, 0.44444, 0, 0],\r\n        '114': [0, 0.44444, 0.01389, 0],\r\n        '115': [0, 0.44444, 0, 0],\r\n        '116': [0, 0.57143, 0, 0],\r\n        '117': [0, 0.44444, 0, 0],\r\n        '118': [0, 0.44444, 0.01389, 0],\r\n        '119': [0, 0.44444, 0.01389, 0],\r\n        '120': [0, 0.44444, 0, 0],\r\n        '121': [0.19444, 0.44444, 0.01389, 0],\r\n        '122': [0, 0.44444, 0, 0],\r\n        '126': [0.35, 0.32659, 0, 0],\r\n        '168': [0, 0.67937, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '305': [0, 0.44444, 0, 0],\r\n        '567': [0.19444, 0.44444, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.63194, 0, 0],\r\n        '713': [0, 0.60889, 0, 0],\r\n        '714': [0, 0.69444, 0, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.67937, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.67659, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.69444, 0, 0],\r\n        '916': [0, 0.69444, 0, 0],\r\n        '920': [0, 0.69444, 0, 0],\r\n        '923': [0, 0.69444, 0, 0],\r\n        '926': [0, 0.69444, 0, 0],\r\n        '928': [0, 0.69444, 0, 0],\r\n        '931': [0, 0.69444, 0, 0],\r\n        '933': [0, 0.69444, 0, 0],\r\n        '934': [0, 0.69444, 0, 0],\r\n        '936': [0, 0.69444, 0, 0],\r\n        '937': [0, 0.69444, 0, 0],\r\n        '8211': [0, 0.44444, 0.02778, 0],\r\n        '8212': [0, 0.44444, 0.02778, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n    },\r\n    'Script-Regular': {\r\n        '65': [0, 0.7, 0.22925, 0],\r\n        '66': [0, 0.7, 0.04087, 0],\r\n        '67': [0, 0.7, 0.1689, 0],\r\n        '68': [0, 0.7, 0.09371, 0],\r\n        '69': [0, 0.7, 0.18583, 0],\r\n        '70': [0, 0.7, 0.13634, 0],\r\n        '71': [0, 0.7, 0.17322, 0],\r\n        '72': [0, 0.7, 0.29694, 0],\r\n        '73': [0, 0.7, 0.19189, 0],\r\n        '74': [0.27778, 0.7, 0.19189, 0],\r\n        '75': [0, 0.7, 0.31259, 0],\r\n        '76': [0, 0.7, 0.19189, 0],\r\n        '77': [0, 0.7, 0.15981, 0],\r\n        '78': [0, 0.7, 0.3525, 0],\r\n        '79': [0, 0.7, 0.08078, 0],\r\n        '80': [0, 0.7, 0.08078, 0],\r\n        '81': [0, 0.7, 0.03305, 0],\r\n        '82': [0, 0.7, 0.06259, 0],\r\n        '83': [0, 0.7, 0.19189, 0],\r\n        '84': [0, 0.7, 0.29087, 0],\r\n        '85': [0, 0.7, 0.25815, 0],\r\n        '86': [0, 0.7, 0.27523, 0],\r\n        '87': [0, 0.7, 0.27523, 0],\r\n        '88': [0, 0.7, 0.26006, 0],\r\n        '89': [0, 0.7, 0.2939, 0],\r\n        '90': [0, 0.7, 0.24037, 0],\r\n    },\r\n    'Size1-Regular': {\r\n        '40': [0.35001, 0.85, 0, 0],\r\n        '41': [0.35001, 0.85, 0, 0],\r\n        '47': [0.35001, 0.85, 0, 0],\r\n        '91': [0.35001, 0.85, 0, 0],\r\n        '92': [0.35001, 0.85, 0, 0],\r\n        '93': [0.35001, 0.85, 0, 0],\r\n        '123': [0.35001, 0.85, 0, 0],\r\n        '125': [0.35001, 0.85, 0, 0],\r\n        '710': [0, 0.72222, 0, 0],\r\n        '732': [0, 0.72222, 0, 0],\r\n        '770': [0, 0.72222, 0, 0],\r\n        '771': [0, 0.72222, 0, 0],\r\n        '8214': [-0.00099, 0.601, 0, 0],\r\n        '8593': [1e-5, 0.6, 0, 0],\r\n        '8595': [1e-5, 0.6, 0, 0],\r\n        '8657': [1e-5, 0.6, 0, 0],\r\n        '8659': [1e-5, 0.6, 0, 0],\r\n        '8719': [0.25001, 0.75, 0, 0],\r\n        '8720': [0.25001, 0.75, 0, 0],\r\n        '8721': [0.25001, 0.75, 0, 0],\r\n        '8730': [0.35001, 0.85, 0, 0],\r\n        '8739': [-0.00599, 0.606, 0, 0],\r\n        '8741': [-0.00599, 0.606, 0, 0],\r\n        '8747': [0.30612, 0.805, 0.19445, 0],\r\n        '8748': [0.306, 0.805, 0.19445, 0],\r\n        '8749': [0.306, 0.805, 0.19445, 0],\r\n        '8750': [0.30612, 0.805, 0.19445, 0],\r\n        '8896': [0.25001, 0.75, 0, 0],\r\n        '8897': [0.25001, 0.75, 0, 0],\r\n        '8898': [0.25001, 0.75, 0, 0],\r\n        '8899': [0.25001, 0.75, 0, 0],\r\n        '8968': [0.35001, 0.85, 0, 0],\r\n        '8969': [0.35001, 0.85, 0, 0],\r\n        '8970': [0.35001, 0.85, 0, 0],\r\n        '8971': [0.35001, 0.85, 0, 0],\r\n        '9168': [-0.00099, 0.601, 0, 0],\r\n        '10216': [0.35001, 0.85, 0, 0],\r\n        '10217': [0.35001, 0.85, 0, 0],\r\n        '10752': [0.25001, 0.75, 0, 0],\r\n        '10753': [0.25001, 0.75, 0, 0],\r\n        '10754': [0.25001, 0.75, 0, 0],\r\n        '10756': [0.25001, 0.75, 0, 0],\r\n        '10758': [0.25001, 0.75, 0, 0],\r\n    },\r\n    'Size2-Regular': {\r\n        '40': [0.65002, 1.15, 0, 0],\r\n        '41': [0.65002, 1.15, 0, 0],\r\n        '47': [0.65002, 1.15, 0, 0],\r\n        '91': [0.65002, 1.15, 0, 0],\r\n        '92': [0.65002, 1.15, 0, 0],\r\n        '93': [0.65002, 1.15, 0, 0],\r\n        '123': [0.65002, 1.15, 0, 0],\r\n        '125': [0.65002, 1.15, 0, 0],\r\n        '710': [0, 0.75, 0, 0],\r\n        '732': [0, 0.75, 0, 0],\r\n        '770': [0, 0.75, 0, 0],\r\n        '771': [0, 0.75, 0, 0],\r\n        '8719': [0.55001, 1.05, 0, 0],\r\n        '8720': [0.55001, 1.05, 0, 0],\r\n        '8721': [0.55001, 1.05, 0, 0],\r\n        '8730': [0.65002, 1.15, 0, 0],\r\n        '8747': [0.86225, 1.36, 0.44445, 0],\r\n        '8748': [0.862, 1.36, 0.44445, 0],\r\n        '8749': [0.862, 1.36, 0.44445, 0],\r\n        '8750': [0.86225, 1.36, 0.44445, 0],\r\n        '8896': [0.55001, 1.05, 0, 0],\r\n        '8897': [0.55001, 1.05, 0, 0],\r\n        '8898': [0.55001, 1.05, 0, 0],\r\n        '8899': [0.55001, 1.05, 0, 0],\r\n        '8968': [0.65002, 1.15, 0, 0],\r\n        '8969': [0.65002, 1.15, 0, 0],\r\n        '8970': [0.65002, 1.15, 0, 0],\r\n        '8971': [0.65002, 1.15, 0, 0],\r\n        '10216': [0.65002, 1.15, 0, 0],\r\n        '10217': [0.65002, 1.15, 0, 0],\r\n        '10752': [0.55001, 1.05, 0, 0],\r\n        '10753': [0.55001, 1.05, 0, 0],\r\n        '10754': [0.55001, 1.05, 0, 0],\r\n        '10756': [0.55001, 1.05, 0, 0],\r\n        '10758': [0.55001, 1.05, 0, 0],\r\n    },\r\n    'Size3-Regular': {\r\n        '40': [0.95003, 1.45, 0, 0],\r\n        '41': [0.95003, 1.45, 0, 0],\r\n        '47': [0.95003, 1.45, 0, 0],\r\n        '91': [0.95003, 1.45, 0, 0],\r\n        '92': [0.95003, 1.45, 0, 0],\r\n        '93': [0.95003, 1.45, 0, 0],\r\n        '123': [0.95003, 1.45, 0, 0],\r\n        '125': [0.95003, 1.45, 0, 0],\r\n        '710': [0, 0.75, 0, 0],\r\n        '732': [0, 0.75, 0, 0],\r\n        '770': [0, 0.75, 0, 0],\r\n        '771': [0, 0.75, 0, 0],\r\n        '8730': [0.95003, 1.45, 0, 0],\r\n        '8968': [0.95003, 1.45, 0, 0],\r\n        '8969': [0.95003, 1.45, 0, 0],\r\n        '8970': [0.95003, 1.45, 0, 0],\r\n        '8971': [0.95003, 1.45, 0, 0],\r\n        '10216': [0.95003, 1.45, 0, 0],\r\n        '10217': [0.95003, 1.45, 0, 0],\r\n    },\r\n    'Size4-Regular': {\r\n        '40': [1.25003, 1.75, 0, 0],\r\n        '41': [1.25003, 1.75, 0, 0],\r\n        '47': [1.25003, 1.75, 0, 0],\r\n        '91': [1.25003, 1.75, 0, 0],\r\n        '92': [1.25003, 1.75, 0, 0],\r\n        '93': [1.25003, 1.75, 0, 0],\r\n        '123': [1.25003, 1.75, 0, 0],\r\n        '125': [1.25003, 1.75, 0, 0],\r\n        '710': [0, 0.825, 0, 0],\r\n        '732': [0, 0.825, 0, 0],\r\n        '770': [0, 0.825, 0, 0],\r\n        '771': [0, 0.825, 0, 0],\r\n        '8730': [1.25003, 1.75, 0, 0],\r\n        '8968': [1.25003, 1.75, 0, 0],\r\n        '8969': [1.25003, 1.75, 0, 0],\r\n        '8970': [1.25003, 1.75, 0, 0],\r\n        '8971': [1.25003, 1.75, 0, 0],\r\n        '9115': [0.64502, 1.155, 0, 0],\r\n        '9116': [1e-5, 0.6, 0, 0],\r\n        '9117': [0.64502, 1.155, 0, 0],\r\n        '9118': [0.64502, 1.155, 0, 0],\r\n        '9119': [1e-5, 0.6, 0, 0],\r\n        '9120': [0.64502, 1.155, 0, 0],\r\n        '9121': [0.64502, 1.155, 0, 0],\r\n        '9122': [-0.00099, 0.601, 0, 0],\r\n        '9123': [0.64502, 1.155, 0, 0],\r\n        '9124': [0.64502, 1.155, 0, 0],\r\n        '9125': [-0.00099, 0.601, 0, 0],\r\n        '9126': [0.64502, 1.155, 0, 0],\r\n        '9127': [1e-5, 0.9, 0, 0],\r\n        '9128': [0.65002, 1.15, 0, 0],\r\n        '9129': [0.90001, 0, 0, 0],\r\n        '9130': [0, 0.3, 0, 0],\r\n        '9131': [1e-5, 0.9, 0, 0],\r\n        '9132': [0.65002, 1.15, 0, 0],\r\n        '9133': [0.90001, 0, 0, 0],\r\n        '9143': [0.88502, 0.915, 0, 0],\r\n        '10216': [1.25003, 1.75, 0, 0],\r\n        '10217': [1.25003, 1.75, 0, 0],\r\n        '57344': [-0.00499, 0.605, 0, 0],\r\n        '57345': [-0.00499, 0.605, 0, 0],\r\n        '57680': [0, 0.12, 0, 0],\r\n        '57681': [0, 0.12, 0, 0],\r\n        '57682': [0, 0.12, 0, 0],\r\n        '57683': [0, 0.12, 0, 0],\r\n    },\r\n    'Typewriter-Regular': {\r\n        '32': [0, 0, 0, 0],\r\n        '33': [0, 0.61111, 0, 0],\r\n        '34': [0, 0.61111, 0, 0],\r\n        '35': [0, 0.61111, 0, 0],\r\n        '36': [0.08333, 0.69444, 0, 0],\r\n        '37': [0.08333, 0.69444, 0, 0],\r\n        '38': [0, 0.61111, 0, 0],\r\n        '39': [0, 0.61111, 0, 0],\r\n        '40': [0.08333, 0.69444, 0, 0],\r\n        '41': [0.08333, 0.69444, 0, 0],\r\n        '42': [0, 0.52083, 0, 0],\r\n        '43': [-0.08056, 0.53055, 0, 0],\r\n        '44': [0.13889, 0.125, 0, 0],\r\n        '45': [-0.08056, 0.53055, 0, 0],\r\n        '46': [0, 0.125, 0, 0],\r\n        '47': [0.08333, 0.69444, 0, 0],\r\n        '48': [0, 0.61111, 0, 0],\r\n        '49': [0, 0.61111, 0, 0],\r\n        '50': [0, 0.61111, 0, 0],\r\n        '51': [0, 0.61111, 0, 0],\r\n        '52': [0, 0.61111, 0, 0],\r\n        '53': [0, 0.61111, 0, 0],\r\n        '54': [0, 0.61111, 0, 0],\r\n        '55': [0, 0.61111, 0, 0],\r\n        '56': [0, 0.61111, 0, 0],\r\n        '57': [0, 0.61111, 0, 0],\r\n        '58': [0, 0.43056, 0, 0],\r\n        '59': [0.13889, 0.43056, 0, 0],\r\n        '60': [-0.05556, 0.55556, 0, 0],\r\n        '61': [-0.19549, 0.41562, 0, 0],\r\n        '62': [-0.05556, 0.55556, 0, 0],\r\n        '63': [0, 0.61111, 0, 0],\r\n        '64': [0, 0.61111, 0, 0],\r\n        '65': [0, 0.61111, 0, 0],\r\n        '66': [0, 0.61111, 0, 0],\r\n        '67': [0, 0.61111, 0, 0],\r\n        '68': [0, 0.61111, 0, 0],\r\n        '69': [0, 0.61111, 0, 0],\r\n        '70': [0, 0.61111, 0, 0],\r\n        '71': [0, 0.61111, 0, 0],\r\n        '72': [0, 0.61111, 0, 0],\r\n        '73': [0, 0.61111, 0, 0],\r\n        '74': [0, 0.61111, 0, 0],\r\n        '75': [0, 0.61111, 0, 0],\r\n        '76': [0, 0.61111, 0, 0],\r\n        '77': [0, 0.61111, 0, 0],\r\n        '78': [0, 0.61111, 0, 0],\r\n        '79': [0, 0.61111, 0, 0],\r\n        '80': [0, 0.61111, 0, 0],\r\n        '81': [0.13889, 0.61111, 0, 0],\r\n        '82': [0, 0.61111, 0, 0],\r\n        '83': [0, 0.61111, 0, 0],\r\n        '84': [0, 0.61111, 0, 0],\r\n        '85': [0, 0.61111, 0, 0],\r\n        '86': [0, 0.61111, 0, 0],\r\n        '87': [0, 0.61111, 0, 0],\r\n        '88': [0, 0.61111, 0, 0],\r\n        '89': [0, 0.61111, 0, 0],\r\n        '90': [0, 0.61111, 0, 0],\r\n        '91': [0.08333, 0.69444, 0, 0],\r\n        '92': [0.08333, 0.69444, 0, 0],\r\n        '93': [0.08333, 0.69444, 0, 0],\r\n        '94': [0, 0.61111, 0, 0],\r\n        '95': [0.09514, 0, 0, 0],\r\n        '96': [0, 0.61111, 0, 0],\r\n        '97': [0, 0.43056, 0, 0],\r\n        '98': [0, 0.61111, 0, 0],\r\n        '99': [0, 0.43056, 0, 0],\r\n        '100': [0, 0.61111, 0, 0],\r\n        '101': [0, 0.43056, 0, 0],\r\n        '102': [0, 0.61111, 0, 0],\r\n        '103': [0.22222, 0.43056, 0, 0],\r\n        '104': [0, 0.61111, 0, 0],\r\n        '105': [0, 0.61111, 0, 0],\r\n        '106': [0.22222, 0.61111, 0, 0],\r\n        '107': [0, 0.61111, 0, 0],\r\n        '108': [0, 0.61111, 0, 0],\r\n        '109': [0, 0.43056, 0, 0],\r\n        '110': [0, 0.43056, 0, 0],\r\n        '111': [0, 0.43056, 0, 0],\r\n        '112': [0.22222, 0.43056, 0, 0],\r\n        '113': [0.22222, 0.43056, 0, 0],\r\n        '114': [0, 0.43056, 0, 0],\r\n        '115': [0, 0.43056, 0, 0],\r\n        '116': [0, 0.55358, 0, 0],\r\n        '117': [0, 0.43056, 0, 0],\r\n        '118': [0, 0.43056, 0, 0],\r\n        '119': [0, 0.43056, 0, 0],\r\n        '120': [0, 0.43056, 0, 0],\r\n        '121': [0.22222, 0.43056, 0, 0],\r\n        '122': [0, 0.43056, 0, 0],\r\n        '123': [0.08333, 0.69444, 0, 0],\r\n        '124': [0.08333, 0.69444, 0, 0],\r\n        '125': [0.08333, 0.69444, 0, 0],\r\n        '126': [0, 0.61111, 0, 0],\r\n        '127': [0, 0.61111, 0, 0],\r\n        '160': [0, 0, 0, 0],\r\n        '176': [0, 0.61111, 0, 0],\r\n        '184': [0.19445, 0, 0, 0],\r\n        '305': [0, 0.43056, 0, 0],\r\n        '567': [0.22222, 0.43056, 0, 0],\r\n        '711': [0, 0.56597, 0, 0],\r\n        '713': [0, 0.56555, 0, 0],\r\n        '714': [0, 0.61111, 0, 0],\r\n        '715': [0, 0.61111, 0, 0],\r\n        '728': [0, 0.61111, 0, 0],\r\n        '730': [0, 0.61111, 0, 0],\r\n        '770': [0, 0.61111, 0, 0],\r\n        '771': [0, 0.61111, 0, 0],\r\n        '776': [0, 0.61111, 0, 0],\r\n        '915': [0, 0.61111, 0, 0],\r\n        '916': [0, 0.61111, 0, 0],\r\n        '920': [0, 0.61111, 0, 0],\r\n        '923': [0, 0.61111, 0, 0],\r\n        '926': [0, 0.61111, 0, 0],\r\n        '928': [0, 0.61111, 0, 0],\r\n        '931': [0, 0.61111, 0, 0],\r\n        '933': [0, 0.61111, 0, 0],\r\n        '934': [0, 0.61111, 0, 0],\r\n        '936': [0, 0.61111, 0, 0],\r\n        '937': [0, 0.61111, 0, 0],\r\n        '8216': [0, 0.61111, 0, 0],\r\n        '8217': [0, 0.61111, 0, 0],\r\n        '8242': [0, 0.61111, 0, 0],\r\n        '9251': [0.11111, 0.21944, 0, 0],\r\n    },\r\n};\r\n","/**\r\n * This module contains metrics regarding fonts and individual symbols. The sigma\r\n * and xi variables, as well as the METRICS_MAP map contain data extracted from\r\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\r\n * `metrics` variable and the getCharacterMetrics function.\r\n */\r\nimport METRICS_MAP from './font-metrics-data';\r\n\r\n// This METRICS_MAP contains a mapping from font name and character code to character\r\n// metrics, including height, depth, italic correction, and skew (kern from the\r\n// character to the corresponding \\skewchar)\r\n// This map is generated via `make metrics`. It should not be changed manually.\r\n\r\ninterface CharacterMetrics {\r\n    defaultMetrics: boolean;\r\n    depth: number;\r\n    height: number;\r\n    italic: number;\r\n    skew: number;\r\n}\r\n// const hangulRegex = /[\\uAC00-\\uD7AF]/;\r\n\r\n// This regex combines\r\n// - Hiragana: [\\u3040-\\u309F]\r\n// - Katakana: [\\u30A0-\\u30FF]\r\n// - CJK ideograms: [\\u4E00-\\u9FAF]\r\n// - Hangul syllables: [\\uAC00-\\uD7AF]\r\n// Notably missing are half width Katakana and Romaji glyphs.\r\nconst cjkRegex = /[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\u4E00-\\u9FAF]|[\\uAC00-\\uD7AF]/;\r\n\r\n/*\r\n *\r\n * In TeX, there are actually three sets of dimensions, one for each of\r\n * textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the\r\n * the arrays below, in that order.\r\n *\r\n * The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respectively.\r\n * This was determined by running the following script:\r\n *``` bash\r\n      latex -interaction=nonstopmode \\\r\n      '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\r\n      '$a$ \\expandafter\\show\\the\\textfont2' \\\r\n      '\\expandafter\\show\\the\\scriptfont2' \\\r\n      '\\expandafter\\show\\the\\scriptscriptfont2' \\\r\n      '\\stop'\r\n  ```\r\n * The metrics themselves were retrieved using the following commands:\r\n * ``` bash\r\n      tftopl cmsy10\r\n      tftopl cmsy7\r\n      tftopl cmsy5\r\n    ```\r\n *\r\n * The output of each of these commands is quite lengthy.  The only part we\r\n * care about is the FONTDIMEN section. Each value is measured in EMs.\r\n * @memberof module:fontMetrics\r\n */\r\nexport const SIGMAS = {\r\n    slant: [0.25, 0.25, 0.25], // sigma1\r\n    space: [0.0, 0.0, 0.0], // sigma2\r\n    stretch: [0.0, 0.0, 0.0], // sigma3\r\n    shrink: [0.0, 0.0, 0.0], // sigma4\r\n    xHeight: [0.431, 0.431, 0.431], // sigma5\r\n    quad: [1.0, 1.171, 1.472], // sigma6\r\n    extraSpace: [0.0, 0.0, 0.0], // sigma7\r\n    num1: [0.677, 0.732, 0.925], // sigma8\r\n    num2: [0.394, 0.384, 0.387], // sigma9\r\n    num3: [0.444, 0.471, 0.504], // sigma10\r\n    denom1: [0.686, 0.752, 1.025], // sigma11\r\n    denom2: [0.345, 0.344, 0.532], // sigma12\r\n    sup1: [0.413, 0.503, 0.504], // sigma13\r\n    sup2: [0.363, 0.431, 0.404], // sigma14\r\n    sup3: [0.289, 0.286, 0.294], // sigma15\r\n    sub1: [0.15, 0.143, 0.2], // sigma16\r\n    sub2: [0.247, 0.286, 0.4], // sigma17\r\n    supDrop: [0.386, 0.353, 0.494], // sigma18\r\n    subDrop: [0.05, 0.071, 0.1], // sigma19\r\n    delim1: [2.39, 1.7, 1.98], // sigma20\r\n    delim2: [1.01, 1.157, 1.42], // sigma21\r\n    axisHeight: [0.25, 0.25, 0.25], // sigma22\r\n};\r\n\r\n// These font metrics are extracted from TeX by using\r\n// \\font\\a=cmex10\r\n// \\showthe\\fontdimenX\\a\r\n// where X is the corresponding variable number. These correspond to the font\r\n// parameters of the extension fonts (family 3). See the TeXbook, page 433\r\n// const xi1 = 0; // Slant per pt\r\n// const xi2 = 0; // Interword space\r\n// const xi3 = 0; // Interword stretch\r\n// const xi4 = 0; // Interword shrink\r\n// const xi5 = 0.431; // x-height\r\n// const xi6 = 1; // Quad width\r\n// const xi7 = 0; // Extra space\r\nconst xi8 = 0.04; // Default rule thickness, TexBook p.390\r\nconst xi9 = 0.111;\r\nconst xi10 = 0.166;\r\nconst xi11 = 0.2;\r\nconst xi12 = 0.6;\r\nconst xi13 = 0.1;\r\n// Note: xi14: offset from baseline for superscript TexBook p. 179\r\n// Note: xi16: offset from baseline for subscript\r\n\r\n// This value determines how large a pt is, for metrics which are defined in\r\n// terms of pts.\r\n// This value is also used in katex.less; if you change it make sure the values\r\n// match.\r\nconst ptPerEm = 10.0;\r\n\r\n/*\r\n * This is just a mapping from common names to real metrics\r\n */\r\nexport const METRICS = {\r\n    defaultRuleThickness: xi8,\r\n    bigOpSpacing1: xi9,\r\n    bigOpSpacing2: xi10,\r\n    bigOpSpacing3: xi11,\r\n    bigOpSpacing4: xi12,\r\n    bigOpSpacing5: xi13,\r\n    ptPerEm: ptPerEm,\r\n    pxPerEm: (ptPerEm * 4.0) / 3.0, // A CSS pt is fixed at 1.333px\r\n    doubleRuleSep: 2.0 / ptPerEm, // The space between adjacent `|` columns in an array definition. From\r\n    // article.cls.txt:455\r\n    arraycolsep: 5.0 / ptPerEm,\r\n    baselineskip: 12.0 / ptPerEm,\r\n    arrayrulewidth: 0.4 / ptPerEm,\r\n    fboxsep: 3 / ptPerEm, // From letter.dtx:1626\r\n    fboxrule: 0.4 / ptPerEm, // From letter.dtx:1627\r\n};\r\n\r\n// These are very rough approximations.  We default to Times New Roman which\r\n// should have Latin-1 and Cyrillic characters, but may not depending on the\r\n// operating system.  The metrics do not account for extra height from the\r\n// accents.  In the case of Cyrillic characters which have both ascenders and\r\n// descenders we prefer approximations with ascenders, primarily to prevent\r\n// the fraction bar or root line from intersecting the glyph.\r\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\r\nconst extraCharacterMap = {\r\n    '\\u00a0': '\\u0020', // NON-BREAKING SPACE is like space\r\n    '\\u200b': '\\u0020', // ZERO WIDTH SPACE is like space\r\n    // Latin-1\r\n    Å: 'A',\r\n    Ç: 'C',\r\n    Ð: 'D',\r\n    Þ: 'o',\r\n    å: 'a',\r\n    ç: 'c',\r\n    ð: 'd',\r\n    þ: 'o',\r\n\r\n    // Cyrillic\r\n    А: 'A',\r\n    Б: 'B',\r\n    В: 'B',\r\n    Г: 'F',\r\n    Д: 'A',\r\n    Е: 'E',\r\n    Ж: 'K',\r\n    З: '3',\r\n    И: 'N',\r\n    Й: 'N',\r\n    К: 'K',\r\n    Л: 'N',\r\n    М: 'M',\r\n    Н: 'H',\r\n    О: 'O',\r\n    П: 'N',\r\n    Р: 'P',\r\n    С: 'C',\r\n    Т: 'T',\r\n    У: 'y',\r\n    Ф: 'O',\r\n    Х: 'X',\r\n    Ц: 'U',\r\n    Ч: 'h',\r\n    Ш: 'W',\r\n    Щ: 'W',\r\n    Ъ: 'B',\r\n    Ы: 'X',\r\n    Ь: 'B',\r\n    Э: '3',\r\n    Ю: 'X',\r\n    Я: 'R',\r\n    а: 'a',\r\n    б: 'b',\r\n    в: 'a',\r\n    г: 'r',\r\n    д: 'y',\r\n    е: 'e',\r\n    ж: 'm',\r\n    з: 'e',\r\n    и: 'n',\r\n    й: 'n',\r\n    к: 'n',\r\n    л: 'n',\r\n    м: 'm',\r\n    н: 'n',\r\n    о: 'o',\r\n    п: 'n',\r\n    р: 'p',\r\n    с: 'c',\r\n    т: 'o',\r\n    у: 'y',\r\n    ф: 'b',\r\n    х: 'x',\r\n    ц: 'n',\r\n    ч: 'n',\r\n    ш: 'w',\r\n    щ: 'w',\r\n    ъ: 'a',\r\n    ы: 'm',\r\n    ь: 'a',\r\n    э: 'e',\r\n    ю: 'm',\r\n    я: 'r',\r\n};\r\n\r\n/**\r\n * This function is a convenience function for looking up information in the\r\n * METRICS_MAP table. It takes a character as a string, and a font name.\r\n *\r\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\r\n * built using `Make extended_metrics`.\r\n * @param fontName e.g. 'Main-Regular', 'Typewriter-Regular', etc...\r\n */\r\nexport function getCharacterMetrics(\r\n    character: string,\r\n    fontName: string\r\n): CharacterMetrics {\r\n    // console.assert(character.length === 1);\r\n    console.assert(METRICS_MAP[fontName], 'Unknown font \"' + fontName + '\"');\r\n\r\n    let ch = character.charCodeAt(0);\r\n\r\n    if (character[0] in extraCharacterMap) {\r\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\r\n    } else if (cjkRegex.test(character[0])) {\r\n        ch = 77; // 'M'.charCodeAt(0);\r\n    }\r\n    const metrics = METRICS_MAP[fontName][ch];\r\n\r\n    if (!metrics) {\r\n        // console.warn(\r\n        //     'No metrics for ' +\r\n        //     '\"' + character + '\" (U+' + ('000000' + ch.toString(16)).substr(-6) + ')' +\r\n        //     ' in font \"' + fontName + '\"');\r\n        // Assume default values.\r\n        // depth + height should be less than 1.0 em\r\n        return {\r\n            defaultMetrics: true,\r\n            depth: 0.2,\r\n            height: 0.7,\r\n            italic: 0,\r\n            skew: 0,\r\n        };\r\n    }\r\n\r\n    return {\r\n        defaultMetrics: false,\r\n        depth: metrics[0],\r\n        height: metrics[1],\r\n        italic: metrics[2],\r\n        skew: metrics[3],\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param value If value is a string, it may be suffixed\r\n * with a unit, which will override the `unit` paramter\r\n */\r\nexport function convertDimenToEm(\r\n    value: number | string,\r\n    unit: string,\r\n    precision = NaN\r\n): number {\r\n    if (typeof value === 'string') {\r\n        const m = value.match(/([-+]?[0-9.]*)\\s*([a-zA-Z]+)/);\r\n        if (!m) {\r\n            value = parseFloat(value);\r\n        } else {\r\n            value = parseFloat(m[1]);\r\n            unit = m[2].toLowerCase();\r\n        }\r\n    }\r\n\r\n    // If the units are missing, TeX assumes 'pt'\r\n    const f =\r\n        {\r\n            pt: 1.0,\r\n            mm: 7227 / 2540,\r\n            cm: 7227 / 254,\r\n            ex: 35271 / 8192,\r\n            px: 3.0 / 4.0,\r\n            em: METRICS.ptPerEm,\r\n            bp: 803 / 800,\r\n            dd: 1238 / 1157,\r\n            pc: 12.0,\r\n            in: 72.27,\r\n            mu: 10 / 18,\r\n        }[unit] || 1.0;\r\n\r\n    if (isFinite(precision)) {\r\n        const factor = Math.pow(10, precision);\r\n        return Math.round((value / METRICS.ptPerEm) * f * factor) / factor;\r\n    }\r\n\r\n    return (value / METRICS.ptPerEm) * f;\r\n}\r\n\r\nexport function convertDimenToPx(value: string | number, unit: string): number {\r\n    return convertDimenToEm(value, unit) * (4.0 / 3.0) * METRICS.ptPerEm;\r\n}\r\n","/**\r\n * This file contains information and classes for the 'math styles' used by TeX,\r\n * which are specific layout\r\n * algorithms for math. They get progressively smaller and tighter:\r\n * - displaystyle is used for expressions laid out on their own (in a block)\r\n * - textstyle is for expressions displayed on a line (usually wiht some text\r\n * around)\r\n * - scriptstyle is for expressions displayed as a superscript for example\r\n * - scriptscriptstyle is for expressions displayed as a superscript of a superscript\r\n * - the 'cramped' variations are used in various places, for examples a subscript\r\n * is using the 'scriptstyle', but cramped (so it's a bit more tight than a\r\n * superscript which is just using the 'scriptstyle')\r\n *\r\n * See Texbook, p.441:\r\n *\r\n * A math list is a sequence of items of the various kinds listed in Chapter 17,\r\n * and TEX typesets a formula by converting a math list to a horizontal list.\r\n * When such typesetting begins, TEX has two other pieces of information in\r\n * addition to the math list itself. (a) The starting style tells what style\r\n * should be used for the math list, unless another style is specified by a\r\n * style item. For example, the starting style for a displayed formula is D,\r\n * but for an equation in the text or an equation number it is T; and for a\r\n * subformula it can be any one of the eight styles defined in Chapter 17.\r\n *\r\n * We shall use C to stand for the current style, and we shall say that the\r\n * math list is being typeset in style C. (b) The typesetting is done either\r\n * with or without penalties. Formulas in the text of a paragraph are converted\r\n * to horizontal lists in which additional penalty items are inserted after\r\n * binary operations and relations, in order to aid in line breaking. Such\r\n * penalties are not inserted in other cases, because they would serve no\r\n * useful function.\r\n *\r\n * The eight styles are considered to be D > D′ > T > T′ > S > S′ > SS > SS′,\r\n * in decreasing order. Thus, C ≤ S means that the current style is S, S , SS,\r\n * or SS . Style C′ means the current style with a prime added if one isn’t\r\n * there; for example, we have C =T if and only if C = T or C = T'.\r\n * Style C↑ is the superscript style for C; this means style S if C is D or T,\r\n * style S′ if C is D′ or T′, style SS if C is S or SS,\r\n * and style SS if C is S or SS.\r\n * Finally, style C↓ is the subscript style, which is (C↑) .\r\n */\r\n\r\nimport { SIGMAS } from './font-metrics';\r\ninterface Metrics {\r\n    slant: number;\r\n    space: number;\r\n    stretch: number;\r\n    shrink: number;\r\n    xHeight: number;\r\n    quad: number;\r\n    extraSpace: number;\r\n    num1: number; // 8\r\n    num2: number; // 9\r\n    num3: number; // 10\r\n    denom1: number; // 11\r\n    denom2: number; // 12\r\n    sup1: number;\r\n    sup2: number;\r\n    sup3: number;\r\n    sub1: number;\r\n    sub2: number;\r\n    supDrop: number;\r\n    subDrop: number;\r\n    delim1: number;\r\n    delim2: number;\r\n    axisHeight: number;\r\n    emPerEx?: number;\r\n} // @revisit: belongs in ./font-metrics\r\n\r\n// IDs of the different MATHSTYLES\r\nconst D = 0; // displaystyle\r\nconst Dc = 1; // displaystyle, cramped\r\nconst T = 2; // textstyle\r\nconst Tc = 3;\r\nconst S = 4; // scriptstyle\r\nconst Sc = 5;\r\nconst SS = 6; // scriptscriptstyle\r\nconst SSc = 7;\r\n\r\n/**\r\n * @property {number} id unique id for the style\r\n * @property {number} size (which is the same for cramped and uncramped version\r\n * of a style)\r\n * @property {number}  multiplier, size multiplier which gives the size difference between\r\n * a style and textstyle.\r\n * @property {boolean}  cramped flag\r\n */\r\nexport class Mathstyle {\r\n    id: number;\r\n    size: number;\r\n    cramped: boolean;\r\n    sizeMultiplier: number; // @revisit...? Same as multiplier\r\n    metrics: Metrics;\r\n\r\n    constructor(\r\n        id: number,\r\n        size: number,\r\n        multiplier: number,\r\n        cramped: boolean\r\n    ) {\r\n        this.id = id;\r\n        this.size = size;\r\n        this.cramped = cramped;\r\n        this.sizeMultiplier = multiplier;\r\n        this.metrics = Object.keys(SIGMAS).reduce((acc, x) => {\r\n            return { ...acc, [x]: SIGMAS[x][this.size] };\r\n        }, {}) as Metrics;\r\n        this.metrics.emPerEx =\r\n            SIGMAS.xHeight[this.size] / SIGMAS.quad[this.size];\r\n    }\r\n    /**\r\n     * Get the style of a superscript given a base in the current style.\r\n     */\r\n    sup(): Mathstyle {\r\n        return MATHSTYLES[[S, Sc, S, Sc, SS, SSc, SS, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the style of a subscript given a base in the current style.\r\n     */\r\n    sub(): Mathstyle {\r\n        return MATHSTYLES[[Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the style of a fraction numerator given the fraction in the current\r\n     * style.\r\n     */\r\n    fracNum(): Mathstyle {\r\n        return MATHSTYLES[[T, Tc, S, Sc, SS, SSc, SS, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the style of a fraction denominator given the fraction in the current\r\n     * style.\r\n     */\r\n    fracDen(): Mathstyle {\r\n        return MATHSTYLES[[Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the cramped version of a style (in particular, cramping a cramped style\r\n     * doesn't change the style).\r\n     */\r\n    cramp(): Mathstyle {\r\n        return MATHSTYLES[[Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc][this.id]];\r\n    }\r\n    /**\r\n     * CSS class name, for example `displaystyle cramped`\r\n     */\r\n    cls(): string {\r\n        return [\r\n            'displaystyle textstyle', // @revisit. Should just be 'displaystyle'\r\n            'textstyle',\r\n            'scriptstyle',\r\n            'scriptscriptstyle',\r\n        ][this.size]; // @revisit: use this.id to include 'cramped' variants\r\n    }\r\n    /**\r\n     * CSS class name to adjust from one style to another, like 'reset-textstyle'\r\n     */\r\n    adjustTo(newStyle: Mathstyle): string {\r\n        // @revisit the values used here\r\n        let result = [\r\n            [\r\n                '', // 'reset-textstyle displaystyle textstyle',\r\n                '', // 'reset-textstyle textstyle',\r\n                'reset-textstyle scriptstyle',\r\n                'reset-textstyle scriptscriptstyle',\r\n            ],\r\n\r\n            [\r\n                'reset-textstyle displaystyle textstyle',\r\n                '', // 'reset-textstyle textstyle',\r\n                'reset-textstyle scriptstyle',\r\n                'reset-textstyle scriptscriptstyle',\r\n            ],\r\n\r\n            [\r\n                'reset-scriptstyle textstyle displaystyle',\r\n                'reset-scriptstyle textstyle',\r\n                '', // 'reset-scriptstyle scriptstyle',\r\n                'reset-scriptstyle scriptscriptstyle',\r\n            ],\r\n\r\n            [\r\n                'reset-scriptscriptstyle textstyle displaystyle', // @revisit. Should not have 'textstyle'\r\n                'reset-scriptscriptstyle textstyle',\r\n                'reset-scriptscriptstyle scriptstyle',\r\n                '', // 'reset-scriptscriptstyle scriptscriptstyle'\r\n            ],\r\n        ][this.size][newStyle.size];\r\n        if (result.length > 0) result = ' ' + result;\r\n        return result;\r\n    }\r\n    /**\r\n     * Return if this style is tightly spaced (scriptstyle/scriptscriptstyle)\r\n     */\r\n    isTight(): boolean {\r\n        return this.size >= 2;\r\n    }\r\n}\r\n\r\nexport const MATHSTYLES: {\r\n    [key: number]: Mathstyle;\r\n    displaystyle?: Mathstyle;\r\n    textstyle?: Mathstyle;\r\n    scriptstyle?: Mathstyle;\r\n    scriptscriptstyle?: Mathstyle;\r\n} = {\r\n    0: new Mathstyle(D, 0, 1.0, false),\r\n    1: new Mathstyle(Dc, 0, 1.0, true),\r\n    2: new Mathstyle(T, 1, 1.0, false),\r\n    3: new Mathstyle(Tc, 1, 1.0, true),\r\n    4: new Mathstyle(S, 2, 0.7, false),\r\n    5: new Mathstyle(Sc, 2, 0.7, true),\r\n    6: new Mathstyle(SS, 3, 0.5, false),\r\n    7: new Mathstyle(SSc, 3, 0.5, true),\r\n};\r\n\r\n// Aliases\r\nMATHSTYLES.displaystyle = MATHSTYLES[0];\r\nMATHSTYLES.textstyle = MATHSTYLES[2];\r\nMATHSTYLES.scriptstyle = MATHSTYLES[4];\r\nMATHSTYLES.scriptscriptstyle = MATHSTYLES[6];\r\n","import { MacroDictionary, ParseMode } from '../public/core';\r\nimport { Mathstyle, MATHSTYLES } from './mathstyle';\r\n\r\nexport type ParseModePrivate =\r\n    | ParseMode\r\n    | (\r\n          | ''\r\n          | 'auto'\r\n          | 'bbox'\r\n          | 'color'\r\n          | 'colspec'\r\n          | 'delim'\r\n          | 'dimen'\r\n          | 'number'\r\n          | 'skip'\r\n          | 'string'\r\n      );\r\n\r\nexport interface ContextInterface {\r\n    macros?: MacroDictionary;\r\n    atomIdsSettings?: {\r\n        overrideID?: string;\r\n        groupNumbers: boolean;\r\n        seed: string | number;\r\n    };\r\n    mathstyle?: Mathstyle;\r\n    parentMathstyle?: Mathstyle;\r\n    size?: string; // @revisit: set explicit possible values, e.g. 'size5', etc...\r\n    parentSize?: string;\r\n    letterShapeStyle?: 'tex' | 'french' | 'iso' | 'upright' | 'auto';\r\n    opacity?: number;\r\n    color?: string;\r\n    smartFence?: boolean;\r\n}\r\n\r\n/**\r\n * This structure contains the rendering context of the current parse level.\r\n *\r\n * It also holds information about the parent context to handle scaling\r\n * adjustments.\r\n *\r\n * When a new scope is entered, a clone of the context is created with `.clone()`\r\n * so that any further changes remain local to the scope.\r\n *\r\n * A scope is defined for example by:\r\n * - an explicit group enclosed in braces `{...}`\r\n * - a semi-simple group enclosed in `\\bgroup...\\endgroup`\r\n * - an environment delimited by `\\begin{<envname>}...\\end{<envname>}`\r\n *\r\n * @property {Mathstyle} mathstyle\r\n * @property {number} opacity\r\n * @property {number} size\r\n * @property {object} atomIdsSettings - If not undefined, unique IDs should be\r\n * generated for each span so they can be mapped back to an atom.\r\n * The `seed` field should be a number to generate a specific range of\r\n * IDs or the string \"random\" to generate a random number.\r\n * Optionally, if a `groupNumbers` property is set to true, an additional\r\n * span will enclose strings of digits. This is used by read aloud to properly\r\n * pronounce (and highlight) numbers in expressions.\r\n * @property {Mathstyle} parentMathstyle\r\n * @property {number} parentSize\r\n * @property {object} macros A macros dictionary\r\n * @property {string} color\r\n */\r\nexport class Context implements ContextInterface {\r\n    macros: MacroDictionary;\r\n    atomIdsSettings?: {\r\n        overrideID?: string;\r\n        groupNumbers: boolean;\r\n        seed: string | number;\r\n    };\r\n    mathstyle: Mathstyle;\r\n    parentMathstyle?: Mathstyle;\r\n    size?: string; // @revisit: set explicit possible values, e.g. 'size5', etc...\r\n    parentSize?: string;\r\n    letterShapeStyle: 'tex' | 'french' | 'iso' | 'upright' | 'auto';\r\n    opacity?: number;\r\n    color?: string;\r\n    smartFence?: boolean;\r\n\r\n    constructor(from: ContextInterface) {\r\n        this.macros = from.macros || {};\r\n        this.atomIdsSettings = from.atomIdsSettings;\r\n\r\n        this.mathstyle = from.mathstyle || MATHSTYLES.displaystyle;\r\n\r\n        this.letterShapeStyle = from.letterShapeStyle || 'tex';\r\n\r\n        this.size = from.size || 'size5'; // medium size\r\n\r\n        this.parentMathstyle = from.parentMathstyle || this.mathstyle;\r\n        this.parentSize = from.parentSize || this.size;\r\n\r\n        this.opacity = from.opacity;\r\n        this.smartFence = from.smartFence;\r\n    }\r\n\r\n    /**\r\n     * Returns a new context with the same properties as 'this',\r\n     * except for the ones provided in `override`\r\n     */\r\n    clone(override: ContextInterface = {}): Context {\r\n        const result = new Context(this);\r\n        if (override) {\r\n            // `'auto'` (or undefined) to indicate that the mathstyle should in\r\n            // fact not be changed. This is used when specifying the mathstyle\r\n            // for some environments.\r\n            Object.assign(result, override);\r\n            if (!override.mathstyle) {\r\n                result.mathstyle = this.mathstyle;\r\n            } else {\r\n                result.parentMathstyle = this.mathstyle;\r\n                result.parentSize = this.size;\r\n                if (typeof override.mathstyle === 'string') {\r\n                    result.mathstyle = MATHSTYLES[override.mathstyle];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Change the mathstyle of this context\r\n     * @param value - `'auto'` to indicate that the mathstyle should in\r\n     * fact not be changed. This is used when specifying the mathstyle for some\r\n     * environments.\r\n     */\r\n    setMathstyle(value: string): void {\r\n        if (value && value !== 'auto') {\r\n            this.mathstyle = MATHSTYLES[value];\r\n        }\r\n    }\r\n    cramp(): Context {\r\n        return this.clone({ mathstyle: this.mathstyle.cramp() });\r\n    }\r\n    sup(): Context {\r\n        return this.clone({ mathstyle: this.mathstyle.sup() });\r\n    }\r\n    sub(): Context {\r\n        return this.clone({ mathstyle: this.mathstyle.sub() });\r\n    }\r\n}\r\n","const SVG_BODY = {\r\n    // Adapted from https://github.com/KaTeX/KaTeX/blob/master/src/stretchy.js\r\n\r\n    overrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],\r\n    overleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],\r\n    underrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],\r\n    underleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],\r\n    xrightarrow: [['rightarrow'], 1.469, 522, 'xMaxYMin'],\r\n    xleftarrow: [['leftarrow'], 1.469, 522, 'xMinYMin'],\r\n    Overrightarrow: [['doublerightarrow'], 0.888, 560, 'xMaxYMin'],\r\n    xRightarrow: [['doublerightarrow'], 1.526, 560, 'xMaxYMin'],\r\n    xLeftarrow: [['doubleleftarrow'], 1.526, 560, 'xMinYMin'],\r\n    overleftharpoon: [['leftharpoon'], 0.888, 522, 'xMinYMin'],\r\n    xleftharpoonup: [['leftharpoon'], 0.888, 522, 'xMinYMin'],\r\n    xleftharpoondown: [['leftharpoondown'], 0.888, 522, 'xMinYMin'],\r\n    overrightharpoon: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],\r\n    xrightharpoonup: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],\r\n    xrightharpoondown: [['rightharpoondown'], 0.888, 522, 'xMaxYMin'],\r\n    xlongequal: [['longequal'], 0.888, 334, 'xMinYMin'],\r\n    xtwoheadleftarrow: [['twoheadleftarrow'], 0.888, 334, 'xMinYMin'],\r\n    xtwoheadrightarrow: [['twoheadrightarrow'], 0.888, 334, 'xMaxYMin'],\r\n\r\n    overleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],\r\n    overbrace: [['leftbrace', 'midbrace', 'rightbrace'], 1.6, 548],\r\n    underbrace: [\r\n        ['leftbraceunder', 'midbraceunder', 'rightbraceunder'],\r\n        1.6,\r\n        548,\r\n    ],\r\n    underleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],\r\n    xleftrightarrow: [['leftarrow', 'rightarrow'], 1.75, 522],\r\n    xLeftrightarrow: [['doubleleftarrow', 'doublerightarrow'], 1.75, 560],\r\n    xrightleftharpoons: [\r\n        ['leftharpoondownplus', 'rightharpoonplus'],\r\n        1.75,\r\n        716,\r\n    ],\r\n    xleftrightharpoons: [\r\n        ['leftharpoonplus', 'rightharpoondownplus'],\r\n        1.75,\r\n        716,\r\n    ],\r\n    xhookleftarrow: [['leftarrow', 'righthook'], 1.08, 522],\r\n    xhookrightarrow: [['lefthook', 'rightarrow'], 1.08, 522],\r\n    overlinesegment: [['leftlinesegment', 'rightlinesegment'], 0.888, 522],\r\n    underlinesegment: [['leftlinesegment', 'rightlinesegment'], 0.888, 522],\r\n    overgroup: [['leftgroup', 'rightgroup'], 0.888, 342],\r\n    undergroup: [['leftgroupunder', 'rightgroupunder'], 0.888, 342],\r\n    xmapsto: [['leftmapsto', 'rightarrow'], 1.5, 522],\r\n    xtofrom: [['leftToFrom', 'rightToFrom'], 1.75, 528],\r\n\r\n    // The next three arrows are from the mhchem package.\r\n    // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\r\n    // document as \\xrightarrow or \\xrightleftharpoons. Those have\r\n    // min-length = 1.75em, so we set min-length on these next three to match.\r\n    xrightleftarrows: [['baraboveleftarrow', 'rightarrowabovebar'], 1.75, 901],\r\n    xrightequilibrium: [\r\n        ['baraboveshortleftharpoon', 'rightharpoonaboveshortbar'],\r\n        1.75,\r\n        716,\r\n    ],\r\n    xleftequilibrium: [\r\n        ['shortbaraboveleftharpoon', 'shortrightharpoonabovebar'],\r\n        1.75,\r\n        716,\r\n    ],\r\n};\r\n\r\n// While the images above are sliced, \"accents\" are stretched\r\n// The variants (xxx1, xxx2, etc...) are used depending on the length\r\n// (in number of characters) of the base.\r\nconst SVG_ACCENTS = {\r\n    // viewBoxWidth, viewBoxHeight, height\r\n    widehat1: [1062, 239, 0.24],\r\n    widehat2: [2364, 300, 0.3],\r\n    widehat3: [2364, 360, 0.36],\r\n    widehat4: [2364, 420, 0.42],\r\n    widecheck1: [1062, 239, 0.24],\r\n    widecheck2: [2364, 300, 0.3],\r\n    widecheck3: [2364, 360, 0.36],\r\n    widecheck4: [2364, 420, 0.42],\r\n    widetilde1: [600, 260, 0.26],\r\n    widetilde2: [1033, 286, 0.286],\r\n    widetilde3: [2339, 306, 0.306],\r\n    widetilde4: [2340, 312, 0.34],\r\n};\r\n\r\n// From https://github.com/KaTeX/KaTeX/blob/master/src/svgGeometry.js\r\n\r\nconst PATHS = {\r\n    // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\r\n    doubleleftarrow: `M262 157\r\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\r\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\r\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\r\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\r\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\r\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\r\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\r\nm8 0v40h399730v-40zm0 194v40h399730v-40z`,\r\n\r\n    // doublerightarrow is from glyph U+21D2 in font KaTeX Main\r\n    doublerightarrow: `M399738 392l\r\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\r\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\r\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\r\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\r\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\r\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\r\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,\r\n\r\n    // leftarrow is from glyph U+2190 in font KaTeX Main\r\n    leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120\r\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\r\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\r\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\r\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\r\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\r\n l-3-3h399890zM100 241v40h399900v-40z`,\r\n\r\n    // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\r\n    leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\r\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\r\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,\r\n\r\n    leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\r\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\r\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\r\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,\r\n\r\n    // overgroup is from the MnSymbol package (public domain)\r\n    leftgroup: `M400000 80\r\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\r\n 435 0h399565z`,\r\n\r\n    leftgroupunder: `M400000 262\r\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\r\n 435 219h399565z`,\r\n\r\n    // Harpoons are from glyph U+21BD in font KaTeX Main\r\n    leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\r\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\r\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\r\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,\r\n\r\n    leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\r\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\r\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\r\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\r\nm0 0v40h400000v-40z`,\r\n\r\n    leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\r\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\r\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\r\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,\r\n\r\n    leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\r\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\r\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\r\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,\r\n\r\n    // hook is from glyph U+21A9 in font KaTeX Main\r\n    lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\r\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\r\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\r\n 71.5 23h399859zM103 281v-40h399897v40z`,\r\n\r\n    leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z\r\nM40 281 V428 H0 V94 H40 V241 H400000 v40z`,\r\n\r\n    leftmapsto: `M40 281 V448H0V74H40V241H400000v40z\r\nM40 281 V448H0V74H40V241H400000v40z`,\r\n\r\n    // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\r\n    leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\r\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\r\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\r\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,\r\n\r\n    longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z\r\nM0 50 h400000 v40H0z m0 194h40000v40H0z`,\r\n\r\n    midbrace: `M200428 334\r\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\r\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\r\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\r\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,\r\n\r\n    midbraceunder: `M199572 214\r\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\r\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\r\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\r\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,\r\n\r\n    oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\r\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\r\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\r\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,\r\n\r\n    oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\r\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\r\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\r\nc0 110 84 276 504 276s502.4-166 502.4-276z`,\r\n\r\n    oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\r\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\r\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\r\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,\r\n\r\n    oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\r\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\r\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\r\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,\r\n\r\n    rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128\r\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\r\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\r\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\r\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\r\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\r\n 151.7 139 205zm0 0v40h399900v-40z`,\r\n\r\n    rightbrace: `M400000 542l\r\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\r\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\r\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,\r\n\r\n    rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\r\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\r\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,\r\n\r\n    rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\r\n 3-1 3-3v-38c-76-158-257-219-435-219H0z`,\r\n\r\n    rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\r\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,\r\n\r\n    rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\r\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\r\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\r\n 69.2 92 94.5zm0 0v40h399900v-40z`,\r\n\r\n    rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\r\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\r\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\r\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,\r\n\r\n    rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\r\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\r\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\r\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,\r\n\r\n    rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\r\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\r\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\r\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\r\nm0-194v40h400000v-40zm0 0v40h400000v-40z`,\r\n\r\n    righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\r\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\r\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\r\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,\r\n\r\n    rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\r\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,\r\n\r\n    rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\r\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\r\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\r\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,\r\n\r\n    // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\r\n    twoheadleftarrow: `M0 167c68 40\r\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\r\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\r\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\r\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\r\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,\r\n\r\n    twoheadrightarrow: `M400000 167\r\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\r\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\r\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\r\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\r\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,\r\n\r\n    // tilde1 is a modified version of a glyph from the MnSymbol package\r\n    widetilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\r\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\r\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\r\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\r\n-68.267.847-113-73.952-191-73.952z`,\r\n\r\n    // ditto tilde2, tilde3, & tilde4\r\n    widetilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418\r\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\r\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\r\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\r\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,\r\n\r\n    widetilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\r\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\r\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\r\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\r\n -338 0-409-156.573-744-156.573z`,\r\n\r\n    widetilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\r\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\r\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\r\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\r\n -175.236-744-175.236z`,\r\n\r\n    // vec is from glyph U+20D7 in font KaTeX Main\r\n    vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\r\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\r\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\r\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\r\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\r\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\r\nc-16-25.333-24-45-24-59z`,\r\n\r\n    // widehat1 is a modified version of a glyph from the MnSymbol package\r\n    widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\r\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,\r\n\r\n    // ditto widehat2, widehat3, & widehat4\r\n    widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\r\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\r\n\r\n    widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\r\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\r\n\r\n    widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\r\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\r\n\r\n    // widecheck paths are all inverted versions of widehat\r\n    widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\r\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,\r\n\r\n    widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\r\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\r\n\r\n    widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\r\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\r\n\r\n    widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\r\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\r\n\r\n    // The next ten paths support reaction arrows from the mhchem package.\r\n\r\n    // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\r\n    // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\r\n    baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\r\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\r\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\r\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\r\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\r\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\r\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\r\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,\r\n\r\n    // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\r\n    rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\r\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\r\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\r\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\r\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\r\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\r\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,\r\n\r\n    // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\r\n    // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\r\n    baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\r\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\r\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\r\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\r\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\r\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,\r\n\r\n    rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0\r\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\r\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\r\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\r\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,\r\n\r\n    shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\r\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\r\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\r\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\r\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,\r\n\r\n    shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0\r\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\r\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\r\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\r\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`,\r\n};\r\n\r\n/**\r\n * Generate the HTML markup to represent a SVG span.\r\n *\r\n */\r\nexport function svgBodyToMarkup(svgBodyName: string): string {\r\n    if (SVG_ACCENTS[svgBodyName]) {\r\n        const height = SVG_ACCENTS[svgBodyName][2];\r\n        const result =\r\n            `<span class=\"stretchy\" style=\"height:${height}em\">` +\r\n            `<svg width=\"100%\" height=\"${height}em\"` +\r\n            `viewBox=\"0 0 ${SVG_ACCENTS[svgBodyName][0]} ${SVG_ACCENTS[svgBodyName][1]}\"` +\r\n            `preserveAspectRatio=\"none\">` +\r\n            `<path d=\"${PATHS[svgBodyName]}\"></path>` +\r\n            `</svg></span>`;\r\n        return `<span style=\"height:${height}em;min-width:0\">${result}</span>`;\r\n    }\r\n\r\n    const [paths, minWidth, viewBoxHeight, align] = SVG_BODY[svgBodyName];\r\n    let widthClasses: string[];\r\n    let aligns: string[];\r\n    const height = viewBoxHeight / 1000;\r\n    if (paths.length === 3) {\r\n        widthClasses = ['slice-1-of-3', 'slice-2-of-3', 'slice-3-of-3'];\r\n        aligns = ['xMinYMin', 'xMidYMin', 'xMaxYMin'];\r\n    } else if (paths.length === 2) {\r\n        widthClasses = ['slice-1-of-2', 'slice-2-of-2'];\r\n        aligns = ['xMinYMin', 'xMaxYMin'];\r\n    } else {\r\n        widthClasses = ['slice-1-of-1'];\r\n        aligns = [align];\r\n    }\r\n    const body = paths\r\n        .map(\r\n            (path: string | number, i: string | number) =>\r\n                `<span class=\"${widthClasses[i]}\" style=\"height:${height}em\">` +\r\n                `<svg width=\"400em\" height=\"${height}em\"` +\r\n                `viewBox=\"0 0 400000 ${viewBoxHeight}\"` +\r\n                `preserveAspectRatio=\"${aligns[i]} slice\">` +\r\n                `<path d=\"${PATHS[path]}\"></path>` +\r\n                `</svg></span>`\r\n        )\r\n        .join('');\r\n    return `<span style=\"height:${height}em;min-width:${minWidth}em\">${body}</span>`;\r\n}\r\n\r\nexport function svgBodyHeight(svgBodyName: string): number {\r\n    if (SVG_BODY[svgBodyName]) {\r\n        return SVG_BODY[svgBodyName][2] / 1000;\r\n    }\r\n    return SVG_ACCENTS[svgBodyName][2];\r\n}\r\n","import { ParserErrorListener, Style, MacroDictionary } from '../public/core';\r\n\r\nimport { Span } from './span';\r\nimport { Token } from './lexer';\r\nimport { Atom } from './atom';\r\nimport { ParseModePrivate } from './context';\r\n\r\nexport interface ParseTokensOptions {\r\n    args: (string | Atom[])[];\r\n    macros: MacroDictionary;\r\n    smartFence: boolean;\r\n    style: Style;\r\n    parse: (\r\n        mode: ParseModePrivate,\r\n        tokens: Token[],\r\n        options: ParseTokensOptions\r\n    ) => [Atom[], Token[]];\r\n}\r\n\r\n/*\r\n * Return an array of runs (array of atoms with the same value\r\n *   for the specified property)\r\n */\r\nexport function getPropertyRuns(atoms: Atom[], property: string): Atom[][] {\r\n    const result = [];\r\n    let run = [];\r\n    let currentValue: string;\r\n    atoms.forEach((atom: Atom) => {\r\n        if (atom.type !== 'first') {\r\n            let value: string;\r\n            if (property === 'variant') {\r\n                value = atom.variant;\r\n                if (atom.variantStyle && atom.variantStyle !== 'up') {\r\n                    value += '-' + atom.variantStyle;\r\n                }\r\n            } else {\r\n                value = atom[property];\r\n            }\r\n            // If the value of this atom is different from the\r\n            // current value, start a new run\r\n            if (value !== currentValue) {\r\n                if (run.length > 0) result.push(run);\r\n                run = [atom];\r\n                currentValue = value;\r\n            } else {\r\n                // Same value, add it to the current run\r\n                run.push(atom);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Push whatever is left\r\n    if (run.length > 0) result.push(run);\r\n    return result;\r\n}\r\n\r\nexport const MODES_REGISTRY = {};\r\n\r\nexport function register(\r\n    name: string,\r\n    definition: {\r\n        emitLatexRun: (\r\n            context: Atom,\r\n            run: Atom[],\r\n            expandMacro: boolean\r\n        ) => string;\r\n        applyStyle: (span: Span, style: Style) => string;\r\n        parse?: (\r\n            tokens: Token[],\r\n            error: ParserErrorListener,\r\n            options: ParseTokensOptions\r\n        ) => Atom[];\r\n    }\r\n): void {\r\n    MODES_REGISTRY[name] = { ...definition };\r\n}\r\n\r\nexport function emitLatexRun(\r\n    parent: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    if (\r\n        MODES_REGISTRY[run[0].mode] &&\r\n        MODES_REGISTRY[run[0].mode].emitLatexRun\r\n    ) {\r\n        return MODES_REGISTRY[run[0].mode].emitLatexRun(\r\n            parent,\r\n            run,\r\n            expandMacro\r\n        );\r\n    }\r\n    return '';\r\n}\r\n\r\nexport function parseTokens(\r\n    mode: ParseModePrivate,\r\n    tokens: Token[],\r\n    error: ParserErrorListener,\r\n    options: ParseTokensOptions\r\n) {\r\n    if (MODES_REGISTRY[mode] && MODES_REGISTRY[mode].parse) {\r\n        return MODES_REGISTRY[mode].parse(tokens, error, options);\r\n    }\r\n    return null;\r\n}\r\n\r\n/*\r\n * Apply the styling (bold, italic, etc..) as classes to the atom, and return\r\n * the effective font name to be used for metrics\r\n * ('Main-Regular', 'Caligraphic-Regualr' etc...)\r\n */\r\nexport function applyStyle(span: Span, style: Style): string {\r\n    if (MODES_REGISTRY[style.mode] && MODES_REGISTRY[style.mode].applyStyle) {\r\n        return MODES_REGISTRY[style.mode].applyStyle(span, style);\r\n    }\r\n    return '';\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { Style, ParseMode } from '../public/core';\r\nimport { getCharacterMetrics } from './font-metrics';\r\nimport { svgBodyToMarkup, svgBodyHeight } from './svg-span';\r\nimport { applyStyle as applyStyleForMode } from './modes-utils';\r\nimport { Context } from './context';\r\nimport { Mathstyle } from './mathstyle';\r\n\r\n/*\r\n * See https://tex.stackexchange.com/questions/81752/\r\n * for a thorough description of the TeXt atom type and their relevance to\r\n * proper kerning.\r\n */\r\n\r\nconst SPAN_TYPE = [\r\n    '',\r\n    'mord',\r\n    'mbin',\r\n    'mop',\r\n    'mrel',\r\n    'mopen',\r\n    'mclose',\r\n    'mpunct',\r\n    'minner',\r\n    'spacing',\r\n    // 'mtable',\r\n    'first',\r\n    'command',\r\n    'error',\r\n    'placeholder',\r\n    'textord', // @revisit\r\n    'none', // @revisit. Use ''?\r\n] as const; // The const assertion prevents widening to string[]\r\nexport type SpanType = typeof SPAN_TYPE[number];\r\n\r\nexport function isSpanType(type: string): type is SpanType {\r\n    return ((SPAN_TYPE as unknown) as string[]).includes(type);\r\n}\r\n\r\n/*\r\n * See http://www.tug.org/TUGboat/tb30-3/tb96vieth.pdf for\r\n * typesetting conventions for mathematical physics (units, etc...)\r\n */\r\n\r\nconst INTER_ATOM_SPACING = {\r\n    'mord+mop': 3,\r\n    'mord+mbin': 4,\r\n    'mord+mrel': 5,\r\n    'mord+minner': 3,\r\n\r\n    'mop+mord': 3,\r\n    'mop+mop': 3,\r\n    'mop+mbin': 5,\r\n    'mop+minner': 3,\r\n\r\n    'mbin+mord': 4,\r\n    'mbin+mop': 4,\r\n    'mbin+mopen': 4,\r\n    'mbin+minner': 4,\r\n\r\n    'mrel+mord': 5,\r\n    'mrel+mop': 5,\r\n    'mrel+mopen': 5,\r\n    'mrel+minner': 5,\r\n\r\n    'mclose+mop': 3,\r\n    'mclose+mbin': 4,\r\n    'mclose+mrel': 5,\r\n    'mclose+minner': 3,\r\n\r\n    'mpunct+mord': 3,\r\n    'mpunct+mop': 3,\r\n    'mpunct+mbin': 4,\r\n    'mpunct+mrel': 5,\r\n    'mpunct+mopen': 3,\r\n    'mpunct+mpunct': 3,\r\n    'mpunct+minner': 3,\r\n};\r\n\r\n// See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\r\n// 6.1.4 Non-Marking Characters\r\nconst SPACING_CHARACTER = [\r\n    '\\u200b', // 0/18 ZERO-WIDTH SPACE\r\n    '\\u200a', // 1/18 HAIR SPACE\r\n    '\\u200a\\u200a', // 2/18\r\n    '\\u2009', // 3/18 THIN SPACE\r\n    '\\u205f', // 4/18 MEDIUM MATHEMATICAL SPACE\r\n    '\\u205f\\u200a', // 5/18 MEDIUM MATHEMATICAL SPACE + HAIR SPACE\r\n    '\\u2004', // 6/18 THREE-PER-EM SPACE   1/3em\r\n    '',\r\n    '',\r\n    '\\u2002', // 9/18 EN SPACE 1/2em = 9/18\r\n];\r\nconst NEGATIVE_SPACING_CHARACTER = [\r\n    '',\r\n    '\\u200a\\u2063', // -1/18\r\n    '',\r\n    '\\u2009\\u2063', // -3/18\r\n    '\\u205f\\u2063', // -4/18\r\n    '\\u2005\\u2063', // -5/18\r\n];\r\n\r\nconst INTER_ATOM_TIGHT_SPACING = {\r\n    'mord+mop': 3,\r\n    'mop+mord': 3,\r\n    'mop+mop': 3,\r\n    'mclose+mop': 3,\r\n    'minner+mop': 3,\r\n};\r\n\r\n/**\r\n * Return a string made up of the concatenated arguments.\r\n * Each arguments can be either a string, which is unchanged,\r\n * or a number, which is converted to a string with at most 2 fractional digits.\r\n *\r\n */\r\nfunction toString(arg: (string | number)[] | string | number): string {\r\n    if (typeof arg === 'string') {\r\n        return arg;\r\n    }\r\n    if (typeof arg === 'number') {\r\n        return Number(Math.ceil(1e2 * arg) / 1e2).toString();\r\n    }\r\n    if (typeof arg === 'undefined') {\r\n        return '';\r\n    }\r\n    if (isArray(arg)) {\r\n        let result = '';\r\n        for (const elem of arg) {\r\n            result += toString(elem);\r\n        }\r\n        return result;\r\n        // } else if (arg) {\r\n        //     result += (arg as number).toString();\r\n    }\r\n    console.error('Span.toStringUnexpected argument type');\r\n    return '';\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// SPAN\r\n//----------------------------------------------------------------------------\r\n/**\r\n * A span is the most elementary element that can be rendered.\r\n * It is composed of an optional body of text and an optional list\r\n * of children (other spans). Each span can be decorated with\r\n * CSS classes and style attributes.\r\n *\r\n * @param content the items 'contained' by this node\r\n * @param classes list of classes attributes associated with this node\r\n\r\n\r\n * @property  type - For example, `'command'`, `'mrel'`, etc...\r\n * @property classes - A string of space separated CSS classes\r\n * associated with this element\r\n * @property cssId - A CSS ID assigned to this span (optional)\r\n * @property children - An array, potentially empty, of spans which\r\n * this span encloses\r\n * @property body - Content of this span. Can be empty.\r\n * @property style - A set of key/value pairs specifying CSS properties\r\n * associated with this element.\r\n * @property height - The measurement from baseline to top, in em.\r\n * @property depth - The measurement from baseline to bottom, in em.\r\n * @property width\r\n */\r\nexport class Span {\r\n    children?: Span[];\r\n    classes: string;\r\n    type: SpanType;\r\n\r\n    body: string;\r\n    delim?: string; // @revisit\r\n    caret: ParseMode;\r\n\r\n    height?: number;\r\n    depth?: number;\r\n    width?: number;\r\n    skew?: number;\r\n    italic?: number;\r\n    maxFontSize?: number;\r\n\r\n    isTight?: boolean;\r\n\r\n    cssId?: string;\r\n\r\n    svgBody?: string;\r\n    svgOverlay?: string;\r\n    svgStyle?: string;\r\n\r\n    style: { [key: string]: string };\r\n    attributes?: { [key: string]: string }; // HTML attributes, for example 'data-atom-id'\r\n\r\n    constructor(\r\n        content: string | Span | Span[],\r\n        classes = '',\r\n        type: SpanType = ''\r\n    ) {\r\n        // CLASSES\r\n        this.classes = classes;\r\n        // CONTENT\r\n        if (isArray(content)) {\r\n            // Check if isArray first, since an array is also an object\r\n            // Flatten it (i.e. [[a1, a2], b1, b2] -> [a1, a2, b1, b2]\r\n            this.children = [].concat(...content);\r\n        } else if (typeof content === 'string') {\r\n            this.body = content;\r\n        } else if (content && typeof content === 'object') {\r\n            this.children = [content];\r\n        }\r\n        this.type = type;\r\n\r\n        // STYLE\r\n        // CSS style, as an array of key value pairs.\r\n        // Use this.setStyle() to modify it.\r\n        this.style = null;\r\n\r\n        // Calculate the dimensions of this span based on its children\r\n        this.updateDimensions();\r\n    }\r\n    /**\r\n     * Update the dimensions of this node based on its children:\r\n     * - height: distance from bottom to top\r\n     * - depth: distance from bottom to baseline\r\n     * - maxFontSize: a size multiplier (typically set with commands such as \\huge)\r\n     */\r\n    updateDimensions(): void {\r\n        let height = 0.0;\r\n        let depth = 0.0;\r\n        let maxFontSize = 1.0;\r\n        if (this.children) {\r\n            this.children.forEach((x) => {\r\n                if (x.height > height) height = x.height;\r\n                if (x.depth > depth) depth = x.depth;\r\n                if (x.maxFontSize > maxFontSize) maxFontSize = x.maxFontSize;\r\n            });\r\n        }\r\n        this.height = height;\r\n        this.depth = depth;\r\n        this.maxFontSize = maxFontSize;\r\n    }\r\n\r\n    selected(isSelected: boolean): void {\r\n        if (isSelected && !/ML__selected/.test(this.classes)) {\r\n            if (this.classes.length > 0) this.classes += ' ';\r\n            this.classes += 'ML__selected';\r\n        }\r\n        if (!isSelected && /ML__selected/.test(this.classes)) {\r\n            this.classes = this.classes.replace('ML__selected', '');\r\n        }\r\n        if (this.children) {\r\n            this.children.forEach((x) => x.selected(isSelected));\r\n        }\r\n    }\r\n\r\n    applyStyle(style: Style): void {\r\n        if (!style) return;\r\n\r\n        //\r\n        // 1. Apply color\r\n        //\r\n        if (style.color) {\r\n            if (style.color !== 'none') {\r\n                this.setStyle('color', style.color);\r\n            } else {\r\n                this.setStyle('color', '');\r\n            }\r\n        }\r\n        if (style.backgroundColor) {\r\n            if (style.backgroundColor !== 'none') {\r\n                this.setStyle('background-color', style.backgroundColor);\r\n            } else {\r\n                this.setStyle('background-color', '');\r\n            }\r\n        }\r\n\r\n        //\r\n        // 2. Add any custom style classes\r\n        //\r\n\r\n        if (style.cssClass) {\r\n            this.classes += ' ' + style.cssClass;\r\n        }\r\n\r\n        // If the body is null (for example for a line), we're done.\r\n        if (!this.body) return;\r\n\r\n        //\r\n        // 3. Determine the font family (i.e. 'ams', 'mathcal', etc...)\r\n        // and apply styling by adding appropriate classes to the atom\r\n        //\r\n\r\n        console.assert(typeof this.body === 'string');\r\n\r\n        const fontName = applyStyleForMode(this, style);\r\n\r\n        //\r\n        // 5. Get the metrics information\r\n        //\r\n        if (this.body && fontName) {\r\n            this.maxFontSize =\r\n                {\r\n                    size1: 0.5,\r\n                    size2: 0.7,\r\n                    size3: 0.8,\r\n                    size4: 0.9,\r\n                    size5: 1.0,\r\n                    size6: 1.2,\r\n                    size7: 1.44,\r\n                    size8: 1.73,\r\n                    size9: 2.07,\r\n                    size10: 2.49,\r\n                }[style.fontSize] || 1.0;\r\n            this.height = 0.0;\r\n            this.depth = 0.0;\r\n            this.skew = 0.0;\r\n            this.italic = 0.0;\r\n            for (let i = 0; i < this.body.length; i++) {\r\n                const metrics = getCharacterMetrics(\r\n                    this.body.charAt(i),\r\n                    fontName\r\n                );\r\n                // If we were able to get metrics info for this character, store it.\r\n                if (metrics) {\r\n                    this.height = Math.max(this.height, metrics.height);\r\n                    this.depth = Math.max(this.depth, metrics.depth);\r\n                    this.skew = metrics.skew;\r\n                    this.italic = metrics.italic;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the value of a CSS property associated with this span.\r\n     * For example, setStyle('border-right', 5.6, 'em');\r\n     *\r\n     * @param prop the CSS property to set\r\n     * @param value a series of strings and numbers that will be concatenated.\r\n     */\r\n    setStyle(prop: string, ...value: (string | number)[]): void {\r\n        const v = toString(value);\r\n        if (v.length > 0) {\r\n            if (!this.style) this.style = {};\r\n            this.style[prop] = v;\r\n        }\r\n    }\r\n\r\n    setTop(top: number): void {\r\n        if (top && top !== 0) {\r\n            if (!this.style) this.style = {};\r\n            this.style['top'] = toString(top) + 'em';\r\n            this.height -= top;\r\n            this.depth += top;\r\n        }\r\n    }\r\n\r\n    setLeft(left: number): void {\r\n        if (left && left !== 0) {\r\n            if (!this.style) this.style = {};\r\n            this.style['margin-left'] = toString(left) + 'em';\r\n        }\r\n    }\r\n    setRight(right: number): void {\r\n        if (right && right !== 0) {\r\n            if (!this.style) this.style = {};\r\n            this.style['margin-right'] = toString(right) + 'em';\r\n        }\r\n    }\r\n    setWidth(width: number): void {\r\n        if (width && width !== 0) {\r\n            if (!this.style) this.style = {};\r\n            this.style['width'] = toString(width) + 'em';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate the HTML markup to represent this span.\r\n     *\r\n     * @param hskip - Space (in mu, 1/18em) to leave on the left side\r\n     * of the span. Implemented as a Unicode character if possible, a margin-left otherwise.\r\n     * This is used to adjust the inter-spacing between spans of different types,\r\n     * e.g. 'bin' and 'rel', according to the TeX rules (TexBook p.170)\r\n     * @param hscale - If a value is provided, the margins are scaled by\r\n     * this factor.\r\n     * @return HTML markup\r\n     */\r\n\r\n    toMarkup(hskip = 1.0, hscale = 1.0): string {\r\n        let result = '';\r\n        let body = this.body || '';\r\n        if (this.children) {\r\n            let previousType = 'none';\r\n            for (const child of this.children) {\r\n                let spacing = 0;\r\n                if (previousType) {\r\n                    let type = child.type;\r\n                    if (type) {\r\n                        if (type === 'textord') type = 'mord';\r\n                        if (type === 'first') type = 'none';\r\n                        if (child.isTight) {\r\n                            spacing =\r\n                                INTER_ATOM_TIGHT_SPACING[\r\n                                    previousType + '+' + type\r\n                                ] || 0;\r\n                        } else {\r\n                            spacing =\r\n                                INTER_ATOM_SPACING[previousType + '+' + type] ||\r\n                                0;\r\n                        }\r\n                        spacing = Math.floor(hscale * spacing);\r\n                    }\r\n                }\r\n                body += child.toMarkup(spacing, hscale);\r\n                previousType = lastSpanType(child);\r\n            }\r\n        }\r\n        // Collapse 'empty' spans\r\n        if (\r\n            (body === '\\u200b' || (!body && !this.svgBody)) &&\r\n            (!this.classes || this.classes === 'ML__selected') &&\r\n            !this.cssId &&\r\n            !this.style &&\r\n            !this.svgOverlay\r\n        ) {\r\n            result = '';\r\n        } else {\r\n            // Note: We can't omit the tag, even if it has no class and no style,\r\n            // as some layouts (vlist) depends on the presence of the tag to function\r\n            result = '<span';\r\n\r\n            if (this.cssId) {\r\n                result += ' id=\"' + this.cssId + '\" ';\r\n            }\r\n\r\n            if (this.attributes) {\r\n                result +=\r\n                    ' ' +\r\n                    Object.keys(this.attributes)\r\n                        .map(\r\n                            (attribute) =>\r\n                                `${attribute}=\"${this.attributes[attribute]}\"`\r\n                        )\r\n                        .join(' ');\r\n            }\r\n\r\n            const classes = this.classes.split(' ');\r\n\r\n            // Add the type (mbin, mrel, etc...) if specified\r\n            classes.push(\r\n                {\r\n                    command: 'ML__command',\r\n                    placeholder: 'ML__placeholder',\r\n                    error: 'ML__error',\r\n                }[this.type] ?? ''\r\n            );\r\n            if (this.caret && this.type === 'command') {\r\n                classes.push('ML__command-caret');\r\n            }\r\n\r\n            // Remove duplicate and empty classes\r\n            let classList = '';\r\n            if (classes.length > 1) {\r\n                classList = classes\r\n                    .filter((x, e, a) => {\r\n                        return x.length > 0 && a.indexOf(x) === e;\r\n                    })\r\n                    .join(' ');\r\n            } else {\r\n                classList = classes[0];\r\n            }\r\n\r\n            if (classList.length > 0) {\r\n                result += ` class=\"${classList}\"`;\r\n            }\r\n\r\n            // If a `hskip` value was provided, add it to the margin-left\r\n            if (hskip) {\r\n                if (this.style && this.style['margin-left']) {\r\n                    // There was already a margin, add to it\r\n                    this.style['margin-left'] =\r\n                        toString(\r\n                            parseFloat(this.style['margin-left']) + hskip / 18\r\n                        ) + 'em';\r\n                } else {\r\n                    // No margin yet. Can we encode it as a Unicode space?\r\n                    if (hskip < 0 && NEGATIVE_SPACING_CHARACTER[-hskip]) {\r\n                        body = NEGATIVE_SPACING_CHARACTER[-hskip] + body;\r\n                    } else if (SPACING_CHARACTER[hskip]) {\r\n                        body = SPACING_CHARACTER[hskip] + body;\r\n                    } else {\r\n                        if (!this.style) this.style = {};\r\n                        this.style['margin-left'] = toString(hskip / 18) + 'em';\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.style) {\r\n                let styleString = '';\r\n                const isSelected = /ML__selected/.test(this.classes);\r\n                for (const style in this.style) {\r\n                    if (\r\n                        Object.prototype.hasOwnProperty.call(this.style, style)\r\n                    ) {\r\n                        // Render the style property, except the background\r\n                        // of selected spans\r\n                        if (style !== 'background-color' || !isSelected) {\r\n                            styleString +=\r\n                                style + ':' + this.style[style] + ';';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (styleString.length > 0) {\r\n                    result += ' style=\"' + styleString + '\"';\r\n                }\r\n            }\r\n            result += '>';\r\n\r\n            // If there is some SVG markup associated with this span,\r\n            // include it now\r\n            if (this.svgBody) {\r\n                result += svgBodyToMarkup(this.svgBody);\r\n            } else if (this.svgOverlay) {\r\n                result += '<span style=\"';\r\n                result += 'display: inline-block;';\r\n                result += 'height:' + (this.height + this.depth) + 'em;';\r\n                result += 'vertical-align:' + this.depth + 'em;';\r\n                result += '\">';\r\n                result += body;\r\n                result += '</span>';\r\n                result += '<svg ';\r\n                result += 'style=\"position:absolute;';\r\n                result += 'overflow:overlay;';\r\n                result += 'height:' + (this.height + this.depth) + 'em;';\r\n                if (this.style && this.style.padding) {\r\n                    result += 'top:' + this.style.padding + ';';\r\n                    result += 'left:' + this.style.padding + ';';\r\n                    result +=\r\n                        'width:calc(100% - 2 * ' + this.style.padding + ' );';\r\n                } else {\r\n                    result += 'top:0;';\r\n                    result += 'left:0;';\r\n                    result += 'width:100%;';\r\n                }\r\n                result += 'z-index:2;';\r\n                result += '\"';\r\n                if (this.svgStyle) {\r\n                    result += ' style=\"' + this.svgStyle + '\"';\r\n                }\r\n                result += '>';\r\n                result += this.svgOverlay;\r\n                result += '</svg>';\r\n            } else {\r\n                result += body;\r\n            }\r\n\r\n            result = result + '</span>';\r\n        }\r\n\r\n        if (this.caret && this.type !== 'command') {\r\n            if (this.caret === 'text') {\r\n                result = result + '<span class=\"ML__text-caret\"></span>';\r\n            } else {\r\n                result = result + '<span class=\"ML__caret\"></span>';\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Can this span be coalesced with 'span'?\r\n     * This is used to 'coalesce' (i.e. group together) a series of spans that are\r\n     * identical except for their value, and to avoid generating redundant spans.\r\n     * That is: '12' ->\r\n     *      \"<span class='mord mathrm'>12</span>\"\r\n     * rather than:\r\n     *      \"<span class='mord mathrm'>1</span><span class='mord mathrm'>2</span>\"\r\n     */\r\n    tryCoalesceWith(span: Span): boolean {\r\n        // Don't coalesce if the tag or type are different\r\n        if (this.type !== span.type) return false;\r\n\r\n        // Don't coalesce consecutive errors, placeholders or commands\r\n        if (\r\n            this.type === 'error' ||\r\n            this.type === 'placeholder' ||\r\n            this.type === 'command'\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        // Don't coalesce if some of the content is SVG\r\n        if (this.svgBody || !this.body) return false;\r\n        if (span.svgBody || !span.body) return false;\r\n\r\n        // If this span or the candidate span have children, we can't\r\n        // coalesce them, but we'll try to coalesce their children\r\n        const hasChildren = this.children && this.children.length > 0;\r\n        const spanHasChildren = span.children && span.children.length > 0;\r\n        if (hasChildren || spanHasChildren) return false;\r\n\r\n        // If they have a different number of styles, can't coalesce\r\n        const thisStyleCount = this.style ? this.style.length : 0;\r\n        const spanStyleCount = span.style ? span.style.length : 0;\r\n        if (thisStyleCount !== spanStyleCount) return false;\r\n\r\n        // For the purpose of our comparison,\r\n        // any 'empty' classes (whitespace)\r\n        const classes = this.classes.trim().replace(/\\s+/g, ' ').split(' ');\r\n        const spanClasses = span.classes.trim().replace(/\\s+/g, ' ').split(' ');\r\n\r\n        // If they have a different number of classes, can't coalesce\r\n        if (classes.length !== spanClasses.length) return false;\r\n\r\n        // OK, let's do the more expensive comparison now.\r\n        // If they have different classes, can't coalesce\r\n        classes.sort();\r\n        spanClasses.sort();\r\n        for (let i = 0; i < classes.length; i++) {\r\n            // Don't coalesce vertical separators\r\n            // (used in column formating with {l||r} for example\r\n            if (classes[i] === 'vertical-separator') return false;\r\n            if (classes[i] !== spanClasses[i]) return false;\r\n        }\r\n\r\n        // If the styles are different, can't coalesce\r\n        if (this.style && span.style) {\r\n            for (const style in this.style) {\r\n                if (\r\n                    Object.prototype.hasOwnProperty.call(this.style, style) &&\r\n                    Object.prototype.hasOwnProperty.call(span.style, style)\r\n                ) {\r\n                    if (this.style[style] !== span.style[style]) return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // OK, the attributes of those spans are compatible.\r\n        // Merge span into this\r\n        this.body += span.body;\r\n        this.height = Math.max(this.height, span.height);\r\n        this.depth = Math.max(this.depth, span.depth);\r\n        this.maxFontSize = Math.max(this.maxFontSize, span.maxFontSize);\r\n        // The italic correction for the coalesced spans is the\r\n        // italic correction of the last span.\r\n        this.italic = span.italic;\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction lastSpanType(span: Span): string {\r\n    const result = span.type;\r\n    if (result === 'first') return 'none';\r\n    if (result === 'textord') return 'mord';\r\n    return result;\r\n}\r\n\r\n/**\r\n * Attempts to coalesce (merge) spans, for example consecutive text spans.\r\n * Return a new tree with coalesced spans.\r\n *\r\n */\r\nexport function coalesce(spans: Span[]): Span[] {\r\n    if (!spans || spans.length === 0) return [];\r\n\r\n    spans[0].children = coalesce(spans[0].children);\r\n    const result = [spans[0]];\r\n\r\n    for (let i = 1; i < spans.length; i++) {\r\n        if (!result[result.length - 1].tryCoalesceWith(spans[i])) {\r\n            spans[i].children = coalesce(spans[i].children);\r\n            result.push(spans[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// UTILITY FUNCTIONS\r\n//----------------------------------------------------------------------------\r\n\r\nexport function height(spans: Span | Span[]): number {\r\n    if (!spans) return 0;\r\n    if (isArray(spans)) {\r\n        return spans.reduce((acc, x) => Math.max(acc, x.height), 0);\r\n    }\r\n    return spans.height;\r\n}\r\n\r\nexport function depth(spans: Span | Span[]): number {\r\n    if (!spans) return 0;\r\n    if (isArray(spans)) {\r\n        return spans.reduce((acc, x) => Math.max(acc, x.depth), 0);\r\n    }\r\n    return spans.depth;\r\n}\r\n\r\nexport function skew(spans: Span | Span[]): number {\r\n    if (!spans) return 0;\r\n    if (isArray(spans)) {\r\n        let result = 0;\r\n        for (const span of spans) {\r\n            result += span.skew || 0;\r\n        }\r\n        return result;\r\n    }\r\n    return spans.skew;\r\n}\r\n\r\nexport function italic(spans: Span | Span[]): number {\r\n    if (!spans) return 0;\r\n    if (isArray(spans)) {\r\n        return spans[spans.length - 1].italic;\r\n    }\r\n    return spans.italic;\r\n}\r\n\r\n/**\r\n * Make an element made of a sequence of children with classes\r\n * @param content the items 'contained' by this node\r\n * @param classes list of classes attributes associated with this node\r\n */\r\nexport function makeSpan(\r\n    content: string | Span | Span[],\r\n    classes = '',\r\n    type: SpanType = ''\r\n): Span {\r\n    if (isArray(content)) {\r\n        const c = content.filter((x) => !!x);\r\n        if (c.length === 1) {\r\n            return new Span(c[0], classes, type);\r\n        }\r\n        return new Span(c, classes, type);\r\n    }\r\n    return new Span(content, classes, type);\r\n}\r\n\r\nexport function makeSymbol(\r\n    fontFamily: string,\r\n    symbol: string,\r\n    classes = '',\r\n    type: SpanType = ''\r\n): Span {\r\n    const result = new Span(symbol, classes, type);\r\n\r\n    const metrics = getCharacterMetrics(symbol, fontFamily);\r\n    result.height = metrics.height;\r\n    result.depth = metrics.depth;\r\n    result.skew = metrics.skew;\r\n    result.italic = metrics.italic;\r\n\r\n    result.setRight(result.italic);\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Makes an element placed in each of the vlist elements to ensure that each\r\n * element has the same max font size. To do this, we create a zero-width space\r\n * with the correct font size.\r\n//  * Note: without this, even when fontSize = 0, the fraction bar is no\r\n//  * longer positioned correctly\r\n */\r\nfunction makeFontSizer(context: Context, fontSize: number): Span {\r\n    const fontSizeAdjustment = fontSize\r\n        ? fontSize / context.mathstyle.sizeMultiplier\r\n        : 0;\r\n    const fontSizeInner = new Span('\\u200b'); // ZERO WIDTH SPACE\r\n\r\n    if (fontSizeAdjustment !== 1) {\r\n        fontSizeInner.setStyle(\r\n            'font-size',\r\n            fontSizeAdjustment,\r\n            fontSizeAdjustment > 0 ? 'em' : ''\r\n        );\r\n        fontSizeInner.attributes = {\r\n            'aria-hidden': 'true',\r\n        };\r\n    }\r\n\r\n    if (context.size !== 'size5') {\r\n        return new Span(\r\n            fontSizeInner,\r\n            'fontsize-ensurer reset-' + context.size + ' size5'\r\n        );\r\n    }\r\n    return fontSizeAdjustment !== 0 ? fontSizeInner : null;\r\n}\r\n\r\nexport function makeStruts(\r\n    content: Span | Span[],\r\n    classes = '',\r\n    type: SpanType = ''\r\n): Span {\r\n    const topStrut = makeSpan('', 'ML__strut');\r\n    topStrut.setStyle('height', height(content), 'em');\r\n    let bottomStrut: Span;\r\n    if (depth(content) !== 0) {\r\n        bottomStrut = makeSpan('', 'ML__strut--bottom');\r\n        bottomStrut.setStyle('height', height(content) + depth(content), 'em');\r\n        bottomStrut.setStyle('vertical-align', -depth(content), 'em');\r\n    }\r\n    let struts: Span[];\r\n    if (isArray(content)) {\r\n        struts = [topStrut, bottomStrut, ...content];\r\n    } else {\r\n        struts = [topStrut, bottomStrut, content];\r\n    }\r\n    const result = makeSpan(struts, classes, type);\r\n    // result.setStyle('display', 'inline-block');\r\n    return result;\r\n}\r\n\r\nexport function makeStyleWrap(\r\n    type: SpanType,\r\n    children: Span | Span[],\r\n    fromStyle: Mathstyle,\r\n    toStyle: Mathstyle,\r\n    classes: string\r\n): Span {\r\n    classes = classes || '';\r\n    classes += ' style-wrap ';\r\n\r\n    const result = makeHlist(children, classes + fromStyle.adjustTo(toStyle));\r\n    result.type = type;\r\n\r\n    const multiplier = toStyle.sizeMultiplier / fromStyle.sizeMultiplier;\r\n    result.height *= multiplier; // @revisit. Use spanHeight()? is height set at this point?\r\n    result.depth *= multiplier;\r\n    result.maxFontSize = toStyle.sizeMultiplier;\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Add some SVG markup to be overlaid on top of the span\r\n */\r\nexport function addSVGOverlay(\r\n    body: Span,\r\n    svgMarkup: string,\r\n    svgStyle: string\r\n): Span {\r\n    body.svgOverlay = svgMarkup;\r\n    body.svgStyle = svgStyle;\r\n    return body;\r\n}\r\n\r\nexport function makeHlist(\r\n    spans: Span | Span[],\r\n    classes = '',\r\n    type: SpanType = ''\r\n): Span {\r\n    if (!classes) {\r\n        // No decorations...\r\n        if (spans instanceof Span) {\r\n            // A single span, use it as the output\r\n            return spans;\r\n        } else if (isArray(spans) && spans.length === 1) {\r\n            // An array, with a single span, use the single span as the output\r\n            return spans[0];\r\n        }\r\n    }\r\n    const result = new Span(spans, classes, type);\r\n\r\n    let multiplier = 1.0;\r\n    if (spans instanceof Span) {\r\n        multiplier = spans.maxFontSize;\r\n    } else {\r\n        multiplier = spans.reduce((acc, x) => Math.max(acc, x.maxFontSize), 0);\r\n    }\r\n    result.height *= multiplier;\r\n    result.depth *= multiplier;\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Create a new span of type `vlist`, a set of vertically stacked items\r\n * @param elements  An array of Span and integer. The integer can be either some kerning information\r\n * or the value of an individual shift of the preceding child if in 'individualShift' mode\r\n * @param pos The method that will be used to position the elements in the vlist.\r\n *\r\n * One of:\r\n * - `\"individualShift\"`: each child must be followed by a number indicating how much to shift it (i.e. moved downwards)\r\n * - `\"top\"`: posData specifies the topmost point of the vlist (>0 move up)\r\n * - `\"bottom\"`: posData specifies the bottommost point of the vlist (>0 move down)\r\n * - `\"shift\"`: the baseline of the vlist will be positioned posData away from the baseline\r\n * of the first child. (>0 moves down)\r\n */\r\nexport function makeVlist(\r\n    context: Context,\r\n    elements: (number | Span[] | Span)[],\r\n    pos: 'shift' | 'top' | 'bottom' | 'individualShift' = 'shift',\r\n    posData = 0\r\n): Span {\r\n    let listDepth = 0;\r\n    let currPos = 0;\r\n    pos = pos || 'shift';\r\n\r\n    // Normalize the elements so that they're all either a number or\r\n    // a single span. If a child is an array of spans,\r\n    // wrap it in a span\r\n    for (let i = 0; i < elements.length; i++) {\r\n        if (isArray(elements[i])) {\r\n            if ((elements[i] as Span[]).length === 1) {\r\n                // If that's an array made up of a single span, use that span\r\n                elements[i] = elements[i][0];\r\n            } else {\r\n                // Otherwise, wrap it in a span\r\n                elements[i] = makeSpan(elements[i] as Span[]);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (pos === 'shift') {\r\n        console.assert(elements[0] instanceof Span);\r\n        listDepth = -(elements[0] as Span).depth - posData;\r\n    } else if (pos === 'bottom') {\r\n        listDepth = -posData;\r\n    } else if (pos === 'top') {\r\n        let bottom = posData;\r\n        for (const element of elements) {\r\n            if (element instanceof Span) {\r\n                // It's a Span, use the dimension data\r\n                bottom -= element.height + element.depth;\r\n            } else if (typeof element === 'number') {\r\n                // It's a kern adjustment\r\n                bottom -= element;\r\n            }\r\n        }\r\n        listDepth = bottom;\r\n    } else if (pos === 'individualShift') {\r\n        // Individual adjustment to each elements.\r\n        // The elements list is made up of a Span followed\r\n        // by a shift adjustment as an integer\r\n        const originalElements: (number | Span)[] = elements as (\r\n            | number\r\n            | Span\r\n        )[];\r\n        elements = [originalElements[0]];\r\n\r\n        // Add in kerns to the list of elements to get each element to be\r\n        // shifted to the correct specified shift\r\n        console.assert(originalElements[0] instanceof Span);\r\n        listDepth = -originalElements[1] - (originalElements[0] as Span).depth;\r\n        currPos = listDepth;\r\n        for (let i = 2; i < originalElements.length; i += 2) {\r\n            console.assert(originalElements[i] instanceof Span);\r\n            const diff =\r\n                -originalElements[i + 1] -\r\n                currPos -\r\n                (originalElements[i] as Span).depth;\r\n            currPos = currPos + diff;\r\n\r\n            console.assert(originalElements[i - 2] instanceof Span);\r\n            const kern =\r\n                diff -\r\n                ((originalElements[i - 2] as Span).height +\r\n                    (originalElements[i - 2] as Span).depth);\r\n\r\n            elements.push(kern);\r\n            elements.push(originalElements[i]);\r\n        }\r\n    } else {\r\n        console.assert(false, 'makeVList with unknown method: \"' + pos + '\"');\r\n    }\r\n\r\n    // Make the fontSizer\r\n    let maxFontSize = 1.0;\r\n    for (const element of elements) {\r\n        if (element instanceof Span) {\r\n            maxFontSize = Math.max(maxFontSize, element.maxFontSize);\r\n        }\r\n    }\r\n    const fontSizer = makeFontSizer(context, maxFontSize);\r\n\r\n    const newElements = [];\r\n    currPos = listDepth;\r\n    for (const element of elements) {\r\n        if (typeof element === 'number') {\r\n            // It's a kern adjustment\r\n            currPos += element;\r\n        } else if (element instanceof Span) {\r\n            const wrap = makeSpan([fontSizer, element]);\r\n            wrap.setTop(-element.depth - currPos);\r\n            newElements.push(wrap);\r\n            currPos += element.height + element.depth;\r\n        }\r\n    }\r\n\r\n    const result = makeSpan(newElements, 'vlist');\r\n\r\n    // Fix the final height and depth, in case there were kerns at the ends\r\n    // since makeSpan won't take that into account.\r\n    result.depth = Math.max(listDepth, depth(result) || 0);\r\n    result.height = Math.max(-currPos, height(result) || 0);\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Create a span that consist of a (stretchy) SVG element\r\n *\r\n * @param classes list of classes attributes associated with this node\r\n */\r\nexport function makeSVGSpan(svgBodyName: string): Span {\r\n    const span = new Span(null);\r\n    span.svgBody = svgBodyName;\r\n    span.height = svgBodyHeight(svgBodyName) / 2;\r\n    span.depth = span.height;\r\n    return span;\r\n}\r\n","import { ParseModePrivate } from './context';\r\nimport { Atom, AtomType, Notations, Colspec } from './atom-utils';\r\nimport {\r\n    Variant,\r\n    VariantStyle,\r\n    FontSeries,\r\n    FontShape,\r\n    MacroDictionary,\r\n} from '../public/core';\r\n\r\nexport type FunctionArgumentDefiniton = {\r\n    isOptional: boolean;\r\n    type: ParseModePrivate;\r\n};\r\n\r\nexport type FunctionDefinition = {\r\n    params: FunctionArgumentDefiniton[];\r\n    mode: ParseModePrivate;\r\n    infix: boolean;\r\n    parse: Function;\r\n    emit: Function;\r\n    isFunction: boolean;\r\n};\r\n\r\ntype EnvironmentDefinition = {\r\n    params: FunctionArgumentDefiniton[];\r\n    parser: Function;\r\n    mathstyle: string; //@revisit MathStle\r\n    tabular: boolean;\r\n    colFormat: Colspec[];\r\n    lFence: string;\r\n    rFence: string;\r\n};\r\n\r\ntype SymbolDefinition = {\r\n    type: AtomType;\r\n    value: string;\r\n    variant: Variant;\r\n    variantStyle: VariantStyle;\r\n};\r\n\r\nexport const MATH_SYMBOLS = {};\r\n// Map a character to some corresponding Latex\r\n// This is used for some characters such as ² SUPERSCRIPT TWO.\r\n// This is also an opportunity to specify the prefered form when\r\n// a unicode character is encountered that maps to multiple commands,\r\n// for example ≠ could map either to \\ne or \\neq\r\n// The table will also be populated by any registered symbol\r\n// from MATH_SYMBOLS\r\n// prettier-ignore\r\nexport const REVERSE_MATH_SYMBOLS = {\r\n    '<': '<',   // Also \\lt\r\n    '>': '>',   // Also \\gt\r\n    'o': 'o',    // Also \\omicron\r\n    '&': '\\\\&',  // Also \\And\r\n    '{': '\\\\{',  // Also \\lbrace\r\n    '}': '\\\\}',  // Also \\rbrace\r\n    '[': '\\\\lbrack',\r\n    ']': '\\\\rbrack',\r\n    ':': '\\\\colon', // Also :\r\n    \r\n    '\\u00a0': '~', // Also \\space\r\n    '\\u00ac': '\\\\neg',  // Also \\lnot\r\n\r\n    '\\u00b7': '\\\\cdot',\r\n    '\\u00bc': '\\\\frac{1}{4}',\r\n    '\\u00bd': '\\\\frac{1}{2}',\r\n    '\\u00be': '\\\\frac{3}{4}',\r\n    '\\u2070': '^{0}',\r\n    '\\u2071': '^{i}', // eslint-disable-line\r\n    '\\u00b9': '^{1}',\r\n    '\\u00b2': '^{2}',\r\n    '\\u00b3': '^{3}',\r\n\r\n    '\\u2020': '\\\\dagger', // Also \\dag\r\n    '\\u2021': '\\\\ddagger', // Also \\ddag\r\n    '\\u2026': '\\\\ldots',    // Also \\mathellipsis\r\n\r\n    '\\u2074': '^{4}',\r\n    '\\u2075': '^{5}',\r\n    '\\u2076': '^{6}',\r\n    '\\u2077': '^{7}',\r\n    '\\u2078': '^{8}',\r\n    '\\u2079': '^{9}',\r\n    '\\u207a': '^{+}',\r\n    '\\u207b': '^{-}',\r\n    '\\u207c': '^{=}',\r\n    '\\u207f': '^{n}', // eslint-disable-line\r\n    '\\u2080': '_{0}',\r\n    '\\u2081': '_{1}',\r\n    '\\u2082': '_{2}',\r\n    '\\u2083': '_{3}',\r\n    '\\u2084': '_{4}',\r\n    '\\u2085': '_{5}',\r\n    '\\u2086': '_{6}',\r\n    '\\u2087': '_{7}',\r\n    '\\u2088': '_{8}',\r\n    '\\u2089': '_{9}',\r\n    '\\u208a': '_{+}',\r\n    '\\u208b': '_{-}',\r\n    '\\u208c': '_{=}',\r\n    '\\u2090': '_{a}',// eslint-disable-line\r\n    '\\u2091': '_{e}',// eslint-disable-line\r\n    '\\u2092': '_{o}',// eslint-disable-line\r\n    '\\u2093': '_{x}',// eslint-disable-line\r\n\r\n    '\\u2032': '\\\\prime',\r\n    '\\'': '\\\\prime',\r\n\r\n    '\\u2190': '\\\\gets', // Also \\leftarrow\r\n    '\\u2192': '\\\\to',   // Also \\rightarrow\r\n\r\n    '\\u25b3': '\\\\triangle', // Also \\bigtriangleup, \\vartriangle\r\n    '\\u25bd': '\\\\triangledown',\r\n\r\n    '\\u220b': '\\\\owns', // Also \\ni\r\n    '\\u2217': '\\\\ast',  // Also *\r\n    '\\u2223': '\\\\vert',  // Also |, \\mvert, \\lvert, \\rvert\r\n    '\\u2225': '\\\\Vert',  // Also \\parallel \\shortparallel\r\n\r\n    '\\u2227': '\\\\land', // Also \\wedge\r\n    '\\u2228': '\\\\lor', // Also \\vee\r\n\r\n    '\\u22c5': '\\\\cdot', // Also \\centerdot, \\cdotp\r\n    '\\u22c8': '\\\\bowtie', // Also \\Joint\r\n\r\n    '\\u2260': '\\\\ne',   // Also \\neq\r\n    '\\u2264': '\\\\le',   // Also \\leq\r\n    '\\u2265': '\\\\ge',   // Also \\geq\r\n    '\\u22a5': '\\\\bot', // Also \\perp\r\n\r\n    '\\u27f7': '\\\\biconditional',    // Also longleftrightarrow\r\n    '\\u27f8': '\\\\impliedby', // Also \\Longleftarrow\r\n    '\\u27f9': '\\\\implies', // Also \\Longrightarrow\r\n\r\n    '\\u2102': '\\\\C',    // Also \\doubleStruckCapitalC\r\n    '\\u2115': '\\\\N',    // Also \\doubleStruckCapitalN\r\n    '\\u2119': '\\\\P',    // Also \\doubleStruckCapitalP\r\n    '\\u211a': '\\\\Q',    // Also \\doubleStruckCapitalQ\r\n    '\\u211d': '\\\\R',    // Also \\doubleStruckCapitalR\r\n    '\\u2124': '\\\\Z',    // Also \\doubleStruckCapitalZ\r\n};\r\nexport const FUNCTIONS = {};\r\n\r\nexport const ENVIRONMENTS = {};\r\n\r\ntype EmitFunction = (\r\n    name: string,\r\n    parent: Atom,\r\n    atom: Atom,\r\n    emit: (parent: Atom, atoms: Atom[]) => string\r\n) => string;\r\n\r\nexport type ParseFunctionResult = {\r\n    type?: string;\r\n\r\n    mode?: string;\r\n    mathstyle?: string;\r\n\r\n    skipBoundary?: boolean;\r\n    captureSelection?: boolean;\r\n\r\n    body?: string | Atom[];\r\n    svgBelow?: string; // type = 'overunder'\r\n\r\n    limits?: 'limits' | 'nolimits' | 'accent' | 'auto';\r\n    accent?: string;\r\n\r\n    latexOpen?: string; // type = 'group'\r\n    latexClose?: string; // type = 'group'\r\n    color?: string; // type = ''\r\n    verbatimBackgroundcolor?: string;\r\n    backgroundcolor?: string;\r\n    framecolor?: string;\r\n    verbatimFramecolor?: string;\r\n    fontSize?:\r\n        | 'size1'\r\n        | 'size2'\r\n        | 'size3'\r\n        | 'size4'\r\n        | 'size5'\r\n        | 'size6'\r\n        | 'size7'\r\n        | 'size8'\r\n        | 'size9'\r\n        | 'size10';\r\n    fontSeries?: FontSeries;\r\n    fontShape?: FontShape;\r\n    fontFamily?: string;\r\n    variant?: Variant;\r\n    variantStyle?: VariantStyle;\r\n\r\n    cssClass?: string;\r\n    cssId?: string;\r\n    isFunction?: boolean;\r\n    isSymbol?: boolean;\r\n\r\n    size?: string; // type = 'sizeddelim'\r\n    cls?: string; // type = 'sizeddelim'    @revisit: use cssClass?\r\n    delim?: string;\r\n\r\n    // type = 'genfrac'\r\n    hasBarLine?: boolean;\r\n    leftDelim?: string;\r\n    rightDelim?: string;\r\n    numer?: Atom[];\r\n    denom?: Atom[];\r\n    continuousFraction?: boolean;\r\n    numerPrefix?: string;\r\n    denomPrefix?: string;\r\n\r\n    // type = 'enclose'\r\n    notation?: Notations;\r\n    borderStyle?: string;\r\n    padding?: number | string;\r\n    svgStrokeStyle?: string;\r\n    strokeColor?: string;\r\n    strokeWidth?: number;\r\n    strokeStyle?: string;\r\n    shadow?: string;\r\n\r\n    // type = 'array'\r\n    arraystretch?: number;\r\n    colFormat?: Colspec[];\r\n    // arraycolsep?: number;\r\n    // jot?: number;\r\n    lFence?: string;\r\n    rFence?: string;\r\n};\r\n\r\ntype ParseFunction = (\r\n    name: string,\r\n    args: (string | Atom[])[]\r\n) => ParseFunctionResult;\r\n\r\nexport const MACROS: MacroDictionary = {\r\n    iff: '\\\\;\\u27fa\\\\;', //>2,000 Note: additional spaces around the arrows\r\n    nicefrac: '^{#1}\\\\!\\\\!/\\\\!_{#2}',\r\n\r\n    // From bracket.sty, Dirac notation\r\n    bra: '\\\\mathinner{\\\\langle{#1}|}',\r\n    ket: '\\\\mathinner{|{#1}\\\\rangle}',\r\n    braket: '\\\\mathinner{\\\\langle{#1}\\\\rangle}',\r\n    set: '\\\\mathinner{\\\\lbrace #1 \\\\rbrace}',\r\n    Bra: '\\\\left\\\\langle #1\\\\right|',\r\n    Ket: '\\\\left|#1\\\\right\\\\rangle',\r\n    Braket: '\\\\left\\\\langle{#1}\\\\right\\\\rangle',\r\n    Set: '\\\\left\\\\lbrace #1 \\\\right\\\\rbrace',\r\n};\r\n\r\nexport const RIGHT_DELIM = {\r\n    '(': ')',\r\n    '{': '}',\r\n    '[': ']',\r\n    '|': '|',\r\n    '\\\\lbrace': '\\\\rbrace',\r\n    '\\\\{': '\\\\}',\r\n    '\\\\langle': '\\\\rangle',\r\n    '\\\\lfloor': '\\\\rfloor',\r\n    '\\\\lceil': '\\\\rceil',\r\n    '\\\\vert': '\\\\vert',\r\n    '\\\\lvert': '\\\\rvert',\r\n    '\\\\Vert': '\\\\Vert',\r\n    '\\\\lVert': '\\\\rVert',\r\n    '\\\\lbrack': '\\\\rbrack',\r\n    '\\\\ulcorner': '\\\\urcorner',\r\n    '\\\\llcorner': '\\\\lrcorner',\r\n    '\\\\lgroup': '\\\\rgroup',\r\n    '\\\\lmoustache': '\\\\rmoustache',\r\n};\r\n\r\n// Body-text symbols\r\n// See http://ctan.mirrors.hoobly.com/info/symbols/comprehensive/symbols-a4.pdf, p14\r\n\r\nexport const TEXT_SYMBOLS = {\r\n    '\\\\#': '\\u0023',\r\n    '\\\\&': '\\u0026',\r\n    '\\\\$': '$',\r\n    '\\\\%': '%',\r\n    '\\\\_': '_',\r\n    '\\\\euro': '\\u20AC',\r\n    '\\\\maltese': '\\u2720',\r\n    '\\\\{': '{',\r\n    '\\\\}': '}',\r\n    '\\\\nobreakspace': '\\u00A0',\r\n    '\\\\ldots': '\\u2026',\r\n    '\\\\textellipsis': '\\u2026',\r\n    '\\\\backslash': '\\\\',\r\n    '`': '\\u2018',\r\n    \"'\": '\\u2019',\r\n    '``': '\\u201c',\r\n    \"''\": '\\u201d',\r\n    '\\\\degree': '\\u00b0',\r\n    '\\\\textasciicircum': '^',\r\n    '\\\\textasciitilde': '~',\r\n    '\\\\textasteriskcentered': '*',\r\n    '\\\\textbackslash': '\\\\',\r\n    '\\\\textbraceleft': '{',\r\n    '\\\\textbraceright': '}',\r\n    '\\\\textbullet': '•',\r\n    '\\\\textdollar': '$',\r\n    '\\\\textsterling': '£',\r\n    '\\\\textdagger': '\\u2020',\r\n    '\\\\textdaggerdbl': '\\u2021',\r\n\r\n    '–': '\\u2013', // EN DASH\r\n    '—': '\\u2014', // EM DASH\r\n    '‘': '\\u2018', // LEFT SINGLE QUOTATION MARK\r\n    '’': '\\u2019', // RIGHT SINGLE QUOTATION MARK\r\n    '“': '\\u201C', // LEFT DOUBLE QUOTATION MARK\r\n    '”': '\\u201D', // RIGHT DOUBLE QUOTATION MARK\r\n    '\"': '\\u201D', // DOUBLE PRIME\r\n    '\\\\ss': '\\u00df', // LATIN SMALL LETTER SHARP S\r\n    '\\\\ae': '\\u00E6', // LATIN SMALL LETTER AE\r\n    '\\\\oe': '\\u0153', // LATIN SMALL LIGATURE OE\r\n    '\\\\AE': '\\u00c6', // LATIN CAPITAL LETTER AE\r\n    '\\\\OE': '\\u0152', // LATIN CAPITAL LIGATURE OE\r\n    '\\\\O': '\\u00d8', // LATIN CAPITAL LETTER O WITH STROKE\r\n    '\\\\i': '\\u0131', // LATIN SMALL LETTER DOTLESS I\r\n    '\\\\j': '\\u0237', // LATIN SMALL LETTER DOTLESS J\r\n    '\\\\aa': '\\u00e5', // LATIN SMALL LETTER A WITH RING ABOVE\r\n    '\\\\AA': '\\u00c5', // LATIN CAPITAL LETTER A WITH RING ABOVE\r\n};\r\n\r\nexport const COMMAND_MODE_CHARACTERS = /[a-zA-Z0-9!@*()-=+{}[\\]\\\\';:?/.,~<>`|'$%#&^_\" ]/;\r\n\r\n// Word boundaries for Cyrillic, Polish, French, German, Italian\r\n// and Spanish. We use \\p{L} (Unicode property escapes: \"Letter\")\r\n// but Firefox doesn't support it\r\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1361876). Booo...\r\n// See also https://stackoverflow.com/questions/26133593/using-regex-to-match-international-unicode-alphanumeric-characters-in-javascript\r\nexport const LETTER =\r\n    typeof navigator !== 'undefined' &&\r\n    /firefox|edge/i.test(navigator.userAgent)\r\n        ? /[a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/\r\n        : new RegExp('\\\\p{Letter}', 'u');\r\n\r\nexport const LETTER_AND_DIGITS =\r\n    typeof navigator !== 'undefined' &&\r\n    /firefox|edge/i.test(navigator.userAgent)\r\n        ? /[0-9a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/\r\n        : new RegExp('[0-9\\\\p{Letter}]', 'u');\r\n\r\n/**\r\n * @param symbol    The LaTeX command for this symbol, for\r\n * example `\\alpha` or `+`\r\n */\r\nexport function defineSymbol(\r\n    symbol: string,\r\n    value: string,\r\n    type: AtomType = 'mord',\r\n    variant: Variant | '' = ''\r\n): void {\r\n    MATH_SYMBOLS[symbol] = {\r\n        type,\r\n        variant,\r\n        value,\r\n    };\r\n    if (!REVERSE_MATH_SYMBOLS[value] && !variant) {\r\n        REVERSE_MATH_SYMBOLS[value] = symbol;\r\n    }\r\n    // We accept all math symbols in text mode as well\r\n    // which is a bit more permissive than TeX\r\n    TEXT_SYMBOLS[symbol] = value;\r\n}\r\n\r\n/**\r\n * Define a set of single-character symbols as 'mord' symbols.\r\n * @param string a string of single character symbols\r\n */\r\nexport function defineSymbols(string: string): void {\r\n    for (let i = 0; i < string.length; i++) {\r\n        const ch = string.charAt(i);\r\n        defineSymbol(ch, ch);\r\n    }\r\n}\r\n\r\n/**\r\n * Define a set of single-character symbols as a range of Unicode codepoints\r\n * @param from First Unicode codepoint\r\n * @param to Last Unicode codepoint\r\n */\r\nexport function defineSymbolRange(from: number, to: number): void {\r\n    for (let i = from; i <= to; i++) {\r\n        const ch = String.fromCodePoint(i);\r\n        defineSymbol(ch, ch);\r\n    }\r\n}\r\n\r\n/**\r\n * Given a character, return a LaTeX expression matching its Unicode codepoint.\r\n * If there is a matching symbol (e.g. \\alpha) it is returned.\r\n */\r\nexport function charToLatex(parseMode: ParseModePrivate, s: string): string {\r\n    if (parseMode === 'math') {\r\n        return REVERSE_MATH_SYMBOLS[s] || s;\r\n    }\r\n    if (parseMode === 'text') {\r\n        return (\r\n            Object.keys(TEXT_SYMBOLS).find((x) => TEXT_SYMBOLS[x] === s) || s\r\n        );\r\n    }\r\n    return s;\r\n}\r\n\r\n/* Some symbols in the MATHEMATICAL ALPHANUMERICAL SYMBOLS block had\r\n   been previously defined in other blocks. Remap them */\r\nconst MATH_LETTER_EXCEPTIONS = {\r\n    0x1d455: 0x0210e,\r\n    0x1d49d: 0x0212c,\r\n    0x1d4a0: 0x02130,\r\n    0x1d4a1: 0x02131,\r\n    0x1d4a3: 0x0210b,\r\n    0x1d4a4: 0x02110,\r\n    0x1d4a7: 0x02112,\r\n    0x1d4a8: 0x02133,\r\n    0x1d4ad: 0x0211b,\r\n    0x1d4ba: 0x0212f,\r\n    0x1d4bc: 0x0210a,\r\n    0x1d4c4: 0x02134,\r\n    0x1d506: 0x0212d,\r\n    0x1d50b: 0x0210c,\r\n    0x1d50c: 0x02111,\r\n    0x1d515: 0x0211c,\r\n    0x1d51d: 0x02128,\r\n    0x1d53a: 0x02102,\r\n    0x1d53f: 0x0210d,\r\n    0x1d545: 0x02115,\r\n    0x1d547: 0x02119,\r\n    0x1d548: 0x0211a,\r\n    0x1d549: 0x0211d,\r\n    0x1d551: 0x02124,\r\n};\r\n\r\nconst MATH_UNICODE_BLOCKS = [\r\n    { start: 0x1d400, len: 26, offset: 65, style: 'bold' },\r\n    { start: 0x1d41a, len: 26, offset: 97, style: 'bold' },\r\n    { start: 0x1d434, len: 26, offset: 65, style: 'italic' },\r\n    { start: 0x1d44e, len: 26, offset: 97, style: 'italic' },\r\n    { start: 0x1d468, len: 26, offset: 65, style: 'bolditalic' },\r\n    { start: 0x1d482, len: 26, offset: 97, style: 'bolditalic' },\r\n\r\n    { start: 0x1d49c, len: 26, offset: 65, variant: 'script' },\r\n    { start: 0x1d4b6, len: 26, offset: 97, variant: 'script' },\r\n    { start: 0x1d4d0, len: 26, offset: 65, variant: 'script', style: 'bold' },\r\n    { start: 0x1d4ea, len: 26, offset: 97, variant: 'script', style: 'bold' },\r\n\r\n    { start: 0x1d504, len: 26, offset: 65, variant: 'fraktur' },\r\n    { start: 0x1d51e, len: 26, offset: 97, variant: 'fraktur' },\r\n    { start: 0x1d56c, len: 26, offset: 65, variant: 'fraktur', style: 'bold' },\r\n    { start: 0x1d586, len: 26, offset: 97, variant: 'fraktur', style: 'bold' },\r\n\r\n    { start: 0x1d538, len: 26, offset: 65, variant: 'double-struck' },\r\n    { start: 0x1d552, len: 26, offset: 97, variant: 'double-struck' },\r\n\r\n    { start: 0x1d5a0, len: 26, offset: 65, variant: 'sans-serif' },\r\n    { start: 0x1d5ba, len: 26, offset: 97, variant: 'sans-serif' },\r\n    {\r\n        start: 0x1d5d4,\r\n        len: 26,\r\n        offset: 65,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d5ee,\r\n        len: 26,\r\n        offset: 97,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d608,\r\n        len: 26,\r\n        offset: 65,\r\n        variant: 'sans-serif',\r\n        style: 'italic',\r\n    },\r\n    {\r\n        start: 0x1d622,\r\n        len: 26,\r\n        offset: 97,\r\n        variant: 'sans-serif',\r\n        style: 'italic',\r\n    },\r\n    {\r\n        start: 0x1d63c,\r\n        len: 26,\r\n        offset: 65,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n    {\r\n        start: 0x1d656,\r\n        len: 26,\r\n        offset: 97,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n\r\n    { start: 0x1d670, len: 26, offset: 65, variant: 'monospace' },\r\n    { start: 0x1d68a, len: 26, offset: 97, variant: 'monospace' },\r\n\r\n    { start: 0x1d6a8, len: 25, offset: 0x391, style: 'bold' },\r\n    { start: 0x1d6c2, len: 25, offset: 0x3b1, style: 'bold' },\r\n    { start: 0x1d6e2, len: 25, offset: 0x391, style: 'italic' },\r\n    { start: 0x1d6fc, len: 25, offset: 0x3b1, style: 'italic' },\r\n    { start: 0x1d71c, len: 25, offset: 0x391, style: 'bolditalic' },\r\n    { start: 0x1d736, len: 25, offset: 0x3b1, style: 'bolditalic' },\r\n    {\r\n        start: 0x1d756,\r\n        len: 25,\r\n        offset: 0x391,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d770,\r\n        len: 25,\r\n        offset: 0x3b1,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d790,\r\n        len: 25,\r\n        offset: 0x391,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n    {\r\n        start: 0x1d7aa,\r\n        len: 25,\r\n        offset: 0x3b1,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n\r\n    { start: 0x1d7ce, len: 10, offset: 48, variant: '', style: 'bold' },\r\n    { start: 0x1d7d8, len: 10, offset: 48, variant: 'double-struck' },\r\n    { start: 0x1d7e3, len: 10, offset: 48, variant: 'sans-serif' },\r\n    {\r\n        start: 0x1d7ec,\r\n        len: 10,\r\n        offset: 48,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    { start: 0x1d7f6, len: 10, offset: 48, variant: 'monospace' },\r\n];\r\n\r\nfunction unicodeToMathVariant(\r\n    codepoint: number\r\n): { char: string; variant?: string; style?: string } {\r\n    if (\r\n        (codepoint < 0x1d400 || codepoint > 0x1d7ff) &&\r\n        (codepoint < 0x2100 || codepoint > 0x214f)\r\n    ) {\r\n        return { char: String.fromCodePoint(codepoint) };\r\n    }\r\n\r\n    // Handle the 'gap' letters by converting them back into their logical range\r\n    for (const c in MATH_LETTER_EXCEPTIONS) {\r\n        if (Object.prototype.hasOwnProperty.call(MATH_LETTER_EXCEPTIONS, c)) {\r\n            if (MATH_LETTER_EXCEPTIONS[c] === codepoint) {\r\n                codepoint = c.codePointAt(0);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < MATH_UNICODE_BLOCKS.length; i++) {\r\n        if (\r\n            codepoint >= MATH_UNICODE_BLOCKS[i].start &&\r\n            codepoint <\r\n                MATH_UNICODE_BLOCKS[i].start + MATH_UNICODE_BLOCKS[i].len\r\n        ) {\r\n            return {\r\n                char: String.fromCodePoint(\r\n                    codepoint -\r\n                        MATH_UNICODE_BLOCKS[i].start +\r\n                        MATH_UNICODE_BLOCKS[i].offset\r\n                ),\r\n                variant: MATH_UNICODE_BLOCKS[i].variant,\r\n                style: MATH_UNICODE_BLOCKS[i].style,\r\n            };\r\n        }\r\n    }\r\n\r\n    return { char: String.fromCodePoint(codepoint) };\r\n}\r\n\r\n/**\r\n * Given a character and variant ('double-struck', 'fraktur', etc...)\r\n * return the corresponding unicode character (a string)\r\n */\r\nexport function mathVariantToUnicode(char: string, variant, style): string {\r\n    if (!/[A-Za-z0-9]/.test(char)) return char;\r\n    if (!variant && !style) return char;\r\n\r\n    const codepoint = char.codePointAt(0);\r\n\r\n    for (let i = 0; i < MATH_UNICODE_BLOCKS.length; i++) {\r\n        if (!variant || MATH_UNICODE_BLOCKS[i].variant === variant) {\r\n            if (!style || MATH_UNICODE_BLOCKS[i].style === style) {\r\n                if (\r\n                    codepoint >= MATH_UNICODE_BLOCKS[i].offset &&\r\n                    codepoint <\r\n                        MATH_UNICODE_BLOCKS[i].offset +\r\n                            MATH_UNICODE_BLOCKS[i].len\r\n                ) {\r\n                    const result =\r\n                        MATH_UNICODE_BLOCKS[i].start +\r\n                        codepoint -\r\n                        MATH_UNICODE_BLOCKS[i].offset;\r\n                    return String.fromCodePoint(\r\n                        MATH_LETTER_EXCEPTIONS[result] || result\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return char;\r\n}\r\n\r\nexport function unicodeCharToLatex(\r\n    parseMode: ParseModePrivate,\r\n    char: string\r\n): string {\r\n    if (parseMode === 'text') {\r\n        return charToLatex(parseMode, char) || char;\r\n    }\r\n\r\n    let result: string;\r\n    // Codepoint shortcuts have priority over variants\r\n    // That is, \"\\N\" vs \"\\mathbb{N}\"\r\n    // if (CODEPOINT_SHORTCUTS[cp]) return CODEPOINT_SHORTCUTS[cp];\r\n    result = charToLatex(parseMode, char);\r\n    if (result) return result;\r\n\r\n    const cp = char.codePointAt(0);\r\n    const v = unicodeToMathVariant(cp);\r\n    if (!v.style && !v.variant) return '';\r\n\r\n    result = v.char;\r\n    if (v.variant) {\r\n        result = '\\\\' + v.variant + '{' + result + '}';\r\n    }\r\n    if (v.style === 'bold') {\r\n        result = '\\\\mathbf{' + result + '}';\r\n    } else if (v.style === 'italic') {\r\n        result = '\\\\mathit{' + result + '}';\r\n    } else if (v.style === 'bolditalic') {\r\n        result = '\\\\mathbfit{' + result + '}';\r\n    }\r\n    return '\\\\mathord{' + result + '}';\r\n}\r\n\r\nexport function unicodeStringToLatex(\r\n    parseMode: ParseModePrivate,\r\n    s: string\r\n): string {\r\n    let result = '';\r\n    let needSpace = false;\r\n    for (const c of s) {\r\n        if (needSpace) {\r\n            if (parseMode === 'text') {\r\n                result += '{}';\r\n            } else {\r\n                result += ' ';\r\n            }\r\n        }\r\n        needSpace = false;\r\n        const latex = unicodeCharToLatex(parseMode, c);\r\n        if (latex) {\r\n            result += latex;\r\n            needSpace = /\\\\[a-zA-Z0-9]+\\*?$/.test(latex);\r\n        } else {\r\n            result += c;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @return True if command is allowed in the mode\r\n * (note that command can also be a single character, e.g. \"a\")\r\n */\r\nexport function commandAllowed(\r\n    mode: ParseModePrivate,\r\n    command: string\r\n): boolean {\r\n    if (\r\n        FUNCTIONS[command] &&\r\n        (!FUNCTIONS[command].mode || FUNCTIONS[command].mode.includes(mode))\r\n    ) {\r\n        return true;\r\n    }\r\n    if ({ text: TEXT_SYMBOLS, math: MATH_SYMBOLS }[mode][command]) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function getValue(mode: ParseModePrivate, symbol: string): string {\r\n    if (mode === 'math') {\r\n        return MATH_SYMBOLS[symbol] && MATH_SYMBOLS[symbol].value\r\n            ? MATH_SYMBOLS[symbol].value\r\n            : symbol;\r\n    }\r\n    return TEXT_SYMBOLS[symbol] ? TEXT_SYMBOLS[symbol] : symbol;\r\n}\r\n\r\nexport function emit(symbol, parent, atom, emitFn): string {\r\n    console.assert(atom);\r\n    console.assert(symbol, 'Missing command for ', atom.body);\r\n\r\n    if (FUNCTIONS[symbol] && FUNCTIONS[symbol].emit) {\r\n        return FUNCTIONS[symbol].emit(symbol, parent, atom, emitFn);\r\n    }\r\n\r\n    if (MATH_SYMBOLS[symbol] || TEXT_SYMBOLS[symbol]) {\r\n        // Add a space after commands, to avoid, e.g.\r\n        // '\\sin' + 'x' -> '\\sinx' instead of '\\sin x'\r\n        return symbol + (/^\\\\.*[a-zA-Z0-9]$/.test(symbol) ? ' ' : '');\r\n    }\r\n\r\n    if (\r\n        FUNCTIONS[symbol] &&\r\n        FUNCTIONS[symbol].params &&\r\n        FUNCTIONS[symbol].params.length === 1 &&\r\n        atom.body\r\n    ) {\r\n        return symbol + '{' + emitFn(atom, atom.body) + '}';\r\n    }\r\n    // No custom emit function provided, return the symbol (could be a character)\r\n    return symbol;\r\n}\r\n\r\nexport function getEnvironmentInfo(name: string) {\r\n    let result = ENVIRONMENTS[name];\r\n    if (!result) {\r\n        result = {\r\n            params: '',\r\n            parser: null,\r\n            mathstyle: 'displaystyle',\r\n            tabular: true,\r\n            colFormat: [],\r\n            lFence: '.',\r\n            rFence: '.',\r\n            // arrayStretch: 1,\r\n        };\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param symbol    A command (e.g. '\\alpha') or a character (e.g. 'a')\r\n * @param parseMode One of 'math' or 'text'\r\n * @param macros A macros dictionary\r\n * @return {object} An info structure about the symbol, or null\r\n */\r\nexport function getInfo(\r\n    symbol: string,\r\n    parseMode: ParseModePrivate,\r\n    macros?: MacroDictionary\r\n): FunctionDefinition & EnvironmentDefinition & SymbolDefinition {\r\n    if (!symbol || symbol.length === 0) return null;\r\n\r\n    let info = null;\r\n\r\n    if (symbol.charAt(0) === '\\\\') {\r\n        // This could be a function or a symbol\r\n        info = FUNCTIONS[symbol];\r\n        if (info) {\r\n            // We've got a match\r\n            return info;\r\n        }\r\n\r\n        // It wasn't a function, maybe it's a symbol?\r\n        if (parseMode === 'math') {\r\n            info = MATH_SYMBOLS[symbol];\r\n        } else if (TEXT_SYMBOLS[symbol]) {\r\n            info = { value: TEXT_SYMBOLS[symbol] };\r\n        }\r\n\r\n        if (!info) {\r\n            // Maybe it's a macro\r\n            const command = symbol.slice(1);\r\n            if (macros?.[command]) {\r\n                let def = macros[command];\r\n                if (typeof def === 'object') {\r\n                    def = def.def;\r\n                }\r\n                let argCount = 0;\r\n                // Let's see if there are arguments in the definition.\r\n                if (/(^|[^\\\\])#1/.test(def)) argCount = 1;\r\n                if (/(^|[^\\\\])#2/.test(def)) argCount = 2;\r\n                if (/(^|[^\\\\])#3/.test(def)) argCount = 3;\r\n                if (/(^|[^\\\\])#4/.test(def)) argCount = 4;\r\n                if (/(^|[^\\\\])#5/.test(def)) argCount = 5;\r\n                if (/(^|[^\\\\])#6/.test(def)) argCount = 6;\r\n                if (/(^|[^\\\\])#7/.test(def)) argCount = 7;\r\n                if (/(^|[^\\\\])#8/.test(def)) argCount = 8;\r\n                if (/(^|[^\\\\])#9/.test(def)) argCount = 9;\r\n                info = {\r\n                    type: 'group',\r\n                    mode: 'math',\r\n                    params: [],\r\n                    infix: false,\r\n                };\r\n                while (argCount >= 1) {\r\n                    info.params.push({\r\n                        isOptional: false,\r\n                        type: 'math',\r\n                    });\r\n                    argCount -= 1;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (parseMode === 'math') {\r\n            info = MATH_SYMBOLS[symbol];\r\n        } else if (TEXT_SYMBOLS[symbol]) {\r\n            info = { value: TEXT_SYMBOLS[symbol] };\r\n        }\r\n    }\r\n\r\n    // Special case `f`, `g` and `h` are recognized as functions.\r\n    if (\r\n        info &&\r\n        info.type === 'mord' &&\r\n        (info.value === 'f' || info.value === 'g' || info.value === 'h')\r\n    ) {\r\n        info.isFunction = true;\r\n    }\r\n\r\n    return info;\r\n}\r\n\r\n/**\r\n * Return an array of suggestion for completing string 's'.\r\n * For example, for 'si', it could return ['sin', 'sinh', 'sim', 'simeq', 'sigma']\r\n * Infix operators are excluded, since they are deprecated commands.\r\n */\r\nexport function suggest(s: string): { match: string; frequency: number }[] {\r\n    if (s.length <= 1) return [];\r\n    const result = [];\r\n\r\n    // Iterate over items in the dictionary\r\n    for (const p in FUNCTIONS) {\r\n        if (Object.prototype.hasOwnProperty.call(FUNCTIONS, p)) {\r\n            if (p.startsWith(s) && !FUNCTIONS[p].infix) {\r\n                result.push({ match: p, frequency: FUNCTIONS[p].frequency });\r\n            }\r\n        }\r\n    }\r\n\r\n    for (const p in MATH_SYMBOLS) {\r\n        if (Object.prototype.hasOwnProperty.call(MATH_SYMBOLS, p)) {\r\n            if (p.startsWith(s)) {\r\n                result.push({ match: p, frequency: MATH_SYMBOLS[p].frequency });\r\n            }\r\n        }\r\n    }\r\n\r\n    result.sort((a, b) => {\r\n        if (a.frequency === b.frequency) {\r\n            return a.match.length - b.match.length;\r\n        }\r\n        return (b.frequency || 0) - (a.frequency || 0);\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * An argument template has the following syntax:\r\n *\r\n * <placeholder>:<type>\r\n *\r\n * where\r\n * - <placeholder> is a string whose value is displayed when the argument\r\n *   is missing\r\n * - <type> is one of 'string', 'color', 'dimen', 'auto', 'text', 'math'\r\n *\r\n */\r\nfunction parseParamTemplateArgument(argTemplate: string): ParseModePrivate {\r\n    let type: ParseModePrivate = 'auto';\r\n\r\n    // Parse the type (:type)\r\n    const r = argTemplate.match(/:([^=]+)/);\r\n    if (r) type = r[1].trim() as ParseModePrivate;\r\n\r\n    return type;\r\n}\r\n\r\nfunction parseParamTemplate(\r\n    paramTemplate: string\r\n): FunctionArgumentDefiniton[] {\r\n    if (!paramTemplate) return [];\r\n\r\n    let result = [];\r\n    let params = paramTemplate.split(']');\r\n    if (params[0].charAt(0) === '[') {\r\n        // We found at least one optional parameter.\r\n        result.push({\r\n            isOptional: true,\r\n            type: parseParamTemplateArgument(params[0].slice(1)),\r\n        });\r\n        // Parse the rest\r\n        for (let i = 1; i <= params.length; i++) {\r\n            result = result.concat(parseParamTemplate(params[i]));\r\n        }\r\n    } else {\r\n        params = paramTemplate.split('}');\r\n        if (params[0].charAt(0) === '{') {\r\n            // We found a required parameter\r\n            result.push({\r\n                isOptional: false,\r\n                type: parseParamTemplateArgument(params[0].slice(1)),\r\n            });\r\n            // Parse the rest\r\n            for (let i = 1; i <= params.length; i++) {\r\n                result = result.concat(parseParamTemplate(params[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * If possible, i.e. if they are all simple atoms, return a string made up of\r\n * their body\r\n */\r\nexport function parseArgAsString(atoms: Atom[]): string {\r\n    let result = '';\r\n    let success = true;\r\n    atoms.forEach((atom) => {\r\n        if (typeof atom.body === 'string') {\r\n            result += atom.body;\r\n        } else {\r\n            success = false;\r\n        }\r\n    });\r\n    return success ? result : '';\r\n}\r\n\r\n/**\r\n * Define one or more environments to be used with\r\n *         \\begin{<env-name>}...\\end{<env-name>}.\r\n *\r\n * @param params The number and type of required and optional parameters.\r\n */\r\nexport function defineEnvironment(\r\n    names: string | string[],\r\n    params: string,\r\n    options,\r\n    parser\r\n): void {\r\n    if (typeof names === 'string') {\r\n        names = [names];\r\n    }\r\n    if (!options) options = {};\r\n    const parsedParams = parseParamTemplate(params);\r\n\r\n    // Set default values of functions\r\n    const data = {\r\n        // Params: the parameters for this function, an array of\r\n        // {optional, type}\r\n        params: parsedParams,\r\n\r\n        // Callback to parse the arguments\r\n        parser: parser,\r\n\r\n        tabular: options.tabular || true,\r\n        colFormat: options.colFormat || [],\r\n    };\r\n    for (const name of names) {\r\n        ENVIRONMENTS[name] = data;\r\n    }\r\n}\r\n\r\n/**\r\n * Define one of more functions.\r\n *\r\n * @param names\r\n * @param params The number and type of required and optional parameters.\r\n * For example: '{}' defines a single mandatory parameter\r\n * '[string]{auto}' defines two params, one optional, one required\r\n */\r\nexport function defineFunction(\r\n    names: string | string[],\r\n    params: string,\r\n    options: { mode?: ParseModePrivate; infix?: boolean },\r\n    parseFunction?: ParseFunction,\r\n    emitFunction?: EmitFunction\r\n): void {\r\n    if (typeof names === 'string') {\r\n        names = [names];\r\n    }\r\n\r\n    if (!options) options = {};\r\n\r\n    // Set default values of functions\r\n    const data = {\r\n        // The parameters for this function, an array of\r\n        // {optional, type}\r\n        params: parseParamTemplate(params),\r\n\r\n        mode: options.mode,\r\n        infix: !!options.infix,\r\n        parse: parseFunction,\r\n        emit: emitFunction,\r\n    };\r\n    names.forEach((name) => {\r\n        FUNCTIONS['\\\\' + name] = data;\r\n    });\r\n}\r\n","import { defineFunction, parseArgAsString } from './definitions-utils';\r\nimport { Atom } from './atom-utils';\r\n\r\nconst ACCENTS = {\r\n    acute: '\\u02ca',\r\n    grave: '\\u02cb',\r\n    dot: '\\u02d9',\r\n    ddot: '\\u00a8',\r\n    mathring: '\\u02da',\r\n    tilde: '\\u007e',\r\n    bar: '\\u02c9',\r\n    breve: '\\u02d8',\r\n    check: '\\u02c7',\r\n    hat: '\\u005e',\r\n    vec: '\\u20d7',\r\n};\r\ndefineFunction(Object.keys(ACCENTS), '{body:auto}', null, function (\r\n    name,\r\n    args\r\n) {\r\n    return {\r\n        type: 'accent',\r\n        accent: ACCENTS[name.slice(1)],\r\n        limits: 'accent', // This will suppress the regular\r\n        // supsub attachment and will delegate\r\n        // it to the decomposeAccent\r\n        // (any non-null value would do)\r\n        skipBoundary: true,\r\n        body: args[0] as Atom[],\r\n    };\r\n});\r\n\r\ndefineFunction(\r\n    ['widehat', 'widecheck', 'widetilde'],\r\n    '{body:auto}',\r\n    null,\r\n    (name, args) => {\r\n        const baseString = parseArgAsString(args[0] as Atom[]);\r\n        const accent =\r\n            name.slice(1) +\r\n            (baseString.length > 5\r\n                ? '4'\r\n                : ['1', '1', '2', '2', '3', '3'][baseString.length]);\r\n        return {\r\n            type: 'accent',\r\n            svgAccent: accent,\r\n            limits: 'accent', // This will suppress the regular\r\n            // supsub attachment and will delegate\r\n            // it to the decomposeAccent\r\n            // (any non-null value would do)\r\n            skipBoundary: true,\r\n            body: args[0] as Atom[],\r\n        };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'utilde',\r\n    '{body:auto}',\r\n    null,\r\n    (_name, args) => {\r\n        const baseString = parseArgAsString(args[0] as Atom[]);\r\n        const accent =\r\n            'widetilde' +\r\n            (baseString.length > 5\r\n                ? '4'\r\n                : ['1', '1', '2', '2', '3', '3'][baseString.length]);\r\n\r\n        return {\r\n            type: 'overunder',\r\n\r\n            body: args[0] as Atom[],\r\n            svgBelow: accent,\r\n\r\n            skipBoundary: true,\r\n        };\r\n    },\r\n    (_name, _parent, atom, emit) =>\r\n        `\\\\utilde{${emit(atom, atom.body as Atom[])}}`\r\n);\r\n\r\n/*\r\n * From plain.tex\r\n *\r\n */\r\n\r\ndefineFunction('^', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? {\r\n                  a: 'â',\r\n                  e: 'ê',\r\n                  i: 'î',\r\n                  o: 'ô',\r\n                  u: 'û',\r\n                  A: 'Â',\r\n                  E: 'Ê',\r\n                  I: 'Î',\r\n                  O: 'Ô',\r\n                  U: 'Û',\r\n              }[args[0] as string] || '^'\r\n            : '^',\r\n    };\r\n});\r\n\r\ndefineFunction('`', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? {\r\n                  a: 'à',\r\n                  e: 'è',\r\n                  i: 'ì',\r\n                  o: 'ò',\r\n                  u: 'ù',\r\n                  A: 'À',\r\n                  E: 'È',\r\n                  I: 'Ì',\r\n                  O: 'Ò',\r\n                  U: 'Ù',\r\n              }[args[0] as string] || '`'\r\n            : '`',\r\n    };\r\n});\r\n\r\ndefineFunction(\"'\", '{:string}', {}, function (name, args) {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? {\r\n                  a: 'á',\r\n                  e: 'é',\r\n                  i: 'í',\r\n                  o: 'ó',\r\n                  u: 'ú',\r\n                  A: 'Á',\r\n                  E: 'É',\r\n                  I: 'Í',\r\n                  O: 'Ó',\r\n                  U: 'Ú',\r\n              }[args[0] as string] || '\\u005e'\r\n            : '\\u005e',\r\n    };\r\n});\r\n\r\ndefineFunction('~', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? { n: 'ñ', N: 'Ñ', a: 'ã', o: 'õ', A: 'Ã', O: 'Õ' }[\r\n                  args[0] as string\r\n              ] || '\\u00B4'\r\n            : '\\u00B4',\r\n    };\r\n});\r\n\r\ndefineFunction('c', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0] ? { c: 'ç', C: 'Ç' }[args[0] as string] || '' : '',\r\n    };\r\n});\r\n","import { defineFunction, ParseFunctionResult } from './definitions-utils';\r\nimport { convertDimenToPx } from './font-metrics';\r\nimport { Atom } from './atom-utils';\r\n\r\n// \\enclose, a MathJax extension mapping to the MathML `menclose` tag.\r\n// The first argument is a comma delimited list of notations, as defined\r\n// here: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/menclose\r\n// The second, optional, specifies the style to use for the notations.\r\ndefineFunction(\r\n    'enclose',\r\n    '{notation:string}[style:string]{body:auto}',\r\n    null,\r\n    (_name: string, args: (string | Atom[])[]): ParseFunctionResult => {\r\n        const result: ParseFunctionResult = {\r\n            type: 'enclose',\r\n            strokeColor: 'currentColor',\r\n            strokeWidth: 1,\r\n            strokeStyle: 'solid',\r\n            backgroundcolor: 'transparent',\r\n            padding: 'auto',\r\n            shadow: 'auto',\r\n            captureSelection: true, // Do not let children be selected\r\n            body: args[2],\r\n        };\r\n\r\n        // Extract info from style string\r\n        if (args[1]) {\r\n            // Split the string by comma delimited sub-strings, ignoring commas\r\n            // that may be inside (). For example\"x, rgb(a, b, c)\" would return\r\n            // ['x', 'rgb(a, b, c)']\r\n            const styles = (args[1] as string).split(\r\n                /,(?![^(]*\\)(?:(?:[^(]*\\)){2})*[^\"]*$)/\r\n            );\r\n            for (const s of styles) {\r\n                const shorthand = s.match(/\\s*(\\S+)\\s+(\\S+)\\s+(.*)/);\r\n                if (shorthand) {\r\n                    result.strokeWidth = convertDimenToPx(shorthand[1], 'px');\r\n                    if (!isFinite(result.strokeWidth)) {\r\n                        result.strokeWidth = 1;\r\n                    }\r\n                    result.strokeStyle = shorthand[2];\r\n                    result.strokeColor = shorthand[3];\r\n                } else {\r\n                    const attribute = s.match(/\\s*([a-z]*)\\s*=\\s*\"(.*)\"/);\r\n                    if (attribute) {\r\n                        if (attribute[1] === 'mathbackground') {\r\n                            result.backgroundcolor = attribute[2];\r\n                        } else if (attribute[1] === 'mathcolor') {\r\n                            result.strokeColor = attribute[2];\r\n                        } else if (attribute[1] === 'padding') {\r\n                            result.padding = convertDimenToPx(\r\n                                attribute[2],\r\n                                'px'\r\n                            );\r\n                        } else if (attribute[1] === 'shadow') {\r\n                            result.shadow = attribute[2];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (result.strokeStyle === 'dashed') {\r\n                result.svgStrokeStyle = '5,5';\r\n            } else if (result.strokeStyle === 'dotted') {\r\n                result.svgStrokeStyle = '1,5';\r\n            }\r\n        }\r\n        result.borderStyle =\r\n            result.strokeWidth +\r\n            'px ' +\r\n            result.strokeStyle +\r\n            ' ' +\r\n            result.strokeColor;\r\n\r\n        // Normalize the list of notations.\r\n        result.notation = {};\r\n        (args[0] as string)\r\n            .split(/[, ]/)\r\n            .filter((v) => v.length > 0)\r\n            .forEach((x) => {\r\n                result.notation[x.toLowerCase()] = true;\r\n            });\r\n        if (result.notation['updiagonalarrow']) {\r\n            result.notation['updiagonalstrike'] = false;\r\n        }\r\n        if (result.notation['box']) {\r\n            result.notation['left'] = false;\r\n            result.notation['right'] = false;\r\n            result.notation['bottom'] = false;\r\n            result.notation['top'] = false;\r\n        }\r\n        return result;\r\n    }\r\n);\r\n\r\ndefineFunction('cancel', '{body:auto}', null, function (\r\n    _name,\r\n    args\r\n): ParseFunctionResult {\r\n    return {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        borderStyle: '1px solid currentColor',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        notation: { updiagonalstrike: true },\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction('bcancel', '{body:auto}', null, function (\r\n    name,\r\n    args\r\n): ParseFunctionResult {\r\n    return {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        borderStyle: '1px solid currentColor',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        notation: { downdiagonalstrike: true },\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction('xcancel', '{body:auto}', null, function (\r\n    name,\r\n    args\r\n): ParseFunctionResult {\r\n    return {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        borderStyle: '1px solid currentColor',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        notation: { updiagonalstrike: true, downdiagonalstrike: true },\r\n        body: args[0],\r\n    };\r\n});\r\n","import { defineEnvironment, ParseFunctionResult } from './definitions-utils';\r\n\r\n/*\r\n\r\n<columns> ::= <column>*<line>\r\n<column> ::= <line>('l'|'c'|'r')\r\n<line> ::= '|' | '||' | ''\r\n\r\n'math',\r\n                frequency 0\r\n'displaymath',\r\n                frequency 8\r\n\r\n'equation'      centered, numbered\r\n                frequency 8\r\n\r\n'subequations'   with an 'equation' environment, appends a letter to eq no\r\n                frequency 1\r\n\r\n'array',        {columns:text}\r\n                cells are textstyle math\r\n                no fence\r\n\r\n'eqnarray'      DEPRECATED see http://www.tug.org/pracjourn/2006-4/madsen/madsen.pdf\r\n                {rcl}\r\n                first and last cell in each row is displaystyle math\r\n                each cell has a margin of \\arraycolsep\r\n                Each line has a eqno\r\n                frequency 7\r\n\r\n\r\n'theorem'       text mode. Prepends in bold 'Theorem <counter>', then body in italics.\r\n\r\n'multline'      single column\r\n                first row left aligned, last right aligned, others centered\r\n                last line has an eqn. counter. multline* will omit the counter\r\n                no output if inside an equation\r\n                \r\n\r\n'gather'        at most two columns\r\n                first column centered, second column right aligned\r\n                frequency 1\r\n\r\n'gathered'      must be in equation environment\r\n                single column,\r\n                centered\r\n                frequency: COMMON\r\n                optional argument: [b], [t] to vertical align\r\n\r\n'align'        multiple columns,\r\n                alternating rl\r\n                there is some 'space' (additional column?) between each pair\r\n                each line is numbered (except when inside an equation environment)\r\n                there is an implicit {} at the beginning of left columns\r\n\r\n'aligned'      must be in equation environment\r\n                frequency: COMMON\r\n                @{}r@{}l@{\\quad}@{}r@{}l@{}\r\n\r\n'split'         must be in an equation environment,\r\n                two columns, additional columns are interpreted as line breaks\r\n                first column is right aligned, second column is left aligned\r\n                entire construct is numbered (as opposed to 'align' where each line is numbered)\r\n                frequency: 0\r\n\r\n\r\n'alignedat'\r\nFrom AMSMath:\r\n---The alignedat environment was changed to take two arguments rather\r\nthan one: a mandatory argument (as formerly) specifying the number of\r\nalign structures, and a new optional one specifying the placement of the\r\nenvironment (parallel to the optional argument of aligned). However,\r\naligned is simpler to use, allowing any number of aligned structures\r\nautomatically, and therefore the use of alignedat is deprecated.\r\n\r\n\r\n 'alignat'      {pairs:number}\r\n                {rl} alternating as many times as indicated by <pairs> arg\r\n                no space between column pairs (unlike align)\r\n                there is an implicit {} at the beginning of left columns\r\n                frequency: 0\r\n\r\n 'flalign'      multiple columns\r\n                alternate rl\r\n                third column further away than align...?\r\n                frequency: 0\r\n\r\n\r\n'matrix'        at most 10 columns\r\n                cells centered\r\n                no fence\r\n                no colsep at beginning or end\r\n                (mathtools package add an optional arg for the cell alignment)\r\n                frequency: COMMON\r\n\r\n'pmatrix'       fence: ()\r\n                frequency: COMMON\r\n\r\n'bmatrix'       fence: []\r\n                frequency: COMMON\r\n\r\n'Bmatrix'       fence: {}\r\n                frequency: 237\r\n\r\n'vmatrix'       fence: \\vert\r\n                frequency: 368\r\n\r\n'Vmatrix'       fence: \\Vert\r\n                frequency: 41\r\n\r\n'smallmatrix'   displaystyle: scriptstyle (?)\r\n                frequency: 279\r\n\r\n'cases'\r\n                frequency: COMMON\r\n                l@{2}l\r\n\r\n'center'        text mode only?\r\n                frequency: ?\r\n*/\r\n// See https://en.wikibooks.org/wiki/LaTeX/Mathematics\r\n// and http://www.ele.uri.edu/faculty/vetter/Other-stuff/latex/Mathmode.pdf\r\n\r\n/*\r\nThe star at the end of the name of a displayed math environment causes that\r\nthe formula lines won't be numbered. Otherwise they would automatically get a number.\r\n\r\n\\notag will also turn off the numbering.\r\n\\shoveright and \\shoveleft will force alignment of a line\r\n\r\nThe only difference between align and equation is the spacing of the formulas.\r\nYou should attempt to use equation when possible, and align when you have multi-line formulas.\r\nEquation will have space before/after < 1em if line before/after is short enough.\r\n\r\nAlso: equation throws an error when you have an & inside the environment,\r\nso look out for that when converting between the two.\r\n\r\n\r\n\r\nWhereas align produces a structure whose width is the full line width, aligned\r\ngives a width that is the actual width of the contents, thus it can be used as\r\na component in a containing expression, e.g. for putting the entire alignment\r\nin a parenthesis\r\n*/\r\ndefineEnvironment('math', '', {}, function () {\r\n    return { mathstyle: 'textstyle' };\r\n});\r\n\r\ndefineEnvironment('displaymath', '', {}, function () {\r\n    return {\r\n        mathstyle: 'displaystyle',\r\n    };\r\n});\r\n\r\n// defineEnvironment('text', '', {\r\n//     frequency: 0,\r\n//     }, function(name, args) {\r\n//     return {\r\n//         mathstyle: 'text',         // @todo: not quite right, not a style, a parsemode...\r\n//     };\r\n// });\r\n\r\ndefineEnvironment('array', '{columns:colspec}', {}, (_name, args) => {\r\n    return {\r\n        colFormat: args[0],\r\n        mathstyle: 'textstyle',\r\n    };\r\n});\r\n\r\ndefineEnvironment('eqnarray', '', {}, function () {\r\n    return {};\r\n});\r\n\r\ndefineEnvironment('equation', '', {}, function () {\r\n    return {\r\n        colFormat: [{ align: 'c' }],\r\n    };\r\n});\r\n\r\ndefineEnvironment('subequations', '', {}, function () {\r\n    return {\r\n        colFormat: [{ align: 'c' }],\r\n    };\r\n});\r\n\r\n// Note spelling: MULTLINE, not multiline.\r\ndefineEnvironment('multline', '', {}, function () {\r\n    return {\r\n        firstRowFormat: [{ align: 'l' }],\r\n        colFormat: [{ align: 'c' }],\r\n        lastRowFormat: [{ align: 'r' }],\r\n    };\r\n});\r\n\r\n// An AMS-Math environment\r\n// See amsmath.dtx:3565\r\n// Note that some versions of AMS-Math have a gap on the left.\r\n// More recent version suppresses that gap, but have an option to turn it back on\r\n// for backward compatibility.\r\ndefineEnvironment(['align', 'align*', 'aligned'], '', {}, function (\r\n    _name,\r\n    _args,\r\n    array\r\n) {\r\n    let colCount = 0;\r\n    for (const row of array) {\r\n        colCount = Math.max(colCount, row.length);\r\n    }\r\n    const colFormat = [{ gap: 0 }, { align: 'r' }, { gap: 0 }, { align: 'l' }];\r\n    let i = 2;\r\n    while (i < colCount) {\r\n        colFormat.push({ gap: 1 });\r\n        colFormat.push({ align: 'r' });\r\n        colFormat.push({ gap: 0 });\r\n        colFormat.push({ align: 'l' });\r\n        i += 2;\r\n    }\r\n    colFormat.push({ gap: 0 });\r\n\r\n    return {\r\n        arraycolsep: 0,\r\n        colFormat: colFormat,\r\n        jot: 0.3, // Jot is an extra gap between lines of numbered equation.\r\n        // It's 3pt by default in LaTeX (ltmath.dtx:181)\r\n    };\r\n});\r\n\r\n// defineEnvironment('alignat', '', {}, function(name, args) {\r\n//     return {\r\n\r\n//     };\r\n// });\r\n\r\n// defineEnvironment('flalign', '', {}, function(name, args) {\r\n//     return {\r\n\r\n//     };\r\n// });\r\n\r\ndefineEnvironment('split', '', {}, function () {\r\n    return {};\r\n});\r\n\r\ndefineEnvironment(['gather', 'gathered'], '', {}, function () {\r\n    // An AMS-Math environment\r\n    // %    The \\env{gathered} environment is for several lines that are\r\n    // %    centered independently.\r\n    // From amstex.sty\r\n    // \\newenvironment{gathered}[1][c]{%\r\n    //   \\relax\\ifmmode\\else\\nonmatherr@{\\begin{gathered}}\\fi\r\n    //   \\null\\,%\r\n    //   \\if #1t\\vtop \\else \\if#1b\\vbox \\else \\vcenter \\fi\\fi\r\n    //   \\bgroup\\Let@\\restore@math@cr\r\n    //   \\ifinany@\\else\\openup\\jot\\fi\\ialign\r\n    //   \\bgroup\\hfil\\strut@$\\m@th\\displaystyle##$\\hfil\\crcr\r\n\r\n    return {\r\n        colFormat: [{ gap: 0.25 }, { align: 'c' }, { gap: 0 }],\r\n        jot: 0.3,\r\n    };\r\n});\r\n\r\n// defineEnvironment('cardinality', '', {}, function() {\r\n//     const result = {};\r\n\r\n//     result.mathstyle = 'textstyle';\r\n//     result.lFence = '|';\r\n//     result.rFence = '|';\r\n\r\n//     return result;\r\n// });\r\n\r\ndefineEnvironment(\r\n    [\r\n        'matrix',\r\n        'pmatrix',\r\n        'bmatrix',\r\n        'Bmatrix',\r\n        'vmatrix',\r\n        'Vmatrix',\r\n        'smallmatrix',\r\n        'matrix*',\r\n        'pmatrix*',\r\n        'bmatrix*',\r\n        'Bmatrix*',\r\n        'vmatrix*',\r\n        'Vmatrix*',\r\n        'smallmatrix*',\r\n    ],\r\n    '[columns:colspec]',\r\n    {},\r\n    function (name, args): ParseFunctionResult {\r\n        // From amstex.sty:\r\n        // \\def\\matrix{\\hskip -\\arraycolsep\\array{*\\c@MaxMatrixCols c}}\r\n        // \\def\\endmatrix{\\endarray \\hskip -\\arraycolsep}\r\n        const result: ParseFunctionResult = {};\r\n\r\n        result.mathstyle = 'textstyle';\r\n\r\n        switch (name) {\r\n            case 'pmatrix':\r\n            case 'pmatrix*':\r\n                result.lFence = '(';\r\n                result.rFence = ')';\r\n                break;\r\n\r\n            case 'bmatrix':\r\n            case 'bmatrix*':\r\n                result.lFence = '[';\r\n                result.rFence = ']';\r\n                break;\r\n\r\n            case 'Bmatrix':\r\n            case 'Bmatrix*':\r\n                result.lFence = '\\\\lbrace';\r\n                result.rFence = '\\\\rbrace';\r\n                break;\r\n\r\n            case 'vmatrix':\r\n            case 'vmatrix*':\r\n                result.lFence = '\\\\vert';\r\n                result.rFence = '\\\\vert';\r\n                break;\r\n\r\n            case 'Vmatrix':\r\n            case 'Vmatrix*':\r\n                result.lFence = '\\\\Vert';\r\n                result.rFence = '\\\\Vert';\r\n                break;\r\n\r\n            case 'smallmatrix':\r\n            case 'smallmatrix*':\r\n                result.mathstyle = 'scriptstyle';\r\n                break;\r\n\r\n            case 'matrix':\r\n            case 'matrix*':\r\n                // Specifying a fence, even a null fence,\r\n                // will prevent the insertion of an initial and final gap\r\n                result.lFence = '.';\r\n                result.rFence = '.';\r\n                break;\r\n            default:\r\n        }\r\n\r\n        result.colFormat = args[0] || [\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n            { align: 'c' },\r\n        ];\r\n\r\n        return result;\r\n    }\r\n);\r\n\r\ndefineEnvironment('cases', '', {}, function () {\r\n    // From amstex.sty:\r\n    // \\def\\cases{\\left\\{\\def\\arraystretch{1.2}\\hskip-\\arraycolsep\r\n    //   \\array{l@{\\quad}l}}\r\n    // \\def\\endcases{\\endarray\\hskip-\\arraycolsep\\right.}\r\n    // From amsmath.dtx\r\n    // \\def\\env@cases{%\r\n    //   \\let\\@ifnextchar\\new@ifnextchar\r\n    //   \\left\\lbrace\r\n    //   \\def\\arraystretch{1.2}%\r\n    //   \\array{@{}l@{\\quad}l@{}}%\r\n\r\n    return {\r\n        arraystretch: 1.2,\r\n        lFence: '\\\\lbrace',\r\n        rFence: '.',\r\n        colFormat: [{ align: 'l' }, { gap: 1 }, { align: 'l' }],\r\n    };\r\n});\r\n\r\ndefineEnvironment('theorem', '', {}, function () {\r\n    return {};\r\n});\r\n\r\ndefineEnvironment('center', '', {}, function () {\r\n    return { colFormat: [{ align: 'c' }] };\r\n});\r\n","import { defineFunction } from './definitions-utils';\r\nimport { Atom } from './atom';\r\n\r\n// Extensible (horitontally stretchy) symbols\r\n\r\ndefineFunction(\r\n    [\r\n        'overrightarrow',\r\n        'overleftarrow',\r\n        'Overrightarrow',\r\n        'overleftharpoon',\r\n        'overrightharpoon',\r\n        'overleftrightarrow',\r\n        'overbrace',\r\n        'overlinesegment',\r\n        'overgroup',\r\n    ],\r\n    '{:auto}',\r\n    null,\r\n    (name, args) => {\r\n        return {\r\n            type: 'overunder',\r\n            // The body is the argument of the command\r\n            body: args[0],\r\n\r\n            // Set the \"svgAbove\" to the name of a SVG object (which is the same\r\n            // as the command name)\r\n            svgAbove: name.slice(1),\r\n\r\n            skipBoundary: true,\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => `${name}{${emit(atom, atom.body as Atom[])}}`\r\n);\r\n\r\ndefineFunction(\r\n    [\r\n        'underrightarrow',\r\n        'underleftarrow',\r\n        'underleftrightarrow',\r\n        'underbrace',\r\n        'underlinesegment',\r\n        'undergroup',\r\n    ],\r\n    '{:auto}',\r\n    null,\r\n    (name, args) => {\r\n        return {\r\n            type: 'overunder',\r\n\r\n            body: args[0],\r\n            // Set the \"svgBelow\" to the name of a SVG object (which is the same\r\n            // as the command name)\r\n            svgBelow: name.slice(1),\r\n\r\n            skipBoundary: true,\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => `${name}{${emit(atom, atom.body as Atom[])}}`\r\n);\r\ndefineFunction(\r\n    [\r\n        'xrightarrow',\r\n        'xleftarrow',\r\n        'xRightarrow',\r\n        'xLeftarrow',\r\n        'xleftharpoonup',\r\n        'xleftharpoondown',\r\n        'xrightharpoonup',\r\n        'xrightharpoondown',\r\n        'xlongequal',\r\n        'xtwoheadleftarrow',\r\n        'xtwoheadrightarrow',\r\n        'xleftrightarrow',\r\n        'xLeftrightarrow',\r\n        'xrightleftharpoons',\r\n        'xleftrightharpoons',\r\n        'xhookleftarrow',\r\n        'xhookrightarrow',\r\n        'xmapsto',\r\n        'xtofrom',\r\n        'xrightleftarrows', // From mhchem.sty package\r\n        'xrightequilibrium', // From mhchem.sty package\r\n        'xleftequilibrium', // From mhchem.sty package\r\n    ],\r\n    '[:auto]{:auto}',\r\n    null,\r\n    (name, args) => {\r\n        return {\r\n            type: 'overunder',\r\n\r\n            // Set the spacing type\r\n            mathtype: 'mrel',\r\n\r\n            // Set the \"svgBody\" to the name of a SVG object (which is the same\r\n            // as the command name)\r\n            svgBody: name.slice(1),\r\n            overscript: args[1],\r\n            underscript: args[0],\r\n\r\n            skipBoundary: true,\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) =>\r\n        name +\r\n        (atom.underscript ? `[${emit(atom, atom.underscript)}]` : '') +\r\n        `{${emit(atom, atom.overscript)}}`\r\n);\r\n","import { defineFunction, ParseFunctionResult } from './definitions-utils';\r\nimport { Atom } from './atom-utils';\r\n\r\ndefineFunction(\r\n    [\r\n        'arcsin',\r\n        'arccos',\r\n        'arctan',\r\n        'arctg',\r\n        'arcctg',\r\n        'arg',\r\n        'ch',\r\n        'cos',\r\n        'cosec',\r\n        'cosh',\r\n        'cot',\r\n        'cotg',\r\n        'coth',\r\n        'csc',\r\n        'ctg',\r\n        'cth',\r\n        'sec',\r\n        'sin',\r\n        'sinh',\r\n        'sh',\r\n        'tan',\r\n        'tanh',\r\n        'tg',\r\n        'th',\r\n    ],\r\n    '',\r\n    null,\r\n    function (name) {\r\n        return {\r\n            type: 'mop',\r\n            limits: 'nolimits',\r\n            isSymbol: false,\r\n            isFunction: true,\r\n            body: name.slice(1),\r\n            variant: 'main',\r\n            variantStyle: 'up',\r\n        };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    ['deg', 'dim', 'exp', 'hom', 'ker', 'lb', 'lg', 'ln', 'log'],\r\n    '',\r\n    null,\r\n    function (name) {\r\n        return {\r\n            type: 'mop',\r\n            limits: 'nolimits',\r\n            isSymbol: false,\r\n            isFunction: true,\r\n            body: name.slice(1),\r\n            variant: 'main',\r\n            variantStyle: 'up',\r\n        };\r\n    }\r\n);\r\n\r\ndefineFunction(['lim', 'mod'], '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'limits',\r\n        isSymbol: false,\r\n        body: name.slice(1),\r\n        variant: 'main',\r\n    };\r\n});\r\ndefineFunction(['det', 'max', 'min'], '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'limits',\r\n        isSymbol: false,\r\n        isFunction: true,\r\n        body: name.slice(1),\r\n        variant: 'main',\r\n    };\r\n});\r\n\r\n// Root\r\ndefineFunction(\r\n    'sqrt',\r\n    '[index:auto]{radicand:auto}',\r\n    null,\r\n    (_name, args) => {\r\n        return {\r\n            type: 'surd',\r\n            body: args[1],\r\n            index: args[0],\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        let args = '';\r\n        if (atom.index) {\r\n            args += `[${emit(atom, atom.index)}]`;\r\n        }\r\n        args += `{${emit(atom, atom.body as Atom[])}}`;\r\n        return name + args;\r\n    }\r\n);\r\n\r\n// Fractions\r\ndefineFunction(\r\n    ['frac', 'dfrac', 'tfrac', 'cfrac', 'binom', 'dbinom', 'tbinom'],\r\n    '{numerator}{denominator}',\r\n    null,\r\n    (name, args): ParseFunctionResult => {\r\n        const result: ParseFunctionResult = {\r\n            type: 'genfrac',\r\n            numer: args[0] as Atom[],\r\n            denom: args[1] as Atom[],\r\n            mathstyle: 'auto',\r\n        };\r\n\r\n        switch (name) {\r\n            case '\\\\dfrac':\r\n            case '\\\\frac':\r\n            case '\\\\tfrac':\r\n            case '\\\\cfrac':\r\n                result.hasBarLine = true;\r\n                break;\r\n            case '\\\\\\\\atopfrac':\r\n                result.hasBarLine = false;\r\n                break;\r\n            case '\\\\dbinom':\r\n            case '\\\\binom':\r\n            case '\\\\tbinom':\r\n                result.hasBarLine = false;\r\n                result.leftDelim = '(';\r\n                result.rightDelim = ')';\r\n                break;\r\n        }\r\n\r\n        switch (name) {\r\n            case '\\\\dfrac':\r\n            case '\\\\dbinom':\r\n                result.mathstyle = 'displaystyle';\r\n                break;\r\n            case '\\\\tfrac':\r\n            case '\\\\tbinom':\r\n                result.mathstyle = 'textstyle';\r\n                break;\r\n        }\r\n\r\n        if (name === '\\\\cfrac') {\r\n            result.continuousFraction = true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `${name}{${emit(atom, atom.numer)}}{${emit(atom, atom.denom)}}`;\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    ['over', 'atop', 'choose'],\r\n    '',\r\n    { infix: true },\r\n    (name, args): ParseFunctionResult => {\r\n        const numer = args[0] as Atom[];\r\n        const denom = args[1] as Atom[];\r\n        let hasBarLine = false;\r\n        let leftDelim = null;\r\n        let rightDelim = null;\r\n\r\n        switch (name) {\r\n            case '\\\\atop':\r\n                break;\r\n            case '\\\\over':\r\n                hasBarLine = true;\r\n                break;\r\n            case '\\\\choose':\r\n                hasBarLine = false;\r\n                leftDelim = '(';\r\n                rightDelim = ')';\r\n                break;\r\n            default:\r\n                throw new Error('Unrecognized genfrac command');\r\n        }\r\n        return {\r\n            type: 'genfrac',\r\n            numer: numer,\r\n            denom: denom,\r\n            hasBarLine: hasBarLine,\r\n            leftDelim: leftDelim,\r\n            rightDelim: rightDelim,\r\n            mathstyle: 'auto',\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `{${emit(atom, atom.numer)}${name} ${emit(atom, atom.denom)}}`;\r\n    }\r\n);\r\n\r\n// Slashed package\r\n/*\r\ndefineFunction('\\\\slashed'\r\n*/\r\n\r\ndefineFunction(\r\n    'pdiff',\r\n    '{numerator}{denominator}',\r\n    null,\r\n    (_funcname, args): ParseFunctionResult => {\r\n        return {\r\n            type: 'genfrac',\r\n            numer: args[0] as Atom[],\r\n            denom: args[1] as Atom[],\r\n            numerPrefix: '\\u2202',\r\n            denomPrefix: '\\u2202',\r\n            hasBarLine: true,\r\n            leftDelim: null,\r\n            rightDelim: null,\r\n            mathstyle: 'auto',\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `${name}{${emit(atom, atom.numer)}}{${emit(atom, atom.denom)}}`;\r\n    }\r\n);\r\n\r\n// Limits, symbols\r\ndefineFunction(\r\n    [\r\n        'sum',\r\n        'prod',\r\n        'bigcup',\r\n        'bigcap',\r\n        'coprod',\r\n        'bigvee',\r\n        'bigwedge',\r\n        'biguplus',\r\n        'bigotimes',\r\n        'bigoplus',\r\n        'bigodot',\r\n        'bigsqcup',\r\n        'smallint',\r\n        'intop',\r\n    ],\r\n    '',\r\n    null,\r\n    (name): ParseFunctionResult => {\r\n        return {\r\n            type: 'mop',\r\n            limits: 'auto',\r\n            isSymbol: true,\r\n            variant: 'main',\r\n            body: {\r\n                coprod: '\\u2210',\r\n                bigvee: '\\u22c1',\r\n                bigwedge: '\\u22c0',\r\n                biguplus: '\\u2a04',\r\n                bigcap: '\\u22c2',\r\n                bigcup: '\\u22c3',\r\n                intop: '\\u222b',\r\n                prod: '\\u220f',\r\n                sum: '\\u2211',\r\n                bigotimes: '\\u2a02',\r\n                bigoplus: '\\u2a01',\r\n                bigodot: '\\u2a00',\r\n                bigsqcup: '\\u2a06',\r\n                smallint: '\\u222b',\r\n            }[name.slice(1)],\r\n        };\r\n    }\r\n);\r\n\r\n// No limits, symbols (i.e. display larger in 'display' mode, and\r\n// centered on the baseline)\r\nconst EXTENSIBLE_SYMBOLS = {\r\n    int: '\\u222b',\r\n    iint: '\\u222c',\r\n    iiint: '\\u222d',\r\n    oint: '\\u222e',\r\n    oiint: '\\u222f',\r\n    oiiint: '\\u2230',\r\n    intclockwise: '\\u2231',\r\n    varointclockwise: '\\u2232',\r\n    ointctrclockwise: '\\u2233',\r\n    intctrclockwise: '\\u2a11',\r\n    sqcup: '\\u2294',\r\n    sqcap: '\\u2293',\r\n    uplus: '\\u228e',\r\n    wr: '\\u2240',\r\n    amalg: '\\u2a3f',\r\n    Cap: '\\u22d2',\r\n    Cup: '\\u22d3',\r\n    doublecap: '\\u22d2',\r\n    doublecup: '\\u22d3',\r\n};\r\ndefineFunction(Object.keys(EXTENSIBLE_SYMBOLS), '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        body: EXTENSIBLE_SYMBOLS[name.slice(1)],\r\n        variant: { '\\u22d2': 'ams', '\\u22d3': 'ams' }[\r\n            EXTENSIBLE_SYMBOLS[name.slice(1)]\r\n        ],\r\n    };\r\n});\r\n\r\ndefineFunction(['Re', 'Im'], '', null, function (name): ParseFunctionResult {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'nolimits',\r\n        isSymbol: false,\r\n        isFunction: true,\r\n        body: { '\\\\Re': '\\u211c', '\\\\Im': '\\u2111' }[name],\r\n        variant: 'fraktur',\r\n    };\r\n});\r\n\r\ndefineFunction('middle', '{:delim}', null, function (\r\n    name,\r\n    args\r\n): ParseFunctionResult {\r\n    return { type: 'delim', delim: args[0] as string };\r\n});\r\n\r\n// TODO\r\n// Some missing greek letters, but see https://reference.wolfram.com/language/tutorial/LettersAndLetterLikeForms.html\r\n// koppa, stigma, Sampi\r\n// See https://tex.stackexchange.com/questions/231878/accessing-archaic-greek-koppa-in-the-birkmult-document-class\r\n// Capital Alpha, etc...\r\n// Colon (ratio) (2236)\r\n\r\n// Review:\r\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula\r\n\r\n// https://reference.wolfram.com/language/tutorial/LettersAndLetterLikeForms.html\r\n// ftp://ftp.dante.de/tex-archive/info/symbols/comprehensive/symbols-a4.pdf\r\n\r\n// Media Wiki Reference\r\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula\r\n\r\n// MathJax Reference\r\n// http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands\r\n// http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm\r\n\r\n// LaTeX Reference\r\n// http://ctan.sharelatex.com/tex-archive/info/latex2e-help-texinfo/latex2e.html\r\n\r\n// iBooks Author/Pages\r\n// https://support.apple.com/en-au/HT202501\r\n\r\n// Mathematica Reference\r\n// https://reference.wolfram.com/language/tutorial/NamesOfSymbolsAndMathematicalObjects.html\r\n// https://reference.wolfram.com/language/guide/MathematicalTypesetting.html\r\n/*\r\n    * @todo \\sb (equivalent to _) $\\mathfrak{sl}\\sb 2$ frequency 184\r\n    * @todo \\sp (equivalent to ^) $\\mathfrak{sl}\\sp 2$ frequency 274\r\n    * \\intertext    frequency 0\r\n\r\n\r\n    See http://mirrors.ibiblio.org/CTAN/macros/latex/contrib/mathtools/mathtools.pdf\r\n\r\n*/\r\n","/**\r\n * This module contains some color dictionaries and algorithms to\r\n * parse a string into a hex RGB color value.s\r\n * @summary   Parsing of color strings.\r\n */\r\n\r\n/*\r\n{\\color{apricot}\\blacksquare}{\\color{aquamarine}\\blacksquare}{\\color{bittersweet}\\blacksquare}{\\color{black}\\blacksquare}{\\color{blue}\\blacksquare}{\\color{blueGreen}\\blacksquare}{\\color{blueviolet}\\blacksquare}{\\color{brickred}\\blacksquare}{\\color{brown}\\blacksquare}{\\color{burntorange}\\blacksquare}{\\color{cadetblue}\\blacksquare}{\\color{carnationpink}\\blacksquare}{\\color{cerulean}\\blacksquare}{\\color{cornflowerblue}\\blacksquare}{\\color{cyan}\\blacksquare}{\\color{dandelion}\\blacksquare}{\\color{darkorchid}\\blacksquare}{\\color{emerald}\\blacksquare}{\\color{forestgreen}\\blacksquare}{\\color{fuchsia}\\blacksquare}{\\color{goldenrod}\\blacksquare}{\\color{gray}\\blacksquare}{\\color{green}\\blacksquare}{\\color{greenyellow}\\blacksquare}{\\color{junglegreen}\\blacksquare}{\\color{lavender}\\blacksquare}{\\color{limegreen}\\blacksquare}{\\color{magenta}\\blacksquare}{\\color{mahogany}\\blacksquare}{\\color{maroon}\\blacksquare}{\\color{melon}\\blacksquare}{\\color{midnightblue}\\blacksquare}{\\color{mulberry}\\blacksquare}{\\color{navyblue}\\blacksquare}{\\color{olivegreen}\\blacksquare}{\\color{orange}\\blacksquare}{\\color{orangered}\\blacksquare}{\\color{orchid}\\blacksquare}{\\color{peach}\\blacksquare}{\\color{periwinkle}\\blacksquare}{\\color{pinegreen}\\blacksquare}{\\color{plum}\\blacksquare}{\\color{processblue}\\blacksquare}{\\color{purple}\\blacksquare}{\\color{rawsienna}\\blacksquare}{\\color{red}\\blacksquare}{\\color{redorange}\\blacksquare}{\\color{redviolet}\\blacksquare}{\\color{rhodamine}\\blacksquare}{\\color{royalblue}\\blacksquare}{\\color{royalpurple}\\blacksquare}{\\color{rubinered}\\blacksquare}{\\color{salmon}\\blacksquare}{\\color{seagreen}\\blacksquare}{\\color{sepia}\\blacksquare}{\\color{skyblue}\\blacksquare}{\\color{springgreen}\\blacksquare}{\\color{tan}\\blacksquare}{\\color{tealblue}\\blacksquare}{\\color{thistle}\\blacksquare}{\\color{turquoise}\\blacksquare}{\\color{violet}\\blacksquare}{\\color{violetred}\\blacksquare}{\\color{white}\\blacksquare}{\\color{wildstrawberry}\\blacksquare}{\\color{yellow}\\blacksquare}{\\color{yellowgreen}\\blacksquare}{\\color{yelloworange}\\blacksquare}\r\n*/\r\n\r\n/**\r\n * First 10 predefined colors used for plotting by Mathematica.\r\n *\r\n * Also known as _indexed color scheme #97_.\r\n */\r\nconst MATHEMATICA_COLORS: { [key: string]: string } = {\r\n    m0: '#3f3d99', // strong blue\r\n    m1: '#993d71', // strong cerise\r\n    m2: '#998b3d', // strong gold\r\n    m3: '#3d9956', // malachite green\r\n    m4: '#3d5a99', // strong cobalt blue\r\n    m5: '#993d90', // strong orchid\r\n    m6: '#996d3d', // strong orange\r\n    m7: '#43993d', // strong sap green\r\n    m8: '#3d7999', // cornflower blue\r\n    m9: '#843d99', // mulberry\r\n};\r\n// ColorData97 (Mathematica standard lines)\r\n// rgb(0.368417, 0.506779, 0.709798),       #5e81b5\r\n// rgb(0.880722, 0.611041, 0.142051),\r\n// rgb(0.560181, 0.691569, 0.194885),\r\n// rgb(0.922526, 0.385626, 0.209179),\r\n// rgb(0.528488, 0.470624, 0.701351),\r\n// rgb(0.772079, 0.431554, 0.102387),\r\n// rgb(0.363898, 0.618501, 0.782349),\r\n// rgb(1, 0.75, 0),\r\n// rgb(0.647624, 0.37816, 0.614037),\r\n// rgb(0.571589, 0.586483, 0.),\r\n// rgb(0.915, 0.3325, 0.2125),\r\n// rgb(0.40082222609352647, 0.5220066643438841, 0.85),\r\n// rgb(0.9728288904374106, 0.621644452187053, 0.07336199581899142),\r\n// rgb(0.736782672705901, 0.358, 0.5030266573755369),\r\n// rgb(0.28026441037696703, 0.715, 0.4292089322474965)\r\n\r\n// MathLab colors\r\n// '#0072bd' // [0, 0.4470, 0.7410]             blue\r\n// '#d95319' // [0.8500, 0.3250, 0.0980]        orange\r\n// '#edb120', // [0.9290, 0.6940, 0.1250]       yellow\r\n// '#7e2f8e', // [0.4940, 0.1840, 0.5560]       purple\r\n// '#77ac30', // [0.4660, 0.6740, 0.1880]       green\r\n// '#4dbeee', // [0.3010, 0.7450, 0.9330]       cyan\r\n// '#a2142f' // [0.6350, 0.0780, 0.1840]\t    dark red\r\n\r\n/* Area colors are most appropriate to color a large area */\r\nexport const AREA_COLORS = [\r\n    '#d35d60', // red\r\n    '#7293cb', // cobalt blue\r\n    '#e1974d', // orange\r\n    '#84bb5d', // pistachio\r\n    '#9066a7', // purple\r\n    '#aD6a58', // vermilion\r\n    '#f5a4ce', // pale rose\r\n    '#fff590', // pale gold\r\n    '#212121', // Black\r\n    '#818787', // dark grey\r\n    '#d4d5d2', // light grey\r\n    '#ffffff', // white\r\n];\r\n\r\n/* Line colors are most appropriate to color as a stroke color */\r\nexport const LINE_COLORS = [\r\n    '#cc2428', // red\r\n    '#3769b1', // cobalt blue\r\n    '#da7e30', // orange\r\n    '#409852', // malachite green\r\n    '#6b4c9a', // blue violet\r\n    '#922426', // red\r\n    '#e7298a', // brilliant rose\r\n    '#ffe907', // vivid gold\r\n    '#000000',\r\n    '#525055',\r\n    '#adafaa',\r\n    '#ffffff',\r\n];\r\n\r\n/**\r\n * 68 colors (+ white) known to dvips used in LaTeX.\r\n *\r\n * The color names are based on the names of the _Crayola Crayon_ box of\r\n * 64 crayons.\r\n *\r\n * See:\r\n * - {@link http://mirror.jmu.edu/pub/CTAN/systems/knuth/local/lib/colordvi.tex | ColorDVI.tex}\r\n * - {@link https://en.wikibooks.org/w/index.php?title=LaTeX/Colors | Wikibooks:LaTeX/Colors}\r\n */\r\nconst NAMED_COLORS: { [key: string]: string } = {\r\n    apricot: '#FBB982',\r\n    aquamarine: '#00B5BE',\r\n    bittersweet: '#C04F17',\r\n    black: '#221E1F', // Indeed.\r\n    blue: '#2D2F92',\r\n    bluegreen: '#00B3B8',\r\n    blueviolet: '#473992',\r\n    brickred: '#B6321C',\r\n    brown: '#792500',\r\n    burntorange: '#F7921D',\r\n    cadetblue: '#74729A',\r\n    carnationpink: '#F282B4',\r\n    cerulean: '#00A2E3',\r\n    cornflowerblue: '#41B0E4',\r\n    cyan: '#00AEEF',\r\n    dandelion: '#FDBC42',\r\n    darkorchid: '#A4538A',\r\n    emerald: '#00A99D',\r\n    forestgreen: '#009B55',\r\n    fuchsia: '#8C368C',\r\n    goldenrod: '#FFDF42',\r\n    gray: '#949698',\r\n    green: '#00A64F',\r\n    greenyellow: '#DFE674',\r\n    junglegreen: '#00A99A',\r\n    lavender: '#F49EC4',\r\n    limegreen: '#8DC73E',\r\n    magenta: '#EC008C',\r\n    mahogany: '#A9341F',\r\n    maroon: '#AF3235',\r\n    melon: '#F89E7B',\r\n    midnightblue: '#006795',\r\n    mulberry: '#A93C93',\r\n    navyblue: '#006EB8',\r\n    olivegreen: '#3C8031',\r\n    orange: '#F58137',\r\n    orangered: '#ED135A',\r\n    orchid: '#AF72B0',\r\n    peach: '#F7965A',\r\n    periwinkle: '#7977B8',\r\n    pinegreen: '#008B72',\r\n    plum: '#92268F',\r\n    processblue: '#00B0F0',\r\n    purple: '#99479B',\r\n    rawsienna: '#974006',\r\n    red: '#ED1B23',\r\n    redorange: '#F26035',\r\n    redviolet: '#A1246B',\r\n    rhodamine: '#EF559F',\r\n    royalblue: '#0071BC',\r\n    royalpurple: '#613F99',\r\n    rubinered: '#ED017D',\r\n    salmon: '#F69289',\r\n    seagreen: '#3FBC9D',\r\n    sepia: '#671800',\r\n    skyblue: '#46C5DD',\r\n    springgreen: '#C6DC67',\r\n    tan: '#DA9D76',\r\n    tealblue: '#00AEB3',\r\n    thistle: '#D883B7',\r\n    turquoise: '#00B4CE',\r\n    violet: '#58429B',\r\n    violetred: '#EF58A0',\r\n    white: '#FFFFFF',\r\n    wildstrawberry: '#EE2967',\r\n    yellow: '#FFF200',\r\n    yellowgreen: '#98CC70',\r\n    yelloworange: '#FAA21A',\r\n};\r\n\r\n// Other color lists: SVG colors, x11 colors\r\n/*\r\naliceblue\trgb(240, 248, 255)\r\nantiquewhite\trgb(250, 235, 215)\r\naqua\trgb( 0, 255, 255)\r\naquamarine\trgb(127, 255, 212)\r\nazure\trgb(240, 255, 255)\r\nbeige\trgb(245, 245, 220)\r\nbisque\trgb(255, 228, 196)\r\nblack\trgb( 0, 0, 0)\r\nblanchedalmond\trgb(255, 235, 205)\r\nblue\trgb( 0, 0, 255)\r\nblueviolet\trgb(138, 43, 226)\r\nbrown\trgb(165, 42, 42)\r\nburlywood\trgb(222, 184, 135)\r\ncadetblue\trgb( 95, 158, 160)\r\nchartreuse\trgb(127, 255, 0)\r\nchocolate\trgb(210, 105, 30)\r\ncoral\trgb(255, 127, 80)\r\ncornflowerblue\trgb(100, 149, 237)\r\ncornsilk\trgb(255, 248, 220)\r\ncrimson\trgb(220, 20, 60)\r\ncyan\trgb( 0, 255, 255)\r\ndarkblue\trgb( 0, 0, 139)\r\ndarkcyan\trgb( 0, 139, 139)\r\ndarkgoldenrod\trgb(184, 134, 11)\r\ndarkgray\trgb(169, 169, 169)\r\ndarkgreen\trgb( 0, 100, 0)\r\ndarkgrey\trgb(169, 169, 169)\r\ndarkkhaki\trgb(189, 183, 107)\r\ndarkmagenta\trgb(139, 0, 139)\r\ndarkolivegreen\trgb( 85, 107, 47)\r\ndarkorange\trgb(255, 140, 0)\r\ndarkorchid\trgb(153, 50, 204)\r\ndarkred\trgb(139, 0, 0)\r\ndarksalmon\trgb(233, 150, 122)\r\ndarkseagreen\trgb(143, 188, 143)\r\ndarkslateblue\trgb( 72, 61, 139)\r\ndarkslategray\trgb( 47, 79, 79)\r\ndarkslategrey\trgb( 47, 79, 79)\r\ndarkturquoise\trgb( 0, 206, 209)\r\ndarkviolet\trgb(148, 0, 211)\r\ndeeppink\trgb(255, 20, 147)\r\ndeepskyblue\trgb( 0, 191, 255)\r\ndimgray\trgb(105, 105, 105)\r\ndimgrey\trgb(105, 105, 105)\r\ndodgerblue\trgb( 30, 144, 255)\r\nfirebrick\trgb(178, 34, 34)\r\nfloralwhite\trgb(255, 250, 240)\r\nforestgreen\trgb( 34, 139, 34)\r\nfuchsia\trgb(255, 0, 255)\r\ngainsboro\trgb(220, 220, 220)\r\nghostwhite\trgb(248, 248, 255)\r\ngold\trgb(255, 215, 0)\r\ngoldenrod\trgb(218, 165, 32)\r\ngray\trgb(128, 128, 128)\r\ngrey\trgb(128, 128, 128)\r\ngreen\trgb( 0, 128, 0)\r\ngreenyellow\trgb(173, 255, 47)\r\nhoneydew\trgb(240, 255, 240)\r\nhotpink\trgb(255, 105, 180)\r\nindianred\trgb(205, 92, 92)\r\nindigo\trgb( 75, 0, 130)\r\nivory\trgb(255, 255, 240)\r\nkhaki\trgb(240, 230, 140)\r\nlavender\trgb(230, 230, 250)\r\nlavenderblush\trgb(255, 240, 245)\r\nlawngreen\trgb(124, 252, 0)\r\nlemonchiffon\trgb(255, 250, 205)\r\nlightblue\trgb(173, 216, 230)\r\nlightcoral\trgb(240, 128, 128)\r\nlightcyan\trgb(224, 255, 255)\r\nlightgoldenrodyellow\trgb(250, 250, 210)\r\nlightgray\trgb(211, 211, 211)\r\nlightgreen\trgb(144, 238, 144)\r\nlightgrey\trgb(211, 211, 211)\r\nlightpink\trgb(255, 182, 193)\r\nlightsalmon\trgb(255, 160, 122)\r\nlightseagreen\trgb( 32, 178, 170)\r\nlightskyblue\trgb(135, 206, 250)\r\nlightslategray\trgb(119, 136, 153)\r\nlightslategrey\trgb(119, 136, 153)\r\nlightsteelblue\trgb(176, 196, 222)\r\nlightyellow\trgb(255, 255, 224)\r\nlime\trgb( 0, 255, 0)\r\nlimegreen\trgb( 50, 205, 50)\r\nlinen\trgb(250, 240, 230)\r\nmagenta\trgb(255, 0, 255)\r\nmaroon\trgb(128, 0, 0)\r\nmediumaquamarine\trgb(102, 205, 170)\r\nmediumblue\trgb( 0, 0, 205)\r\nmediumorchid\trgb(186, 85, 211)\r\nmediumpurple\trgb(147, 112, 219)\r\nmediumseagreen\trgb( 60, 179, 113)\r\nmediumslateblue\trgb(123, 104, 238)\r\nmediumspringgreen\trgb( 0, 250, 154)\r\nmediumturquoise\trgb( 72, 209, 204)\r\nmediumvioletred\trgb(199, 21, 133)\r\nmidnightblue\trgb( 25, 25, 112)\r\nmintcream\trgb(245, 255, 250)\r\nmistyrose\trgb(255, 228, 225)\r\nmoccasin\trgb(255, 228, 181)\r\nnavajowhite\trgb(255, 222, 173)\r\nnavy\trgb( 0, 0, 128)\r\noldlace\trgb(253, 245, 230)\r\nolive\trgb(128, 128, 0)\r\nolivedrab\trgb(107, 142, 35)\r\norange\trgb(255, 165, 0)\r\norangered\trgb(255, 69, 0)\r\norchid\trgb(218, 112, 214)\r\npalegoldenrod\trgb(238, 232, 170)\r\npalegreen\trgb(152, 251, 152)\r\npaleturquoise\trgb(175, 238, 238)\r\npalevioletred\trgb(219, 112, 147)\r\npapayawhip\trgb(255, 239, 213)\r\npeachpuff\trgb(255, 218, 185)\r\nperu\trgb(205, 133, 63)\r\npink\trgb(255, 192, 203)\r\nplum\trgb(221, 160, 221)\r\npowderblue\trgb(176, 224, 230)\r\npurple\trgb(128, 0, 128)\r\nred\trgb(255, 0, 0)\r\nrosybrown\trgb(188, 143, 143)\r\nroyalblue\trgb( 65, 105, 225)\r\nsaddlebrown\trgb(139, 69, 19)\r\nsalmon\trgb(250, 128, 114)\r\nsandybrown\trgb(244, 164, 96)\r\nseagreen\trgb( 46, 139, 87)\r\nseashell\trgb(255, 245, 238)\r\nsienna\trgb(160, 82, 45)\r\nsilver\trgb(192, 192, 192)\r\nskyblue\trgb(135, 206, 235)\r\nslateblue\trgb(106, 90, 205)\r\nslategray\trgb(112, 128, 144)\r\nslategrey\trgb(112, 128, 144)\r\nsnow\trgb(255, 250, 250)\r\nspringgreen\trgb( 0, 255, 127)\r\nsteelblue\trgb( 70, 130, 180)\r\ntan\trgb(210, 180, 140)\r\nteal\trgb( 0, 128, 128)\r\nthistle\trgb(216, 191, 216)\r\ntomato\trgb(255, 99, 71)\r\nturquoise\trgb( 64, 224, 208)\r\nviolet\trgb(238, 130, 238)\r\nwheat\trgb(245, 222, 179)\r\nwhite\trgb(255, 255, 255)\r\nwhitesmoke\trgb(245, 245, 245)\r\nyellow\trgb(255, 255, 0)\r\nyellowgreen\trgb(154, 205, 50)\r\n \t \r\n*/\r\n\r\n/**\r\n * Return a CSS color (#rrggbb) from a string.\r\n *\r\n * Possible formats include:\r\n * - named colors from the DVI color set: 'Yellow', 'red'... Case insensitive.\r\n * - colors from the Mathematica set: 'm1'...'m9'\r\n * - 3-digit hex: `'#d50'`\r\n * - 6-digit hex: `'#dd5500'`\r\n * - RGB functional: `'rgb(240, 20, 10)'`\r\n *\r\n * In addition, colors can be mixed using the following syntax:\r\n * `<mix> = <color>![<value>][!<mix>]`\r\n * For example:\r\n * - `'blue!20'`  = 20% blue + 80% white\r\n * - `'blue!20!black'` = 20% + 80% black\r\n * - `'blue!20!black!30!green'` = (20% + 80% black) * 30 % + 70% green\r\n *\r\n * If the input string is prefixed with a dash, the complementary color\r\n * of the expression is returned.\r\n *\r\n * This creative syntax is defined by the {@link http://mirror.jmu.edu/pub/CTAN/macros/latex/contrib/xcolor/xcolor.pdf | `xcolor` LaTeX package}.\r\n *\r\n * @param s - An expression representing a color value\r\n * @return An RGB color expressed as a hex-triplet preceded by `#`\r\n */\r\nexport function stringToColor(s: string): string {\r\n    const colorSpec = s.toLowerCase().split('!');\r\n\r\n    let baseRed;\r\n    let baseGreen;\r\n    let baseBlue;\r\n    let red = 255;\r\n    let green = 255;\r\n    let blue = 255;\r\n    let mix = -1;\r\n\r\n    // If the string is prefixed with a '-', use the complementary color\r\n    const complementary =\r\n        colorSpec.length > 0 && colorSpec[0].charAt(0) === '-';\r\n    if (complementary) colorSpec[0] = colorSpec[0].slice(1);\r\n\r\n    for (let i = 0; i < colorSpec.length; i++) {\r\n        baseRed = red;\r\n        baseGreen = green;\r\n        baseBlue = blue;\r\n\r\n        const colorName = colorSpec[i].match(/([a-z0-9]*)/)?.[1];\r\n\r\n        let color = NAMED_COLORS[colorName] || MATHEMATICA_COLORS[colorName];\r\n        if (!color) color = colorSpec[i];\r\n\r\n        let m = color.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\r\n        if (m?.[1] && m[2] && m[3]) {\r\n            // It's a six-digit hex number\r\n            red = Math.max(0, Math.min(255, parseInt(m[1], 16)));\r\n            green = Math.max(0, Math.min(255, parseInt(m[2], 16)));\r\n            blue = Math.max(0, Math.min(255, parseInt(m[3], 16)));\r\n        } else {\r\n            m = color.match(/^#([0-9a-f]{3})$/i);\r\n            if (m?.[1]) {\r\n                // It's a three-digit hex number\r\n                const r1 = parseInt(m[1][0], 16);\r\n                const g1 = parseInt(m[1][1], 16);\r\n                const b1 = parseInt(m[1][2], 16);\r\n                red = Math.max(0, Math.min(255, r1 * 16 + r1));\r\n                green = Math.max(0, Math.min(255, g1 * 16 + g1));\r\n                blue = Math.max(0, Math.min(255, b1 * 16 + b1));\r\n            } else {\r\n                // It's a rgb functional\r\n                m = color.match(\r\n                    /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i\r\n                );\r\n                if (m?.[1] && m[2] && m[3]) {\r\n                    red = Math.max(0, Math.min(255, parseInt(m[1])));\r\n                    green = Math.max(0, Math.min(255, parseInt(m[2])));\r\n                    blue = Math.max(0, Math.min(255, parseInt(m[3])));\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        if (mix >= 0) {\r\n            red = (1.0 - mix) * red + mix * baseRed;\r\n            green = (1.0 - mix) * green + mix * baseGreen;\r\n            blue = (1.0 - mix) * blue + mix * baseBlue;\r\n            mix = -1;\r\n        }\r\n        if (i + 1 < colorSpec.length) {\r\n            mix = Math.max(0, Math.min(100, parseInt(colorSpec[++i]))) / 100.0;\r\n        }\r\n    }\r\n\r\n    if (mix >= 0) {\r\n        red = mix * red + (1.0 - mix) * baseRed;\r\n        green = mix * green + (1.0 - mix) * baseGreen;\r\n        blue = mix * blue + (1.0 - mix) * baseBlue;\r\n    }\r\n\r\n    if (complementary) {\r\n        red = 255 - red;\r\n        green = 255 - green;\r\n        blue = 255 - blue;\r\n    }\r\n\r\n    return (\r\n        '#' +\r\n        ('00' + Math.round(red).toString(16)).slice(-2) +\r\n        ('00' + Math.round(green).toString(16)).slice(-2) +\r\n        ('00' + Math.round(blue).toString(16)).slice(-2)\r\n    );\r\n}\r\n\r\nexport function colorToString(color: string): string {\r\n    let result = color.toUpperCase();\r\n\r\n    for (const c in NAMED_COLORS) {\r\n        if (NAMED_COLORS[c] === result) {\r\n            result = c;\r\n            break;\r\n        }\r\n    }\r\n\r\n    for (const c in MATHEMATICA_COLORS) {\r\n        if (MATHEMATICA_COLORS[c] === result) {\r\n            result = c;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { defineFunction, ParseFunctionResult } from './definitions-utils';\r\nimport { colorToString, stringToColor } from './color';\r\nimport { Atom, BBoxParam } from './atom-utils';\r\nimport { FontShape, FontSeries } from '../public/core';\r\n\r\ndefineFunction(\r\n    'ensuremath',\r\n    '{:math}',\r\n    {},\r\n    (_name, args) => {\r\n        return {\r\n            type: 'group',\r\n            mode: 'math',\r\n            body: args[0],\r\n            skipBoundary: true,\r\n            latexOpen: '\\\\ensuremath{',\r\n            latexClose: '}',\r\n        };\r\n    },\r\n    (_name, _parent, atom, emit) => emit(atom, atom.body as Atom[])\r\n);\r\n\r\ndefineFunction('color', '{:color}', {}, (_name, args) => {\r\n    return { color: args[0] as string };\r\n});\r\n\r\n// From the xcolor package.\r\n// Unlike what its name might suggest, this command does not set the mode to text\r\n// That is, it can equally be applied to math and text mode.\r\ndefineFunction('textcolor', '{:color}{content:auto*}', {}, (_name, args) => {\r\n    return { color: args[0] as string };\r\n});\r\n\r\n// Can be preceded by e.g. '\\fboxsep=4pt' (also \\fboxrule)\r\n// Note:\r\n// - \\boxed: sets content in displaystyle mode (@todo: should change type of argument)\r\n//      equivalent to \\fbox{$$<content>$$}\r\n// - \\fbox: sets content in 'auto' mode (frequency 777)\r\n// - \\framebox[<width>][<alignment>]{<content>} (<alignment> := 'c'|'t'|'b' (center, top, bottom) (frequency 28)\r\n// @todo\r\ndefineFunction('boxed', '{content:math}', null, (_name, args) => {\r\n    return {\r\n        type: 'box',\r\n        framecolor: 'black',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n\r\n// In LaTeX, \\colorbox sets the mode to text\r\ndefineFunction(\r\n    'colorbox',\r\n    '{background-color:string}{content:auto}',\r\n    {},\r\n    (_name, args) => {\r\n        return {\r\n            type: 'box',\r\n            backgroundcolor: stringToColor(args[0] as string),\r\n            skipBoundary: true,\r\n            body: args[1],\r\n            verbatimBackgroundcolor: args[0] as string, // Save this value to restore it verbatim later\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) =>\r\n        `${name}{${\r\n            atom.verbatimBackgroundcolor || colorToString(atom.backgroundcolor)\r\n        }}{${emit(atom, atom.body as Atom[])}}`\r\n);\r\n\r\ndefineFunction(\r\n    'fcolorbox',\r\n    '{frame-color:string}{background-color:string}{content:auto}',\r\n    {},\r\n    (_name, args) => {\r\n        return {\r\n            type: 'box',\r\n            framecolor: stringToColor(args[0] as string),\r\n            backgroundcolor: stringToColor(args[1] as string),\r\n            skipBoundary: true,\r\n            body: args[2],\r\n            verbatimBackgroundcolor: args[1] as string, // Save this value to restore it verbatim later\r\n            verbatimFramecolor: args[0] as string, // Save this value to restore it verbatim later\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) =>\r\n        `${name}{${atom.verbatimFramecolor || colorToString(atom.framecolor)}{${\r\n            atom.verbatimBackgroundcolor || colorToString(atom.backgroundcolor)\r\n        }}{${emit(atom, atom.body as Atom[])}}`\r\n);\r\n\r\n// \\bbox, MathJax extension\r\n// The first argument is a CSS border property shorthand, e.g.\r\n// \\bbox[red], \\bbox[5px,border:2px solid red]\r\n// The MathJax syntax is\r\n// arglist ::= <arg>[,<arg>[,<arg>]]\r\n// arg ::= [<background:color>|<padding:dimen>|<style>]\r\n// style ::= 'border:' <string>\r\n\r\ndefineFunction(\r\n    'bbox',\r\n    '[:bbox]{body:auto}',\r\n    {},\r\n    (_name, args) => {\r\n        if (args[0]) {\r\n            const arg = args[0] as BBoxParam;\r\n            return {\r\n                type: 'box',\r\n                padding: arg.padding,\r\n                border: arg.border,\r\n                backgroundcolor: arg.backgroundcolor,\r\n                skipBoundary: true,\r\n                body: args[1],\r\n            };\r\n        }\r\n        return {\r\n            type: 'box',\r\n            skipBoundary: true,\r\n            body: args[1],\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        let result = name;\r\n        if (\r\n            isFinite(atom.padding) ||\r\n            typeof atom.border !== 'undefined' ||\r\n            typeof atom.backgroundcolor !== 'undefined'\r\n        ) {\r\n            const bboxParams = [];\r\n            if (isFinite(atom.padding)) {\r\n                bboxParams.push(Math.floor(1e2 * atom.padding) / 1e2 + 'em');\r\n            }\r\n            if (atom.border) {\r\n                bboxParams.push('border:' + atom.border);\r\n            }\r\n            if (atom.backgroundcolor) {\r\n                bboxParams.push(colorToString(atom.backgroundcolor));\r\n            }\r\n            result += `[${bboxParams.join(',')}]`;\r\n        }\r\n\r\n        return result + `{${emit(atom, atom.body as Atom[])}}`;\r\n    }\r\n);\r\n\r\n// Size\r\ndefineFunction(\r\n    [\r\n        'tiny',\r\n        'scriptsize',\r\n        'footnotesize',\r\n        'small',\r\n        'normalsize',\r\n        'large',\r\n        'Large',\r\n        'LARGE',\r\n        'huge',\r\n        'Huge',\r\n    ],\r\n    '',\r\n    {},\r\n    (name, _args) => {\r\n        return {\r\n            fontSize: {\r\n                tiny: 'size1',\r\n                scriptsize: 'size2',\r\n                footnotesize: 'size3',\r\n                small: 'size4',\r\n                normalsize: 'size5',\r\n                large: 'size6',\r\n                Large: 'size7',\r\n                LARGE: 'size8',\r\n                huge: 'size9',\r\n                Huge: 'size10',\r\n            }[name.slice(1)],\r\n        };\r\n    }\r\n);\r\n\r\n// \\fontseries only works in text mode\r\ndefineFunction('fontseries', '{:string}', { mode: 'text' }, (_name, args) => {\r\n    return { fontSeries: (args[0] as string) as FontSeries };\r\n});\r\n// SHAPE: italic, small caps\r\ndefineFunction('fontshape', '{:string}', { mode: 'text' }, (_name, args) => {\r\n    return { fontShape: args[0] as FontShape };\r\n});\r\n\r\n// FONT FAMILY: Fraktur, Calligraphic, ...\r\ndefineFunction('fontfamily', '{:string}', { mode: 'text' }, (_name, args) => {\r\n    return { fontFamily: args[0] as string };\r\n});\r\n\r\n// In LaTeX, the \\fontseries, \\fontshape, \\fontfamily, \\fontsize commands\r\n// do not take effect until \\selectfont is encoded. In our implementation,\r\n// they take effect immediately, and \\selectfont is a no-op\r\ndefineFunction('selectfont', '', { mode: 'text' }, (_name, _args) => {\r\n    return {};\r\n});\r\n\r\n// \\bf works in any mode\r\n// As per the LaTeX 2.09 semantics, it overrides shape, family\r\ndefineFunction('bf', '', {}, (_name, _args) => {\r\n    return { fontSeries: 'b', fontShape: 'n', fontFamily: 'cmr' };\r\n});\r\n\r\n// Note: These function work a little bit differently than LaTex\r\n// In LaTeX, \\bm{x\\mathrm{y}} yield a bold x and an upright y.\r\n// This is not necesarily intentional, but a side effect of the (current)\r\n// implementation of \\bm\r\ndefineFunction(['boldsymbol', 'bm'], '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', cssClass: 'ML__boldsymbol' };\r\n});\r\n\r\n// Note: switches to math mode\r\ndefineFunction('bold', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variantStyle: 'bold' };\r\n});\r\n\r\ndefineFunction('bfseries', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontSeries: 'b' };\r\n});\r\ndefineFunction('mdseries', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontSeries: 'm' };\r\n});\r\ndefineFunction('upshape', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontShape: 'n' };\r\n});\r\ndefineFunction('slshape', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontShape: 'sl' };\r\n});\r\n// Small caps\r\ndefineFunction('scshape', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontShape: 'sc' };\r\n});\r\n\r\ndefineFunction('textbf', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontSeries: 'b' };\r\n});\r\ndefineFunction('textmd', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontSeries: 'm' };\r\n});\r\n\r\ndefineFunction('textup', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'n' };\r\n});\r\n\r\n// @todo: family could be 'none' or 'default'\r\n// \"normal\" font of the body text, not necessarily roman\r\ndefineFunction('textnormal', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'n', fontSeries: 'm' };\r\n});\r\n\r\ndefineFunction('textsl', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'sl' };\r\n});\r\n\r\ndefineFunction('textit', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'it' };\r\n});\r\n\r\ndefineFunction('textsc', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'sc' };\r\n});\r\ndefineFunction('textrm', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontFamily: 'roman' };\r\n});\r\n\r\ndefineFunction('textsf', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontFamily: 'sans-serif' };\r\n});\r\n\r\ndefineFunction('texttt', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontFamily: 'monospace' };\r\n});\r\n\r\n// Note: \\mathbf is a no-op in text mode\r\ndefineFunction('mathbf', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'bold' };\r\n});\r\n\r\ndefineFunction('mathit', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'italic' };\r\n});\r\n\r\n// From the ISOMath package\r\ndefineFunction('mathbfit', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'bolditalic' };\r\n});\r\n\r\ndefineFunction('mathrm', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'up' };\r\n});\r\n\r\ndefineFunction(\r\n    'mathsf',\r\n    '{:math*}',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { mode: 'math', variant: 'sans-serif', variantStyle: 'up' };\r\n    }\r\n);\r\ndefineFunction(\r\n    'mathtt',\r\n    '{:math*}',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { mode: 'math', variant: 'monospace', variantStyle: 'up' };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'it',\r\n    '',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return {\r\n            fontSeries: 'm',\r\n            fontShape: 'it',\r\n            fontFamily: 'cmr',\r\n            variantStyle: 'italic', // For math mode\r\n        };\r\n    }\r\n);\r\n\r\n// In LaTeX, \\rmfamily, \\sffamily and \\ttfamily are no-op in math mode.\r\ndefineFunction(\r\n    'rmfamily',\r\n    '',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { fontFamily: 'roman' };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'sffamily',\r\n    '',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { fontFamily: 'sans-serif' };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'ttfamily',\r\n    '',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { fontFamily: 'monospace' };\r\n    }\r\n);\r\n\r\n// In LaTeX, \\Bbb and \\mathbb are no-op in text mode.\r\n// They also map lowercase characters to different glyphs.\r\n// Note that \\Bbb has been deprecated for over 20 years (as well as \\rm, \\it, \\bf)\r\ndefineFunction(\r\n    ['Bbb', 'mathbb'],\r\n    '{:math*}',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { variant: 'double-struck', variantStyle: 'up' };\r\n    }\r\n);\r\n\r\ndefineFunction(['frak', 'mathfrak'], '{:math*}', {}, (_name, _args) => {\r\n    return { variant: 'fraktur', variantStyle: 'up' };\r\n});\r\n\r\ndefineFunction('mathcal', '{:math*}', {}, (_name, _args) => {\r\n    return { variant: 'calligraphic', variantStyle: 'up' };\r\n});\r\n\r\ndefineFunction(\r\n    'mathscr',\r\n    '{:math*}',\r\n    {},\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { variant: 'script', variantStyle: 'up' };\r\n    }\r\n);\r\n\r\n// Rough synomym for \\text{}\r\n/*\r\nAn \\mbox within math mode does not use the current math font; rather it uses\r\nthe typeface of the surrounding running text.\r\n*/\r\ndefineFunction(\r\n    'mbox',\r\n    '{:text}',\r\n    null,\r\n    (_name, args): ParseFunctionResult => {\r\n        return {\r\n            type: 'group',\r\n            mode: 'math',\r\n            body: args[0],\r\n        };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'text',\r\n    '{:text*}',\r\n    null,\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { mode: 'text' };\r\n    }\r\n);\r\n\r\n/* A MathJax extension: assign a class to the element */\r\ndefineFunction(\r\n    'class',\r\n    '{name:string}{content:auto*}',\r\n    null,\r\n    (_name, args): ParseFunctionResult => {\r\n        return { cssClass: args[0] as string };\r\n    }\r\n);\r\n\r\n/* A MathJax extension: assign an ID to the element */\r\ndefineFunction(\r\n    'cssId',\r\n    '{id:string}{content:auto}',\r\n    null,\r\n    (_name, args): ParseFunctionResult => {\r\n        return {\r\n            type: 'group',\r\n            body: args[1],\r\n            cssId: args[0] as string,\r\n        };\r\n    }\r\n);\r\n\r\n/* Note: in TeX, \\em is restricted to text mode. We extend it to math\r\n * This is the 'switch' variant of \\emph, i.e:\r\n * `\\emph{important text}`\r\n * `{\\em important text}`\r\n */\r\ndefineFunction(\r\n    'em',\r\n    '',\r\n    null,\r\n    (_name, _args): ParseFunctionResult => {\r\n        return { cssClass: 'ML__emph' };\r\n    }\r\n);\r\n\r\n/* Note: in TeX, \\emph is restricted to text mode. We extend it to math */\r\ndefineFunction(\r\n    'emph',\r\n    '{:auto}',\r\n    null,\r\n    (_name, args): ParseFunctionResult => {\r\n        return {\r\n            cssClass: 'ML__emph',\r\n            body: args[0],\r\n            type: 'group',\r\n            skipBoundary: true,\r\n        };\r\n    }\r\n);\r\n\r\n// Extra data needed for the delimiter parse function down below\r\nconst DELIMITER_SIZES = {\r\n    '\\\\bigl': { mclass: 'mopen', size: 1 },\r\n    '\\\\Bigl': { mclass: 'mopen', size: 2 },\r\n    '\\\\biggl': { mclass: 'mopen', size: 3 },\r\n    '\\\\Biggl': { mclass: 'mopen', size: 4 },\r\n    '\\\\bigr': { mclass: 'mclose', size: 1 },\r\n    '\\\\Bigr': { mclass: 'mclose', size: 2 },\r\n    '\\\\biggr': { mclass: 'mclose', size: 3 },\r\n    '\\\\Biggr': { mclass: 'mclose', size: 4 },\r\n    '\\\\bigm': { mclass: 'mrel', size: 1 },\r\n    '\\\\Bigm': { mclass: 'mrel', size: 2 },\r\n    '\\\\biggm': { mclass: 'mrel', size: 3 },\r\n    '\\\\Biggm': { mclass: 'mrel', size: 4 },\r\n    '\\\\big': { mclass: 'mord', size: 1 },\r\n    '\\\\Big': { mclass: 'mord', size: 2 },\r\n    '\\\\bigg': { mclass: 'mord', size: 3 },\r\n    '\\\\Bigg': { mclass: 'mord', size: 4 },\r\n};\r\n\r\ndefineFunction(\r\n    [\r\n        'bigl',\r\n        'Bigl',\r\n        'biggl',\r\n        'Biggl',\r\n        'bigr',\r\n        'Bigr',\r\n        'biggr',\r\n        'Biggr',\r\n        'bigm',\r\n        'Bigm',\r\n        'biggm',\r\n        'Biggm',\r\n        'big',\r\n        'Big',\r\n        'bigg',\r\n        'Bigg',\r\n    ],\r\n    '{:delim}',\r\n    null,\r\n    function (name, args): ParseFunctionResult {\r\n        return {\r\n            type: 'sizeddelim',\r\n            size: DELIMITER_SIZES[name].size,\r\n            cls: DELIMITER_SIZES[name].mclass,\r\n            delim: args[0] as string,\r\n        };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    [\r\n        'hspace',\r\n        'hspace*',\r\n        // \\hspace* inserts a non-breakable space, but since we don't line break...\r\n        // it's the same as \\hspace.\r\n    ],\r\n    '{width:skip}',\r\n    {},\r\n    function (_name, args) {\r\n        return {\r\n            type: 'spacing',\r\n            width: args[0] || 0,\r\n        };\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    [\r\n        'mathop',\r\n        'mathbin',\r\n        'mathrel',\r\n        'mathopen',\r\n        'mathclose',\r\n        'mathpunct',\r\n        'mathord',\r\n        'mathinner',\r\n    ],\r\n    '{:auto}',\r\n    null,\r\n    (name, args) => {\r\n        const result: ParseFunctionResult = {\r\n            type: {\r\n                '\\\\mathop': 'mop',\r\n                '\\\\mathbin': 'mbin',\r\n                '\\\\mathrel': 'mrel',\r\n                '\\\\mathopen': 'mopen',\r\n                '\\\\mathclose': 'mclose',\r\n                '\\\\mathpunct': 'mpunct',\r\n                '\\\\mathord': 'mord',\r\n                '\\\\mathinner': 'minner',\r\n            }[name],\r\n            body: args[0], // Pass the body as an array of atoms, not a string\r\n            // A string would be styled as text, but these need to be interpreted\r\n            // as 'math'\r\n            captureSelection: true, // Do not let children be selected\r\n        };\r\n        if (name === '\\\\mathop') {\r\n            result.limits = 'limits';\r\n            result.isFunction = true;\r\n        }\r\n        return result;\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `${name}{${emit(atom, atom.body as Atom[])}}`;\r\n    }\r\n);\r\n\r\n// @todo see http://mirrors.ibiblio.org/CTAN/macros/latex/required/amsmath/amsopn.pdf\r\n// for list of additional operators\r\n\r\ndefineFunction(\r\n    ['operatorname', 'operatorname*'],\r\n    '{operator:math}',\r\n    null,\r\n    function (name, args) {\r\n        const result: ParseFunctionResult = {\r\n            type: 'mop',\r\n            captureSelection: true, // Do not let children be selected\r\n            body: args[0],\r\n            isFunction: true,\r\n        };\r\n        /*\r\n        The \\operatorname commands is defined with:\r\n\r\n        \\gdef\\newmcodes@{\\mathcode`\\'39\\mathcode`\\*42\\mathcode`\\.\"613A%\r\n        \\ifnum\\mathcode`\\-=45 \\else\r\n            \\mathchardef\\std@minus\\mathcode`\\-\\relax\r\n        \\fi\r\n        \\mathcode`\\-45\\mathcode`\\/47\\mathcode`\\:\"603A\\relax}\r\n\r\n\r\n        \\mathcode assigns to a character its category (2=mbin), its font family (0=cmr),\r\n        and its character code.\r\n\r\n        It basically temporarily reassigns to \":.'-/*\" the values/properties\r\n        these characters have in text mode (but importantly, not to \" \" (space))\r\n\r\n        */\r\n\r\n        (result.body as Atom[]).forEach((x) => {\r\n            x.isFunction = false;\r\n            if (!x.variant && !x.variantStyle) {\r\n                // No variant as been specified (as it could have been with\r\n                // \\operatorname{\\mathit{lim}} for example)\r\n                // Bypass the default auto styling by specifing an upright style\r\n                x.variant = 'main';\r\n                x.variantStyle = 'up';\r\n            }\r\n            x.type = 'mord';\r\n            x.body =\r\n                { '\\u2217': '*', '\\u2212': '-' }[x.body as string] || x.body;\r\n        });\r\n\r\n        if (name === '\\\\operatorname') {\r\n            result.limits = 'nolimits';\r\n        } else if (name === '\\\\operatorname*') {\r\n            result.limits = 'limits';\r\n        }\r\n\r\n        return result;\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'unicode',\r\n    '{charcode:number}',\r\n    null,\r\n    (_name, args) => {\r\n        let codepoint = parseInt(args[0] as string);\r\n        if (!isFinite(codepoint)) codepoint = 0x2753; // BLACK QUESTION MARK\r\n        return {\r\n            type: 'mord',\r\n            body: String.fromCodePoint(codepoint),\r\n            codepoint: codepoint,\r\n        };\r\n    },\r\n    (name, _parent, atom, _emit) => {\r\n        return `${name}{\"${('000000' + atom.codepoint.toString(16))\r\n            .toUpperCase()\r\n            .substr(-6)}}`;\r\n    }\r\n);\r\n\r\n// A box of the width and height\r\ndefineFunction(\r\n    'rule',\r\n    '[raise:dimen]{width:dimen}{thickness:dimen}',\r\n    null,\r\n    function (name, args) {\r\n        return {\r\n            type: 'rule',\r\n            shift: args[0],\r\n            width: args[1],\r\n            height: args[2],\r\n        };\r\n    }\r\n);\r\n\r\n// An overline\r\ndefineFunction('overline', '{:auto}', null, (_name, args) => {\r\n    return {\r\n        type: 'line',\r\n        position: 'overline',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction('underline', '{:auto}', null, (_name, args) => {\r\n    return {\r\n        type: 'line',\r\n        position: 'underline',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction(\r\n    'overset',\r\n    '{annotation:auto}{symbol:auto}',\r\n    null,\r\n    function (_name, args) {\r\n        return {\r\n            type: 'overunder',\r\n            overscript: args[0],\r\n            skipBoundary: true,\r\n            body: args[1],\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `${name}{${emit(atom, atom.overscript)}}{${emit(\r\n            atom,\r\n            atom.body as Atom[]\r\n        )}}`;\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    'underset',\r\n    '{annotation:auto}{symbol:auto}',\r\n    null,\r\n    function (_name, args) {\r\n        return {\r\n            type: 'overunder',\r\n            underscript: args[0],\r\n            skipBoundary: true,\r\n            body: args[1],\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `${name}{${emit(atom, atom.overscript)}}{${emit(\r\n            atom,\r\n            atom.body as Atom[]\r\n        )}}`;\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    ['overwithdelims', 'atopwithdelims'],\r\n    '{numer:auto}{denom:auto}{left-delim:delim}{right-delim:delim}',\r\n    { infix: true },\r\n    function (_name, args): ParseFunctionResult {\r\n        return {\r\n            type: 'genfrac',\r\n            numer: args[0] as Atom[],\r\n            denom: args[1] as Atom[],\r\n            hasBarLine: false,\r\n            leftDelim: args[2] as string,\r\n            rightDelim: args[3] as string,\r\n            mathstyle: 'auto',\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) => {\r\n        return `${emit(atom, atom.numer)} ${name}${atom.leftDelim}${\r\n            atom.rightDelim\r\n        }${emit(atom, atom.denom)}`;\r\n    }\r\n);\r\n\r\ndefineFunction(\r\n    ['stackrel', 'stackbin'],\r\n    '{annotation:auto}{symbol:auto}',\r\n    null,\r\n    function (name, args) {\r\n        return {\r\n            type: 'overunder',\r\n            overscript: args[0],\r\n            skipBoundary: true,\r\n            body: args[1],\r\n            // Set the correct spacing rule for \\stackrel\r\n            mathtype: name === '\\\\stackrel' ? 'mrel' : 'mbin',\r\n        };\r\n    },\r\n    (name, _parent, atom, emit) =>\r\n        `${name}{${emit(atom, atom.overscript)}}{${emit(\r\n            atom,\r\n            atom.body as Atom[]\r\n        )}}`\r\n);\r\n\r\ndefineFunction('rlap', '{:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        align: 'right',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction('llap', '{:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        align: 'left',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction('mathrlap', '{:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        mode: 'math',\r\n        align: 'right',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n\r\ndefineFunction('mathllap', '{:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        mode: 'math',\r\n        align: 'left',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n","import {\r\n    defineSymbol,\r\n    defineSymbols,\r\n    defineSymbolRange,\r\n} from './definitions-utils';\r\n\r\n// Simple characters allowed in math mode\r\ndefineSymbols('0123456789/@.?!');\r\ndefineSymbolRange(0x0041, 0x005a); // a-z\r\ndefineSymbolRange(0x0061, 0x007a); // A-Z\r\n\r\n// Quantifiers\r\n\r\ndefineSymbol('\\\\forall', '\\u2200');\r\ndefineSymbol('\\\\exists', '\\u2203');\r\ndefineSymbol('\\\\nexists', '\\u2204', 'mord', 'ams');\r\ndefineSymbol('\\\\mid', '\\u2223', 'mrel');\r\ndefineSymbol('\\\\top', '\\u22a4');\r\ndefineSymbol('\\\\bot', '\\u22a5');\r\n\r\n// Misc Symbols\r\n\r\ndefineSymbol('\\\\sharp', '\\u266f');\r\ndefineSymbol('\\\\flat', '\\u266d');\r\ndefineSymbol('\\\\natural', '\\u266e');\r\ndefineSymbol('\\\\#', '\\u0023');\r\ndefineSymbol('\\\\&', '\\u0026');\r\ndefineSymbol('\\\\clubsuit', '\\u2663');\r\ndefineSymbol('\\\\heartsuit', '\\u2661');\r\ndefineSymbol('\\\\spadesuit', '\\u2660');\r\ndefineSymbol('\\\\diamondsuit', '\\u2662');\r\n\r\n// defineSymbol( '\\\\cross', '\\uF4A0',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\transpose', '\\uF3C7',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\conjugate', 'conj'],  MAIN,  'mord', '\\uF3C8'); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\conjugatetranspose', '\\uF3C9',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\hermitianconjugate', '\\uF3CE',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\ndefineSymbol('\\\\differencedelta', '\\u2206', 'mrel');\r\n\r\ndefineSymbol('\\\\backslash', '\\\\');\r\n\r\ndefineSymbol('\\\\nabla', '\\u2207');\r\ndefineSymbol('\\\\partial', '\\u2202');\r\n\r\ndefineSymbol('\\\\ell', '\\u2113');\r\ndefineSymbol('\\\\imaginaryI', 'i', 'mord', 'main'); // NOTE: not a real TeX symbol, but Mathematica\r\n// NOTE: set in main (upright) as per ISO 80000-2:2009.\r\ndefineSymbol('\\\\imaginaryJ', 'j', 'mord', 'main'); // NOTE: not a real TeX symbol, but Mathematica\r\n// NOTE: set in main (upright) as per ISO 80000-2:2009.\r\n\r\ndefineSymbol('\\\\hbar', '\\u210f');\r\ndefineSymbol('\\\\hslash', '\\u210f', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\differentialD', 'd', 'mord', 'main'); // NOTE: not a real TeX symbol, but Mathematica\r\ndefineSymbol('\\\\rd', 'd', 'mord', 'main'); // NOTE: not a real TeX symbol, but used in ProofWiki\r\n// NOTE: set in main (upright) as per ISO 80000-2:2009.\r\ndefineSymbol('\\\\capitalDifferentialD', 'D', 'mord', 'main'); // NOTE: not a real TeX symbol, but Mathematica\r\n// NOTE: set in main (upright) as per ISO 80000-2:2009.\r\ndefineSymbol('\\\\rD', 'D', 'mord', 'main'); // NOTE: not a real TeX symbol\r\ndefineSymbol('\\\\exponentialE', 'e', 'mord', 'main'); // NOTE: not a real TeX symbol, but Mathematica\r\n// NOTE: set in main (upright) as per ISO 80000-2:2009.\r\n\r\ndefineSymbol('\\\\Finv', '\\u2132', 'mord', 'ams');\r\ndefineSymbol('\\\\Game', '\\u2141', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\wp', '\\u2118');\r\ndefineSymbol('\\\\eth', '\\u00f0', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\mho', '\\u2127', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\Bbbk', '\\u006b', 'mord', 'ams');\r\ndefineSymbol('\\\\doubleStruckCapitalN', 'N', 'mord', 'double-struck'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\N', 'N', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\doubleStruckCapitalR', 'R', 'mord', 'double-struck'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\R', 'R', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\doubleStruckCapitalQ', 'Q', 'mord', 'double-struck'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\Q', 'Q', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\doubleStruckCapitalC', 'C', 'mord', 'double-struck'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\C', 'C', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\doubleStruckCapitalZ', 'Z', 'mord', 'double-struck'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\Z', 'Z', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\doubleStruckCapitalP', 'P', 'mord', 'double-struck'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\P', 'P', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\n\r\ndefineSymbol('\\\\scriptCapitalE', 'E', 'mord', 'script'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\scriptCapitalH', 'H', 'mord', 'script'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\scriptCapitalL', 'L', 'mord', 'script'); // NOTE: Not TeX?\r\n\r\ndefineSymbol('\\\\gothicCapitalC', 'C', 'mord', 'fraktur'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\gothicCapitalH', 'H', 'mord', 'fraktur'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\gothicCapitalI', 'I', 'mord', 'fraktur'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\gothicCapitalR', 'R', 'mord', 'fraktur'); // NOTE: Not TeX?\r\n\r\ndefineSymbol('\\\\pounds', '\\u00a3');\r\ndefineSymbol('\\\\yen', '\\u00a5', 'mord', 'ams');\r\ndefineSymbol('\\\\euro', '\\u20AC'); // NOTE: not TeX built-in, but textcomp package\r\n\r\n// TODO Koppa, Stigma, Sampi\r\n\r\n// Math and Text\r\n\r\ndefineSymbol('\\\\dagger', '\\u2020', 'mbin');\r\ndefineSymbol('\\\\dag', '\\u2020', 'mbin');\r\ndefineSymbol('\\\\ddag', '\\u2021', 'mbin');\r\ndefineSymbol('\\\\ddagger', '\\u2021', 'mbin');\r\ndefineSymbol('\\\\maltese', '\\u2720', 'mord', 'ams');\r\n\r\n// Arrow Symbols\r\n\r\ndefineSymbol('\\\\rightarrow', '\\u2192', 'mrel');\r\ndefineSymbol('\\\\to', '\\u2192', 'mrel');\r\ndefineSymbol('\\\\leftarrow', '\\u2190', 'mrel');\r\ndefineSymbol('\\\\gets', '\\u2190', 'mrel');\r\ndefineSymbol('\\\\Rightarrow', '\\u21d2', 'mrel');\r\ndefineSymbol('\\\\Leftarrow', '\\u21d0', 'mrel');\r\ndefineSymbol('\\\\longrightarrow', '\\u27f6', 'mrel');\r\ndefineSymbol('\\\\longleftarrow', '\\u27f5', 'mrel');\r\ndefineSymbol('\\\\Longrightarrow', '\\u27f9', 'mrel');\r\ndefineSymbol('\\\\implies', '\\u27f9', 'mrel');\r\ndefineSymbol('\\\\Longleftarrow', '\\u27f8', 'mrel');\r\ndefineSymbol('\\\\impliedby', '\\u27f8', 'mrel');\r\ndefineSymbol('\\\\dashrightarrow', '\\u21e2', 'mrel', 'ams');\r\ndefineSymbol('\\\\dashleftarrow', '\\u21e0', 'mrel', 'ams');\r\ndefineSymbol('\\\\Rrightarrow', '\\u21db', 'mrel', 'ams');\r\ndefineSymbol('\\\\Lleftarrow', '\\u21da', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\longleftrightarrow', '\\u27f7', 'mrel');\r\ndefineSymbol('\\\\biconditional', '\\u27f7', 'mrel');\r\ndefineSymbol('\\\\Longleftrightarrow', '\\u27fa', 'mrel');\r\n\r\ndefineSymbol('\\\\leftrightarrows', '\\u21c6', 'mrel', 'ams');\r\ndefineSymbol('\\\\rightleftarrows', '\\u21c4', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\mapsto', '\\u21a6', 'mrel');\r\ndefineSymbol('\\\\longmapsto', '\\u27fc', 'mrel');\r\n\r\ndefineSymbol('\\\\uparrow', '\\u2191', 'mrel');\r\ndefineSymbol('\\\\downarrow', '\\u2193', 'mrel');\r\ndefineSymbol('\\\\Uparrow', '\\u21d1', 'mrel');\r\ndefineSymbol('\\\\Downarrow', '\\u21d3', 'mrel');\r\ndefineSymbol('\\\\updownarrow', '\\u2195', 'mrel');\r\ndefineSymbol('\\\\Updownarrow', '\\u21d5', 'mrel');\r\n\r\ndefineSymbol('\\\\curvearrowright', '\\u21b7', 'mrel', 'ams');\r\ndefineSymbol('\\\\curvearrowleft', '\\u21b6', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\hookrightarrow', '\\u21aa', 'mrel');\r\ndefineSymbol('\\\\hookleftarrow', '\\u21a9', 'mrel');\r\n\r\ndefineSymbol('\\\\rightharpoonup', '\\u21c0', 'mrel');\r\ndefineSymbol('\\\\leftharpoonup', '\\u21bc', 'mrel');\r\ndefineSymbol('\\\\rightharpoondown', '\\u21c1', 'mrel');\r\ndefineSymbol('\\\\leftharpoondown', '\\u21bd', 'mrel');\r\n\r\ndefineSymbol('\\\\rightrightarrows', '\\u21c9', 'mrel', 'ams');\r\ndefineSymbol('\\\\leftleftarrows', '\\u21c7', 'mrel', 'ams');\r\ndefineSymbol('\\\\upuparrows', '\\u21c8', 'mrel', 'ams');\r\ndefineSymbol('\\\\downdownarrows', '\\u21ca', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\leftarrowtail', '\\u21a2', 'mrel', 'ams');\r\ndefineSymbol('\\\\rightarrowtail', '\\u21a3', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\looparrowright', '\\u21ac', 'mrel', 'ams');\r\ndefineSymbol('\\\\looparrowleft', '\\u21ab', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\twoheadleftarrow', '\\u219e', 'mrel', 'ams');\r\ndefineSymbol('\\\\twoheadrightarrow', '\\u21a0', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\rightleftharpoons', '\\u21cc', 'mrel');\r\ndefineSymbol('\\\\leftrightharpoons', '\\u21cb', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\Rsh', '\\u21b1', 'mrel', 'ams');\r\ndefineSymbol('\\\\Lsh', '\\u21b0', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\searrow', '\\u2198', 'mrel');\r\ndefineSymbol('\\\\nearrow', '\\u2197', 'mrel');\r\ndefineSymbol('\\\\swarrow', '\\u2199', 'mrel');\r\ndefineSymbol('\\\\nwarrow', '\\u2196', 'mrel');\r\n\r\ndefineSymbol('\\\\circlearrowright', '\\u21bb', 'mrel', 'ams');\r\ndefineSymbol('\\\\circlearrowleft', '\\u21ba', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\restriction', '\\u21be', 'mrel', 'ams');\r\ndefineSymbol('\\\\upharpoonright', '\\u21be', 'mrel', 'ams');\r\ndefineSymbol('\\\\upharpoonleft', '\\u21bf', 'mrel', 'ams');\r\ndefineSymbol('\\\\downharpoonright', '\\u21c2', 'mrel', 'ams');\r\ndefineSymbol('\\\\downharpoonleft', '\\u21c3', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\rightsquigarrow', '\\u21dd', 'mrel', 'ams');\r\ndefineSymbol('\\\\leadsto', '\\u21dd', 'mrel', 'ams');\r\ndefineSymbol('\\\\leftrightsquigarrow', '\\u21ad', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\originalof', '\\u22B6', 'mrel');\r\ndefineSymbol('\\\\imageof', '\\u22B7', 'mrel');\r\ndefineSymbol('\\\\multimap', '\\u22b8', 'mrel', 'ams');\r\n\r\n// 'ams' Negated Arrows\r\n\r\ndefineSymbol('\\\\nrightarrow', '\\u219b', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleftarrow', '\\u219a', 'mrel', 'ams');\r\ndefineSymbol('\\\\nRightarrow', '\\u21cf', 'mrel', 'ams');\r\ndefineSymbol('\\\\nLeftarrow', '\\u21cd', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleftrightarrow', '\\u21ae', 'mrel', 'ams');\r\ndefineSymbol('\\\\nLeftrightarrow', '\\u21ce', 'mrel', 'ams');\r\n\r\n// 'ams' Negated Binary Relations\r\n\r\ndefineSymbol('\\\\nless', '\\u226e', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleqslant', '\\ue010', 'mrel', 'ams');\r\ndefineSymbol('\\\\lneq', '\\u2a87', 'mrel', 'ams');\r\ndefineSymbol('\\\\lneqq', '\\u2268', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleqq', '\\ue011', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\unlhd', '\\u22b4', 'mbin', 'ams');\r\ndefineSymbol('\\\\unrhd', '\\u22b5', 'mbin', 'ams');\r\n\r\ndefineSymbol('\\\\lvertneqq', '\\ue00c', 'mrel', 'ams');\r\ndefineSymbol('\\\\lnsim', '\\u22e6', 'mrel', 'ams');\r\ndefineSymbol('\\\\lnapprox', '\\u2a89', 'mrel', 'ams');\r\ndefineSymbol('\\\\nprec', '\\u2280', 'mrel', 'ams');\r\ndefineSymbol('\\\\npreceq', '\\u22e0', 'mrel', 'ams');\r\ndefineSymbol('\\\\precnsim', '\\u22e8', 'mrel', 'ams');\r\ndefineSymbol('\\\\precnapprox', '\\u2ab9', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsim', '\\u2241', 'mrel', 'ams');\r\ndefineSymbol('\\\\nshortmid', '\\ue006', 'mrel', 'ams');\r\ndefineSymbol('\\\\nmid', '\\u2224', 'mrel', 'ams');\r\ndefineSymbol('\\\\nvdash', '\\u22ac', 'mrel', 'ams');\r\ndefineSymbol('\\\\nvDash', '\\u22ad', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngtr', '\\u226f', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngeqslant', '\\ue00f', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngeqq', '\\ue00e', 'mrel', 'ams');\r\ndefineSymbol('\\\\gneq', '\\u2a88', 'mrel', 'ams');\r\ndefineSymbol('\\\\gneqq', '\\u2269', 'mrel', 'ams');\r\ndefineSymbol('\\\\gvertneqq', '\\ue00d', 'mrel', 'ams');\r\ndefineSymbol('\\\\gnsim', '\\u22e7', 'mrel', 'ams');\r\ndefineSymbol('\\\\gnapprox', '\\u2a8a', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsucc', '\\u2281', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsucceq', '\\u22e1', 'mrel', 'ams');\r\ndefineSymbol('\\\\succnsim', '\\u22e9', 'mrel', 'ams');\r\ndefineSymbol('\\\\succnapprox', '\\u2aba', 'mrel', 'ams');\r\ndefineSymbol('\\\\ncong', '\\u2246', 'mrel', 'ams');\r\ndefineSymbol('\\\\nshortparallel', '\\ue007', 'mrel', 'ams');\r\ndefineSymbol('\\\\nparallel', '\\u2226', 'mrel', 'ams');\r\ndefineSymbol('\\\\nVDash', '\\u22af', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsupseteqq', '\\ue018', 'mrel', 'ams');\r\ndefineSymbol('\\\\supsetneq', '\\u228b', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsupsetneq', '\\ue01b', 'mrel', 'ams');\r\ndefineSymbol('\\\\supsetneqq', '\\u2acc', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsupsetneqq', '\\ue019', 'mrel', 'ams');\r\ndefineSymbol('\\\\nVdash', '\\u22ae', 'mrel', 'ams');\r\ndefineSymbol('\\\\precneqq', '\\u2ab5', 'mrel', 'ams');\r\ndefineSymbol('\\\\succneqq', '\\u2ab6', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsubseteqq', '\\ue016', 'mrel', 'ams');\r\n\r\n// 'ams' Misc\r\n\r\ndefineSymbol('\\\\checkmark', '\\u2713', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\diagup', '\\u2571', 'mord', 'ams');\r\ndefineSymbol('\\\\diagdown', '\\u2572', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\measuredangle', '\\u2221', 'mord', 'ams');\r\ndefineSymbol('\\\\sphericalangle', '\\u2222', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\backprime', '\\u2035', 'mord', 'ams');\r\ndefineSymbol('\\\\backdoubleprime', '\\u2036', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\ast', '\\u2217', 'mbin');\r\ndefineSymbol('\\\\star', '\\u22c6', 'mbin');\r\ndefineSymbol('\\\\diamond', '\\u22c4', 'mbin');\r\ndefineSymbol('\\\\Diamond', '\\u25ca', 'mord', 'ams');\r\ndefineSymbol('\\\\lozenge', '\\u25ca', 'mord', 'ams');\r\ndefineSymbol('\\\\blacklozenge', '\\u29eb', 'mord', 'ams');\r\ndefineSymbol('\\\\bigstar', '\\u2605', 'mord', 'ams');\r\n\r\n// 'ams' Hebrew\r\n\r\ndefineSymbol('\\\\aleph', '\\u2135');\r\ndefineSymbol('\\\\beth', '\\u2136', 'mord', 'ams');\r\ndefineSymbol('\\\\daleth', '\\u2138', 'mord', 'ams');\r\ndefineSymbol('\\\\gimel', '\\u2137', 'mord', 'ams');\r\n\r\n// 'ams' Delimiters\r\n\r\ndefineSymbol('\\\\lbrace', '{', 'mopen');\r\ndefineSymbol('\\\\rbrace', '}', 'mclose');\r\ndefineSymbol('\\\\langle', '\\u27e8', 'mopen');\r\ndefineSymbol('\\\\rangle', '\\u27e9', 'mclose');\r\ndefineSymbol('\\\\lfloor', '\\u230a', 'mopen');\r\ndefineSymbol('\\\\rfloor', '\\u230b', 'mclose');\r\ndefineSymbol('\\\\lceil', '\\u2308', 'mopen');\r\ndefineSymbol('\\\\rceil', '\\u2309', 'mclose');\r\n\r\ndefineSymbol('\\\\vert', '\\u2223');\r\ndefineSymbol('\\\\mvert', '\\u2223', 'mrel');\r\ndefineSymbol('\\\\lvert', '\\u2223', 'mopen');\r\ndefineSymbol('\\\\rvert', '\\u2223', 'mclose');\r\ndefineSymbol('\\\\|', '\\u2225');\r\ndefineSymbol('\\\\Vert', '\\u2225');\r\ndefineSymbol('\\\\mVert', '\\u2225');\r\ndefineSymbol('\\\\lVert', '\\u2225', 'mopen');\r\ndefineSymbol('\\\\rVert', '\\u2225', 'mclose');\r\ndefineSymbol('\\\\parallel', '\\u2225', 'mrel');\r\ndefineSymbol('\\\\shortparallel', '\\u2225', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\lbrack', '[', 'mopen');\r\ndefineSymbol('\\\\rbrack', ']', 'mclose');\r\ndefineSymbol('\\\\{', '{', 'mopen');\r\ndefineSymbol('\\\\}', '}', 'mclose');\r\n\r\ndefineSymbol('(', '(', 'mopen');\r\ndefineSymbol(')', ')', 'mclose');\r\ndefineSymbol('[', '[', 'mopen');\r\ndefineSymbol(']', ']', 'mclose');\r\n\r\ndefineSymbol('\\\\ulcorner', '\\u250c', 'mopen', 'ams');\r\ndefineSymbol('\\\\urcorner', '\\u2510', 'mclose', 'ams');\r\ndefineSymbol('\\\\llcorner', '\\u2514', 'mopen', 'ams');\r\ndefineSymbol('\\\\lrcorner', '\\u2518', 'mclose', 'ams');\r\n\r\n// Large Delimiters\r\n\r\ndefineSymbol('\\\\lgroup', '\\u27ee', 'mopen');\r\ndefineSymbol('\\\\rgroup', '\\u27ef', 'mclose');\r\ndefineSymbol('\\\\lmoustache', '\\u23b0', 'mopen');\r\ndefineSymbol('\\\\rmoustache', '\\u23b1', 'mclose');\r\n\r\n// Relations\r\n\r\ndefineSymbol('=', '=', 'mrel');\r\ndefineSymbol('\\\\ne', '\\u2260', 'mrel');\r\ndefineSymbol('\\\\neq', '\\u2260', 'mrel');\r\n// defineSymbol( '\\\\longequal', '\\uF7D9',  'mrel',  MAIN);   // NOTE: Not TeX\r\n\r\ndefineSymbol('<', '<', 'mrel');\r\ndefineSymbol('\\\\lt', '<', 'mrel');\r\ndefineSymbol('>', '>', 'mrel');\r\ndefineSymbol('\\\\gt', '>', 'mrel');\r\n\r\ndefineSymbol('\\\\le', '\\u2264', 'mrel');\r\ndefineSymbol('\\\\leq', '\\u2264', 'mrel');\r\ndefineSymbol('\\\\ge', '\\u2265', 'mrel');\r\ndefineSymbol('\\\\geq', '\\u2265', 'mrel');\r\n\r\ndefineSymbol('\\\\leqslant', '\\u2a7d', 'mrel', 'ams');\r\ndefineSymbol('\\\\geqslant', '\\u2a7e', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\ll', '\\u226a', 'mrel');\r\ndefineSymbol('\\\\gg', '\\u226b', 'mrel');\r\ndefineSymbol('\\\\coloneq', '\\u2254', 'mrel');\r\ndefineSymbol('\\\\measeq', '\\u225d', 'mrel'); // MEASSURED BY\r\ndefineSymbol('\\\\eqdef', '\\u225e', 'mrel');\r\ndefineSymbol('\\\\questeq', '\\u225f', 'mrel'); // QUESTIONED EQUAL TO\r\n\r\ndefineSymbol(':', ':', 'mrel');\r\ndefineSymbol('\\\\cong', '\\u2245', 'mrel');\r\n\r\ndefineSymbol('\\\\equiv', '\\u2261', 'mrel');\r\n\r\ndefineSymbol('\\\\prec', '\\u227a', 'mrel');\r\ndefineSymbol('\\\\preceq', '\\u2aaf', 'mrel');\r\ndefineSymbol('\\\\succ', '\\u227b', 'mrel');\r\ndefineSymbol('\\\\succeq', '\\u2ab0', 'mrel');\r\n\r\ndefineSymbol('\\\\perp', '\\u22a5', 'mrel');\r\n\r\ndefineSymbol('\\\\propto', '\\u221d', 'mrel');\r\ndefineSymbol('\\\\Colon', '\\u2237', 'mrel');\r\n\r\ndefineSymbol('\\\\smile', '\\u2323', 'mrel');\r\ndefineSymbol('\\\\frown', '\\u2322', 'mrel');\r\n\r\ndefineSymbol('\\\\sim', '\\u223c', 'mrel');\r\ndefineSymbol('\\\\gtrsim', '\\u2273', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\approx', '\\u2248', 'mrel');\r\n\r\ndefineSymbol('\\\\approxeq', '\\u224a', 'mrel', 'ams');\r\ndefineSymbol('\\\\thickapprox', '\\u2248', 'mrel', 'ams');\r\ndefineSymbol('\\\\lessapprox', '\\u2a85', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtrapprox', '\\u2a86', 'mrel', 'ams');\r\ndefineSymbol('\\\\precapprox', '\\u2ab7', 'mrel', 'ams');\r\ndefineSymbol('\\\\succapprox', '\\u2ab8', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\thicksim', '\\u223c', 'mrel', 'ams');\r\ndefineSymbol('\\\\succsim', '\\u227f', 'mrel', 'ams');\r\ndefineSymbol('\\\\precsim', '\\u227e', 'mrel', 'ams');\r\ndefineSymbol('\\\\backsim', '\\u223d', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqsim', '\\u2242', 'mrel', 'ams');\r\ndefineSymbol('\\\\backsimeq', '\\u22cd', 'mrel', 'ams');\r\ndefineSymbol('\\\\simeq', '\\u2243', 'mrel');\r\ndefineSymbol('\\\\lesssim', '\\u2272', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\nleq', '\\u2270', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngeq', '\\u2271', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\smallsmile', '\\u2323', 'mrel', 'ams');\r\ndefineSymbol('\\\\smallfrown', '\\u2322', 'mrel', 'ams');\r\ndefineSymbol('\\\\bowtie', '\\u22c8', 'mrel');\r\ndefineSymbol('\\\\Join', '\\u22c8', 'mrel');\r\n\r\ndefineSymbol('\\\\asymp', '\\u224d', 'mrel');\r\n\r\ndefineSymbol('\\\\sqsubseteq', '\\u2291', 'mrel');\r\ndefineSymbol('\\\\sqsupseteq', '\\u2292', 'mrel');\r\n\r\ndefineSymbol('\\\\leqq', '\\u2266', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqslantless', '\\u2a95', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\lll', '\\u22d8', 'mrel', 'ams');\r\ndefineSymbol('\\\\lessgtr', '\\u2276', 'mrel', 'ams');\r\ndefineSymbol('\\\\lesseqgtr', '\\u22da', 'mrel', 'ams');\r\ndefineSymbol('\\\\lesseqqgtr', '\\u2a8b', 'mrel', 'ams');\r\ndefineSymbol('\\\\risingdotseq', '\\u2253', 'mrel', 'ams');\r\ndefineSymbol('\\\\fallingdotseq', '\\u2252', 'mrel', 'ams');\r\ndefineSymbol('\\\\subseteqq', '\\u2ac5', 'mrel', 'ams');\r\ndefineSymbol('\\\\Subset', '\\u22d0', 'mrel', 'ams');\r\ndefineSymbol('\\\\sqsubset', '\\u228f', 'mrel', 'ams');\r\ndefineSymbol('\\\\preccurlyeq', '\\u227c', 'mrel', 'ams');\r\ndefineSymbol('\\\\curlyeqprec', '\\u22de', 'mrel', 'ams');\r\ndefineSymbol('\\\\vDash', '\\u22a8', 'mrel', 'ams');\r\ndefineSymbol('\\\\Vvdash', '\\u22aa', 'mrel', 'ams');\r\ndefineSymbol('\\\\bumpeq', '\\u224f', 'mrel', 'ams');\r\ndefineSymbol('\\\\Bumpeq', '\\u224e', 'mrel', 'ams');\r\ndefineSymbol('\\\\geqq', '\\u2267', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqslantgtr', '\\u2a96', 'mrel', 'ams');\r\ndefineSymbol('\\\\ggg', '\\u22d9', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtrless', '\\u2277', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtreqless', '\\u22db', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtreqqless', '\\u2a8c', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\supseteqq', '\\u2ac6', 'mrel', 'ams');\r\ndefineSymbol('\\\\Supset', '\\u22d1', 'mrel', 'ams');\r\ndefineSymbol('\\\\sqsupset', '\\u2290', 'mrel', 'ams');\r\ndefineSymbol('\\\\succcurlyeq', '\\u227d', 'mrel', 'ams');\r\ndefineSymbol('\\\\curlyeqsucc', '\\u22df', 'mrel', 'ams');\r\ndefineSymbol('\\\\Vdash', '\\u22a9', 'mrel', 'ams');\r\ndefineSymbol('\\\\shortmid', '\\u2223', 'mrel', 'ams');\r\ndefineSymbol('\\\\between', '\\u226c', 'mrel', 'ams');\r\ndefineSymbol('\\\\pitchfork', '\\u22d4', 'mrel', 'ams');\r\ndefineSymbol('\\\\varpropto', '\\u221d', 'mrel', 'ams');\r\ndefineSymbol('\\\\backepsilon', '\\u220d', 'mrel', 'ams');\r\ndefineSymbol('\\\\llless', '\\u22d8', 'mrel', 'ams');\r\ndefineSymbol('\\\\gggtr', '\\u22d9', 'mrel', 'ams');\r\ndefineSymbol('\\\\lhd', '\\u22b2', 'mbin', 'ams');\r\ndefineSymbol('\\\\rhd', '\\u22b3', 'mbin', 'ams');\r\n\r\ndefineSymbol('\\\\doteq', '\\u2250', 'mrel');\r\ndefineSymbol('\\\\doteqdot', '\\u2251', 'mrel', 'ams');\r\ndefineSymbol('\\\\Doteq', '\\u2251', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqcirc', '\\u2256', 'mrel', 'ams');\r\ndefineSymbol('\\\\circeq', '\\u2257', 'mrel', 'ams');\r\ndefineSymbol('\\\\lessdot', '\\u22d6', 'mbin', 'ams');\r\ndefineSymbol('\\\\gtrdot', '\\u22d7', 'mbin', 'ams');\r\n\r\n// In TeX, '~' is a spacing command (non-breaking space).\r\n// However, '~' is used as an ASCII Math shortctut character, so define a \\\\~\r\n// command which maps to the '~' character\r\ndefineSymbol('\\\\~', '~', 'mrel');\r\n\r\ndefineSymbol('\\\\leftrightarrow', '\\u2194', 'mrel');\r\ndefineSymbol('\\\\Leftrightarrow', '\\u21d4', 'mrel');\r\ndefineSymbol('\\\\models', '\\u22a8', 'mrel');\r\ndefineSymbol('\\\\vdash', '\\u22a2', 'mrel');\r\n\r\ndefineSymbol('\\\\therefore', '\\u2234', 'mrel', 'ams');\r\ndefineSymbol('\\\\because', '\\u2235', 'mrel', 'ams');\r\ndefineSymbol('\\\\dashv', '\\u22a3', 'mrel');\r\ndefineSymbol('\\\\roundimplies', '\\u2970', 'mrel');\r\n\r\n// 'ams' Binary Operators\r\n\r\ndefineSymbol('+', '+', 'mbin');\r\ndefineSymbol('-', '\\u2212', 'mbin');\r\ndefineSymbol('\\u2212', '\\u2212', 'mbin');\r\ndefineSymbol('\\\\pm', '\\u00b1', 'mbin');\r\ndefineSymbol('\\\\mp', '\\u2213', 'mbin');\r\ndefineSymbol('*', '\\u2217', 'mbin');\r\ndefineSymbol('\\\\times', '\\u00d7', 'mbin');\r\ndefineSymbol('\\\\div', '\\u00f7', 'mbin');\r\ndefineSymbol('\\\\surd', '\\u221a');\r\n\r\ndefineSymbol('\\\\divides', '\\u2223', 'mbin');\r\n// From MnSymbol package\r\n\r\ndefineSymbol('\\\\ltimes', '\\u22c9', 'mbin', 'ams');\r\ndefineSymbol('\\\\rtimes', '\\u22ca', 'mbin', 'ams');\r\ndefineSymbol('\\\\leftthreetimes', '\\u22cb', 'mbin', 'ams');\r\ndefineSymbol('\\\\rightthreetimes', '\\u22cc', 'mbin', 'ams');\r\ndefineSymbol('\\\\intercal', '\\u22ba', 'mbin', 'ams');\r\ndefineSymbol('\\\\dotplus', '\\u2214', 'mbin', 'ams');\r\ndefineSymbol('\\\\doublebarwedge', '\\u2a5e', 'mbin', 'ams');\r\ndefineSymbol('\\\\divideontimes', '\\u22c7', 'mbin', 'ams');\r\ndefineSymbol('\\\\centerdot', '\\u22c5', 'mbin', 'ams');\r\ndefineSymbol('\\\\cdot', '\\u22c5', 'mbin');\r\n\r\ndefineSymbol('\\\\infty', '\\u221e');\r\ndefineSymbol('\\\\prime', '\\u2032');\r\ndefineSymbol('\\\\doubleprime', '\\u2033'); // NOTE: Not in TeX, but Mathematica\r\ndefineSymbol('\\\\angle', '\\u2220');\r\ndefineSymbol('`', '\\u2018');\r\ndefineSymbol('\\\\$', '$');\r\ndefineSymbol('\\\\%', '%');\r\ndefineSymbol('\\\\_', '_');\r\n\r\n// Note: In TeX, greek symbols are only available in Math mode\r\ndefineSymbol('\\\\alpha', '\\u03b1');\r\ndefineSymbol('\\\\beta', '\\u03b2');\r\ndefineSymbol('\\\\gamma', '\\u03b3');\r\ndefineSymbol('\\\\delta', '\\u03b4');\r\ndefineSymbol('\\\\epsilon', '\\u03f5');\r\ndefineSymbol('\\\\varepsilon', '\\u03b5');\r\ndefineSymbol('\\\\zeta', '\\u03b6');\r\ndefineSymbol('\\\\eta', '\\u03b7');\r\ndefineSymbol('\\\\theta', '\\u03b8');\r\ndefineSymbol('\\\\vartheta', '\\u03d1');\r\ndefineSymbol('\\\\iota', '\\u03b9');\r\ndefineSymbol('\\\\kappa', '\\u03ba');\r\ndefineSymbol('\\\\varkappa', '\\u03f0', 'mord', 'ams');\r\ndefineSymbol('\\\\lambda', '\\u03bb');\r\ndefineSymbol('\\\\mu', '\\u03bc');\r\ndefineSymbol('\\\\nu', '\\u03bd');\r\ndefineSymbol('\\\\xi', '\\u03be');\r\ndefineSymbol('\\\\omicron', 'o');\r\ndefineSymbol('\\\\pi', '\\u03c0');\r\ndefineSymbol('\\\\varpi', '\\u03d6');\r\ndefineSymbol('\\\\rho', '\\u03c1');\r\ndefineSymbol('\\\\varrho', '\\u03f1');\r\ndefineSymbol('\\\\sigma', '\\u03c3');\r\ndefineSymbol('\\\\varsigma', '\\u03c2');\r\ndefineSymbol('\\\\tau', '\\u03c4');\r\ndefineSymbol('\\\\phi', '\\u03d5');\r\ndefineSymbol('\\\\varphi', '\\u03c6');\r\ndefineSymbol('\\\\upsilon', '\\u03c5');\r\ndefineSymbol('\\\\chi', '\\u03c7');\r\ndefineSymbol('\\\\psi', '\\u03c8');\r\ndefineSymbol('\\\\omega', '\\u03c9');\r\n\r\ndefineSymbol('\\\\Gamma', '\\u0393');\r\ndefineSymbol('\\\\Delta', '\\u0394');\r\ndefineSymbol('\\\\Theta', '\\u0398');\r\ndefineSymbol('\\\\Lambda', '\\u039b');\r\ndefineSymbol('\\\\Xi', '\\u039e');\r\ndefineSymbol('\\\\Pi', '\\u03a0');\r\ndefineSymbol('\\\\Sigma', '\\u03a3');\r\ndefineSymbol('\\\\Upsilon', '\\u03a5');\r\ndefineSymbol('\\\\Phi', '\\u03a6');\r\ndefineSymbol('\\\\Psi', '\\u03a8');\r\ndefineSymbol('\\\\Omega', '\\u03a9');\r\n\r\n// 'ams' Greek\r\ndefineSymbol('\\\\digamma', '\\u03dd', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\emptyset', '\\u2205');\r\ndefineSymbol('\\\\varnothing', '\\u2205', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\cap', '\\u2229', 'mbin');\r\ndefineSymbol('\\\\cup', '\\u222a', 'mbin');\r\ndefineSymbol('\\\\setminus', '\\u2216', 'mbin');\r\ndefineSymbol('\\\\smallsetminus', '\\u2216', 'mbin', 'ams');\r\ndefineSymbol('\\\\complement', '\\u2201', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\in', '\\u2208', 'mrel');\r\ndefineSymbol('\\\\notin', '\\u2209', 'mrel');\r\ndefineSymbol('\\\\not', '\\u0338', 'mrel');\r\ndefineSymbol('\\\\ni', '\\u220b', 'mrel');\r\ndefineSymbol('\\\\owns', '\\u220b', 'mrel');\r\ndefineSymbol('\\\\subset', '\\u2282', 'mrel');\r\ndefineSymbol('\\\\supset', '\\u2283', 'mrel');\r\ndefineSymbol('\\\\subseteq', '\\u2286', 'mrel');\r\ndefineSymbol('\\\\supseteq', '\\u2287', 'mrel');\r\ndefineSymbol('\\\\subsetneq', '\\u228a', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsubsetneq', '\\ue01a', 'mrel', 'ams');\r\ndefineSymbol('\\\\subsetneqq', '\\u2acb', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsubsetneqq', '\\ue017', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsubset', '\\u2284', 'mrel', 'ams'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\nsupset', '\\u2285', 'mrel', 'ams'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\nsubseteq', '\\u2288', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsupseteq', '\\u2289', 'mrel', 'ams');\r\n\r\n// See http://tex.stackexchange.com/questions/41476/lengths-and-when-to-use-them\r\ndefineSymbol('\\\\ ', '\\u00a0', 'spacing');\r\ndefineSymbol('~', '\\u00a0', 'spacing');\r\ndefineSymbol('\\\\space', '\\u00a0', 'spacing');\r\n\r\ndefineSymbol('\\\\!', null, 'spacing');\r\ndefineSymbol('\\\\,', null, 'spacing');\r\ndefineSymbol('\\\\:', null, 'spacing');\r\ndefineSymbol('\\\\;', null, 'spacing');\r\ndefineSymbol('\\\\enskip', null, 'spacing');\r\n// \\enspace is a TeX command (not LaTeX) equivalent to a \\skip\r\ndefineSymbol('\\\\enspace', null, 'spacing');\r\ndefineSymbol('\\\\quad', null, 'spacing');\r\ndefineSymbol('\\\\qquad', null, 'spacing');\r\n\r\n// Punctuation\r\n\r\ndefineSymbol('\\\\colon', ':', 'mpunct');\r\ndefineSymbol('\\\\cdotp', '\\u22c5', 'mpunct');\r\ndefineSymbol('\\\\cdots', '\\u22ef', 'minner');\r\ndefineSymbol('\\\\ddots', '\\u22f1', 'minner');\r\ndefineSymbol('\\\\ldots', '\\u2026', 'minner');\r\ndefineSymbol('\\\\mathellipsis', '\\u2026', 'minner');\r\ndefineSymbol('\\\\vdots', '\\u22ee');\r\ndefineSymbol('\\\\ldotp', '\\u002e', 'mpunct');\r\ndefineSymbol(',', ',', 'mpunct');\r\ndefineSymbol(';', ';', 'mpunct');\r\n\r\ndefineSymbol('\\\\land', '\\u2227', 'mbin');\r\ndefineSymbol('\\\\wedge', '\\u2227', 'mbin');\r\ndefineSymbol('\\\\lor', '\\u2228', 'mbin');\r\ndefineSymbol('\\\\vee', '\\u2228', 'mbin');\r\ndefineSymbol('\\\\lnot', '\\u00ac');\r\ndefineSymbol('\\\\neg', '\\u00ac');\r\n\r\ndefineSymbol('\\\\barwedge', '\\u22bc', 'mbin', 'ams');\r\ndefineSymbol('\\\\veebar', '\\u22bb', 'mbin', 'ams');\r\ndefineSymbol('\\\\nor', '\\u22bb', 'mbin', 'ams'); // NOTE: Not TeX, Mathematica\r\ndefineSymbol('\\\\curlywedge', '\\u22cf', 'mbin', 'ams');\r\ndefineSymbol('\\\\curlyvee', '\\u22ce', 'mbin', 'ams');\r\n\r\ndefineSymbol('\\\\square', '\\u25a1', 'mord', 'ams');\r\ndefineSymbol('\\\\Box', '\\u25a1', 'mord', 'ams');\r\ndefineSymbol('\\\\blacksquare', '\\u25a0', 'mord', 'ams');\r\ndefineSymbol('\\\\boxminus', '\\u229f', 'mbin', 'ams');\r\ndefineSymbol('\\\\boxplus', '\\u229e', 'mbin', 'ams');\r\ndefineSymbol('\\\\boxtimes', '\\u22a0', 'mbin', 'ams');\r\ndefineSymbol('\\\\boxdot', '\\u22a1', 'mbin', 'ams');\r\n\r\ndefineSymbol('\\\\circ', '\\u2218', 'mbin');\r\ndefineSymbol('\\\\bigcirc', '\\u25ef', 'mbin');\r\ndefineSymbol('\\\\bullet', '\\u2219', 'mbin');\r\ndefineSymbol('\\\\circleddash', '\\u229d', 'mbin', 'ams');\r\ndefineSymbol('\\\\circledast', '\\u229b', 'mbin', 'ams');\r\ndefineSymbol('\\\\oplus', '\\u2295', 'mbin');\r\ndefineSymbol('\\\\ominus', '\\u2296', 'mbin');\r\ndefineSymbol('\\\\otimes', '\\u2297', 'mbin');\r\ndefineSymbol('\\\\odot', '\\u2299', 'mbin');\r\ndefineSymbol('\\\\circledcirc', '\\u229a', 'mbin', 'ams');\r\ndefineSymbol('\\\\oslash', '\\u2298', 'mbin');\r\ndefineSymbol('\\\\circledS', '\\u24c8', 'mord', 'ams');\r\ndefineSymbol('\\\\circledR', '\\u00ae', 'mord', 'ams');\r\n\r\ndefineSymbol('\\\\triangle', '\\u25b3');\r\ndefineSymbol('\\\\bigtriangleup', '\\u25b3', 'mbin');\r\ndefineSymbol('\\\\vartriangle', '\\u25b3', 'mrel', 'ams');\r\ndefineSymbol('\\\\triangleq', '\\u225c', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\triangledown', '\\u25bd', 'mord', 'ams');\r\ndefineSymbol('\\\\bigtriangledown', '\\u25bd', 'mbin');\r\n\r\ndefineSymbol('\\\\triangleleft', '\\u25c3', 'mbin');\r\ndefineSymbol('\\\\vartriangleleft', '\\u22b2', 'mrel', 'ams');\r\ndefineSymbol('\\\\trianglelefteq', '\\u22b4', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntriangleleft', '\\u22ea', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntrianglelefteq', '\\u22ec', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\triangleright', '\\u25b9', 'mbin');\r\ndefineSymbol('\\\\vartriangleright', '\\u22b3', 'mrel', 'ams');\r\ndefineSymbol('\\\\trianglerighteq', '\\u22b5', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntriangleright', '\\u22eb', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntrianglerighteq', '\\u22ed', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\blacktriangle', '\\u25b2', 'mord', 'ams');\r\ndefineSymbol('\\\\blacktriangledown', '\\u25bc', 'mord', 'ams');\r\ndefineSymbol('\\\\blacktriangleleft', '\\u25c0', 'mrel', 'ams');\r\ndefineSymbol('\\\\blacktriangleright', '\\u25b6', 'mrel', 'ams');\r\n\r\ndefineSymbol('\\\\/', '/');\r\ndefineSymbol('|', '\\u2223', 'textord');\r\n\r\ndefineSymbol('\\\\And', '\\u0026', 'mbin');\r\ndefineSymbol('\\\\imath', '\\u0131');\r\ndefineSymbol('\\\\jmath', '\\u0237');\r\n\r\ndefineSymbol('\\\\degree', '\\u00b0');\r\n\r\ndefineSymbol(\"'\", '\\u2032'); // Prime\r\ndefineSymbol('\"', '\\u201D'); // Double Prime\r\n// defineSymbol( \"\\'', '\\u2033',  'mord',  MAIN);       // Double Prime\r\n","/**\r\n * This module deals with creating delimiters of various sizes. The TeXbook\r\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\r\n * x to a specified variable delimiter\" paragraph.\r\n *\r\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\r\n * normal font, but in either text, script, or scriptscript style.\r\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\r\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\r\n * smaller pieces that are stacked on top of one another.\r\n *\r\n * The functions take a parameter `center`, which determines if the delimiter\r\n * should be centered around the axis.\r\n *\r\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\r\n * one of the given sizes. This is used for things like `\\bigl`.\r\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\r\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\r\n * delimiter which surrounds an expression of a given height an depth. It is\r\n * used in `\\left` and `\\right`.\r\n * @summary   Handling of delimiters surrounds symbols.\r\n */\r\n\r\nimport { getValue } from './definitions';\r\nimport {\r\n    makeSymbol,\r\n    makeSpan,\r\n    makeVlist,\r\n    makeStyleWrap,\r\n    SpanType,\r\n    Span,\r\n} from './span';\r\nimport { Mathstyle, MATHSTYLES } from './mathstyle';\r\nimport { getCharacterMetrics, METRICS } from './font-metrics';\r\nimport { Context } from './context';\r\n/**\r\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\r\n * font, but is restyled to either be in textstyle, scriptstyle, or\r\n * scriptscriptstyle.\r\n */\r\nfunction makeSmallDelim(\r\n    type: SpanType,\r\n    delim: string,\r\n    style: Mathstyle,\r\n    center: boolean,\r\n    context: Context,\r\n    classes = ''\r\n): Span {\r\n    const text = makeSymbol('AMS-Regular', getValue('math', delim));\r\n\r\n    const span = makeStyleWrap(type, text, context.mathstyle, style, classes);\r\n\r\n    if (center) {\r\n        span.setTop(\r\n            (1 - context.mathstyle.sizeMultiplier / style.sizeMultiplier) *\r\n                context.mathstyle.metrics.axisHeight\r\n        );\r\n    }\r\n    span.setStyle('color', context.color);\r\n    if (typeof context.opacity === 'number') {\r\n        span.setStyle('opacity', context.opacity);\r\n    }\r\n\r\n    return span;\r\n}\r\n\r\n/**\r\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\r\n * Size3, or Size4 fonts. It is always rendered in textstyle.\r\n */\r\nfunction makeLargeDelim(\r\n    type: SpanType,\r\n    delim: string,\r\n    size: number,\r\n    center: boolean,\r\n    context: Context,\r\n    classes = ''\r\n): Span {\r\n    const result = makeStyleWrap(\r\n        type,\r\n        makeSymbol(\r\n            'Size' + size + '-Regular',\r\n            getValue('math', delim),\r\n            'delimsizing size' + size\r\n        ),\r\n        context.mathstyle,\r\n        MATHSTYLES.textstyle,\r\n        classes\r\n    );\r\n\r\n    if (center) {\r\n        result.setTop(\r\n            (1 - context.mathstyle.sizeMultiplier) *\r\n                context.mathstyle.metrics.axisHeight\r\n        );\r\n    }\r\n    result.setStyle('color', context.color);\r\n    if (typeof context.opacity === 'number') {\r\n        result.setStyle('opacity', context.opacity);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Make an inner span with the given offset and in the given font. This is used\r\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\r\n */\r\nfunction makeInner(symbol: string, font: string): Span {\r\n    let sizeClass = '';\r\n    // Apply the correct CSS class to choose the right font.\r\n    if (font === 'Size1-Regular') {\r\n        sizeClass = ' delim-size1';\r\n    } else if (font === 'Size4-Regular') {\r\n        sizeClass = ' delim-size4';\r\n    }\r\n\r\n    return makeSymbol(\r\n        font,\r\n        getValue('math', symbol),\r\n        'delimsizinginner' + sizeClass\r\n    );\r\n}\r\n\r\n/**\r\n * Make a stacked delimiter out of a given delimiter, with the total height at\r\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\r\n */\r\nfunction makeStackedDelim(\r\n    type: SpanType,\r\n    delim: string,\r\n    heightTotal: number,\r\n    center: boolean,\r\n    context: Context,\r\n    classes = ''\r\n): Span {\r\n    // There are four parts, the top, an optional middle, a repeated part, and a\r\n    // bottom.\r\n    let top: string;\r\n    let middle: string;\r\n    let repeat: string;\r\n    let bottom: string;\r\n    top = repeat = bottom = getValue('math', delim);\r\n    middle = null;\r\n    // Also keep track of what font the delimiters are in\r\n    let font = 'Size1-Regular';\r\n\r\n    // We set the parts and font based on the symbol. Note that we use\r\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\r\n    // repeats of the arrows\r\n    if (\r\n        delim === '\\\\vert' ||\r\n        delim === '\\\\lvert' ||\r\n        delim === '\\\\rvert' ||\r\n        delim === '\\\\mvert' ||\r\n        delim === '\\\\mid'\r\n    ) {\r\n        repeat = top = bottom = '\\u2223';\r\n    } else if (\r\n        delim === '\\\\Vert' ||\r\n        delim === '\\\\lVert' ||\r\n        delim === '\\\\rVert' ||\r\n        delim === '\\\\mVert' ||\r\n        delim === '\\\\|'\r\n    ) {\r\n        repeat = top = bottom = '\\u2225';\r\n    } else if (delim === '\\\\uparrow') {\r\n        repeat = bottom = '\\u23d0';\r\n    } else if (delim === '\\\\Uparrow') {\r\n        repeat = bottom = '\\u2016';\r\n    } else if (delim === '\\\\downarrow') {\r\n        top = repeat = '\\u23d0';\r\n    } else if (delim === '\\\\Downarrow') {\r\n        top = repeat = '\\u2016';\r\n    } else if (delim === '\\\\updownarrow') {\r\n        top = '\\u2191';\r\n        repeat = '\\u23d0';\r\n        bottom = '\\u2193';\r\n    } else if (delim === '\\\\Updownarrow') {\r\n        top = '\\u21d1';\r\n        repeat = '\\u2016';\r\n        bottom = '\\u21d3';\r\n    } else if (delim === '[' || delim === '\\\\lbrack') {\r\n        top = '\\u23a1';\r\n        repeat = '\\u23a2';\r\n        bottom = '\\u23a3';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === ']' || delim === '\\\\rbrack') {\r\n        top = '\\u23a4';\r\n        repeat = '\\u23a5';\r\n        bottom = '\\u23a6';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\lfloor') {\r\n        repeat = top = '\\u23a2';\r\n        bottom = '\\u23a3';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\lceil') {\r\n        top = '\\u23a1';\r\n        repeat = bottom = '\\u23a2';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\rfloor') {\r\n        repeat = top = '\\u23a5';\r\n        bottom = '\\u23a6';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\rceil') {\r\n        top = '\\u23a4';\r\n        repeat = bottom = '\\u23a5';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '(') {\r\n        top = '\\u239b';\r\n        repeat = '\\u239c';\r\n        bottom = '\\u239d';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === ')') {\r\n        top = '\\u239e';\r\n        repeat = '\\u239f';\r\n        bottom = '\\u23a0';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\{' || delim === '\\\\lbrace') {\r\n        top = '\\u23a7';\r\n        middle = '\\u23a8';\r\n        bottom = '\\u23a9';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\}' || delim === '\\\\rbrace') {\r\n        top = '\\u23ab';\r\n        middle = '\\u23ac';\r\n        bottom = '\\u23ad';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\lgroup') {\r\n        top = '\\u23a7';\r\n        bottom = '\\u23a9';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\rgroup') {\r\n        top = '\\u23ab';\r\n        bottom = '\\u23ad';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\lmoustache') {\r\n        top = '\\u23a7';\r\n        bottom = '\\u23ad';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\rmoustache') {\r\n        top = '\\u23ab';\r\n        bottom = '\\u23a9';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\surd') {\r\n        top = '\\ue001';\r\n        bottom = '\\u23b7';\r\n        repeat = '\\ue000';\r\n        font = 'Size4-Regular';\r\n    } else if (delim === '\\\\ulcorner') {\r\n        top = '\\u250c';\r\n        repeat = bottom = ' ';\r\n    } else if (delim === '\\\\urcorner') {\r\n        top = '\\u2510';\r\n        repeat = bottom = ' ';\r\n    } else if (delim === '\\\\llcorner') {\r\n        bottom = '\\u2514';\r\n        repeat = top = ' ';\r\n    } else if (delim === '\\\\lrcorner') {\r\n        top = '\\u2518';\r\n        repeat = top = ' ';\r\n    }\r\n\r\n    // Get the metrics of the four sections\r\n    const topMetrics = getCharacterMetrics(getValue('math', top), font);\r\n    const topHeightTotal = topMetrics.height + topMetrics.depth;\r\n    const repeatMetrics = getCharacterMetrics(getValue('math', repeat), font);\r\n    const repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\r\n    const bottomMetrics = getCharacterMetrics(getValue('math', bottom), font);\r\n    const bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\r\n    let middleHeightTotal = 0;\r\n    let middleFactor = 1;\r\n    if (middle !== null) {\r\n        const middleMetrics = getCharacterMetrics(\r\n            getValue('math', middle),\r\n            font\r\n        );\r\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\r\n        middleFactor = 2; // repeat symmetrically above and below middle\r\n    }\r\n\r\n    // Calculate the minimal height that the delimiter can have.\r\n    // It is at least the size of the top, bottom, and optional middle combined.\r\n    const minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\r\n\r\n    // Compute the number of copies of the repeat symbol we will need\r\n    const repeatCount = Math.ceil(\r\n        (heightTotal - minHeight) / (middleFactor * repeatHeightTotal)\r\n    );\r\n\r\n    // Compute the total height of the delimiter including all the symbols\r\n    const realHeightTotal =\r\n        minHeight + repeatCount * middleFactor * repeatHeightTotal;\r\n\r\n    // The center of the delimiter is placed at the center of the axis. Note\r\n    // that in this context, 'center' means that the delimiter should be\r\n    // centered around the axis in the current style, while normally it is\r\n    // centered around the axis in textstyle.\r\n    let axisHeight = context.mathstyle.metrics.axisHeight;\r\n    if (center) {\r\n        axisHeight *= context.mathstyle.sizeMultiplier;\r\n    }\r\n    // Calculate the depth\r\n    const depth = realHeightTotal / 2 - axisHeight;\r\n\r\n    // Now, we start building the pieces that will go into the vlist\r\n\r\n    // Keep a list of the inner pieces\r\n    const inners = [];\r\n\r\n    // Add the bottom symbol\r\n    inners.push(makeInner(bottom, font));\r\n\r\n    if (middle === null) {\r\n        // Add that many symbols\r\n        for (let i = 0; i < repeatCount; i++) {\r\n            inners.push(makeInner(repeat, font));\r\n        }\r\n    } else {\r\n        // When there is a middle bit, we need the middle part and two repeated\r\n        // sections\r\n        for (let i = 0; i < repeatCount; i++) {\r\n            inners.push(makeInner(repeat, font));\r\n        }\r\n        inners.push(makeInner(middle, font));\r\n        for (let i = 0; i < repeatCount; i++) {\r\n            inners.push(makeInner(repeat, font));\r\n        }\r\n    }\r\n\r\n    // Add the top symbol\r\n    inners.push(makeInner(top, font));\r\n\r\n    // Finally, build the vlist\r\n    const inner = makeVlist(context, inners, 'bottom', depth);\r\n    inner.setStyle('color', context.color);\r\n    if (typeof context.opacity === 'number') {\r\n        inner.setStyle('opacity', context.opacity);\r\n    }\r\n\r\n    return makeStyleWrap(\r\n        type,\r\n        makeSpan(inner, 'delimsizing mult'),\r\n        context.mathstyle,\r\n        MATHSTYLES.textstyle,\r\n        classes\r\n    );\r\n}\r\n\r\n// There are three kinds of delimiters, delimiters that stack when they become\r\n// too large\r\nconst stackLargeDelimiters = [\r\n    '(',\r\n    ')',\r\n    '[',\r\n    '\\\\lbrack',\r\n    ']',\r\n    '\\\\rbrack',\r\n    '\\\\{',\r\n    '\\\\lbrace',\r\n    '\\\\}',\r\n    '\\\\rbrace',\r\n    '\\\\lfloor',\r\n    '\\\\rfloor',\r\n    '\\\\lceil',\r\n    '\\\\rceil',\r\n    '\\\\surd',\r\n];\r\n\r\n// delimiters that always stack\r\nconst stackAlwaysDelimiters = [\r\n    '\\\\uparrow',\r\n    '\\\\downarrow',\r\n    '\\\\updownarrow',\r\n    '\\\\Uparrow',\r\n    '\\\\Downarrow',\r\n    '\\\\Updownarrow',\r\n    '|',\r\n    '\\\\|',\r\n    '\\\\vert',\r\n    '\\\\Vert',\r\n    '\\\\lvert',\r\n    '\\\\rvert',\r\n    '\\\\lVert',\r\n    '\\\\rVert',\r\n    '\\\\mvert',\r\n    '\\\\mid',\r\n    '\\\\lgroup',\r\n    '\\\\rgroup',\r\n    '\\\\lmoustache',\r\n    '\\\\rmoustache',\r\n];\r\n\r\n// and delimiters that never stack\r\nconst stackNeverDelimiters = [\r\n    '<',\r\n    '>',\r\n    '\\\\langle',\r\n    '\\\\rangle',\r\n    '/',\r\n    '\\\\backslash',\r\n    '\\\\lt',\r\n    '\\\\gt',\r\n];\r\n\r\n// Metrics of the different sizes. Found by looking at TeX's output of\r\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\r\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\r\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\r\n\r\n/**\r\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\r\n */\r\nexport function makeSizedDelim(\r\n    type: SpanType,\r\n    delim: string,\r\n    size: number,\r\n    context: Context,\r\n    classes = ''\r\n): Span {\r\n    if (delim === '.') {\r\n        // Empty delimiters still count as elements, even though they don't\r\n        // show anything.\r\n        return makeNullFence(type, context, classes);\r\n        // return makeSpan('', classes);\r\n    }\r\n\r\n    // < and > turn into \\langle and \\rangle in delimiters\r\n    if (delim === '<' || delim === '\\\\lt') {\r\n        delim = '\\\\langle';\r\n    } else if (delim === '>' || delim === '\\\\gt') {\r\n        delim = '\\\\rangle';\r\n    }\r\n\r\n    // Sized delimiters are never centered.\r\n    if (\r\n        stackLargeDelimiters.includes(delim) ||\r\n        stackNeverDelimiters.includes(delim)\r\n    ) {\r\n        return makeLargeDelim(type, delim, size, false, context, classes);\r\n    } else if (stackAlwaysDelimiters.includes(delim)) {\r\n        return makeStackedDelim(\r\n            type,\r\n            delim,\r\n            sizeToMaxHeight[size],\r\n            false,\r\n            context,\r\n            classes\r\n        );\r\n    }\r\n    console.assert(false, \"Unknown delimiter '\" + delim + \"'\");\r\n    return null;\r\n}\r\n\r\n/*\r\n * There are three different sequences of delimiter sizes that the delimiters\r\n * follow depending on the kind of delimiter. This is used when creating custom\r\n * sized delimiters to decide whether to create a small, large, or stacked\r\n * delimiter.\r\n *\r\n * In real TeX, these sequences aren't explicitly defined, but are instead\r\n * defined inside the font metrics. Since there are only three sequences that\r\n * are possible for the delimiters that TeX defines, it is easier to just encode\r\n * them explicitly here.\r\n */\r\n\r\ninterface DelimiterInfo {\r\n    type: 'small' | 'large' | 'stack';\r\n    mathstyle?: Mathstyle;\r\n    size?: 1 | 2 | 3 | 4;\r\n}\r\n\r\n// Delimiters that never stack try small delimiters and large delimiters only\r\nconst stackNeverDelimiterSequence: DelimiterInfo[] = [\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptscriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.textstyle },\r\n    { type: 'large', size: 1 },\r\n    { type: 'large', size: 2 },\r\n    { type: 'large', size: 3 },\r\n    { type: 'large', size: 4 },\r\n];\r\n\r\n// Delimiters that always stack try the small delimiters first, then stack\r\nconst stackAlwaysDelimiterSequence: DelimiterInfo[] = [\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptscriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.textstyle },\r\n    { type: 'stack' },\r\n];\r\n\r\n// Delimiters that stack when large try the small and then large delimiters, and\r\n// stack afterwards\r\nconst stackLargeDelimiterSequence: DelimiterInfo[] = [\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptscriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.textstyle },\r\n    { type: 'large', size: 1 },\r\n    { type: 'large', size: 2 },\r\n    { type: 'large', size: 3 },\r\n    { type: 'large', size: 4 },\r\n    { type: 'stack' },\r\n];\r\n\r\n/*\r\n * Get the font used in a delimiter based on what kind of delimiter it is.\r\n */\r\nfunction delimTypeToFont(info: DelimiterInfo): string {\r\n    if (info.type === 'small') {\r\n        return 'Main-Regular';\r\n    } else if (info.type === 'large') {\r\n        return 'Size' + info.size + '-Regular';\r\n    }\r\n    console.assert(info.type === 'stack');\r\n    return 'Size4-Regular';\r\n}\r\n\r\n/**\r\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\r\n * should be used to create a delimiter of the given height+depth.\r\n * @param delim - a character value (not a command)\r\n */\r\nfunction traverseSequence(\r\n    delim: string,\r\n    height: number,\r\n    sequence: DelimiterInfo[],\r\n    context: Context\r\n): DelimiterInfo {\r\n    // Here, we choose the index we should start at in the sequences. In smaller\r\n    // sizes (which correspond to larger numbers in style.size) we start earlier\r\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\r\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\r\n    const start = Math.min(2, 3 - context.mathstyle.size);\r\n    for (let i = start; i < sequence.length; i++) {\r\n        if (sequence[i].type === 'stack') {\r\n            // This is always the last delimiter, so we just break the loop now.\r\n            break;\r\n        }\r\n\r\n        const metrics = getCharacterMetrics(\r\n            delim,\r\n            delimTypeToFont(sequence[i])\r\n        );\r\n        if (metrics.defaultMetrics) {\r\n            // If we don't have metrics info for this character,\r\n            // assume we'll construct as a small delimiter\r\n            return { type: 'small', mathstyle: MATHSTYLES.scriptstyle };\r\n        }\r\n        let heightDepth = metrics.height + metrics.depth;\r\n\r\n        // Small delimiters are scaled down versions of the same font, so we\r\n        // account for the style change size.\r\n\r\n        if (sequence[i].type === 'small') {\r\n            heightDepth *= sequence[i].mathstyle.sizeMultiplier;\r\n        }\r\n\r\n        // Check if the delimiter at this size works for the given height.\r\n        if (heightDepth > height) {\r\n            return sequence[i];\r\n        }\r\n    }\r\n\r\n    // If we reached the end of the sequence, return the last sequence element.\r\n    return sequence[sequence.length - 1];\r\n}\r\n\r\n/**\r\n * Make a delimiter of a given height+depth, with optional centering. Here, we\r\n * traverse the sequences, and create a delimiter that the sequence tells us to.\r\n *\r\n * @param type - 'mopen' or 'mclose'\r\n */\r\nexport function makeCustomSizedDelim(\r\n    type: SpanType,\r\n    delim: string,\r\n    height: number,\r\n    center: boolean,\r\n    context: Context,\r\n    classes = ''\r\n): Span {\r\n    if (!delim || delim.length === 0 || delim === '.') {\r\n        return makeNullFence(type, context, type);\r\n    }\r\n\r\n    if (delim === '<' || delim === '\\\\lt') {\r\n        delim = '\\\\langle';\r\n    } else if (delim === '>' || delim === '\\\\gt') {\r\n        delim = '\\\\rangle';\r\n    }\r\n\r\n    // Decide what sequence to use\r\n    let sequence: DelimiterInfo[];\r\n    if (stackNeverDelimiters.includes(delim)) {\r\n        sequence = stackNeverDelimiterSequence;\r\n    } else if (stackLargeDelimiters.includes(delim)) {\r\n        sequence = stackLargeDelimiterSequence;\r\n    } else {\r\n        sequence = stackAlwaysDelimiterSequence;\r\n    }\r\n\r\n    // Look through the sequence\r\n    const delimType = traverseSequence(\r\n        getValue('math', delim),\r\n        height,\r\n        sequence,\r\n        context\r\n    );\r\n\r\n    // Depending on the sequence element we decided on, call the appropriate\r\n    // function.\r\n    if (delimType.type === 'small') {\r\n        return makeSmallDelim(\r\n            type,\r\n            delim,\r\n            delimType.mathstyle,\r\n            center,\r\n            context,\r\n            classes\r\n        );\r\n    } else if (delimType.type === 'large') {\r\n        return makeLargeDelim(\r\n            type,\r\n            delim,\r\n            delimType.size,\r\n            center,\r\n            context,\r\n            classes\r\n        );\r\n    }\r\n    console.assert(delimType.type === 'stack');\r\n    return makeStackedDelim(type, delim, height, center, context, classes);\r\n}\r\n\r\n/**\r\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\r\n * of an expression that the delimiters surround.\r\n * See tex.web:14994\r\n */\r\nexport function makeLeftRightDelim(\r\n    type: SpanType,\r\n    delim: string,\r\n    height: number,\r\n    depth: number,\r\n    context: Context,\r\n    classes = ''\r\n): Span {\r\n    // If this is the empty delimiter, return a null fence\r\n    if (delim === '.') {\r\n        return makeNullFence(type, context, classes);\r\n    }\r\n\r\n    // We always center \\left/\\right delimiters, so the axis is always shifted\r\n    const axisHeight =\r\n        context.mathstyle.metrics.axisHeight * context.mathstyle.sizeMultiplier;\r\n\r\n    // Taken from TeX source, tex.web, function make_left_right\r\n    const delimiterFactor = 901; // plain.tex:327\r\n    const delimiterShortfall = 5.0 / METRICS.ptPerEm; // plain.tex:345\r\n\r\n    let delta2 = depth + axisHeight;\r\n    let delta1 = height - axisHeight;\r\n    delta1 = Math.max(delta2, delta1);\r\n\r\n    let delta = (delta1 * delimiterFactor) / 500;\r\n    delta2 = 2 * delta1 - delimiterShortfall;\r\n    delta = Math.max(delta, delta2);\r\n\r\n    // const maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\r\n    // const totalHeight = Math.max(\r\n    //     // In real TeX, calculations are done using integral values which are\r\n    //     // 65536 per pt, or 655360 per em. So, the division here truncates in\r\n    //     // TeX but doesn't here, producing different results. If we wanted to\r\n    //     // exactly match TeX's calculation, we could do\r\n    //     //   Math.floor(655360 * maxDistFromAxis / 500) *\r\n    //     //    delimiterFactor / 655360\r\n    //     // (To see the difference, compare\r\n    //     //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\r\n    //     // in TeX and KaTeX)\r\n    //     maxDistFromAxis / 500 * delimiterFactor,\r\n    //     2 * maxDistFromAxis - delimiterShortfall);\r\n\r\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\r\n    // height\r\n    return makeCustomSizedDelim(type, delim, delta, true, context, classes);\r\n}\r\n\r\n/**\r\n *\r\n * @param type either 'mopen', 'mclose' or null\r\n */\r\nfunction makeNullFence(\r\n    type: SpanType,\r\n    context: Context,\r\n    classes: string\r\n): Span {\r\n    return makeSpan(\r\n        '',\r\n        'sizing' + // @todo not useful, redundant with 'nulldelimiter'\r\n        // 'reset-' + context.size, 'size5',                 // @todo: that seems like a lot of resizing... do we need both?\r\n        context.mathstyle.adjustTo(MATHSTYLES.textstyle) +\r\n        ' nulldelimiter ' + // The null delimiter has a width, specified by class 'nulldelimiter'\r\n            (classes || ''),\r\n        type\r\n    );\r\n}\r\n","import { isArray, isFunction } from '../common/types';\r\n\r\nimport { Atom } from './atom';\r\nimport { emit as emitDefinition } from './definitions';\r\nimport { emitLatexRun, getPropertyRuns } from './modes-utils';\r\nimport { colorToString } from './color';\r\n\r\n// See https://tex.stackexchange.com/questions/58098/what-are-all-the-font-styles-i-can-use-in-math-mode\r\n\r\n/*\r\n * Return an array of runs with the same mode\r\n */\r\nfunction getModeRuns(atoms) {\r\n    const result = [];\r\n    let run = [];\r\n    let currentMode = 'NONE';\r\n    atoms.forEach((atom) => {\r\n        if (atom.type !== 'first') {\r\n            if (atom.mode !== currentMode) {\r\n                if (run.length > 0) result.push(run);\r\n                run = [atom];\r\n                currentMode = atom.mode;\r\n            } else {\r\n                run.push(atom);\r\n            }\r\n        }\r\n    });\r\n    // Push whatever is left\r\n    if (run.length > 0) result.push(run);\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {Atom} parent the parent or predecessor of the atom list\r\n * @param {Atom[]} atoms the list of atoms to transform to LaTeX\r\n * @param {boolean} expandMacro true if macros should be expanded\r\n * @result {string} a LaTeX string\r\n */\r\nfunction latexifyArray(parent, atoms, expandMacro) {\r\n    if (atoms.length === 0) return '';\r\n    if (atoms[0].type === 'first') {\r\n        if (atoms.length === 1) return '';\r\n        // Remove the 'first' atom, if present\r\n        atoms = atoms.slice(1);\r\n    }\r\n    if (atoms.length === 0) return '';\r\n\r\n    return getPropertyRuns(atoms, 'cssClass')\r\n        .map((x) => {\r\n            const result = getPropertyRuns(x, 'color')\r\n                .map((x) =>\r\n                    getModeRuns(x)\r\n                        .map((x) => emitLatexRun(parent, x, expandMacro))\r\n                        .join('')\r\n                )\r\n                .join('');\r\n            if (\r\n                x[0].cssClass &&\r\n                (!parent || parent.cssClass !== x[0].cssClass)\r\n            ) {\r\n                if (x[0].cssClass === 'ML__boldsymbol') {\r\n                    return '\\\\boldsymbol{' + result + '}';\r\n                } else if (x[0].cssClass === 'ML__emph') {\r\n                    return '\\\\emph{' + result + '}';\r\n                }\r\n                return '\\\\class{' + x[0].cssClass + '}{' + result + '}';\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\n/**\r\n * Given an atom or an array of atoms, return a LaTeX string representation\r\n */\r\nfunction latexify(\r\n    parent: Atom,\r\n    value: boolean | number | string | Atom | Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    let result = '';\r\n    if (isArray(value)) {\r\n        result = latexifyArray(parent, value, expandMacro);\r\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\r\n        result = value.toString();\r\n    } else if (typeof value === 'string') {\r\n        result = value.replace(/\\s/g, '~');\r\n    } else if (value && isFunction(value.toLatex)) {\r\n        result = value.toLatex(expandMacro);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a LaTeX representation of the atom.\r\n *\r\n * @param {boolean} expandMacro - If true, macros are fully expanded. This will\r\n * no longer round-trip.\r\n *\r\n */\r\nexport function atomToLatex(atom: Atom, expandMacro: boolean): string {\r\n    expandMacro = typeof expandMacro === 'undefined' ? false : expandMacro;\r\n    // If we have some verbatim latex for this atom, use it.\r\n    // This allow non-significant punctuation to be preserved when possible.\r\n    if (!expandMacro && atom.latex) {\r\n        return atom.latex;\r\n    }\r\n    let result = '';\r\n    let col = 0;\r\n    let row = 0;\r\n    let i = 0;\r\n    const command = atom.symbol;\r\n    const emit = (parent: Atom, atom: string | number | Atom[]): string =>\r\n        latexify(parent, atom, expandMacro);\r\n\r\n    // atom.mode=='text' is handled in the switch by looking at atom.type===''\r\n    switch (atom.type) {\r\n        case 'group':\r\n            if (command) {\r\n                // This is a macro\r\n                result = expandMacro ? emit(atom, atom.body) : atom.latex;\r\n            } else {\r\n                result =\r\n                    atom.latexOpen || (atom.cssId || atom.cssClass ? '' : '{');\r\n\r\n                if (atom.cssId) result += '\\\\cssId{' + atom.cssId + '}{';\r\n\r\n                if (atom.cssClass === 'ML__emph') {\r\n                    result += `\\\\emph{${emit(atom, atom.body)}`;\r\n                } else {\r\n                    if (atom.cssClass) {\r\n                        result += '\\\\class{' + atom.cssClass + '}{';\r\n                    }\r\n                    result += emit(atom, atom.body);\r\n\r\n                    if (atom.cssClass) result += '}';\r\n                }\r\n                if (atom.cssId) result += '}';\r\n\r\n                result +=\r\n                    atom.latexClose || (atom.cssId || atom.cssClass ? '' : '}');\r\n            }\r\n            break;\r\n\r\n        case 'array':\r\n            result += '\\\\begin{' + atom.env.name + '}';\r\n            if (atom.env.name === 'array') {\r\n                result += '{';\r\n                if (atom.colFormat) {\r\n                    for (i = 0; i < atom.colFormat.length; i++) {\r\n                        if (atom.colFormat[i].align) {\r\n                            result += atom.colFormat[i].align;\r\n                        } else if (atom.colFormat[i].rule) {\r\n                            result += '|';\r\n                        }\r\n                    }\r\n                }\r\n                result += '}';\r\n            }\r\n            for (row = 0; row < atom.array.length; row++) {\r\n                for (col = 0; col < atom.array[row].length; col++) {\r\n                    if (col > 0) result += ' & ';\r\n                    result += emit(atom, atom.array[row][col]);\r\n                }\r\n                // Adds a separator between rows (but not after the last row)\r\n                if (row < atom.array.length - 1) {\r\n                    result += ' \\\\\\\\ ';\r\n                }\r\n            }\r\n            result += '\\\\end{' + atom.env.name + '}';\r\n            break;\r\n\r\n        case 'root':\r\n            result = emit(atom, atom.body);\r\n            break;\r\n\r\n        case 'leftright':\r\n            if (atom.inner) {\r\n                result += '\\\\left' + (atom.leftDelim || '.');\r\n                if (atom.leftDelim && atom.leftDelim.length > 1) result += ' ';\r\n                result += emit(atom, atom.body);\r\n                result += '\\\\right' + (atom.rightDelim || '.');\r\n                if (atom.rightDelim && atom.rightDelim.length > 1) {\r\n                    result += ' ';\r\n                }\r\n            } else {\r\n                if (expandMacro) {\r\n                    // If we're in 'expandMacro' mode (i.e. interchange format\r\n                    // used, e.g., on the clipboard for maximum compatibility\r\n                    // with other LaTeX renderers), drop the `\\mleft(` and `\\mright`)\r\n                    // commands\r\n                    result +=\r\n                        atom.leftDelim === '.' ? '' : atom.leftDelim + ' ';\r\n                    result += emit(atom, atom.body);\r\n                    result +=\r\n                        atom.rightDelim === '.' ? '' : atom.rightDelim + ' ';\r\n                } else {\r\n                    result += '\\\\mleft' + (atom.leftDelim || '.');\r\n                    if (atom.leftDelim && atom.leftDelim.length > 1) {\r\n                        result += ' ';\r\n                    }\r\n                    result += emit(atom, atom.body);\r\n                    result += '\\\\mright' + (atom.rightDelim || '.');\r\n                    if (atom.rightDelim && atom.rightDelim.length > 1) {\r\n                        result += ' ';\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'delim':\r\n        case 'sizeddelim':\r\n            result += command + '{' + atom.delim + '}';\r\n            break;\r\n\r\n        case 'rule':\r\n            result += command;\r\n            if (atom.shift) {\r\n                result += `[${emit(atom, atom.shift)}em]`;\r\n            }\r\n            result += `{${emit(atom, atom.width)}em}{${emit(\r\n                atom,\r\n                atom.height\r\n            )}em}`;\r\n            break;\r\n\r\n        case 'mord':\r\n        case 'minner':\r\n        case 'mbin':\r\n        case 'mrel':\r\n        case 'mpunct':\r\n        case 'mopen':\r\n        case 'mclose':\r\n        case 'textord':\r\n            if (command === '\\\\char\"') {\r\n                result += atom.latex + ' ';\r\n            } else {\r\n                result += emitDefinition(command, null, atom, emit);\r\n            }\r\n            break;\r\n\r\n        case 'mop':\r\n            if (atom.body !== '\\u200b') {\r\n                // Not ZERO-WIDTH\r\n                if (command === '\\\\mathop') {\r\n                    // The argument to mathop is math, therefor atom.body can be an expression\r\n                    result += command + '{' + emit(atom, atom.body) + '}';\r\n                } else if (command === '\\\\operatorname') {\r\n                    // The argument to `\\operatorname` is 'math' and needs to be latexified\r\n                    result += command + '{' + emit(atom, atom.body) + '}';\r\n                } else {\r\n                    result += command;\r\n                    if (/^\\\\.*[a-zA-Z0-9]$/.test(command)) {\r\n                        // Add a space after commands, to avoid, e.g.\r\n                        // '\\sin' + 'x' -> '\\sinx' instead of '\\sin x'\r\n                        result += ' ';\r\n                    }\r\n                }\r\n            }\r\n            if (atom.explicitLimits) {\r\n                if (atom.limits === 'limits') result += '\\\\limits ';\r\n                if (atom.limits === 'nolimits') result += '\\\\nolimits ';\r\n            }\r\n            break;\r\n\r\n        case 'spacing':\r\n            // Three kinds of spacing commands:\r\n            // \\hskip and \\kern which take one implicit parameter\r\n            // \\hspace and hspace* with take one *explicit* parameter\r\n            // \\quad, etc... which take no parameters.\r\n            result += command;\r\n            if (command === '\\\\hspace' || command === '\\\\hspace*') {\r\n                result += '{';\r\n                if (atom.width) {\r\n                    result += atom.width + 'em';\r\n                } else {\r\n                    result += '0em';\r\n                }\r\n                result += '}';\r\n            } else {\r\n                result += ' ';\r\n                if (atom.width) {\r\n                    result += atom.width + 'em ';\r\n                }\r\n            }\r\n\r\n            break;\r\n\r\n        case 'enclose':\r\n            result += command;\r\n            if (command === '\\\\enclose') {\r\n                result += '{' + Object.keys(atom.notation).join(' ') + '}';\r\n\r\n                // \\enclose can have optional parameters...\r\n                let style = '';\r\n                let sep = '';\r\n                if (\r\n                    atom.backgroundColor &&\r\n                    atom.backgroundColor !== 'transparent'\r\n                ) {\r\n                    style +=\r\n                        sep +\r\n                        'mathbackground=\"' +\r\n                        colorToString(atom.backgroundColor) +\r\n                        '\"';\r\n                    sep = ',';\r\n                }\r\n                if (atom.shadow && atom.shadow !== 'auto') {\r\n                    style += sep + 'shadow=\"' + atom.shadow + '\"';\r\n                    sep = ',';\r\n                }\r\n                if (atom.strokeWidth !== 1 || atom.strokeStyle !== 'solid') {\r\n                    style += sep + atom.borderStyle;\r\n                    sep = ',';\r\n                } else if (\r\n                    atom.strokeColor &&\r\n                    atom.strokeColor !== 'currentColor'\r\n                ) {\r\n                    style +=\r\n                        sep +\r\n                        'mathcolor=\"' +\r\n                        colorToString(atom.strokeColor) +\r\n                        '\"';\r\n                    sep = ',';\r\n                }\r\n\r\n                if (style) {\r\n                    result += `[${style}]`;\r\n                }\r\n            }\r\n            result += `{${emit(atom, atom.body)}}`;\r\n            break;\r\n\r\n        case 'mathstyle':\r\n            result += '\\\\' + atom.mathstyle + ' ';\r\n            break;\r\n\r\n        case 'space':\r\n            result += atom.symbol;\r\n            break;\r\n\r\n        case 'placeholder':\r\n            result += '\\\\placeholder{}';\r\n            break;\r\n\r\n        case 'first':\r\n        case 'command':\r\n        case 'msubsup':\r\n            break;\r\n\r\n        case 'error':\r\n            result += atom.latex;\r\n            break;\r\n\r\n        case '':\r\n            console.assert(\r\n                atom.mode === 'text',\r\n                'Null atom type in mode ' + atom.mode\r\n            );\r\n            console.error('Attempting to emit a text atom');\r\n            break;\r\n\r\n        default:\r\n            result = emitDefinition(command, parent, atom, emit);\r\n            console.assert(\r\n                !!result,\r\n                'Missing custom emiter for ',\r\n                command || atom.body\r\n            );\r\n            if (!result) {\r\n                result += command;\r\n            }\r\n\r\n            break;\r\n    }\r\n    if (atom.superscript) {\r\n        let sup = emit(atom, atom.superscript);\r\n        if (sup.length === 1) {\r\n            if (sup === '\\u2032') {\r\n                // PRIME\r\n                sup = '\\\\prime ';\r\n            } else if (sup === '\\u2033') {\r\n                // DOUBLE-PRIME\r\n                sup = '\\\\doubleprime ';\r\n            }\r\n            result += '^' + sup;\r\n        } else {\r\n            result += '^{' + sup + '}';\r\n        }\r\n    }\r\n    if (atom.subscript) {\r\n        const sub = emit(atom, atom.subscript);\r\n        if (sub.length === 1) {\r\n            result += '_' + sub;\r\n        } else {\r\n            result += '_{' + sub + '}';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { Context, ContextInterface, ParseModePrivate } from './context';\r\nimport {\r\n    Style,\r\n    ParseMode,\r\n    Variant,\r\n    VariantStyle,\r\n    FontShape,\r\n    FontSeries,\r\n} from '../public/core';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport {\r\n    makeSpan,\r\n    makeVlist,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n    italic as spanItalic,\r\n    SpanType,\r\n    isSpanType,\r\n    Span,\r\n} from './span';\r\nimport { makeSizedDelim } from './delimiters';\r\nimport { atomToLatex } from './atom-to-latex';\r\n\r\nexport type Notations = {\r\n    downdiagonalstrike?: boolean;\r\n    updiagonalstrike?: boolean;\r\n    verticalstrike?: boolean;\r\n    horizontalstrike?: boolean;\r\n    right?: boolean;\r\n    bottom?: boolean;\r\n    left?: boolean;\r\n    top?: boolean;\r\n    circle?: boolean;\r\n    roundedbox?: boolean;\r\n    madruwb?: boolean;\r\n    actuarial?: boolean;\r\n    box?: boolean;\r\n};\r\nexport type AtomType =\r\n    | ''\r\n    | 'array'\r\n    | 'box'\r\n    | 'command'\r\n    | 'delim'\r\n    | 'enclose'\r\n    | 'error'\r\n    | 'first'\r\n    | 'genfrac'\r\n    | 'group'\r\n    | 'leftright'\r\n    | 'mathstyle' // @revisit\r\n    | 'mbin'\r\n    | 'mclose'\r\n    | 'minner'\r\n    | 'mop'\r\n    | 'mopen'\r\n    | 'mord'\r\n    | 'mpunct'\r\n    | 'mrel'\r\n    | 'msubsup'\r\n    | 'none' // @revisit\r\n    | 'overlap'\r\n    | 'overunder'\r\n    | 'placeholder'\r\n    | 'root'\r\n    | 'rule'\r\n    | 'sizeddelim'\r\n    | 'space'\r\n    | 'spacing'\r\n    | 'surd'\r\n    | 'textord';\r\n\r\nexport type Colspec = {\r\n    gap?: Atom[];\r\n    align?: 'l' | 'c' | 'r';\r\n    rule?: boolean;\r\n};\r\nexport type BBoxParam = {\r\n    backgroundcolor?: string;\r\n    padding?: number;\r\n    border?: string;\r\n};\r\n\r\nexport const ATOM_REGISTRY = {};\r\n\r\n// A table of size -> font size for the different sizing functions\r\nexport const SIZING_MULTIPLIER = {\r\n    size1: 0.5,\r\n    size2: 0.7,\r\n    size3: 0.8,\r\n    size4: 0.9,\r\n    size5: 1.0,\r\n    size6: 1.2,\r\n    size7: 1.44,\r\n    size8: 1.73,\r\n    size9: 2.07,\r\n    size10: 2.49,\r\n};\r\n\r\nexport function registerAtomType(\r\n    name: string,\r\n    decompose: (context: Context, atom: Atom) => Span[]\r\n): void {\r\n    ATOM_REGISTRY[name] = { decompose: decompose };\r\n}\r\n\r\n/**\r\n * Return a list of spans equivalent to atoms.\r\n * A span is the most elementary type possible, for example 'text'\r\n * or 'vlist', while the input atoms may be more abstract and complex,\r\n * such as 'genfrac'\r\n *\r\n * @param context Font family, variant, size, color, and other info useful\r\n * to render an expression\r\n * @param atoms - A single atom or an array of atoms\r\n */\r\nexport function decompose(\r\n    inputContext: ContextInterface,\r\n    atoms: Atom | Atom[]\r\n): Span[] | null {\r\n    function isDigit(atom: Atom): boolean {\r\n        return (\r\n            atom.type === 'mord' &&\r\n            !!atom.symbol &&\r\n            /^[0-9,.]$/.test(atom.symbol)\r\n        );\r\n    }\r\n    function isText(atom: Atom): boolean {\r\n        return atom.mode === 'text';\r\n    }\r\n\r\n    // We can be passed either a Context object, or\r\n    // a simple object with some properties set.\r\n    const context: Context =\r\n        inputContext instanceof Context\r\n            ? inputContext\r\n            : new Context(inputContext);\r\n\r\n    // In most cases we want to display selection,\r\n    // except if the atomIdsSettings.groupNumbers flag is set which is used for\r\n    // read aloud.\r\n    const displaySelection =\r\n        !context.atomIdsSettings || !context.atomIdsSettings.groupNumbers;\r\n\r\n    let result: Span[] | null = [];\r\n    if (isArray(atoms)) {\r\n        if (atoms.length === 0) {\r\n            return [];\r\n        } else if (atoms.length === 1) {\r\n            result = atoms[0].decompose(context);\r\n            if (result && displaySelection && atoms[0].isSelected) {\r\n                result.forEach((x: Span) => x.selected(true));\r\n            }\r\n            console.assert(!result || isArray(result));\r\n        } else {\r\n            let previousType = 'none';\r\n            let nextType = atoms[1].type;\r\n            let selection: Span[] = [];\r\n            let digitOrTextStringID = '';\r\n            let lastWasDigit = true;\r\n            let phantomBase = null;\r\n            for (let i = 0; i < atoms.length; i++) {\r\n                // Is this a binary operator ('+', '-', etc...) that potentially\r\n                // needs to be adjusted to a unary operator?\r\n                //\r\n                // When preceded by a mbin, mopen, mrel, mpunct, mop or\r\n                // when followed by a mrel, mclose or mpunct\r\n                // or if preceded or followed by no sibling, a 'mbin' becomes a\r\n                // 'mord'\r\n                if (atoms[i].type === 'mbin') {\r\n                    if (\r\n                        /first|none|mrel|mpunct|mopen|mbin|mop/.test(\r\n                            previousType\r\n                        ) ||\r\n                        /none|mrel|mpunct|mclose/.test(nextType)\r\n                    ) {\r\n                        atoms[i].type = 'mord';\r\n                    }\r\n                }\r\n\r\n                // If this is a scaffolding supsub, we'll use the\r\n                // phantomBase from the previous atom to position the supsub.\r\n                // Otherwise, no need for the phantomBase\r\n                if (\r\n                    atoms[i].body !== '\\u200b' ||\r\n                    (!atoms[i].superscript && !atoms[i].subscript)\r\n                ) {\r\n                    phantomBase = null;\r\n                }\r\n\r\n                if (\r\n                    context.atomIdsSettings?.groupNumbers &&\r\n                    digitOrTextStringID &&\r\n                    ((lastWasDigit && isDigit(atoms[i])) ||\r\n                        (!lastWasDigit && isText(atoms[i])))\r\n                ) {\r\n                    context.atomIdsSettings.overrideID = digitOrTextStringID;\r\n                }\r\n                const span = atoms[i].decompose(context, phantomBase);\r\n                if (context.atomIdsSettings) {\r\n                    context.atomIdsSettings.overrideID = null;\r\n                }\r\n                if (span) {\r\n                    // The result from decompose is always an array\r\n                    // Flatten it (i.e. [[a1, a2], b1, b2] -> [a1, a2, b1, b2]\r\n                    const flat = [].concat(...span);\r\n                    phantomBase = flat;\r\n\r\n                    // If this is a digit or text run, keep track of it\r\n                    if (context.atomIdsSettings?.groupNumbers) {\r\n                        if (isDigit(atoms[i]) || isText(atoms[i])) {\r\n                            if (\r\n                                !digitOrTextStringID ||\r\n                                lastWasDigit !== isDigit(atoms[i])\r\n                            ) {\r\n                                // changed from text to digits or vice-versa\r\n                                lastWasDigit = isDigit(atoms[i]);\r\n                                digitOrTextStringID = atoms[i].id;\r\n                            }\r\n                        }\r\n                        if (\r\n                            (!(isDigit(atoms[i]) || isText(atoms[i])) ||\r\n                                atoms[i].superscript ||\r\n                                atoms[i].subscript) &&\r\n                            digitOrTextStringID\r\n                        ) {\r\n                            // Done with digits/text\r\n                            digitOrTextStringID = '';\r\n                        }\r\n                    }\r\n\r\n                    if (displaySelection && atoms[i].isSelected) {\r\n                        selection = selection.concat(flat);\r\n                        selection.forEach((x: Span) => x.selected(true));\r\n                    } else {\r\n                        if (selection.length > 0) {\r\n                            // There was a selection, but we're out of it now\r\n                            // Append the selection\r\n                            result = [...result, ...selection];\r\n                            selection = [];\r\n                        }\r\n                        result = result.concat(flat);\r\n                    }\r\n                }\r\n\r\n                // Since the next atom (and this atom!) could have children\r\n                // use getFinal...() and getInitial...() to get the closest\r\n                // atom linearly.\r\n                previousType = atoms[i].getFinalBaseElement().type;\r\n                nextType = atoms[i + 1]\r\n                    ? atoms[i + 1].getInitialBaseElement().type\r\n                    : 'none';\r\n            }\r\n\r\n            // Is there a leftover selection?\r\n            if (selection.length > 0) {\r\n                result = [...result, ...selection];\r\n                selection = [];\r\n            }\r\n        }\r\n    } else if (atoms) {\r\n        // This is a single atom, decompose it\r\n        result = atoms.decompose(context);\r\n        if (result && displaySelection && atoms.isSelected) {\r\n            result.forEach((x: Span) => x.selected(true));\r\n        }\r\n    }\r\n\r\n    if (!result || result.length === 0) return null;\r\n\r\n    console.assert(isArray(result) && result.length > 0);\r\n\r\n    // If the mathstyle changed between the parent and the current atom,\r\n    // account for the size difference\r\n    if (context.mathstyle !== context.parentMathstyle) {\r\n        const factor =\r\n            context.mathstyle.sizeMultiplier /\r\n            context.parentMathstyle.sizeMultiplier;\r\n        for (const span of result) {\r\n            console.assert(!isArray(span));\r\n            console.assert(\r\n                typeof span.height === 'number' && isFinite(span.height)\r\n            );\r\n            span.height *= factor;\r\n            span.depth *= factor;\r\n        }\r\n    }\r\n    // If the size changed between the parent and the current group,\r\n    // account for the size difference\r\n    if (context.size !== context.parentSize) {\r\n        const factor =\r\n            SIZING_MULTIPLIER[context.size] /\r\n            SIZING_MULTIPLIER[context.parentSize];\r\n        for (const span of result) {\r\n            console.assert(!isArray(span));\r\n            console.assert(\r\n                typeof span.height === 'number' && isFinite(span.height)\r\n            );\r\n            span.height *= factor;\r\n            span.depth *= factor;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * An atom is an object encapsulating an elementary mathematical unit,\r\n * independent of its graphical representation.\r\n *\r\n * It keeps track of the content, while the dimensions, position and style\r\n * are tracked by Span objects which are created by the `decompose()` functions.\r\n *\r\n * @param style A set of additional properties to append to\r\n * the atom\r\n * @property {string} mode `'display'`, `'command'`, etc...\r\n * @property {string} type - Type can be one of:\r\n * - `mord`: ordinary symbol, e.g. `x`, `\\alpha`\r\n * - `textord`: ordinary characters\r\n * - `mop`: operators, including special functions, `\\sin`, `\\sum`, `\\cap`.\r\n * - `mbin`: binary operator: `+`, `*`, etc...\r\n * - `mrel`: relational operator: `=`, `\\ne`, etc...\r\n * - `mpunct`: punctuation: `,`, `:`, etc...\r\n * - `mopen`: opening fence: `(`, `\\langle`, etc...\r\n * - `mclose`: closing fence: `)`, `\\rangle`, etc...\r\n * - `minner`: special layout cases, overlap, `\\left...\\right`\r\n *\r\n * In addition to these basic types, which correspond to the TeX atom types,\r\n * some atoms represent more complex compounds, including:\r\n * - `space` and `spacing`: blank space between atoms\r\n * - `mathstyle`: to change the math style used: `display` or `text`.\r\n * The layout rules are different for each, the latter being more compact and\r\n * intended to be incorporated with surrounding non-math text.\r\n * - `root`: a group, which has no parent (only one per formula)\r\n * - `group`: a simple group of atoms, for example from a `{...}`\r\n * - `sizing`: set the size of the font used\r\n * - `rule`: draw a line, for the `\\rule` command\r\n * - `line`: used by `\\overline` and `\\underline` commands\r\n * - `box`: a border drawn around an expression and change its background color\r\n * - `overlap`: display a symbol _over_ another\r\n * - `overunder`: displays an annotation above or below a symbol\r\n * - `array`: a group, which has children arranged in rows. Used\r\n * by environments such as `matrix`, `cases`, etc...\r\n * - `genfrac`: a generalized fraction: a numerator and denominator, separated\r\n * by an optional line, and surrounded by optional fences\r\n * - `surd`: a surd, aka root\r\n * - `leftright`: used by the `\\left` and `\\right` commands\r\n * - `delim`: some delimiter\r\n * - `sizeddelim`: a delimiter that can grow\r\n *\r\n * The following types are used by the editor:\r\n * - `command` indicate a command being entered. The text is displayed in\r\n * blue in the editor.\r\n * - `error`: indicate a command that is unknown, for example `\\xyzy`. The text\r\n * is displayed with a wavy red underline in the editor.\r\n * - `placeholder`: indicate a temporary item. Placeholders are displayed\r\n * as a dashed square in the editor.\r\n * - `first`: a special, empty, atom put as the first atom in math lists in\r\n * order to be able to position the caret before the first element. Aside from\r\n * the caret, they display nothing.\r\n *\r\n * @property {boolean} captureSelection if true, this atom does not let its\r\n * children be selected. Used by the `\\enclose` annotations, for example.\r\n *\r\n * @property {boolean} skipBoundary if true, when the caret reaches the\r\n * first position in this element's body, it automatically moves to the\r\n * outside of the element. Conversely, when the caret reaches the position\r\n * right after this element, it automatically moves to the last position\r\n * inside this element.\r\n */\r\nexport class Atom implements Style {\r\n    mode: ParseModePrivate;\r\n    type: AtomType;\r\n    latex?: string;\r\n    symbol?: string; // Latex command ('\\sin') or character ('a')\r\n    isSymbol?: boolean;\r\n    isFunction?: boolean;\r\n    error?: boolean; // Indicate an unknown command\r\n    suggestion?: boolean; // This atom is a suggestion\r\n\r\n    latexOpen?: string; // type = 'group'\r\n    latexClose?: string; // type = 'group'\r\n\r\n    body?: string | Atom[];\r\n    codepoint?: number; // type = 'mord'\r\n    accent?: string; // type = 'accent'\r\n    svgAccent?: string; // type = 'accent'\r\n    svgBody?: string;\r\n    svgAbove?: string; // type = 'overunder'\r\n    svgBelow?: string; // type = 'overunder'\r\n\r\n    index?: Atom[]; // type = 'surd'\r\n\r\n    denom?: Atom[]; // type = 'genfrac'\r\n    numer?: Atom[]; // type = 'genfrac'\r\n    numerPrefix?: string; // type = 'genfrac'\r\n    denomPrefix?: string; // type = 'genfrac'\r\n    continuousFraction?: boolean; // type = 'genfrac'\r\n    hasBarLine?: boolean; // type = 'genfrac'\r\n\r\n    // type = 'array'\r\n    arraystretch?: number;\r\n    arraycolsep?: number;\r\n    jot?: number;\r\n    lFence?: string; // @revisit: use leftDelim\r\n    rFence?: string; // @revisit: use leftDelim\r\n\r\n    alwaysHandleSupSub?: boolean;\r\n    subscript?: Atom[];\r\n    superscript?: Atom[];\r\n    underscript?: Atom[];\r\n    overscript?: Atom[];\r\n\r\n    position: string; // type = 'line'\r\n\r\n    limits?: 'limits' | 'nolimits' | 'accent';\r\n    explicitLimits?: boolean;\r\n\r\n    array?: Atom[][][]; // type = 'array'\r\n    rowGaps?: number[]; // type = 'array'\r\n    env: { name: string; tabular: boolean }; // type = 'array'\r\n    inner?: boolean;\r\n    leftDelim?: string;\r\n    rightDelim?: string;\r\n    delim?: string;\r\n    size?: 1 | 2 | 3 | 4; // type = 'sizeddelim' @revisit Use maxFontSize? or fontSize?\r\n\r\n    framecolor?: string; // type = 'box'\r\n    verbatimFramecolor?: string; // type = 'box'\r\n    backgroundcolor?: string; // type = 'box'\r\n    verbatimBackgroundcolor?: string; // type = 'box'\r\n    padding?: number; // type = 'box'\r\n    border?: string; // type = 'box'\r\n\r\n    colFormat?: Colspec[]; // when type = 'array', formating of columns\r\n    notation?: Notations; // when type = 'enclose'\r\n    shadow?: string; // when type = 'enclose', CSS shadow\r\n    strokeWidth?: number; // when type = 'enclose'\r\n    strokeStyle?: string; // when type = 'enclose', CSS string\r\n    svgStrokeStyle?: string; // when type = 'enclose', CSS string\r\n    strokeColor?: string; // when type = 'enclose', CSS string\r\n    borderStyle?: string; // when type = 'enclose', CSS string\r\n\r\n    width?: number;\r\n    height?: number;\r\n    maxFontSize?: number;\r\n    depth?: number;\r\n    shift?: number;\r\n    align?: 'left' | 'right';\r\n\r\n    skipBoundary?: boolean;\r\n    // selected?: boolean;\r\n    isSelected?: boolean;\r\n    caret: ParseMode | '';\r\n    containsCaret: boolean; // If the atom or one of its descendant includes the caret\r\n\r\n    mathstyle?:\r\n        | 'auto'\r\n        | 'displaystyle'\r\n        | 'textstyle'\r\n        | 'scriptstyle'\r\n        | 'scriptscriptstyle'; // type = 'genfrac', ''\r\n\r\n    cls?: SpanType;\r\n\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    variant?: Variant;\r\n    variantStyle?: VariantStyle;\r\n    fontFamily?: string;\r\n    fontShape?: FontShape;\r\n    fontSeries?: FontSeries;\r\n    fontSize?: string;\r\n    cssId?: string;\r\n    cssClass?: string;\r\n    letterShapeStyle?: 'tex' | 'french' | 'iso' | 'upright' | 'auto';\r\n\r\n    phantom?: boolean;\r\n\r\n    captureSelection?: boolean;\r\n\r\n    id?: string;\r\n\r\n    constructor(\r\n        mode: ParseModePrivate,\r\n        type: AtomType,\r\n        body: string | Atom[] = '',\r\n        style: Style = {}\r\n    ) {\r\n        console.assert(type === 'first' || !!mode);\r\n        this.mode = mode;\r\n        this.type = type;\r\n        this.body = body;\r\n\r\n        // Append all the properties in extras to this\r\n        // This can override the mode, type and body\r\n        this.applyStyle(style);\r\n    }\r\n    toLatex(expandMacro = false): string {\r\n        return atomToLatex(this, expandMacro);\r\n    }\r\n    getStyle(): Style {\r\n        return {\r\n            mode: this.mode,\r\n            color: this.phantom ? 'transparent' : this.color,\r\n            backgroundColor: this.phantom\r\n                ? 'transparent'\r\n                : this.backgroundColor,\r\n            variant: this.variant,\r\n            variantStyle: this.variantStyle,\r\n            fontFamily: this.fontFamily,\r\n            fontShape: this.fontShape,\r\n            fontSeries: this.fontSeries,\r\n            fontSize: this.fontSize,\r\n            cssId: this.cssId,\r\n            cssClass: this.cssClass,\r\n        };\r\n    }\r\n\r\n    applyStyle(style: Style): void {\r\n        Object.assign(this, style);\r\n\r\n        if (this.fontFamily === 'none') {\r\n            this.fontFamily = '';\r\n        }\r\n        if (this.fontShape === 'auto') {\r\n            this.fontShape = '';\r\n        }\r\n        if (this.fontSeries === 'auto') {\r\n            this.fontSeries = '';\r\n        }\r\n        if (this.color === 'none') {\r\n            this.color = '';\r\n        }\r\n        if (this.backgroundColor === 'none') {\r\n            this.backgroundColor = '';\r\n        }\r\n        if (this.fontSize === 'auto') {\r\n            this.fontSize = '';\r\n        }\r\n\r\n        if (this.fontSize) {\r\n            this.maxFontSize = SIZING_MULTIPLIER[this.fontSize];\r\n        }\r\n\r\n        if (this.mode === 'text') {\r\n            // @revisit. Use type = 'text' for text atoms?\r\n            // A root can be in text mode (root created when creating a representation\r\n            // of the selection, for copy/paste for example)\r\n            if (this.type !== 'root') this.type = '';\r\n        }\r\n    }\r\n\r\n    getInitialBaseElement(): Atom {\r\n        let result: Atom;\r\n        if (isArray(this.body) && this.body.length > 0) {\r\n            if (this.body[0].type !== 'first') {\r\n                result = this.body[0].getInitialBaseElement();\r\n            } else if (this.body[1]) {\r\n                result = this.body[1].getInitialBaseElement();\r\n            }\r\n        }\r\n        return result || this;\r\n    }\r\n\r\n    getFinalBaseElement(): Atom {\r\n        if (isArray(this.body) && this.body.length > 0) {\r\n            return this.body[this.body.length - 1].getFinalBaseElement();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    isCharacterBox(): boolean {\r\n        const base = this.getInitialBaseElement();\r\n        return /minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(base.type);\r\n    }\r\n\r\n    forEach(cb: (arg0: this) => void): void {\r\n        cb(this);\r\n        if (isArray(this.body)) {\r\n            for (const atom of this.body) if (atom) atom.forEach(cb);\r\n        } else if (this.body && typeof this.body === 'object') {\r\n            // Note: body can be null, for example 'first' or 'rule'\r\n            // (and null is an object)\r\n            cb(this.body);\r\n        }\r\n        if (this.superscript) {\r\n            for (const atom of this.superscript) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.subscript) {\r\n            for (const atom of this.subscript) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.overscript) {\r\n            for (const atom of this.overscript) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.underscript) {\r\n            for (const atom of this.underscript) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.numer) {\r\n            for (const atom of this.numer) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.denom) {\r\n            for (const atom of this.denom) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.index) {\r\n            for (const atom of this.index) if (atom) atom.forEach(cb);\r\n        }\r\n        if (this.array) {\r\n            for (const row of this.array) {\r\n                for (const cell of row) {\r\n                    for (const atom of cell) atom.forEach(cb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterate over all the child atoms of this atom, this included,\r\n     * and return an array of all the atoms for which the predicate callback\r\n     * is true.\r\n     */\r\n    filter(cb: (atom: Atom) => boolean): Atom[] {\r\n        let result: Atom[] = [];\r\n        if (cb(this)) result.push(this);\r\n        for (const relation of [\r\n            'body',\r\n            'superscript',\r\n            'subscript',\r\n            'overscript',\r\n            'underscript',\r\n            'numer',\r\n            'denom',\r\n            'index',\r\n        ]) {\r\n            if (isArray(this[relation])) {\r\n                for (const atom of this[relation]) {\r\n                    if (atom) result = result.concat(atom.filter(cb));\r\n                }\r\n            }\r\n        }\r\n        if (isArray(this.array)) {\r\n            for (const row of this.array) {\r\n                for (const cell of row) {\r\n                    if (cell) result = result.concat(cell.filter(cb));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    decomposeGroup(context: Context): Span {\r\n        // The scope of the context is this group, so clone it\r\n        // so that any changes to it will be discarded when finished\r\n        // with this group.\r\n        // Note that the mathstyle property is optional and could be undefined\r\n        // If that's the case, clone() returns a clone of the\r\n        // context with the same mathstyle.\r\n        const localContext = context.clone({\r\n            mathstyle: this.mathstyle ? MATHSTYLES[this.mathstyle] : undefined,\r\n        });\r\n        const span = makeSpan(\r\n            decompose(localContext, this.body as Atom[]),\r\n            '',\r\n            'mord'\r\n        ); // @revisit\r\n        if (this.cssId) span.cssId = this.cssId;\r\n        span.applyStyle({\r\n            backgroundColor: this.backgroundColor,\r\n            cssClass: this.cssClass,\r\n        });\r\n        return span;\r\n    }\r\n\r\n    decomposeOverlap(context: Context): Span {\r\n        const inner = makeSpan(\r\n            decompose(context, this.body as Atom[]),\r\n            'inner'\r\n        ); // @revisit\r\n        return makeSpan(\r\n            [inner, makeSpan(null, 'fix')],\r\n            this.align === 'left' ? 'llap' : 'rlap',\r\n            'mord'\r\n        );\r\n    }\r\n\r\n    decomposeRule(context: Context): Span {\r\n        const mathstyle = context.mathstyle;\r\n        const result = makeSpan('', 'rule', 'mord');\r\n        let shift = this.shift && !isNaN(this.shift) ? this.shift : 0;\r\n        shift = shift / mathstyle.sizeMultiplier;\r\n        const width = this.width / mathstyle.sizeMultiplier;\r\n        const height = this.height / mathstyle.sizeMultiplier;\r\n        result.setStyle('border-right-width', width, 'em');\r\n        result.setStyle('border-top-width', height, 'em');\r\n        result.setStyle('margin-top', -(height - shift), 'em');\r\n        result.setStyle('border-color', context['color']); // @revisit\r\n        result.width = width;\r\n        result.height = height + shift;\r\n        result.depth = -shift;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Return a representation of this, but decomposed in an array of Spans\r\n     *\r\n     * @param context Font variant, size, color, etc...\r\n     * @param phantomBase If not null, the spans to use to\r\n     * calculate the placement of the supsub\r\n     */\r\n    decompose(\r\n        context: Context,\r\n        phantomBase: Span[] | null = null\r\n    ): Span[] | null {\r\n        let result: Span | Span[] | null = null;\r\n        if (\r\n            !this.type ||\r\n            /mord|minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(this.type)\r\n        ) {\r\n            // The body of these atom types is *often* a string, but it can\r\n            // be a atom list (for example a command inside a \\text{} or \\mathop{})\r\n            if (typeof this.body === 'string') {\r\n                result = this.makeSpan(context, this.body);\r\n            } else {\r\n                result = this.makeSpan(\r\n                    context,\r\n                    decompose(context, this.body as Atom[])\r\n                );\r\n            }\r\n            result.type = isSpanType(this.type) ? this.type : '';\r\n        } else if (this.type === 'group' || this.type === 'root') {\r\n            result = this.decomposeGroup(context);\r\n        } else if (this.type === 'delim') {\r\n            result = makeSpan(null, '');\r\n            result.delim = this.delim;\r\n        } else if (this.type === 'sizeddelim') {\r\n            result = this.bind(\r\n                context,\r\n                makeSizedDelim(this.cls, this.delim, this.size, context)\r\n            );\r\n        } else if (this.type === 'overlap') {\r\n            // For llap (18), rlap (270), clap (0)\r\n            // smash (common), mathllap (0), mathrlap (0), mathclap (0)\r\n            // See https://www.tug.org/TUGboat/tb22-4/tb72perlS.pdf\r\n            // and https://tex.stackexchange.com/questions/98785/what-are-the-different-kinds-of-vertical-spacing-and-horizontal-spacing-commands\r\n            result = this.decomposeOverlap(context);\r\n        } else if (this.type === 'rule') {\r\n            result = this.decomposeRule(context);\r\n        } else if (this.type === 'msubsup') {\r\n            // The caret for this atom type is handled by its elements\r\n            result = makeSpan('\\u200b', '', 'mord');\r\n            if (phantomBase) {\r\n                result.height = phantomBase[0].height;\r\n                result.depth = phantomBase[0].depth;\r\n            }\r\n        } else if (this.type === 'space') {\r\n            // A space literal\r\n            result = this.makeSpan(context, ' ');\r\n        } else if (this.type === 'spacing') {\r\n            // A spacing command (\\quad, etc...)\r\n            if (this.body === '\\u200b') {\r\n                // ZERO-WIDTH SPACE\r\n                result = this.makeSpan(context, '\\u200b');\r\n            } else if (this.body === '\\u00a0') {\r\n                if (this.mode === 'math') {\r\n                    result = this.makeSpan(context, ' ');\r\n                } else {\r\n                    result = this.makeSpan(context, '\\u00a0');\r\n                }\r\n            } else if (this.width) {\r\n                result = makeSpan('\\u200b', 'mspace ');\r\n                if (this.width > 0) {\r\n                    result.setWidth(this.width);\r\n                } else {\r\n                    result.setStyle('margin-left', this.width, 'em');\r\n                }\r\n            } else {\r\n                const spacingCls =\r\n                    {\r\n                        qquad: 'qquad',\r\n                        quad: 'quad',\r\n                        enspace: 'enspace',\r\n                        ';': 'thickspace',\r\n                        ':': 'mediumspace',\r\n                        ',': 'thinspace',\r\n                        '!': 'negativethinspace',\r\n                    }[this.body as string] || 'quad';\r\n                result = makeSpan('\\u200b', 'mspace ' + spacingCls);\r\n            }\r\n        } else if (this.type === 'mathstyle') {\r\n            context.setMathstyle(this.mathstyle);\r\n        } else if (this.type === 'command' || this.type === 'error') {\r\n            console.assert(typeof this.body === 'string');\r\n            result = this.makeSpan(context, this.body as string);\r\n            result.classes = ''; // Override fonts and other attributes.\r\n            if (this.error) {\r\n                result.classes += ' ML__error';\r\n            }\r\n            if (this.suggestion) {\r\n                result.classes += ' ML__suggestion';\r\n            }\r\n        } else if (this.type === 'placeholder') {\r\n            result = this.makeSpan(context, '⬚');\r\n        } else if (this.type === 'first') {\r\n            // the `first` pseudo-type is used as a placeholder as\r\n            // the first element in a children list. This makes\r\n            // managing the list, and the caret selection, easier.\r\n            // ZERO-WIDTH SPACE\r\n            result = this.makeSpan(context, '\\u200b');\r\n        } else {\r\n            console.assert(\r\n                ATOM_REGISTRY[this.type],\r\n                'Unknown Atom type: \"' + this.type + '\"'\r\n            );\r\n            result = ATOM_REGISTRY[this.type].decompose(context, this);\r\n        }\r\n        if (!result) return null;\r\n        if (\r\n            this.caret &&\r\n            this.type !== 'msubsup' &&\r\n            this.type !== 'command' &&\r\n            this.type !== 'placeholder' &&\r\n            this.type !== 'first'\r\n        ) {\r\n            if (isArray(result)) {\r\n                result[result.length - 1].caret = this.caret;\r\n            } else {\r\n                result.caret = this.caret;\r\n            }\r\n        }\r\n        if (this.containsCaret) {\r\n            if (isArray(result)) {\r\n                // For a /mleft.../mright, tag the first and last atom in the\r\n                // list with the \"ML__contains-caret\" style (it's the open and\r\n                // closing fence, respectively)\r\n                result[0].classes =\r\n                    (result[0].classes || '') + ' ML__contains-caret';\r\n                result[result.length - 1].classes =\r\n                    (result[result.length - 1].classes || '') +\r\n                    ' ML__contains-caret';\r\n            } else {\r\n                result.classes = (result.classes || '') + ' ML__contains-caret';\r\n            }\r\n        }\r\n        // Finally, attach any necessary superscript, subscripts\r\n        if (!this.limits && (this.superscript || this.subscript)) {\r\n            // If `limits` is set, the attachment of sup/sub was handled\r\n            // in the atom decomposition (e.g. mop, accent)\r\n            if (isArray(result)) {\r\n                const lastSpan = result[result.length - 1];\r\n                result[result.length - 1] = this.attachSupsub(\r\n                    context,\r\n                    lastSpan,\r\n                    lastSpan.type\r\n                );\r\n            } else {\r\n                result = [this.attachSupsub(context, result, result.type)];\r\n            }\r\n        }\r\n        return isArray(result) ? result : [result];\r\n    }\r\n\r\n    attachSupsub(context: Context, nucleus: Span, type: SpanType): Span {\r\n        // If no superscript or subscript, nothing to do.\r\n        if (!this.superscript && !this.subscript) return nucleus;\r\n        // Superscript and subscripts are discussed in the TeXbook\r\n        // on page 445-446, rules 18(a-f).\r\n        // TeX:14859-14945\r\n        const mathstyle = context.mathstyle;\r\n        let supmid = null;\r\n        let submid = null;\r\n        if (this.superscript) {\r\n            const sup = decompose(context.sup(), this.superscript);\r\n            supmid = makeSpan(sup, mathstyle.adjustTo(mathstyle.sup()));\r\n        }\r\n        if (this.subscript) {\r\n            const sub = decompose(context.sub(), this.subscript);\r\n            submid = makeSpan(sub, mathstyle.adjustTo(mathstyle.sub()));\r\n        }\r\n        // Rule 18a, p445\r\n        let supShift = 0;\r\n        let subShift = 0;\r\n        if (!this.isCharacterBox()) {\r\n            supShift = spanHeight(nucleus) - mathstyle.metrics.supDrop;\r\n            subShift = spanDepth(nucleus) + mathstyle.metrics.subDrop;\r\n        }\r\n        // Rule 18c, p445\r\n        let minSupShift: number;\r\n        if (mathstyle === MATHSTYLES.displaystyle) {\r\n            minSupShift = mathstyle.metrics.sup1; // sigma13\r\n        } else if (mathstyle.cramped) {\r\n            minSupShift = mathstyle.metrics.sup3; // sigma15\r\n        } else {\r\n            minSupShift = mathstyle.metrics.sup2; // sigma14\r\n        }\r\n        // scriptspace is a font-size-independent size, so scale it\r\n        // appropriately @revisit: do we really need to do this scaling? It's in em...\r\n        const multiplier =\r\n            MATHSTYLES.textstyle.sizeMultiplier * mathstyle.sizeMultiplier;\r\n        const scriptspace = 0.5 / FONTMETRICS.ptPerEm / multiplier;\r\n        let supsub = null;\r\n        if (submid && supmid) {\r\n            // Rule 18e\r\n            supShift = Math.max(\r\n                supShift,\r\n                minSupShift,\r\n                supmid.depth + 0.25 * mathstyle.metrics.xHeight\r\n            );\r\n            subShift = Math.max(subShift, mathstyle.metrics.sub2);\r\n            const ruleWidth = FONTMETRICS.defaultRuleThickness;\r\n            if (\r\n                supShift - spanDepth(supmid) - (spanHeight(submid) - subShift) <\r\n                4 * ruleWidth\r\n            ) {\r\n                subShift =\r\n                    4 * ruleWidth -\r\n                    (supShift - supmid.depth) +\r\n                    spanHeight(submid);\r\n                const psi =\r\n                    0.8 * mathstyle.metrics.xHeight -\r\n                    (supShift - spanDepth(supmid));\r\n                if (psi > 0) {\r\n                    supShift += psi;\r\n                    subShift -= psi;\r\n                }\r\n            }\r\n            supsub = makeVlist(\r\n                context,\r\n                [submid, subShift, supmid, -supShift],\r\n                'individualShift'\r\n            );\r\n            // Subscripts shouldn't be shifted by the nucleus' italic correction.\r\n            // Account for that by shifting the subscript back the appropriate\r\n            // amount. Note we only do this when the nucleus is a single symbol.\r\n            if (this.isSymbol) {\r\n                supsub.children[0].setLeft(-spanItalic(nucleus));\r\n            }\r\n        } else if (submid && !supmid) {\r\n            // Rule 18b\r\n            subShift = Math.max(\r\n                subShift,\r\n                mathstyle.metrics.sub1,\r\n                spanHeight(submid) - 0.8 * mathstyle.metrics.xHeight\r\n            );\r\n            supsub = makeVlist(context, [submid], 'shift', subShift);\r\n            supsub.children[0].setRight(scriptspace);\r\n            if (this.isCharacterBox()) {\r\n                supsub.children[0].setLeft(-spanItalic(nucleus));\r\n            }\r\n        } else if (!submid && supmid) {\r\n            // Rule 18c, d\r\n            supShift = Math.max(\r\n                supShift,\r\n                minSupShift,\r\n                supmid.depth + 0.25 * mathstyle.metrics.xHeight\r\n            );\r\n            supsub = makeVlist(context, [supmid], 'shift', -supShift);\r\n            supsub.children[0].setRight(scriptspace);\r\n        }\r\n        // Display the caret *following* the superscript and subscript,\r\n        // so attach the caret to the 'msubsup' element.\r\n        const supsubContainer = makeSpan(supsub, 'msubsup');\r\n        if (this.caret) {\r\n            supsubContainer.caret = this.caret;\r\n            this.caret = '';\r\n        }\r\n        return makeSpan([nucleus, supsubContainer], '', type);\r\n    }\r\n\r\n    attachLimits(\r\n        context: Context,\r\n        nucleus: Span,\r\n        nucleusShift: number,\r\n        slant: number\r\n    ): Span {\r\n        const limitAbove = this.superscript\r\n            ? makeSpan(\r\n                  decompose(context.sup(), this.superscript),\r\n                  context.mathstyle.adjustTo(context.mathstyle.sup())\r\n              )\r\n            : null;\r\n        const limitBelow = this.subscript\r\n            ? makeSpan(\r\n                  decompose(context.sub(), this.subscript),\r\n                  context.mathstyle.adjustTo(context.mathstyle.sub())\r\n              )\r\n            : null;\r\n        return makeLimitsStack(\r\n            context,\r\n            nucleus,\r\n            nucleusShift,\r\n            slant,\r\n            limitAbove,\r\n            limitBelow\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Add an ID attribute to both the span and this atom so that the atom\r\n     * can be retrieved from the span later on (e.g. when the span is clicked on)\r\n     */\r\n    bind(context: Context, span: Span): Span {\r\n        if (this.type !== 'first' && this.body !== '\\u200b') {\r\n            this.id = makeID(context);\r\n            if (this.id) {\r\n                if (!span.attributes) span.attributes = {};\r\n                span.attributes['data-atom-id'] = this.id;\r\n            }\r\n        }\r\n        return span;\r\n    }\r\n\r\n    /**\r\n     * Create a span with the specified body and with a class attribute\r\n     * equal to the type ('mbin', 'inner', 'spacing', etc...)\r\n     *\r\n     */\r\n    makeSpan(context: Context, body: string | Span | Span[]): Span {\r\n        // Ensure that the atom type is a valid Span type, or use ''\r\n        console.assert(isSpanType(this.type));\r\n        const type: SpanType =\r\n            this.type === 'textord'\r\n                ? 'mord'\r\n                : isSpanType(this.type)\r\n                ? this.type\r\n                : '';\r\n        const result = makeSpan(body, '', type);\r\n\r\n        // The font family is determined by:\r\n        // - the base font family associated with this atom (optional). For example,\r\n        // some atoms such as some functions ('\\sin', '\\cos', etc...) or some\r\n        // symbols ('\\Z') have an explicit font family. This overrides any\r\n        // other font family\r\n        // - the user-specified font family that has been explicitly applied to\r\n        // this atom\r\n        // - the font family automatically determined in math mode, for example\r\n        // which italicizes some characters, but which can be overridden\r\n\r\n        const style = this.getStyle();\r\n        style.letterShapeStyle = context.letterShapeStyle;\r\n        result.applyStyle(style);\r\n\r\n        // Apply size correction\r\n        const size = style?.fontSize ? style.fontSize : 'size5';\r\n        if (size !== context.parentSize) {\r\n            result.classes += ' sizing reset-' + context.parentSize;\r\n            result.classes += ' ' + size;\r\n        } else if (context.parentSize !== context.size) {\r\n            result.classes += ' sizing reset-' + context.parentSize;\r\n            result.classes += ' ' + context.size;\r\n        }\r\n        result.maxFontSize = Math.max(\r\n            result.maxFontSize,\r\n            context.mathstyle.sizeMultiplier || 1.0\r\n        );\r\n\r\n        // Set other attributes\r\n\r\n        if (this.mode === 'text') result.classes += ' ML__text';\r\n        if (context.mathstyle.isTight()) result.isTight = true;\r\n        // The italic correction applies only in math mode\r\n        if (this.mode !== 'math') result.italic = 0;\r\n        result.setRight(result.italic); // Italic correction\r\n\r\n        if (typeof context.opacity === 'number') {\r\n            result.setStyle('opacity', context.opacity);\r\n        }\r\n\r\n        // To retrieve the atom from a span, for example when the span is clicked\r\n        // on, attach a randomly generated ID to the span and associate it\r\n        // with the atom.\r\n        this.bind(context, result);\r\n        if (this.caret) {\r\n            // If this has a super/subscript, the caret will be attached\r\n            // to the 'msubsup' atom, so no need to have it here.\r\n            if (!this.superscript && !this.subscript) {\r\n                result.caret = this.caret;\r\n                this.caret = '';\r\n                if (context.mathstyle.isTight()) result.isTight = true;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nfunction makeID(context: Context): string {\r\n    let result: string;\r\n    if (context.atomIdsSettings) {\r\n        if (typeof context.atomIdsSettings.seed === 'number') {\r\n            result = context.atomIdsSettings.overrideID\r\n                ? context.atomIdsSettings.overrideID\r\n                : context.atomIdsSettings.seed.toString(36);\r\n            context.atomIdsSettings.seed += 1;\r\n        } else {\r\n            result =\r\n                Date.now().toString(36).slice(-2) +\r\n                Math.floor(Math.random() * 0x186a0).toString(36);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Combine a nucleus with an atom above and an atom below. Used to form\r\n * limits.\r\n *\r\n * @param context\r\n * @param nucleus The base over and under which the atoms will\r\n * be placed.\r\n * @param nucleusShift The vertical shift of the nucleus from\r\n * the baseline.\r\n * @param slant For operators that have a slant, such as \\int,\r\n * indicate by how much to horizontally offset the above and below atoms\r\n */\r\nfunction makeLimitsStack(\r\n    context: Context,\r\n    nucleus: Span,\r\n    nucleusShift: number,\r\n    slant: number,\r\n    above: Span,\r\n    below: Span\r\n): Span {\r\n    // If nothing above and nothing below, nothing to do.\r\n    if (!above && !below) return nucleus;\r\n\r\n    // IE8 clips \\int if it is in a display: inline-block. We wrap it\r\n    // in a new span so it is an inline, and works.\r\n    // @todo: revisit\r\n    nucleus = makeSpan(nucleus);\r\n\r\n    let aboveShift = 0;\r\n    let belowShift = 0;\r\n\r\n    if (above) {\r\n        aboveShift = Math.max(\r\n            FONTMETRICS.bigOpSpacing1,\r\n            FONTMETRICS.bigOpSpacing3 - spanDepth(above)\r\n        );\r\n    }\r\n    if (below) {\r\n        belowShift = Math.max(\r\n            FONTMETRICS.bigOpSpacing2,\r\n            FONTMETRICS.bigOpSpacing4 - spanHeight(below)\r\n        );\r\n    }\r\n\r\n    let result: Span | null = null;\r\n\r\n    if (below && above) {\r\n        const bottom =\r\n            FONTMETRICS.bigOpSpacing5 +\r\n            spanHeight(below) +\r\n            spanDepth(below) +\r\n            belowShift +\r\n            spanDepth(nucleus) +\r\n            nucleusShift;\r\n\r\n        result = makeVlist(\r\n            context,\r\n            [\r\n                FONTMETRICS.bigOpSpacing5,\r\n                below,\r\n                belowShift,\r\n                nucleus,\r\n                aboveShift,\r\n                above,\r\n                FONTMETRICS.bigOpSpacing5,\r\n            ],\r\n            'bottom',\r\n            bottom\r\n        );\r\n\r\n        // Here, we shift the limits by the slant of the symbol. Note\r\n        // that we are supposed to shift the limits by 1/2 of the slant,\r\n        // but since we are centering the limits adding a full slant of\r\n        // margin will shift by 1/2 that.\r\n        result!.children[0].setLeft(-slant);\r\n        result!.children[2].setLeft(slant);\r\n    } else if (below && !above) {\r\n        const top = spanHeight(nucleus) - nucleusShift;\r\n\r\n        result = makeVlist(\r\n            context,\r\n            [FONTMETRICS.bigOpSpacing5, below, belowShift, nucleus],\r\n            'top',\r\n            top\r\n        );\r\n\r\n        // See comment above about slants\r\n        result!.children[0].setLeft(-slant);\r\n    } else if (!below && above) {\r\n        const bottom = spanDepth(nucleus) + nucleusShift;\r\n\r\n        result = makeVlist(\r\n            context,\r\n            [nucleus, aboveShift, above, FONTMETRICS.bigOpSpacing5],\r\n            'bottom',\r\n            bottom\r\n        );\r\n\r\n        // See comment above about slants\r\n        result!.children[1].setLeft(slant);\r\n    }\r\n\r\n    return makeSpan(result, 'op-limits', 'mop');\r\n}\r\n\r\n/**\r\n * Return an atom suitable for use as the root of a formula.\r\n */\r\n\r\nexport function makeRoot(parseMode: ParseMode, body: Atom[] = []): Atom {\r\n    const result = new Atom(parseMode, 'root', body || []);\r\n    if (\r\n        isArray(result.body) &&\r\n        (result.body.length === 0 || result.body[0].type !== 'first')\r\n    ) {\r\n        result.body!.unshift(new Atom('', 'first'));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function isAtomArray(arg: any): arg is Atom[] {\r\n    return isArray(arg);\r\n}\r\n","export function stringToCodepoints(str: string): number[] {\r\n    const result: number[] = [];\r\n    for (let i = 0; i < str.length; i++) {\r\n        let code = str.charCodeAt(i);\r\n        if (code === 0x0d && str.charCodeAt(i + 1) === 0x0a) {\r\n            code = 0x0a;\r\n            i++;\r\n        }\r\n        if (code === 0x0d || code === 0x0c) code = 0x0a;\r\n        if (code === 0x00) code = 0xfffd;\r\n\r\n        // Decode a surrogate pair into an astral codepoint.\r\n        if (code >= 0xd800 && code <= 0xdbff) {\r\n            const nextCode = str.charCodeAt(i + 1);\r\n            if (nextCode >= 0xdc00 && nextCode <= 0xdfff) {\r\n                const lead = code - 0xd800;\r\n                const trail = nextCode - 0xdc00;\r\n                code = Math.pow(2, 16) + lead * Math.pow(2, 10) + trail;\r\n                // N = ((H - 0xD800) * 0x400) + (L - 0xDC00) + 0x10000;\r\n                i++;\r\n            }\r\n        }\r\n\r\n        result.push(code);\r\n    }\r\n    return result;\r\n}\r\n\r\nconst ZWJ = 0x200d; // Zero-width joiner\r\n\r\n// const ZWSP = 0x200b; // Zero-width space\r\n\r\n/* The following codepoints should combine with the previous ones */\r\nconst EMOJI_COMBINATOR = [\r\n    [ZWJ, 1],\r\n    [0xfe0e, 2], // VS-15: text presentation, VS-16: Emoji presentation\r\n    [0x1f3fb, 5], // EMOJI_MODIFIER_FITZPATRICK_TYPE 1-6\r\n    [0x1f9b0, 4], // red hair..white hair\r\n    [0xe0020, 96], // EMOJI_TAG\r\n];\r\nlet emojiCombinator: { [code: number]: boolean };\r\n\r\n// Regional indicator: a pair of codepoints indicating some flags\r\nconst REGIONAL_INDICATOR = [0x1f1e6, 0x1f1ff];\r\n\r\nfunction isEmojiCombinator(code: number): boolean {\r\n    if (!emojiCombinator) {\r\n        emojiCombinator = {};\r\n        EMOJI_COMBINATOR.forEach((x) => {\r\n            for (let i = x[0]; i <= x[0] + x[1] - 1; i++) {\r\n                emojiCombinator[i] = true;\r\n            }\r\n        });\r\n    }\r\n    return emojiCombinator[code] ?? false;\r\n}\r\n\r\nfunction isRegionalIndicator(code: number): boolean {\r\n    return code >= REGIONAL_INDICATOR[0] && code <= REGIONAL_INDICATOR[1];\r\n}\r\n\r\n/**\r\n * Return a string or an array of graphemes.\r\n * This includes:\r\n * - emoji with skin and hair modifiers\r\n * - emoji combination (for example \"female pilot\")\r\n * - text emoji with an emoji presentation style modifier\r\n *      - U+1F512 U+FE0E 🔒︎\r\n *      - U+1F512 U+FE0F 🔒️\r\n * - flags represented as two regional indicator codepoints\r\n * - flags represented as a flag emoji + zwj + an emoji tag\r\n * - other combinations (for example, rainbow flag)\r\n */\r\n\r\nexport function splitGraphemes(str: string): string | string[] {\r\n    // If it's all ASCII, short-circuit the grapheme splitting...\r\n    if (/^[\\x20-\\xFF]*$/.test(str)) return str;\r\n\r\n    const result: string[] = [];\r\n\r\n    const codePoints = stringToCodepoints(str);\r\n    let index = 0;\r\n    while (index < codePoints.length) {\r\n        const code = codePoints[index++];\r\n\r\n        const next = codePoints[index];\r\n        // Combine sequences\r\n        if (next === ZWJ) {\r\n            // Zero-width joiner sequences are:\r\n            // ZWJ_SEQUENCE := (CHAR + ZWJ)+\r\n            const baseIndex = index - 1;\r\n            index += 2;\r\n            while (codePoints[index] === ZWJ) {\r\n                index += 2;\r\n            }\r\n            result.push(\r\n                String.fromCodePoint(\r\n                    ...codePoints.slice(baseIndex, index - baseIndex + 1)\r\n                )\r\n            );\r\n        } else if (isEmojiCombinator(next)) {\r\n            // Combine emoji sequences\r\n            // See http://unicode.org/reports/tr51/#def_emoji_tag_sequence\r\n            const baseIndex = index - 1; // The previous character is the 'base'\r\n            while (isEmojiCombinator(codePoints[index])) {\r\n                index += codePoints[index] === ZWJ ? 2 : 1;\r\n            }\r\n            result.push(\r\n                String.fromCodePoint(\r\n                    ...codePoints.slice(baseIndex, index - baseIndex)\r\n                )\r\n            );\r\n        } else if (isRegionalIndicator(code)) {\r\n            // Some (but not all) flags are represented by a sequence of two\r\n            // \"regional indicators\" codepoints.\r\n            index += 1;\r\n            result.push(\r\n                String.fromCodePoint(...codePoints.slice(index - 2, 2))\r\n            );\r\n        } else {\r\n            result.push(String.fromCodePoint(code));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * ## Reference\r\n * TeX source code:\r\n * {@link  http://tug.org/texlive/devsrc/Build/source/texk/web2c/tex.web | Tex.web}\r\n *\r\n * For a list of standard TeX macros, see:\r\n * {@link ftp://tug.ctan.org/pub/tex-archive/systems/knuth/dist/lib/plain.tex | plain.tex}\r\n */\r\n\r\nimport { splitGraphemes } from './grapheme-splitter';\r\n\r\n/**\r\n *\r\n * A token can be of type:\r\n *  - `literal`: the value is the character this token represents. This can be\r\n * a combination of Unicode codepoints, for example for emojis.\r\n *  - `^` and `_`: superscript and subscript commands.\r\n *  - `command`: a command such as `\\sin` or `\\text` or `\\alpha`\r\n *  - `{` and `}`: begin and end group (use for arguments of commands and for grouping)\r\n *  - `#`: parameter\r\n *\r\n *  - `placeholder`: a placeholder value meant to be replaced by some actual value\r\n *  - `space`: one or more space characters (including tab, etc...)\r\n *\r\n *  See: [TeX:289](http://tug.org/texlive/devsrc/Build/source/texk/web2c/tex.web)\r\n */\r\nexport class Token {\r\n    type: string;\r\n    value: string | number;\r\n    constructor(type: string, value: string | number = '') {\r\n        this.type = type;\r\n        this.value = value;\r\n        console.assert(!(type === 'literal' && value === '}'));\r\n    }\r\n}\r\n\r\n/**\r\n * Given a LaTeX expression represented as a character string,\r\n * the Lexer class will scan and return Tokens for the lexical\r\n * units in the string.\r\n *\r\n * @param s A string of LaTeX\r\n */\r\nclass Lexer {\r\n    s: string | string[];\r\n    pos: number;\r\n    constructor(s: string) {\r\n        this.s = splitGraphemes(s);\r\n        this.pos = 0;\r\n    }\r\n    /**\r\n     * @return True if we reached the end of the stream\r\n     */\r\n    end(): boolean {\r\n        return this.pos >= this.s.length;\r\n    }\r\n    /**\r\n     * Return the next char and advance\r\n     */\r\n    get(): string {\r\n        return this.pos < this.s.length ? this.s[this.pos++] : '';\r\n    }\r\n    /**\r\n     * Return the next char, but do not advance\r\n     */\r\n    peek(): string {\r\n        return this.s[this.pos];\r\n    }\r\n    /**\r\n     * Return the next substring matching regEx and advance.\r\n     */\r\n    scan(regEx: RegExp): string | null {\r\n        // this.s can either be a string, if it's made up only of ASCII chars\r\n        // or an array of graphemes, if it's more complicated.\r\n        let execResult: (string | null)[] | null;\r\n        if (typeof this.s === 'string') {\r\n            execResult = regEx.exec(this.s.slice(this.pos));\r\n        } else {\r\n            execResult = regEx.exec(this.s.slice(this.pos).join(''));\r\n        }\r\n        if (execResult?.[0]) {\r\n            this.pos += execResult[0].length;\r\n            return execResult[0];\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Return true if next char is white space. Does not advance.\r\n     *\r\n     * See [Stackoverflow](http://stackoverflow.com/questions/6073637/)\r\n     */\r\n    isWhiteSpace(): boolean {\r\n        return /[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]/.test(this.s[this.pos]);\r\n        /*\r\n    Note that browsers are inconsistent in their definitions of the\r\n    `\\s` metacharacter, so we use an explicit pattern instead.\r\n\r\n    - IE:          `[ \\f\\n\\r\\t\\v]`\r\n    - Chrome:      `[ \\f\\n\\r\\t\\v\\u00A0]`\r\n    - Firefox:     `[ \\f\\n\\r\\t\\v\\u00A0\\u2028\\u2029]`\r\n\r\n    - \\f \\u000C: form feed (FORM FEED)\r\n    - \\n \\u000A: linefeed (LINE FEED)\r\n    - \\r \\u000D: carriage return\r\n    - \\t \\u0009: tab (CHARACTER TABULATION)\r\n    - \\v \\u000B: vertical tab (LINE TABULATION)\r\n    - \\u00A0: NON-BREAKING SPACE\r\n    - \\u2028: LINE SEPARATOR\r\n    - \\u2029: PARAGRAPH SEPARATOR\r\n\r\n    Could be considered:\r\n    - \\u2000-\\u200a spacing\r\n    - \\u202f NARROW NO-BREAK SPACE\r\n    - \\u205F MEDIUM MATHEMATICAL SPACE\r\n    - \\u3000 IDEOGRAPHIC SPACE\r\n    - \\uFEFF ZERO WITH NON-BREAKING SPACE\r\n*/\r\n    }\r\n    /**\r\n     * Return a single token, or null, created from the lexer.\r\n     */\r\n    makeToken(): Token | null {\r\n        // If we've reached the end, exit\r\n        if (this.end()) return null;\r\n        // Handle white space\r\n        // Note that in text mode, spaces are significant and can't be coalesced.\r\n        if (this.isWhiteSpace()) {\r\n            this.get();\r\n            return new Token('space');\r\n        }\r\n        let result: Token | null = null;\r\n        // Is it a command?\r\n        if (this.peek() === '\\\\') {\r\n            this.get(); // Skip the initial \\\r\n            if (!this.end()) {\r\n                // A command is either a string of letters and asterisks...\r\n                let command = this.scan(/^[a-zA-Z*]+/);\r\n                // There are a few special commands that are handled here...\r\n                if (command === 'bgroup') {\r\n                    // Begin group, synonym for opening brace\r\n                    result = new Token('{');\r\n                } else if (command === 'egroup') {\r\n                    // End group, synonym for closing brace\r\n                    result = new Token('}');\r\n                } else {\r\n                    if (!command) {\r\n                        // ... or a single non-letter character\r\n                        command = this.get();\r\n                    }\r\n                    result = new Token('command', command);\r\n                }\r\n            }\r\n            // Is it a group start/end?\r\n        } else if (this.peek() === '{' || this.peek() === '}') {\r\n            result = new Token(this.get()!);\r\n        } else if (this.peek() === '#') {\r\n            // This could be either a param token, or a literal # (used for\r\n            // colorspecs, for example). A param token is a '#' followed by\r\n            // - a digit 0-9 followed by a non-alpha, non-digit\r\n            // - or '?'.\r\n            // Otherwise, it's a literal '#'.\r\n            this.get();\r\n            if (!this.end()) {\r\n                let isParam = false;\r\n                let next = this.peek();\r\n                if (/[0-9?]/.test(next)) {\r\n                    // Could be a param\r\n                    isParam = true;\r\n                    // Need to look ahead to the following char\r\n                    if (this.pos + 1 < this.s.length) {\r\n                        const after = this.s[this.pos + 1];\r\n                        isParam = /[^0-9A-Za-z]/.test(after);\r\n                    }\r\n                }\r\n                if (isParam) {\r\n                    result = new Token('#');\r\n                    next = this.get()!;\r\n                    if (next >= '0' && next <= '9') {\r\n                        result.value = parseInt(next);\r\n                    } else {\r\n                        result.value = '?';\r\n                    }\r\n                } else {\r\n                    result = new Token('literal', '#');\r\n                }\r\n            }\r\n        } else if (this.peek() === '$') {\r\n            // Mode switch\r\n            this.get();\r\n            if (this.peek() === '$') {\r\n                // $$\r\n                this.get();\r\n                result = new Token('$$');\r\n            } else {\r\n                // $\r\n                result = new Token('$');\r\n            }\r\n        } else {\r\n            result = new Token('literal', this.get()!);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Create Tokens from a stream of LaTeX\r\n *\r\n * @param s - A string o LaTeX. It can include comments (with the `%`\r\n * marker) and multiple lines.\r\n */\r\nexport function tokenize(s: string): Token[] {\r\n    const result: Token[] = [];\r\n    const lines = s.toString().split(/\\r?\\n/);\r\n    let stream = '';\r\n    let sep = '';\r\n    for (const line of lines) {\r\n        stream += sep;\r\n        sep = ' ';\r\n        // Remove everything after a % (comment marker)\r\n        // (but \\% should be preserved...)\r\n        const m = line.match(/((?:\\\\%)|[^%])*/);\r\n        if (m) stream += m[0];\r\n    }\r\n\r\n    const lex = new Lexer(stream);\r\n    while (!lex.end()) {\r\n        const token = lex.makeToken();\r\n        if (token) result.push(token);\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport {\r\n    Span,\r\n    makeSpan,\r\n    makeHlist,\r\n    makeVlist,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n} from './span';\r\nimport { makeCustomSizedDelim } from './delimiters';\r\nimport { Context } from './context';\r\n\r\n/**\r\n * Gengrac -- Generalized fraction\r\n *\r\n * Decompose fractions, binomials, and in general anything made\r\n * of two expressions on top of each other, optionally separated by a bar,\r\n * and optionally surrounded by fences (parentheses, brackets, etc...)\r\n *\r\n * Depending on the type of fraction the mathstyle is either\r\n * display math or inline math (which is indicated by 'textstyle'). This value can\r\n * also be set to 'auto', which indicates it should use the current mathstyle\r\n */\r\nregisterAtomType('genfrac', (context: Context, atom: Atom): Span[] => {\r\n    const mathstyle =\r\n        atom.mathstyle === 'auto'\r\n            ? context.mathstyle\r\n            : MATHSTYLES[atom.mathstyle];\r\n    const newContext = context.clone({ mathstyle: mathstyle });\r\n    let numer = [];\r\n    if (atom.numerPrefix) {\r\n        numer.push(makeSpan(atom.numerPrefix, 'mord'));\r\n    }\r\n    const numeratorStyle = atom.continuousFraction\r\n        ? mathstyle\r\n        : mathstyle.fracNum();\r\n    numer = numer.concat(\r\n        decompose(newContext.clone({ mathstyle: numeratorStyle }), atom.numer)\r\n    );\r\n    const numerReset = makeHlist(\r\n        numer,\r\n        context.mathstyle.adjustTo(numeratorStyle)\r\n    );\r\n    let denom = [];\r\n    if (atom.denomPrefix) {\r\n        denom.push(makeSpan(atom.denomPrefix, 'mord'));\r\n    }\r\n    const denominatorStyle = atom.continuousFraction\r\n        ? mathstyle\r\n        : mathstyle.fracDen();\r\n    denom = denom.concat(\r\n        decompose(newContext.clone({ mathstyle: denominatorStyle }), atom.denom)\r\n    );\r\n    const denomReset = makeHlist(\r\n        denom,\r\n        context.mathstyle.adjustTo(denominatorStyle)\r\n    );\r\n    const ruleWidth = !atom.hasBarLine\r\n        ? 0\r\n        : FONTMETRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\r\n    // Rule 15b from TeXBook Appendix G, p.444\r\n    //\r\n    // 15b. If C > T, set u ← σ8 and v ← σ11. Otherwise set u ← σ9 or σ10,according\r\n    // as θ ̸= 0 or θ = 0, and set v ← σ12. (The fraction will be typeset with\r\n    // its numerator shifted up by an amount u with respect to the current\r\n    // baseline, and with the denominator shifted down by v, unless the boxes\r\n    // are unusually large.)\r\n    let numShift: number;\r\n    let clearance = 0;\r\n    let denomShift: number;\r\n    if (mathstyle.size === MATHSTYLES.displaystyle.size) {\r\n        numShift = mathstyle.metrics.num1; // set u ← σ8\r\n        if (ruleWidth > 0) {\r\n            clearance = 3 * ruleWidth; //  φ ← 3θ\r\n        } else {\r\n            clearance = 7 * FONTMETRICS.defaultRuleThickness; // φ ← 7 ξ8\r\n        }\r\n        denomShift = mathstyle.metrics.denom1; // v ← σ11\r\n    } else {\r\n        if (ruleWidth > 0) {\r\n            numShift = mathstyle.metrics.num2; // u ← σ9\r\n            clearance = ruleWidth; //  φ ← θ\r\n        } else {\r\n            numShift = mathstyle.metrics.num3; // u ← σ10\r\n            clearance = 3 * FONTMETRICS.defaultRuleThickness; // φ ← 3 ξ8\r\n        }\r\n        denomShift = mathstyle.metrics.denom2; // v ← σ12\r\n    }\r\n    const numerDepth = numerReset ? spanDepth(numerReset) : 0;\r\n    const denomHeight = denomReset ? spanHeight(denomReset) : 0;\r\n    let frac: Span;\r\n    if (ruleWidth === 0) {\r\n        // Rule 15c from Appendix G\r\n        // No bar line between numerator and denominator\r\n        const candidateClearance =\r\n            numShift - numerDepth - (denomHeight - denomShift);\r\n        if (candidateClearance < clearance) {\r\n            numShift += 0.5 * (clearance - candidateClearance);\r\n            denomShift += 0.5 * (clearance - candidateClearance);\r\n        }\r\n        frac = makeVlist(\r\n            newContext,\r\n            [numerReset, -numShift, denomReset, denomShift],\r\n            'individualShift'\r\n        );\r\n    } else {\r\n        // Rule 15d from Appendix G\r\n        // There is a bar line between the numerator and the denominator\r\n        const axisHeight = mathstyle.metrics.axisHeight;\r\n        const numerLine = axisHeight + 0.5 * ruleWidth;\r\n        const denomLine = axisHeight - 0.5 * ruleWidth;\r\n        if (numShift - numerDepth - numerLine < clearance) {\r\n            numShift += clearance - (numShift - numerDepth - numerLine);\r\n        }\r\n        if (denomLine - (denomHeight - denomShift) < clearance) {\r\n            denomShift += clearance - (denomLine - (denomHeight - denomShift));\r\n        }\r\n        const mid = makeSpan(null, ' frac-line');\r\n        mid.applyStyle(atom.getStyle());\r\n        // Manually set the height of the line because its height is\r\n        // created in CSS\r\n        mid.height = ruleWidth / 2;\r\n        mid.depth = ruleWidth / 2;\r\n        const elements = [];\r\n        if (numerReset) {\r\n            elements.push(numerReset);\r\n            elements.push(-numShift);\r\n        }\r\n        elements.push(mid);\r\n        elements.push(ruleWidth / 2 - axisHeight);\r\n        if (denomReset) {\r\n            elements.push(denomReset);\r\n            elements.push(denomShift);\r\n        }\r\n        frac = makeVlist(newContext, elements, 'individualShift');\r\n    }\r\n    // Add a 'mfrac' class to provide proper context for\r\n    // other css selectors (such as 'frac-line')\r\n    frac.classes += ' mfrac';\r\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\r\n    // account for the possible size change here.\r\n    frac.height *= mathstyle.sizeMultiplier / context.mathstyle.sizeMultiplier;\r\n    frac.depth *= mathstyle.sizeMultiplier / context.mathstyle.sizeMultiplier;\r\n    // if (!atom.leftDelim && !atom.rightDelim) {\r\n    //     return makeOrd(frac,\r\n    //         context.parentMathstyle.adjustTo(mathstyle) +\r\n    //         ((context.parentSize !== context.size) ?\r\n    //             (' sizing reset-' + context.parentSize + ' ' + context.size) : ''));\r\n    // }\r\n    // Rule 15e of Appendix G\r\n    const delimSize =\r\n        mathstyle.size === MATHSTYLES.displaystyle.size\r\n            ? mathstyle.metrics.delim1\r\n            : mathstyle.metrics.delim2;\r\n    // Optional delimiters\r\n    const leftDelim = atom.bind(\r\n        context,\r\n        makeCustomSizedDelim(\r\n            'mopen',\r\n            atom.leftDelim,\r\n            delimSize,\r\n            true,\r\n            context.clone({ mathstyle: mathstyle })\r\n        )\r\n    );\r\n    const rightDelim = atom.bind(\r\n        context,\r\n        makeCustomSizedDelim(\r\n            'mclose',\r\n            atom.rightDelim,\r\n            delimSize,\r\n            true,\r\n            context.clone({ mathstyle: mathstyle })\r\n        )\r\n    );\r\n    leftDelim.applyStyle(atom.getStyle());\r\n    rightDelim.applyStyle(atom.getStyle());\r\n\r\n    return [\r\n        atom.bind(\r\n            context,\r\n            makeSpan(\r\n                [leftDelim, frac, rightDelim],\r\n                context.parentSize !== context.size\r\n                    ? 'sizing reset-' + context.parentSize + ' ' + context.size\r\n                    : '',\r\n                'mord'\r\n            )\r\n        ),\r\n    ];\r\n});\r\n","import { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport {\r\n    makeSpan,\r\n    makeVlist,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n    Span,\r\n} from './span';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport { makeLeftRightDelim } from './delimiters';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { Context } from './context';\r\n\r\nregisterAtomType('array', (context: Context, atom: Atom): Span[] => {\r\n    // See http://tug.ctan.org/macros/latex/base/ltfsstrc.dtx\r\n    // and http://tug.ctan.org/macros/latex/base/lttab.dtx\r\n    let colFormat = atom.colFormat;\r\n    if (colFormat && colFormat.length === 0) {\r\n        colFormat = [{ align: 'l' }];\r\n    }\r\n    if (!colFormat) {\r\n        colFormat = [\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n        ];\r\n    }\r\n    // Fold the array so that there are no more columns of content than\r\n    // there are columns prescribed by the column format.\r\n    const array = [];\r\n    let colMax = 0; // Maximum number of columns of content\r\n    for (const colSpec of colFormat) {\r\n        if (colSpec.align) colMax++;\r\n    }\r\n    for (const row of atom.array) {\r\n        let colIndex = 0;\r\n        while (colIndex < row.length) {\r\n            const newRow = [];\r\n            const lastCol = Math.min(row.length, colIndex + colMax);\r\n            while (colIndex < lastCol) {\r\n                newRow.push(row[colIndex++]);\r\n            }\r\n            array.push(newRow);\r\n        }\r\n    }\r\n    // If the last row is empty, ignore it.\r\n    if (\r\n        array[array.length - 1].length === 1 &&\r\n        array[array.length - 1][0].length === 0\r\n    ) {\r\n        array.pop();\r\n    }\r\n    const mathstyle = MATHSTYLES[atom.mathstyle] || context.mathstyle;\r\n    // Row spacing\r\n    // Default \\arraystretch from lttab.dtx\r\n    const arraystretch = atom.arraystretch || 1;\r\n    const arraycolsep =\r\n        typeof atom.arraycolsep === 'number'\r\n            ? atom.arraycolsep\r\n            : FONTMETRICS.arraycolsep;\r\n    const arrayskip = arraystretch * FONTMETRICS.baselineskip;\r\n    const arstrutHeight = 0.7 * arrayskip;\r\n    const arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\r\n    let totalHeight = 0;\r\n    let nc = 0;\r\n    const body = [];\r\n    const nr = array.length;\r\n    for (let r = 0; r < nr; ++r) {\r\n        const inrow = array[r];\r\n        nc = Math.max(nc, inrow.length);\r\n        let height = arstrutHeight; // \\@array adds an \\@arstrut\r\n        let depth = arstrutDepth; // to each row (via the template)\r\n        const outrow: {\r\n            cells: Span[][];\r\n            height: number;\r\n            depth: number;\r\n            pos: number;\r\n        } = { cells: [], height: 0, depth: 0, pos: 0 };\r\n        for (let c = 0; c < inrow.length; ++c) {\r\n            const localContext = context.clone({\r\n                mathstyle: MATHSTYLES[atom.mathstyle],\r\n            });\r\n            const cell = decompose(localContext, inrow[c]) || [];\r\n            const elt = [makeSpan(null, '', 'mord')].concat(cell);\r\n            depth = Math.max(depth, spanDepth(elt));\r\n            height = Math.max(height, spanHeight(elt));\r\n            outrow.cells.push(elt);\r\n        }\r\n        let jot = r === nr - 1 ? 0 : atom.jot || 0;\r\n        if (atom.rowGaps && atom.rowGaps[r]) {\r\n            jot = atom.rowGaps[r];\r\n            if (jot > 0) {\r\n                // \\@argarraycr\r\n                jot += arstrutDepth;\r\n                if (depth < jot) {\r\n                    depth = jot; // \\@xargarraycr\r\n                }\r\n                jot = 0;\r\n            }\r\n        }\r\n        outrow.height = height;\r\n        outrow.depth = depth;\r\n        totalHeight += height;\r\n        outrow.pos = totalHeight;\r\n        totalHeight += depth + jot; // \\@yargarraycr\r\n        body.push(outrow);\r\n    }\r\n    const offset = totalHeight / 2 + mathstyle.metrics.axisHeight;\r\n    const contentCols = [];\r\n    for (let colIndex = 0; colIndex < nc; colIndex++) {\r\n        const col = [];\r\n        for (const row of body) {\r\n            const elem = row.cells[colIndex];\r\n            if (!elem) {\r\n                continue;\r\n            }\r\n            elem.depth = row.depth;\r\n            elem.height = row.height;\r\n\r\n            col.push(elem);\r\n            col.push(row.pos - offset);\r\n        }\r\n        if (col.length > 0) {\r\n            contentCols.push(makeVlist(context, col, 'individualShift'));\r\n        }\r\n    }\r\n    // Iterate over each column description.\r\n    // Each `colDesc` will indicate whether to insert a gap, a rule or\r\n    // a column from 'contentCols'\r\n    const cols = [];\r\n    let prevColContent = false;\r\n    let prevColRule = false;\r\n    let currentContentCol = 0;\r\n    let firstColumn = !atom.lFence;\r\n    for (const colDesc of colFormat) {\r\n        if (colDesc.align && currentContentCol >= contentCols.length) {\r\n            break;\r\n        } else if (colDesc.align && currentContentCol < contentCols.length) {\r\n            // If an alignment is specified, insert a column of content\r\n            if (prevColContent) {\r\n                // If no gap was provided, insert a default gap between\r\n                // consecutive columns of content\r\n                cols.push(makeColGap(2 * arraycolsep));\r\n            } else if (prevColRule || firstColumn) {\r\n                // If the previous column was a rule or this is the first column\r\n                // add a smaller gap\r\n                cols.push(makeColGap(arraycolsep));\r\n            }\r\n            cols.push(\r\n                makeSpan(\r\n                    contentCols[currentContentCol],\r\n                    'col-align-' + colDesc.align\r\n                )\r\n            );\r\n            currentContentCol++;\r\n            prevColContent = true;\r\n            prevColRule = false;\r\n            firstColumn = false;\r\n        } else if (typeof colDesc.gap !== 'undefined') {\r\n            // Something to insert in between columns of content\r\n            if (typeof colDesc.gap === 'number') {\r\n                // It's a number, indicating how much space, in em,\r\n                // to leave in between columns\r\n                cols.push(makeColGap(colDesc.gap));\r\n            } else {\r\n                // It's a mathlist\r\n                // Create a column made up of the mathlist\r\n                // as many times as there are rows.\r\n                cols.push(\r\n                    makeColOfRepeatingElements(\r\n                        context,\r\n                        body,\r\n                        offset,\r\n                        colDesc.gap\r\n                    )\r\n                );\r\n            }\r\n            prevColContent = false;\r\n            prevColRule = false;\r\n            firstColumn = false;\r\n        } else if (colDesc.rule) {\r\n            // It's a rule.\r\n            const separator = makeSpan(null, 'vertical-separator');\r\n            separator.setStyle('height', totalHeight, 'em');\r\n            // result.setTop((1 - context.mathstyle.sizeMultiplier) *\r\n            //     context.mathstyle.metrics.axisHeight);\r\n            separator.setStyle(\r\n                'margin-top',\r\n                3 * context.mathstyle.metrics.axisHeight - offset,\r\n                'em'\r\n            );\r\n            separator.setStyle('vertical-align', 'top');\r\n            // separator.setStyle('display', 'inline-block');\r\n            let gap = 0;\r\n            if (prevColRule) {\r\n                gap = FONTMETRICS.doubleRuleSep - FONTMETRICS.arrayrulewidth;\r\n            } else if (prevColContent) {\r\n                gap = arraycolsep - FONTMETRICS.arrayrulewidth;\r\n            }\r\n            separator.setLeft(gap);\r\n            cols.push(separator);\r\n            prevColContent = false;\r\n            prevColRule = true;\r\n            firstColumn = false;\r\n        }\r\n    }\r\n    if (prevColContent && !atom.rFence) {\r\n        // If the last column was content, add a small gap\r\n        cols.push(makeColGap(arraycolsep));\r\n    }\r\n    if (\r\n        (!atom.lFence || atom.lFence === '.') &&\r\n        (!atom.rFence || atom.rFence === '.')\r\n    ) {\r\n        // There are no delimiters around the array, just return what\r\n        // we've built so far.\r\n        return [makeSpan(cols, 'mtable', 'mord')];\r\n    }\r\n    // There is at least one delimiter. Wrap the core of the array with\r\n    // appropriate left and right delimiters\r\n    // const inner = makeSpan(makeSpan(cols, 'mtable'), 'mord');\r\n    const inner = makeSpan(cols, 'mtable');\r\n    const innerHeight = spanHeight(inner);\r\n    const innerDepth = spanDepth(inner);\r\n    return [\r\n        makeSpan(\r\n            [\r\n                atom.bind(\r\n                    context,\r\n                    makeLeftRightDelim(\r\n                        'mopen',\r\n                        atom.lFence,\r\n                        innerHeight,\r\n                        innerDepth,\r\n                        context\r\n                    )\r\n                ),\r\n                inner,\r\n                atom.bind(\r\n                    context,\r\n                    makeLeftRightDelim(\r\n                        'mclose',\r\n                        atom.rFence,\r\n                        innerHeight,\r\n                        innerDepth,\r\n                        context\r\n                    )\r\n                ),\r\n            ],\r\n            '',\r\n            'mord'\r\n        ),\r\n    ];\r\n});\r\n\r\n/**\r\n * Used in `decomposeArray` to create a column separator span.\r\n *\r\n */\r\nfunction makeColGap(width: number): Span {\r\n    const separator = makeSpan('\\u200b', 'arraycolsep');\r\n    separator.setWidth(width);\r\n    return separator;\r\n}\r\n\r\n/**\r\n * Used in decomposeArray to create a column of repeating elements.\r\n */\r\nfunction makeColOfRepeatingElements(context: Context, body, offset, elem) {\r\n    const col = [];\r\n    for (const row of body) {\r\n        const cell = makeSpan(decompose(context, elem));\r\n        cell.depth = row.depth;\r\n        cell.height = row.height;\r\n        col.push(cell);\r\n        col.push(row.pos - offset);\r\n    }\r\n    return makeVlist(context, col, 'individualShift');\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport {\r\n    Span,\r\n    SpanType,\r\n    isSpanType,\r\n    makeSVGSpan,\r\n    makeSpan,\r\n    makeVlist,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n} from './span';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { Context } from './context';\r\n\r\n// An `overunder` atom has the following attributes:\r\n// - body: atoms[]: atoms displayed on the base line\r\n// - svgBody: string. A SVG graphic displayed on the base line (if present, the body is ignored)\r\n// - overscript: atoms[]: atoms displayed above the body\r\n// - svgAbove: string. A named SVG graphic above the element\r\n// - underscript: atoms[]: atoms displayed below the body\r\n// - svgBelow: string. A named SVG graphic below the element\r\n// - skipBoundary: boolean. If true, ignore atom boundary when keyboard navigating\r\nregisterAtomType('overunder', (context: Context, atom: Atom): Span[] => {\r\n    const body: Span | Span[] = atom.svgBody\r\n        ? makeSVGSpan(atom.svgBody)\r\n        : decompose(context, atom.body as Atom[]);\r\n    const annotationStyle = context.clone({\r\n        mathstyle: MATHSTYLES.scriptstyle,\r\n    });\r\n    let above: Span;\r\n    let below: Span;\r\n    if (atom.svgAbove) {\r\n        above = makeSVGSpan(atom.svgAbove);\r\n    } else if (atom.overscript) {\r\n        above = makeSpan(\r\n            decompose(annotationStyle, atom.overscript),\r\n            context.mathstyle.adjustTo(annotationStyle.mathstyle)\r\n        );\r\n    }\r\n    if (atom.svgBelow) {\r\n        below = makeSVGSpan(atom.svgBelow);\r\n    } else if (atom.underscript) {\r\n        below = makeSpan(\r\n            decompose(annotationStyle, atom.underscript),\r\n            context.mathstyle.adjustTo(annotationStyle.mathstyle)\r\n        );\r\n    }\r\n    if (above && below) {\r\n        // Pad the above and below if over a \"base\"\r\n        below.setLeft(0.3);\r\n        below.setRight(0.3);\r\n        above.setLeft(0.3);\r\n        above.setRight(0.3);\r\n    }\r\n    return makeOverunderStack(\r\n        context,\r\n        body,\r\n        above,\r\n        below,\r\n        isSpanType(atom.type) ? atom.type : 'mord'\r\n    );\r\n});\r\n\r\n/**\r\n * Combine a nucleus with an atom above and an atom below. Used to form\r\n * stacks for the 'overunder' atom type .\r\n *\r\n * @param nucleus The base over and under which the atoms will\r\n * be placed.\r\n * @param type The type ('mop', 'mrel', etc...) of the result\r\n */\r\nfunction makeOverunderStack(\r\n    context: Context,\r\n    nucleus: Span | Span[],\r\n    above: Span,\r\n    below: Span,\r\n    type: SpanType\r\n): Span[] {\r\n    // If nothing above and nothing below, nothing to do.\r\n    if (!above && !below) return isArray(nucleus) ? nucleus : [nucleus];\r\n\r\n    let aboveShift = 0;\r\n    let belowShift = 0;\r\n\r\n    if (above) {\r\n        aboveShift = Math.max(\r\n            FONTMETRICS.bigOpSpacing1,\r\n            FONTMETRICS.bigOpSpacing3 - spanDepth(above)\r\n        );\r\n    }\r\n    if (below) {\r\n        belowShift = Math.max(\r\n            FONTMETRICS.bigOpSpacing2,\r\n            FONTMETRICS.bigOpSpacing4 - spanHeight(below)\r\n        );\r\n    }\r\n\r\n    let result = null;\r\n\r\n    if (below && above) {\r\n        const bottom =\r\n            spanHeight(below) + spanDepth(below) + spanDepth(nucleus);\r\n\r\n        result = makeVlist(\r\n            context,\r\n            [\r\n                0,\r\n                below,\r\n                FONTMETRICS.bigOpSpacing3 + spanDepth(nucleus),\r\n                nucleus,\r\n                -aboveShift,\r\n                above,\r\n                FONTMETRICS.bigOpSpacing2,\r\n            ],\r\n            'bottom',\r\n            bottom\r\n        );\r\n    } else if (below && !above) {\r\n        const top = spanHeight(nucleus);\r\n\r\n        result = makeVlist(\r\n            context,\r\n            [0, below, belowShift, nucleus],\r\n            'top',\r\n            top\r\n        );\r\n    } else if (above && !below) {\r\n        result = makeVlist(\r\n            context,\r\n            [\r\n                nucleus,\r\n                Math.max(\r\n                    FONTMETRICS.bigOpSpacing2,\r\n                    aboveShift - spanDepth(above)\r\n                ), // TeXBook 13a, p.444\r\n                above,\r\n                0,\r\n            ],\r\n            'bottom',\r\n            spanDepth(nucleus)\r\n        );\r\n    }\r\n\r\n    return [makeSpan(result, 'op-over-under', type)];\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport type { Atom } from './atom-utils';\r\nimport type { Context } from './context';\r\n\r\nimport { registerAtomType, decompose } from './atom-utils';\r\nimport {\r\n    makeSVGSpan,\r\n    makeSpan,\r\n    makeVlist,\r\n    makeSymbol,\r\n    height as spanHeight,\r\n    skew as spanSkew,\r\n    Span,\r\n} from './span';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\n\r\nregisterAtomType('accent', (context: Context, atom: Atom): Span[] => {\r\n    // Accents are handled in the TeXbook pg. 443, rule 12.\r\n    const mathstyle = context.mathstyle;\r\n    // Build the base atom\r\n    let base = decompose(context.cramp(), atom.body as Atom[]);\r\n    if (atom.superscript || atom.subscript) {\r\n        // If there is a supsub attached to the accent\r\n        // apply it to the base.\r\n        // Note this does not give the same result as TeX when there\r\n        // are stacked accents, e.g. \\vec{\\breve{\\hat{\\acute{...}}}}^2\r\n        base = [atom.attachSupsub(context, makeSpan(base, '', 'mord'), 'mord')];\r\n    }\r\n    // Calculate the skew of the accent. This is based on the line \"If the\r\n    // nucleus is not a single character, let s = 0; otherwise set s to the\r\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\r\n    // Note that our skew metrics are just the kern between each character\r\n    // and the skewchar.\r\n    let skew = 0;\r\n    if (\r\n        isArray(atom.body) &&\r\n        atom.body.length === 1 &&\r\n        atom.body[0].isCharacterBox()\r\n    ) {\r\n        skew = spanSkew(base);\r\n    }\r\n    // calculate the amount of space between the body and the accent\r\n    let clearance = Math.min(spanHeight(base), mathstyle.metrics.xHeight);\r\n    let accentBody: Span;\r\n    if (atom.svgAccent) {\r\n        accentBody = makeSVGSpan(atom.svgAccent);\r\n        clearance = -clearance + FONTMETRICS.bigOpSpacing1;\r\n    } else {\r\n        // Build the accent\r\n        const accent = makeSymbol('Main-Regular', atom.accent, 'math');\r\n        // Remove the italic correction of the accent, because it only serves to\r\n        // shift the accent over to a place we don't want.\r\n        accent.italic = 0;\r\n        // The \\vec character that the fonts use is a combining character, and\r\n        // thus shows up much too far to the left. To account for this, we add a\r\n        // specific class which shifts the accent over to where we want it.\r\n        const vecClass = atom.accent === '\\u20d7' ? ' accent-vec' : '';\r\n        accentBody = makeSpan(makeSpan(accent), 'accent-body' + vecClass);\r\n    }\r\n    accentBody = makeVlist(context, [base, -clearance, accentBody]);\r\n    // Shift the accent over by the skew. Note we shift by twice the skew\r\n    // because we are centering the accent, so by adding 2*skew to the left,\r\n    // we shift it to the right by 1*skew.\r\n    accentBody.children[1].setLeft(2 * skew);\r\n    return [makeSpan([accentBody], 'accent', 'mord')];\r\n});\r\n","import { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport {\r\n    makeSpan,\r\n    addSVGOverlay,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n    Span,\r\n} from './span';\r\nimport { Context } from './context';\r\n\r\nregisterAtomType('enclose', (context: Context, atom: Atom): Span[] => {\r\n    const base = makeSpan(decompose(context, atom.body as Atom[]), '', 'mord');\r\n\r\n    // Account for the padding\r\n    const padding =\r\n        typeof atom.padding === 'number' ? atom.padding : FONTMETRICS.fboxsep;\r\n\r\n    // The 'ML__notation' class is required to prevent the span from being omitted\r\n    // during rendering (it looks like an empty, no-op span)\r\n    const notation = makeSpan('', 'ML__notation');\r\n    notation.setStyle('position', 'absolute');\r\n    notation.setStyle(\r\n        'height',\r\n        spanHeight(base) + spanDepth(base) + 2 * padding,\r\n        'em'\r\n    );\r\n    notation.height = spanHeight(base) + padding;\r\n    notation.depth = spanDepth(base) + padding;\r\n    if (padding !== 0) {\r\n        notation.setStyle('width', 'calc(100% + ' + 2 * padding + 'em)');\r\n    } else {\r\n        notation.setStyle('width', '100%');\r\n    }\r\n    notation.setStyle('top', '0');\r\n    notation.setStyle('left', -padding, 'em');\r\n    notation.setStyle('z-index', '-1'); // Ensure the box is *behind* the base\r\n    if (atom.backgroundcolor) {\r\n        notation.setStyle('background-color', atom.backgroundcolor);\r\n    }\r\n\r\n    if (atom.notation.box) notation.setStyle('border', atom.borderStyle);\r\n    if (atom.notation.actuarial) {\r\n        notation.setStyle('border-top', atom.borderStyle);\r\n        notation.setStyle('border-right', atom.borderStyle);\r\n    }\r\n    if (atom.notation.madruwb) {\r\n        notation.setStyle('border-bottom', atom.borderStyle);\r\n        notation.setStyle('border-right', atom.borderStyle);\r\n    }\r\n    if (atom.notation.roundedbox) {\r\n        notation.setStyle(\r\n            'border-radius',\r\n            (spanHeight(base) + spanDepth(base)) / 2,\r\n            'em'\r\n        );\r\n        notation.setStyle('border', atom.borderStyle);\r\n    }\r\n    if (atom.notation.circle) {\r\n        notation.setStyle('border-radius', '50%');\r\n        notation.setStyle('border', atom.borderStyle);\r\n    }\r\n    if (atom.notation.top) notation.setStyle('border-top', atom.borderStyle);\r\n    if (atom.notation.left) notation.setStyle('border-left', atom.borderStyle);\r\n    if (atom.notation.right) {\r\n        notation.setStyle('border-right', atom.borderStyle);\r\n    }\r\n    if (atom.notation.bottom) {\r\n        notation.setStyle('border-bottom', atom.borderStyle);\r\n    }\r\n\r\n    let svg = '';\r\n\r\n    if (atom.notation.horizontalstrike) {\r\n        svg += '<line x1=\"3%\"  y1=\"50%\" x2=\"97%\" y2=\"50%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    if (atom.notation.verticalstrike) {\r\n        svg += '<line x1=\"50%\"  y1=\"3%\" x2=\"50%\" y2=\"97%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    if (atom.notation.updiagonalstrike) {\r\n        svg += '<line x1=\"3%\"  y1=\"97%\" x2=\"97%\" y2=\"3%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    if (atom.notation.downdiagonalstrike) {\r\n        svg += '<line x1=\"3%\"  y1=\"3%\" x2=\"97%\" y2=\"97%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    // if (atom.notation.updiagonalarrow) {\r\n    //     const t = 1;\r\n    //     const length = Math.sqrt(w * w + h * h);\r\n    //     const f = 1 / length / 0.075 * t;\r\n    //     const wf = w * f;\r\n    //     const hf = h * f;\r\n    //     const x = w - t / 2;\r\n    //     let y = t / 2;\r\n    //     if (y + hf - .4 * wf < 0 ) y = 0.4 * wf - hf;\r\n    //     svg += '<line ';\r\n    //     svg += `x1=\"1\" y1=\"${h - 1}px\" x2=\"${x - .7 * wf}px\" y2=\"${y + .7 * hf}px\"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n    //     svg += ' stroke-linecap=\"round\"';\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    //     svg += '<polygon points=\"';\r\n    //     svg += `${x},${y} ${x - wf - .4 * hf},${y + hf - .4 * wf} `;\r\n    //     svg += `${x - .7 * wf},${y + .7 * hf} ${x - wf + .4 * hf},${y + hf + .4 * wf} `;\r\n    //     svg += `${x},${y}`;\r\n    //     svg += `\" stroke='none' fill=\"${atom.strokeColor}\"`;\r\n    //     svg += '/>';\r\n    // }\r\n    // if (atom.notation.phasorangle) {\r\n    //     svg += '<path d=\"';\r\n    //     svg += `M ${h / 2},1 L1,${h} L${w},${h} \"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ' stroke-linecap=\"round\"';\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    // }\r\n    // if (atom.notation.radical) {\r\n    //     svg += '<path d=\"';\r\n    //     svg += `M 0,${.6 * h} L1,${h} L${emToPx(padding) * 2},1 \"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ' stroke-linecap=\"round\"';\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    // }\r\n    // if (atom.notation.longdiv) {\r\n    //     svg += '<path d=\"';\r\n    //     svg += `M ${w} 1 L1 1 a${emToPx(padding)} ${h / 2}, 0, 0, 1, 1 ${h} \"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ' stroke-linecap=\"round\"';\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    // }\r\n    if (svg) {\r\n        let svgStyle;\r\n        if (atom.shadow !== 'none') {\r\n            if (atom.shadow === 'auto') {\r\n                svgStyle =\r\n                    'filter: drop-shadow(0 0 .5px rgba(255, 255, 255, .7)) drop-shadow(1px 1px 2px #333)';\r\n            } else {\r\n                svgStyle = 'filter: drop-shadow(' + atom.shadow + ')';\r\n            }\r\n        }\r\n        addSVGOverlay(notation, svg, svgStyle);\r\n    }\r\n    const result = makeSpan([notation, base]);\r\n    // Set its position as relative so that the box can be absolute positioned\r\n    // over the base\r\n    result.setStyle('position', 'relative');\r\n    result.setStyle('display', 'inline');\r\n\r\n    // The padding adds to the width and height of the pod\r\n    result.height = spanHeight(base) + padding;\r\n    result.depth = spanDepth(base) + padding;\r\n    result.setLeft(padding);\r\n    result.setRight(padding);\r\n\r\n    return [result];\r\n});\r\n","import { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport {\r\n    makeSpan,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n    Span,\r\n} from './span';\r\nimport { Context } from './context';\r\n\r\nregisterAtomType('box', (context: Context, atom: Atom): Span[] => {\r\n    // The padding extends outside of the base\r\n    const padding =\r\n        typeof atom.padding === 'number' ? atom.padding : FONTMETRICS.fboxsep;\r\n\r\n    // Base is the main content \"inside\" the box\r\n    const content = makeSpan(\r\n        decompose(context, atom.body as Atom[]),\r\n        '',\r\n        'mord'\r\n    );\r\n    content.setStyle('vertical-align', -spanDepth(content), 'em');\r\n    content.setStyle('height', 0);\r\n    const base = makeSpan(content, '', 'mord');\r\n\r\n    // This span will represent the box (background and border)\r\n    // It's positioned to overlap the base\r\n    // The 'ML__box' class is required to prevent the span from being omitted\r\n    // during rendering (it looks like an empty, no-op span)\r\n    const box = makeSpan('', 'ML__box');\r\n    box.setStyle('position', 'absolute');\r\n\r\n    box.setStyle(\r\n        'height',\r\n        spanHeight(base) + spanDepth(base) + 2 * padding,\r\n        'em'\r\n    );\r\n    if (padding !== 0) {\r\n        box.setStyle('width', 'calc(100% + ' + 2 * padding + 'em)');\r\n    } else {\r\n        box.setStyle('width', '100%');\r\n    }\r\n\r\n    box.setStyle('top', -padding, 'em');\r\n    box.setStyle('left', -padding, 'em');\r\n    box.setStyle('z-index', '-1'); // Ensure the box is *behind* the base\r\n    box.setStyle('box-sizing', 'border-box');\r\n\r\n    if (atom.backgroundcolor) {\r\n        box.setStyle('background-color', atom.backgroundcolor);\r\n    }\r\n    if (atom.framecolor) {\r\n        box.setStyle(\r\n            'border',\r\n            FONTMETRICS.fboxrule + 'em solid ' + atom.framecolor\r\n        );\r\n    }\r\n    if (atom.border) box.setStyle('border', atom.border);\r\n\r\n    base.setStyle('display', 'inline-block');\r\n    base.setStyle('height', spanHeight(base) + spanDepth(base), 'em');\r\n\r\n    // The result is a span that encloses the box and the base\r\n    const result = makeSpan([box, base]);\r\n    // Set its position as relative so that the box can be absolute positioned\r\n    // over the base\r\n    result.setStyle('position', 'relative');\r\n    result.setStyle('vertical-align', -padding + spanDepth(base), 'em');\r\n\r\n    // The padding adds to the width and height of the pod\r\n    result.height = spanHeight(base) + padding;\r\n    result.depth = spanDepth(base) + padding;\r\n    result.setLeft(padding);\r\n    result.setRight(padding);\r\n    result.setStyle('height', result.height + result.depth - 2 * padding, 'em');\r\n    result.setStyle('top', -padding, 'em');\r\n    result.setStyle('display', 'inline-block');\r\n\r\n    return [result];\r\n});\r\n","import { isArray } from '../common/types';\r\n\r\nimport { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { makeSymbol, makeSpan, Span } from './span';\r\nimport { Context } from './context';\r\n\r\n/**\r\n * Operators are handled in the TeXbook pg. 443-444, rule 13(a).\r\n */\r\nregisterAtomType('mop', (context: Context, atom: Atom): Span[] => {\r\n    const mathstyle = context.mathstyle;\r\n    let base;\r\n    let baseShift = 0;\r\n    let slant = 0;\r\n    if (atom.isSymbol) {\r\n        // If this is a symbol, create the symbol.\r\n\r\n        // Most symbol operators get larger in displaystyle (rule 13)\r\n        const large =\r\n            mathstyle.size === MATHSTYLES.displaystyle.size &&\r\n            atom.symbol !== '\\\\smallint';\r\n\r\n        base = makeSymbol(\r\n            large ? 'Size2-Regular' : 'Size1-Regular',\r\n            atom.body as string,\r\n            'op-symbol ' + (large ? 'large-op' : 'small-op'),\r\n            'mop'\r\n        );\r\n\r\n        // Shift the symbol so its center lies on the axis (rule 13). It\r\n        // appears that our fonts have the centers of the symbols already\r\n        // almost on the axis, so these numbers are very small. Note we\r\n        // don't actually apply this here, but instead it is used either in\r\n        // the vlist creation or separately when there are no limits.\r\n        baseShift =\r\n            (base.height - base.depth) / 2 -\r\n            mathstyle.metrics.axisHeight * mathstyle.sizeMultiplier;\r\n\r\n        // The slant of the symbol is just its italic correction.\r\n        slant = base.italic;\r\n\r\n        base.applyStyle({\r\n            color: atom.phantom ? 'transparent' : atom.color,\r\n            backgroundColor: atom.phantom\r\n                ? 'transparent'\r\n                : atom.backgroundColor,\r\n            cssId: atom.cssId,\r\n            cssClass: atom.cssClass,\r\n            letterShapeStyle: context.letterShapeStyle,\r\n        });\r\n    } else if (isArray(atom.body)) {\r\n        // If this is a list, decompose that list.\r\n        base = makeSpan(decompose(context, atom.body), '', 'mop');\r\n    } else {\r\n        // Otherwise, this is a text operator. Build the text from the\r\n        // operator's name.\r\n        console.assert(atom.type === 'mop');\r\n        base = atom.makeSpan(context, atom.body);\r\n    }\r\n\r\n    // Bind the generated span and this atom so the atom can be retrieved\r\n    // from the span later.\r\n    atom.bind(context, base);\r\n\r\n    if (atom.isSymbol) base.setTop(baseShift);\r\n    let result = base;\r\n    if (atom.superscript || atom.subscript) {\r\n        const limits = atom.limits || 'auto';\r\n        if (\r\n            atom.alwaysHandleSupSub ||\r\n            limits === 'limits' ||\r\n            (limits === 'auto' &&\r\n                mathstyle.size === MATHSTYLES.displaystyle.size)\r\n        ) {\r\n            result = atom.attachLimits(context, base, baseShift, slant);\r\n        } else {\r\n            result = atom.attachSupsub(context, base, 'mop');\r\n        }\r\n    }\r\n    return result;\r\n});\r\n","import { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport { makeSpan, makeVlist, height as spanHeight, Span } from './span';\r\nimport { Context } from './context';\r\n\r\n/**\r\n * \\overline and \\underline\r\n */\r\nregisterAtomType('line', (context: Context, atom: Atom): Span[] => {\r\n    const mathstyle = context.mathstyle;\r\n    // TeXBook:443. Rule 9 and 10\r\n    const inner = decompose(context.cramp(), atom.body as Atom[]);\r\n    const ruleWidth =\r\n        FONTMETRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\r\n    const line = makeSpan(\r\n        null,\r\n        context.mathstyle.adjustTo(MATHSTYLES.textstyle) +\r\n            ' ' +\r\n            atom.position +\r\n            '-line'\r\n    );\r\n    line.height = ruleWidth;\r\n    line.maxFontSize = 1.0;\r\n    let vlist;\r\n    if (atom.position === 'overline') {\r\n        vlist = makeVlist(context, [inner, 3 * ruleWidth, line, ruleWidth]);\r\n    } else {\r\n        const innerSpan = makeSpan(inner);\r\n        vlist = makeVlist(\r\n            context,\r\n            [ruleWidth, line, 3 * ruleWidth, innerSpan],\r\n            'top',\r\n            spanHeight(innerSpan)\r\n        );\r\n    }\r\n    return [makeSpan(vlist, atom.position, 'mord')];\r\n});\r\n","import { Atom, registerAtomType, decompose } from './atom-utils';\r\nimport {\r\n    makeSpan,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n    Span,\r\n} from './span';\r\nimport { makeLeftRightDelim } from './delimiters';\r\nimport { Context } from './context';\r\n\r\n/**\r\n *  \\left....\\right\r\n *\r\n * Note that we can encounter malformed \\left...\\right, for example\r\n * a \\left without a matching \\right or vice versa. In that case, the\r\n * leftDelim (resp. rightDelim) will be undefined. We still need to handle\r\n * those cases.\r\n *\r\n */\r\nregisterAtomType('leftright', (context: Context, atom: Atom): Span[] => {\r\n    if (!atom.body) {\r\n        // No body, only a delimiter\r\n        if (atom.leftDelim) {\r\n            return new Atom('math', 'mopen', atom.leftDelim).decompose(context);\r\n        }\r\n        if (atom.rightDelim) {\r\n            return new Atom('math', 'mclose', atom.rightDelim).decompose(\r\n                context\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n    // The scope of the context is this group, so make a copy of it\r\n    // so that any changes to it will be discarded when finished\r\n    // with this group.\r\n    const localContext = context.clone();\r\n    const inner = decompose(localContext, atom.body as Atom[]);\r\n    const mathstyle = localContext.mathstyle;\r\n    let innerHeight = 0;\r\n    let innerDepth = 0;\r\n    let result: Span[] = [];\r\n    // Calculate its height and depth\r\n    // The size of delimiters is the same, regardless of what mathstyle we are\r\n    // in. Thus, to correctly calculate the size of delimiter we need around\r\n    // a group, we scale down the inner size based on the size.\r\n    innerHeight = spanHeight(inner) * mathstyle.sizeMultiplier;\r\n    innerDepth = spanDepth(inner) * mathstyle.sizeMultiplier;\r\n    // Add the left delimiter to the beginning of the expression\r\n    if (atom.leftDelim) {\r\n        result.push(\r\n            atom.bind(\r\n                context,\r\n                makeLeftRightDelim(\r\n                    'mopen',\r\n                    atom.leftDelim,\r\n                    innerHeight,\r\n                    innerDepth,\r\n                    localContext,\r\n                    'ML__open'\r\n                )\r\n            )\r\n        );\r\n        result[result.length - 1].applyStyle(atom.getStyle());\r\n    }\r\n    if (inner) {\r\n        // Replace the delim (\\middle) spans with proper ones now that we know\r\n        // the height/depth\r\n        for (let i = 0; i < inner.length; i++) {\r\n            if (inner[i].delim) {\r\n                const savedCaret = inner[i].caret;\r\n                const savedSelected = /ML__selected/.test(inner[i].classes);\r\n                inner[i] = atom.bind(\r\n                    context,\r\n                    makeLeftRightDelim(\r\n                        'minner',\r\n                        inner[i].delim,\r\n                        innerHeight,\r\n                        innerDepth,\r\n                        localContext\r\n                    )\r\n                );\r\n                inner[i].caret = savedCaret;\r\n                inner[i].selected(savedSelected);\r\n            }\r\n        }\r\n        result = result.concat(inner);\r\n    }\r\n    // Add the right delimiter to the end of the expression.\r\n    if (atom.rightDelim) {\r\n        let delim = atom.rightDelim;\r\n        let classes;\r\n        if (delim === '?') {\r\n            if (context.smartFence) {\r\n                // Use a placeholder delimiter matching the open delimiter\r\n                delim = {\r\n                    '(': ')',\r\n                    '\\\\{': '\\\\}',\r\n                    '\\\\[': '\\\\]',\r\n                    '\\\\lbrace': '\\\\rbrace',\r\n                    '\\\\langle': '\\\\rangle',\r\n                    '\\\\lfloor': '\\\\rfloor',\r\n                    '\\\\lceil': '\\\\rceil',\r\n                    '\\\\vert': '\\\\vert',\r\n                    '\\\\lvert': '\\\\rvert',\r\n                    '\\\\Vert': '\\\\Vert',\r\n                    '\\\\lVert': '\\\\rVert',\r\n                    '\\\\lbrack': '\\\\rbrack',\r\n                    '\\\\ulcorner': '\\\\urcorner',\r\n                    '\\\\llcorner': '\\\\lrcorner',\r\n                    '\\\\lgroup': '\\\\rgroup',\r\n                    '\\\\lmoustache': '\\\\rmoustache',\r\n                }[atom.leftDelim];\r\n                delim = delim || atom.leftDelim;\r\n                classes = 'ML__smart-fence__close';\r\n            } else {\r\n                delim = '.';\r\n            }\r\n        }\r\n        result.push(\r\n            atom.bind(\r\n                context,\r\n                makeLeftRightDelim(\r\n                    'mclose',\r\n                    delim,\r\n                    innerHeight,\r\n                    innerDepth,\r\n                    localContext,\r\n                    (classes || '') + ' ML__close'\r\n                )\r\n            )\r\n        );\r\n        result[result.length - 1].applyStyle(atom.getStyle());\r\n    }\r\n    // If the `inner` flag is set, return the `inner` element (that's the\r\n    // behavior for the regular `\\left...\\right`\r\n    if (atom.inner) return [makeSpan(result, mathstyle.cls(), 'minner')];\r\n    // Otherwise, include a `\\mathopen{}...\\mathclose{}`. That's the\r\n    // behavior for `\\mleft...\\mright`, which allows for tighter spacing\r\n    // for example in `\\sin\\mleft(x\\mright)`\r\n    return result;\r\n});\r\n","import { isArray } from '../common/types';\r\n\r\nimport { registerAtomType, decompose, Atom } from './atom-utils';\r\nimport { MATHSTYLES } from './mathstyle';\r\nimport { METRICS as FONTMETRICS } from './font-metrics';\r\nimport {\r\n    makeSpan,\r\n    makeVlist,\r\n    depth as spanDepth,\r\n    height as spanHeight,\r\n    Span,\r\n} from './span';\r\nimport { Context } from './context';\r\n\r\nimport { makeCustomSizedDelim } from './delimiters';\r\n\r\nregisterAtomType('surd', (context: Context, atom: Atom): Span[] => {\r\n    // See the TeXbook pg. 443, Rule 11.\r\n    // http://www.ctex.org/documents/shredder/src/texbook.pdf\r\n    const mathstyle = context.mathstyle;\r\n    // First, we do the same steps as in overline to build the inner group\r\n    // and line\r\n    console.assert(isArray(atom.body));\r\n    const inner = decompose(context.cramp(), atom.body as Atom[]);\r\n    const ruleWidth =\r\n        FONTMETRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\r\n    let phi = ruleWidth;\r\n    if (mathstyle.id < MATHSTYLES.textstyle.id) {\r\n        phi = mathstyle.metrics.xHeight;\r\n    }\r\n    // Calculate the clearance between the body and line\r\n    let lineClearance = ruleWidth + phi / 4;\r\n    const innerTotalHeight = Math.max(\r\n        2 * phi,\r\n        (spanHeight(inner) + spanDepth(inner)) * mathstyle.sizeMultiplier\r\n    );\r\n    const minDelimiterHeight = innerTotalHeight + (lineClearance + ruleWidth);\r\n\r\n    // Create a \\surd delimiter of the required minimum size\r\n    const delim = makeSpan(\r\n        makeCustomSizedDelim('', '\\\\surd', minDelimiterHeight, false, context),\r\n        'sqrt-sign'\r\n    );\r\n    delim.applyStyle(atom.getStyle());\r\n\r\n    const delimDepth = delim.height + delim.depth - ruleWidth;\r\n\r\n    // Adjust the clearance based on the delimiter size\r\n    if (delimDepth > spanHeight(inner) + spanDepth(inner) + lineClearance) {\r\n        lineClearance =\r\n            (lineClearance +\r\n                delimDepth -\r\n                (spanHeight(inner) + spanDepth(inner))) /\r\n            2;\r\n    }\r\n\r\n    // Shift the delimiter so that its top lines up with the top of the line\r\n    delim.setTop(\r\n        delim.height - spanHeight(inner) - (lineClearance + ruleWidth)\r\n    );\r\n    const line = makeSpan(\r\n        null,\r\n        context.mathstyle.adjustTo(MATHSTYLES.textstyle) + ' sqrt-line'\r\n    );\r\n    line.applyStyle(atom.getStyle());\r\n    line.height = ruleWidth;\r\n\r\n    const body = makeVlist(context, [inner, lineClearance, line, ruleWidth]);\r\n\r\n    if (!atom.index) {\r\n        return [atom.bind(context, makeSpan([delim, body], 'sqrt', 'mord'))];\r\n    }\r\n\r\n    // Handle the optional root index\r\n    // The index is always in scriptscript style\r\n    const newcontext = context.clone({\r\n        mathstyle: MATHSTYLES.scriptscriptstyle,\r\n    });\r\n    const root = makeSpan(\r\n        decompose(newcontext, atom.index),\r\n        mathstyle.adjustTo(MATHSTYLES.scriptscriptstyle)\r\n    );\r\n    // Figure out the height and depth of the inner part\r\n    const innerRootHeight = Math.max(delim.height, body.height);\r\n    const innerRootDepth = Math.max(delim.depth, body.depth);\r\n    // The amount the index is shifted by. This is taken from the TeX\r\n    // source, in the definition of `\\r@@t`.\r\n    const toShift = 0.6 * (innerRootHeight - innerRootDepth);\r\n    // Build a VList with the superscript shifted up correctly\r\n    const rootVlist = makeVlist(context, [root], 'shift', -toShift);\r\n\r\n    // Add a class surrounding it so we can add on the appropriate\r\n    // kerning\r\n\r\n    return [\r\n        atom.bind(\r\n            context,\r\n            makeSpan([makeSpan(rootVlist, 'root'), delim, body], 'sqrt', 'mord')\r\n        ),\r\n    ];\r\n});\r\n","import { colorToString } from './color';\r\nimport { register, getPropertyRuns } from './modes-utils';\r\nimport { getInfo, mathVariantToUnicode } from './definitions-utils';\r\nimport { Atom } from './atom';\r\n\r\n// Each entry indicate the font-name (to be used to calculate font metrics)\r\n// and the CSS classes (for proper markup styling) for each possible\r\n// variant combinations.\r\nconst VARIANTS = {\r\n    // Handle some special characters which are only available in \"main\" font (not \"math\")\r\n    main: ['Main-Regular', 'ML__cmr'],\r\n    'main-italic': ['Main-Italic', 'ML__cmr ML__it'],\r\n    'main-bold': ['Main-Bold', 'ML__cmr ML__bold'],\r\n    'main-bolditalic': ['Main-BoldItalic', 'ML__cmr ML_bold ML__it'],\r\n\r\n    normal: ['Main-Regular', 'ML__cmr'], // 'main' font. There is no 'math' regular (upright)\r\n    'normal-bold': ['Main-Bold', 'ML__mathbf'], // 'main' font. There is no 'math' bold\r\n    'normal-italic': ['Math-Italic', 'ML__mathit'], // Special metrics for 'math'\r\n    'normal-bolditalic': ['Math-BoldItalic', 'ML__mathbfit'], // Special metrics for 'math'\r\n\r\n    // Extended math symbols, arrows, etc.. at their standard Unicode codepoints\r\n    ams: ['AMS-Regular', 'ML__ams'],\r\n    'ams-bold': ['AMS-Regular', 'ML__ams'],\r\n    'ams-italic': ['AMS-Regular', 'ML__ams'],\r\n    'ams-bolditalic': ['AMS-Regular', 'ML__ams'],\r\n\r\n    'sans-serif': ['SansSerif-Regular', 'ML__sans'],\r\n    'sans-serif-bold': ['SansSerif-Regular', 'ML__sans ML__bold'],\r\n    'sans-serif-italic': ['SansSerif-Regular', 'ML__sans'],\r\n    'sans-serif-bolditalic': ['SansSerif-Regular', 'ML__sans'],\r\n\r\n    calligraphic: ['Caligraphic-Regular', 'ML__cal'],\r\n    'calligraphic-bold': ['Caligraphic-Regular', 'ML__cal ML__bold'],\r\n    'calligraphic-italic': ['Caligraphic-Regular', 'ML__cal ML__it'],\r\n    'calligraphic-bolditalic': [\r\n        'Caligraphic-Regular',\r\n        'ML__cal ML__bold ML__it',\r\n    ],\r\n\r\n    script: ['Script-Regular', 'ML__script'],\r\n    'script-bold': ['Script-Regular', 'ML__script ML__bold'],\r\n    'script-italic': ['Script-Regular', 'ML__script ML__it'],\r\n    'script-bolditalic': ['Script-Regular', 'ML__script ML__bold ML__it'],\r\n\r\n    fraktur: ['Fraktur-Regular', 'ML__frak'],\r\n    'fraktur-bold': ['Fraktur-Regular', 'ML__frak'],\r\n    'fraktur-italic': ['Fraktur-Regular', 'ML__frak'],\r\n    'fraktur-bolditalic': ['Fraktur-Regular', 'ML__frak'],\r\n\r\n    monospace: ['Typewriter-Regular', 'ML__tt'],\r\n    'monospace-bold': ['Typewriter-Regular', 'ML__tt ML__bold'],\r\n    'monospace-italic': ['Typewriter-Regular', 'ML__tt ML__it'],\r\n    'monospace-bolditalic': ['Typewriter-Regular', 'ML__tt ML__bold ML__it'],\r\n\r\n    // Blackboard characters are 'A-Z' in the AMS font\r\n    'double-struck': ['AMS-Regular', 'ML__bb'],\r\n    'double-struck-bold': ['AMS-Regular', 'ML__bb'],\r\n    'double-struck-italic': ['AMS-Regular', 'ML__bb'],\r\n    'double-struck-bolditalic': ['AMS-Regular', 'ML__bb'],\r\n};\r\n\r\nconst VARIANT_REPERTOIRE = {\r\n    'double-struck': /^[A-Z ]$/,\r\n    script: /^[A-Z ]$/,\r\n    calligraphic: /^[0-9A-Z ]$/,\r\n    fraktur: /^[0-9A-Za-z ]$|^[!\"#$%&'()*+,\\-./:;=?[]^’‘]$/,\r\n    monospace: /^[0-9A-Za-z ]$|^[!\"&'()*+,\\-./:;=?@[\\]^_~\\u0131\\u0237\\u0393\\u0394\\u0398\\u039b\\u039e\\u03A0\\u03A3\\u03A5\\u03A8\\u03a9]$/,\r\n    'sans-serif': /^[0-9A-Za-z ]$|^[!\"&'()*+,\\-./:;=?@[\\]^_~\\u0131\\u0237\\u0393\\u0394\\u0398\\u039b\\u039e\\u03A0\\u03A3\\u03A5\\u03A8\\u03a9]$/,\r\n};\r\n\r\nconst GREEK_LOWERCASE = /^[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5]$/;\r\nconst GREEK_UPPERCASE = /^[\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9]$/;\r\n\r\nconst LETTER_SHAPE_RANGES = [\r\n    /^[a-z]$/, // Lowercase latin\r\n    /^[A-Z]$/, // Upppercase latin\r\n    GREEK_LOWERCASE,\r\n    GREEK_UPPERCASE,\r\n];\r\n\r\n// The letterShapeStyle property indicates which characters should be\r\n// automatically italicized (see LETTER_SHAPE_RANGES)\r\nconst LETTER_SHAPE_MODIFIER = {\r\n    iso: ['it', 'it', 'it', 'it'],\r\n    tex: ['it', 'it', 'it', 'up'],\r\n    french: ['it', 'up', 'up', 'up'],\r\n    upright: ['up', 'up', 'up', 'up'],\r\n};\r\n\r\n// See http://ctan.math.illinois.edu/macros/latex/base/fntguide.pdf\r\n\r\nfunction emitLatexMathRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    let contextValue = context.variant;\r\n    if (context.variantStyle && context.variantStyle !== 'up') {\r\n        contextValue += '-' + context.variantStyle;\r\n    }\r\n    return getPropertyRuns(run, 'color')\r\n        .map((x) => {\r\n            const result = getPropertyRuns(x, 'variant')\r\n                .map((x) => {\r\n                    let value = x[0].variant;\r\n                    if (x[0].variantStyle && x[0].variantStyle !== 'up') {\r\n                        value += '-' + x[0].variantStyle;\r\n                    }\r\n                    // Check if all the atoms in this run have a base\r\n                    // variant identical to the current variant\r\n                    // If so, we can skip wrapping them\r\n                    if (\r\n                        x.every((x) => {\r\n                            const info = getInfo(x.symbol, context.mode, null);\r\n                            if (!info || !(info.variant || info.variantStyle)) {\r\n                                return false;\r\n                            }\r\n                            let styledValue = x.variant;\r\n                            if (x.variantStyle && x.variantStyle !== 'up') {\r\n                                styledValue += '-' + x.variantStyle;\r\n                            }\r\n                            return styledValue === value;\r\n                        })\r\n                    ) {\r\n                        return x.map((x) => x.toLatex(expandMacro)).join('');\r\n                    }\r\n\r\n                    let command = '';\r\n                    if (value && value !== contextValue) {\r\n                        command = {\r\n                            calligraphic: '\\\\mathcal{',\r\n                            fraktur: '\\\\mathfrak{',\r\n                            'double-struck': '\\\\mathbb{',\r\n                            script: '\\\\mathscr{',\r\n                            monospace: '\\\\mathtt{',\r\n                            'sans-serif': '\\\\mathsf{',\r\n                            normal: '\\\\mathrm{',\r\n                            'normal-italic': '\\\\mathit{',\r\n                            'normal-bold': '\\\\mathbf{',\r\n                            'normal-bolditalic': '\\\\mathbfit{',\r\n                            ams: '',\r\n                            'ams-italic': '\\\\mathit{',\r\n                            'ams-bold': '\\\\mathbf{',\r\n                            'ams-bolditalic': '\\\\mathbfit{',\r\n                            main: '',\r\n                            'main-italic': '\\\\mathit{',\r\n                            'main-bold': '\\\\mathbf{',\r\n                            'main-bolditalic': '\\\\mathbfit{',\r\n                            // There are a few rare font families possible, which\r\n                            // are not supported:\r\n                            // mathbbm, mathbbmss, mathbbmtt, mathds, swab, goth\r\n                            // In addition, the 'main' and 'math' font technically\r\n                            // map to \\mathnormal{}\r\n                        }[value];\r\n                        console.assert(typeof command !== 'undefined');\r\n                    }\r\n                    return (\r\n                        command +\r\n                        x.map((x) => x.toLatex(expandMacro)).join('') +\r\n                        (command ? '}' : '')\r\n                    );\r\n                })\r\n                .join('');\r\n            if (x[0].color && (!context || context.color !== x[0].color)) {\r\n                return (\r\n                    '\\\\textcolor{' +\r\n                    colorToString(x[0].color) +\r\n                    '}{' +\r\n                    result +\r\n                    '}'\r\n                );\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction applyStyle(atom, style): string {\r\n    // letterShapeStyle will usually be set automatically, except when the\r\n    // locale cannot be determined, in which case its value will be 'auto'\r\n    // which we default to 'tex'\r\n    const letterShapeStyle =\r\n        style.letterShapeStyle === 'auto' || !style.letterShapeStyle\r\n            ? 'tex'\r\n            : style.letterShapeStyle;\r\n    let variant = style.variant || 'normal';\r\n    let variantStyle = style.variantStyle || '';\r\n\r\n    // 1. Remap to \"main\" font some characters that don't exist\r\n    // in the \"math\" font\r\n\r\n    // There are two fonts that include the roman italic characters, \"main-it\" and \"math\"\r\n    // They are similar, but the \"math\" font has some different kernings ('f')\r\n    // and some slightly different character shape. It doesn't include a few\r\n    // characters, so for those characters, \"main\" has to be used instead\r\n\r\n    // \\imath, \\jmath and \\pound don't exist in \"math\" font,\r\n    // so use \"main\" italic instead.\r\n    if (\r\n        variant === 'normal' &&\r\n        !variantStyle &&\r\n        /\\u00a3|\\u0131|\\u0237/.test(atom.body)\r\n    ) {\r\n        variant = 'main';\r\n        variantStyle = 'italic';\r\n    }\r\n\r\n    // 2. If no explicit variant style, auto-italicize some symbols,\r\n    // depending on the letterShapeStyle\r\n    if (variant === 'normal' && !variantStyle && atom.body.length === 1) {\r\n        LETTER_SHAPE_RANGES.forEach((x, i) => {\r\n            if (\r\n                x.test(atom.body) &&\r\n                LETTER_SHAPE_MODIFIER[letterShapeStyle][i] === 'it'\r\n            ) {\r\n                variantStyle = 'italic';\r\n            }\r\n        });\r\n    }\r\n\r\n    // 3. Map the variant + variantStyle to a font\r\n    if (variantStyle === 'up') {\r\n        variantStyle = '';\r\n    }\r\n    const styledVariant = variantStyle ? variant + '-' + variantStyle : variant;\r\n\r\n    console.assert(VARIANTS[styledVariant]);\r\n\r\n    const [fontName, classes] = VARIANTS[styledVariant];\r\n\r\n    // 4. If outside the font repertoire, switch to system font\r\n    // (return NULL to use default metrics)\r\n    if (\r\n        VARIANT_REPERTOIRE[variant] &&\r\n        !VARIANT_REPERTOIRE[variant].test(atom.body)\r\n    ) {\r\n        // Map to unicode character\r\n        atom.body = mathVariantToUnicode(atom.body, variant, variantStyle);\r\n        atom.variant = '';\r\n        atom.variantStyle = '';\r\n        // Return NULL to use default metrics\r\n        return null;\r\n    }\r\n    // Lowercase greek letters have an incomplete repertoire (no bold)\r\n    // so, for \\mathbf to behave correctly, add a 'lcGreek' class.\r\n    if (GREEK_LOWERCASE.test(atom.body)) {\r\n        atom.classes += ' lcGreek';\r\n    }\r\n\r\n    // 5. Assign classes based on the font\r\n    if (classes) {\r\n        atom.classes += ' ' + classes;\r\n    }\r\n\r\n    return fontName;\r\n}\r\n\r\nregister('math', {\r\n    emitLatexRun: emitLatexMathRun,\r\n    applyStyle,\r\n});\r\n","import { ParserErrorListener, Style } from '../public/core';\r\nimport { register, getPropertyRuns, ParseTokensOptions } from './modes-utils';\r\nimport { colorToString } from './color';\r\nimport { Token } from './lexer';\r\nimport { Span } from './span';\r\nimport { Atom } from './atom-utils';\r\nimport { getInfo, charToLatex, unicodeStringToLatex } from './definitions';\r\n\r\nfunction emitStringTextRun(\r\n    _context: Atom,\r\n    run: Atom[],\r\n    _expandMacro: boolean\r\n): string {\r\n    let needSpace = false;\r\n    return run\r\n        .map((x: Atom) => {\r\n            let result = '';\r\n            let space = '';\r\n            if (x.latex) {\r\n                result = x.latex;\r\n            } else if (typeof x.body === 'string') {\r\n                result = unicodeStringToLatex('text', x.body);\r\n            } else if (x.symbol) {\r\n                result = x.symbol.replace(/\\\\/g, '\\\\backslash ');\r\n            }\r\n            if (needSpace && (!result || /^[a-zA-Z0-9*]/.test(result))) {\r\n                space = '{}';\r\n            }\r\n            needSpace = /\\\\[a-zA-Z0-9]+\\*?$/.test(result);\r\n            return space + result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction emitFontShapeTextRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    return getPropertyRuns(run, 'fontShape')\r\n        .map((x: Atom[]) => {\r\n            const result = emitStringTextRun(context, x, expandMacro);\r\n            if (x[0].fontShape === 'it') {\r\n                return '\\\\textit{' + result + '}';\r\n            }\r\n            if (x[0].fontShape === 'sl') {\r\n                return '\\\\textsl{' + result + '}';\r\n            }\r\n            if (x[0].fontShape === 'sc') {\r\n                return '\\\\textsc{' + result + '}';\r\n            }\r\n            if (x[0].fontShape === 'n') {\r\n                return '\\\\textup{' + result + '}';\r\n            }\r\n            if (x[0].fontShape) {\r\n                return '\\\\fontshape{' + x[0].fontShape + '}' + result;\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction emitFontSeriesTextRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    return getPropertyRuns(run, 'fontSeries')\r\n        .map((x) => {\r\n            const result = emitFontShapeTextRun(context, x, expandMacro);\r\n            if (x[0].fontSeries === 'b') {\r\n                return '\\\\textbf{' + result + '}';\r\n            }\r\n            if (x[0].fontSeries === 'l') {\r\n                return '\\\\textlf{' + result + '}';\r\n            }\r\n            if (x[0].fontSeries === 'm') {\r\n                return '\\\\textmd{' + result + '}';\r\n            }\r\n            if (x[0].fontSeries) {\r\n                return '\\\\fontseries{' + x[0].fontSeries + '}' + result;\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction emitSizeTextRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    return getPropertyRuns(run, 'fontSize')\r\n        .map((x: Atom[]) => {\r\n            const result = emitFontSeriesTextRun(context, x, expandMacro);\r\n            const command =\r\n                {\r\n                    size1: 'tiny',\r\n                    size2: 'scriptsize',\r\n                    size3: 'footnotesize',\r\n                    size4: 'small',\r\n                    size5: 'normalsize',\r\n                    size6: 'large',\r\n                    size7: 'Large',\r\n                    size8: 'LARGE',\r\n                    size9: 'huge',\r\n                    size10: 'Huge',\r\n                }[x[0].fontSize] || '';\r\n            if (command) {\r\n                return '\\\\' + command + ' ' + result;\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction emitFontFamilyTextRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    return getPropertyRuns(run, 'fontFamily')\r\n        .map((x: Atom[]) => {\r\n            const result = emitSizeTextRun(context, x, expandMacro);\r\n            const command =\r\n                {\r\n                    roman: 'textrm',\r\n                    monospace: 'texttt',\r\n                    'sans-serif': 'textsf',\r\n                }[x[0].fontFamily] || '';\r\n            if (command) {\r\n                return '\\\\' + command + '{' + result + '}';\r\n            }\r\n            if (x[0].fontFamily) {\r\n                return '\\\\fontfamily{' + x[0].fontFamily + '}' + result;\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction emitStyledTextRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    return emitFontFamilyTextRun(context, run, expandMacro);\r\n}\r\n\r\nfunction emitColorRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    return getPropertyRuns(run, 'color')\r\n        .map((x) => {\r\n            const result = emitStyledTextRun(context, x, expandMacro);\r\n\r\n            if (\r\n                x[0].color &&\r\n                x[0].color !== 'none' &&\r\n                (!context || context.color !== x[0].color)\r\n            ) {\r\n                // If there is a color specified, and it is different\r\n                // from our context color, output a command\r\n                return (\r\n                    '\\\\textcolor{' +\r\n                    colorToString(x[0].color) +\r\n                    '}{' +\r\n                    result +\r\n                    '}'\r\n                );\r\n            }\r\n            return result;\r\n        })\r\n        .join('');\r\n}\r\n\r\nfunction emitLatexTextRun(\r\n    context: Atom,\r\n    run: Atom[],\r\n    expandMacro: boolean\r\n): string {\r\n    const result = emitColorRun(context, run, expandMacro);\r\n\r\n    const allAtomsHaveShapeOrSeriesOrFontFamily = run.every(\r\n        (x: Atom) => x.fontSeries || x.fontShape || x.fontFamily\r\n    );\r\n    if (\r\n        !allAtomsHaveShapeOrSeriesOrFontFamily ||\r\n        run[0].mode !== context.mode\r\n    ) {\r\n        // Wrap in text, only if there isn't a shape or series on\r\n        // all the atoms, because if so, it will be wrapped in a\r\n        // \\\\textbf, \\\\textit, etc... and the \\\\text would be redundant\r\n        return `\\\\text{${result}}`;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst TEXT_FONT_CLASS = {\r\n    roman: '',\r\n    'sans-serif': 'ML__sans',\r\n    monospace: 'ML__tt',\r\n};\r\n\r\n/**\r\n * Return the font-family name\r\n */\r\nfunction applyStyle(span: Span, style: Style): string {\r\n    const fontFamily = style.fontFamily;\r\n\r\n    if (TEXT_FONT_CLASS[fontFamily]) {\r\n        span.classes += ' ' + TEXT_FONT_CLASS[fontFamily];\r\n    } else if (fontFamily) {\r\n        // Not a well-known family. Use a style.\r\n        span.setStyle('font-family', fontFamily);\r\n    }\r\n\r\n    if (style.fontShape) {\r\n        span.classes +=\r\n            ' ' +\r\n            ({\r\n                it: 'ML__it',\r\n                sl: 'ML__shape_sl', // slanted\r\n                sc: 'ML__shape_sc', // small caps\r\n                ol: 'ML__shape_ol', // outline\r\n            }[style.fontShape] || '');\r\n    }\r\n    if (style.fontSeries) {\r\n        const m = style.fontSeries.match(/(.?[lbm])?(.?[cx])?/);\r\n        if (m) {\r\n            span.classes +=\r\n                ' ' +\r\n                ({\r\n                    ul: 'ML__series_ul',\r\n                    el: 'ML__series_el',\r\n                    l: 'ML__series_l',\r\n                    sl: 'ML__series_sl',\r\n                    m: '', // medium (default)\r\n                    sb: 'ML__series_sb',\r\n                    b: 'ML__bold',\r\n                    eb: 'ML__series_eb',\r\n                    ub: 'ML__series_ub',\r\n                }[m[1] || ''] || '');\r\n            span.classes +=\r\n                ' ' +\r\n                ({\r\n                    uc: 'ML__series_uc',\r\n                    ec: 'ML__series_ec',\r\n                    c: 'ML__series_c',\r\n                    sc: 'ML__series_sc',\r\n                    n: '', // normal (default)\r\n                    sx: 'ML__series_sx',\r\n                    x: 'ML__series_x',\r\n                    ex: 'ML__series_ex',\r\n                    ux: 'ML__series_ux',\r\n                }[m[2] || ''] || '');\r\n        }\r\n    }\r\n    // Always use the metrics of 'Main-Regular' in text mode\r\n    return 'Main-Regular';\r\n}\r\n\r\n// Given an array of tokens, return an array of atoms\r\n// options.args\r\n// options.macros\r\n// options.smartFence\r\n// options.style\r\n// options.parser\r\nfunction parse(\r\n    tokens: Token[],\r\n    error: ParserErrorListener,\r\n    options: ParseTokensOptions\r\n) {\r\n    let result = [];\r\n    let atom: Atom;\r\n\r\n    while (tokens.length > 0) {\r\n        const token = tokens.shift();\r\n        if (token.type === 'space') {\r\n            atom = new Atom('text', '', ' ', options.style);\r\n            atom.symbol = ' ';\r\n            result.push(atom);\r\n        } else if (token.type === 'placeholder') {\r\n            // RENDER PLACEHOLDER\r\n            atom = new Atom('text', 'placeholder', token.value as string);\r\n            atom.captureSelection = true;\r\n            result.push(atom);\r\n        } else if (token.type === 'command') {\r\n            // Invoke the 'main' parser to handle the command\r\n            tokens.unshift(token);\r\n            let atoms: Atom[];\r\n            [atoms, tokens] = options.parse('text', tokens, options);\r\n            result = [...result, ...atoms];\r\n        } else if (token.type === 'literal') {\r\n            const info = getInfo(token.value as string, 'text', options.macros);\r\n            if (!info) {\r\n                error({ code: 'unexpected-token' });\r\n            } else if (!info.mode || info.mode.includes('text')) {\r\n                atom = new Atom(\r\n                    'text',\r\n                    info ? info.type : '', // @todo: revisit. Use 'text' type?\r\n                    info ? info.value : (token.value as string),\r\n                    options.style\r\n                );\r\n                atom.symbol = token.value as string;\r\n                atom.latex = charToLatex('text', token.value as string);\r\n                result.push(atom);\r\n            } else {\r\n                error({ code: 'unexpected-token' });\r\n            }\r\n        } else if (token.type === '$' || token.type === '$$') {\r\n            // Mode-shift\r\n            const subtokens = tokens.slice(\r\n                0,\r\n                tokens.findIndex((x: Token) => x.type === token.type)\r\n            );\r\n            tokens = tokens.slice(subtokens.length + 1);\r\n            const [atoms] = options.parse('math', subtokens, options);\r\n            result = [...result, ...atoms];\r\n        } else if (token.type === '{' || token.type === '}') {\r\n            // Spurious braces are ignored by TeX in text mode\r\n            // In text mode, braces are sometimes used to separate adjacent\r\n            // commands without inserting a space, e.g. \"\\backlash{}command\"\r\n        } else {\r\n            error({\r\n                code: 'unexpected-token',\r\n                arg: token.type + (token.value ?? ''),\r\n            });\r\n        }\r\n    }\r\n    return [result, tokens];\r\n}\r\n\r\nregister('text', {\r\n    emitLatexRun: emitLatexTextRun,\r\n    applyStyle,\r\n    parse: (tokens, error, options) => parse(tokens, error, options)[0],\r\n});\r\n","import { isArray } from '../common/types';\r\n\r\nimport {\r\n    getEnvironmentInfo,\r\n    getInfo,\r\n    unicodeCharToLatex,\r\n    MacroDictionary,\r\n} from './definitions';\r\nimport { stringToColor } from './color';\r\nimport { convertDimenToEm } from './font-metrics';\r\nimport { Token, tokenize } from './lexer';\r\nimport { Atom, Colspec, BBoxParam } from './atom';\r\nimport { parseTokens } from './modes';\r\nimport { FunctionDefinition } from './definitions-utils';\r\nimport { ParserErrorListener, MacroDefinition, Style } from '../public/core';\r\nimport { ParseModePrivate } from './context';\r\n\r\nfunction tokensToString(tokens: Token[]): string {\r\n    let hasParamToken = false;\r\n    const result = tokens\r\n        .map((token) => {\r\n            if (token.type === 'literal') {\r\n                return token.value;\r\n            }\r\n            if (token.type === '{') {\r\n                return '{';\r\n            }\r\n            if (token.type === '}') {\r\n                return '}';\r\n            }\r\n            if (token.type === 'command') {\r\n                return '\\\\' + token.value;\r\n            }\r\n            if (token.type === 'placeholder') {\r\n                return '#?';\r\n            }\r\n            if (token.type === '#') {\r\n                hasParamToken = true;\r\n                return '#' + token.value;\r\n            }\r\n            if (token.type === 'space') {\r\n                return ' ';\r\n            }\r\n            if (token.type === '$') {\r\n                return '$';\r\n            }\r\n            if (token.type === '$$') {\r\n                return '$$';\r\n            }\r\n            console.error('Unexpected token type ', token.type);\r\n            return '';\r\n        })\r\n        .join('');\r\n    return hasParamToken ? '' : result;\r\n}\r\n\r\n/**\r\n * A parser transforms a list of tokens into a list of Atom.\r\n *\r\n * @param {Token[]} tokens - An array of tokens generated by the lexer.\r\n * @param {Object.<string>} [args] - An optional list of arguments. `#n` tokens will be\r\n * substituted with the corresponding element in the args object. This is used\r\n * when parsing macros.\r\n * @class module:core/parser#Parser\r\n * @property {Token[]} tokens - An array of tokens generated by the lexer.\r\n * @property {Object.<string>} args - Optional arguments to substitute the `#` token.\r\n * @property {Object.<string, string>} macros - A dictionary of objects, index by the name of\r\n * the macro, with the following keys:\r\n *    * args: an integer, the number of arguments, default 0. They can be referenced as #0,\r\n *       #1, #2... inside the definition of the macro\r\n *    * def: a string, the definition of the macro, which can reference other macros\r\n * @property {number} index - The current token to be parsed: index in `this.tokens`\r\n * @property {Atom[]} mathList - Accumulated result of the parsing by\r\n * `parseAtom()`\r\n * @property {object} style - The font, weight, color, etc. to apply to the\r\n * upcoming tokens\r\n * @property {string} parseMode - The parse mode indicates the syntax rules to\r\n * use to parse the upcoming tokens.\r\n *  Valid values include:\r\n *  - `'math'`: spaces are ignored, math functions are allowed\r\n *  - `'text'`: spaces are accounted for, math functions are ignored\r\n *  - `'string'`\r\n *  - `'color'`: color name, hex value: `'#fff'`, `'#a0a0a0'`\r\n *  - `'number'`: `+/-12.56`\r\n *  - `'dimen'`: `'25mu'`, `'2pt'`\r\n *  - `'skip'`: `'25mu plus 2em minus fiLll'`, `'2pt'`\r\n *  - `'colspec'`: formating of a column in tabular environment, e.g. `'r@{.}l'`\r\n * @property {boolean} tabularMode - When in tabular mode, `'&'` is interpreted as\r\n *  a column separator and `'\\'` as a row separator. Used for matrixes, etc...\r\n * @property {number} endCount - Counter to prevent deadlock. If `end()` is\r\n * called too many times (1,000) in a row for the same token, bail.\r\n */\r\nclass Parser {\r\n    tokens: Token[];\r\n    args: (string | Atom[])[];\r\n    macros: MacroDictionary;\r\n\r\n    onError: ParserErrorListener;\r\n    index = 0;\r\n    mathList: Atom[] = [];\r\n    style: Style = {};\r\n    parseMode: ParseModePrivate = 'math';\r\n    smartFence = false;\r\n    tabularMode = false;\r\n    endCount = 0;\r\n\r\n    constructor(\r\n        tokens: Token[],\r\n        args: (string | Atom[])[],\r\n        macros: MacroDictionary,\r\n        onError: ParserErrorListener\r\n    ) {\r\n        this.tokens = tokens;\r\n        this.args = args;\r\n        this.macros = macros;\r\n        this.onError = (err) =>\r\n            onError({\r\n                before: tokensToString(\r\n                    this.tokens.slice(this.index, this.index + 10)\r\n                ),\r\n                after: tokensToString(\r\n                    this.tokens.slice(Math.max(0, this.index - 10), this.index)\r\n                ),\r\n                ...err,\r\n            });\r\n    }\r\n    swapMathList(newMathList: Atom[] = []): Atom[] {\r\n        const result = this.mathList;\r\n        this.mathList = newMathList;\r\n        return result;\r\n    }\r\n    swapParseMode(mode: ParseModePrivate): ParseModePrivate {\r\n        const result = this.parseMode;\r\n        this.parseMode = mode;\r\n        return result;\r\n    }\r\n    /**\r\n     * True if we've reached the end of the token stream.\r\n     */\r\n    end(): boolean {\r\n        // To prevent a deadlock, count how many times end() is called without the\r\n        // index advancing. If it happens more than 1,000 times in a row,\r\n        // assume something is broken and pretend the stream is finished.\r\n        this.endCount++;\r\n        return this.index >= this.tokens.length || this.endCount > 1000;\r\n    }\r\n    get(): Token | null {\r\n        this.endCount = 0;\r\n        return this.index < this.tokens.length\r\n            ? this.tokens[this.index++]\r\n            : null;\r\n    }\r\n    peek(offset = 0): Token | null {\r\n        const index = this.index + offset;\r\n        return index < this.tokens.length ? this.tokens[index] : null;\r\n    }\r\n    /**\r\n     * Return the last atom of the math list\r\n     * If there isn't one, insert a `msubsup` and return it.\r\n     */\r\n    lastMathAtom(): Atom {\r\n        const lastType =\r\n            this.mathList.length === 0\r\n                ? 'none'\r\n                : this.mathList[this.mathList.length - 1].type;\r\n        if (lastType !== 'mop' && lastType !== 'msubsup') {\r\n            // ZERO WIDTH SPACE\r\n            const lastAtom = new Atom(this.parseMode, 'msubsup', '\\u200b');\r\n            this.mathList.push(lastAtom);\r\n        }\r\n        return this.mathList[this.mathList.length - 1];\r\n    }\r\n    /**\r\n     * @return True if the next token is of the specified type\r\n     */\r\n    hasToken(type: string): boolean {\r\n        const index = this.index;\r\n        return index < this.tokens.length\r\n            ? this.tokens[index].type === type\r\n            : false;\r\n    }\r\n    /**\r\n     * @return True if the next token is of type `'literal` and has the\r\n     * specified value. If `value` is empty, return true if the token is of type\r\n     * `'literal'`\r\n     */\r\n    hasLiteral(value = ''): boolean {\r\n        const index = this.index;\r\n        return index < this.tokens.length\r\n            ? this.tokens[index].type === 'literal' &&\r\n                  (!value || this.tokens[index].value === value)\r\n            : false;\r\n    }\r\n    /**\r\n     * @param pattern\r\n     * @return True if the next token is of type `'literal` and matches\r\n     * the specified regular expression pattern.\r\n     */\r\n    hasLiteralPattern(pattern: RegExp): boolean {\r\n        return (\r\n            this.hasToken('literal') &&\r\n            pattern.test(this.tokens[this.index].value as string)\r\n        );\r\n    }\r\n    hasCommand(command: string): boolean {\r\n        console.assert(\r\n            command === '\\\\' || command.charAt(0) !== '\\\\',\r\n            'hasCommand() does not require a \\\\'\r\n        );\r\n        const index = this.index;\r\n        return index < this.tokens.length\r\n            ? this.tokens[index].type === 'command' &&\r\n                  this.tokens[index].value === command\r\n            : false;\r\n    }\r\n    hasInfixCommand(): boolean {\r\n        const index = this.index;\r\n        if (\r\n            index < this.tokens.length &&\r\n            this.tokens[index].type === 'command'\r\n        ) {\r\n            const info = getInfo(\r\n                '\\\\' + this.tokens[index].value,\r\n                this.parseMode,\r\n                this.macros\r\n            );\r\n            if (info?.mode && !info.mode.includes(this.parseMode)) return false;\r\n            return info?.infix;\r\n        }\r\n        return false;\r\n    }\r\n    hasColumnSeparator(): boolean {\r\n        const index = this.index;\r\n        return this.tabularMode && index < this.tokens.length\r\n            ? this.tokens[index].type === 'literal' &&\r\n                  this.tokens[index].value === '&'\r\n            : false;\r\n    }\r\n    hasRowSeparator(): boolean {\r\n        const index = this.index;\r\n        return this.tabularMode && index < this.tokens.length\r\n            ? this.tokens[index].type === 'command' &&\r\n                  (this.tokens[index].value === '\\\\' ||\r\n                      this.tokens[index].value === 'cr')\r\n            : false;\r\n    }\r\n    parseColumnSeparator(): boolean {\r\n        if (this.hasColumnSeparator()) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Return the appropriate value for a placeholder, either a default\r\n     * one, or if a value was provided for #? via args, that value.\r\n     */\r\n    placeholder(): Atom[] {\r\n        if (this.args && typeof this.args['?'] === 'string') {\r\n            // If there is a specific value defined for the placeholder,\r\n            // use it.\r\n            return parseString(\r\n                this.args['?'],\r\n                this.parseMode,\r\n                null,\r\n                this.macros,\r\n                false,\r\n                this.onError\r\n            );\r\n        }\r\n        // U+2753 = BLACK QUESTION MARK ORNAMENT\r\n        const result = new Atom(this.parseMode, 'placeholder', '?', this.style);\r\n        result.captureSelection = true;\r\n        return [result];\r\n    }\r\n    hasImplicitCommand(commands: string[]): boolean {\r\n        if (this.index < this.tokens.length) {\r\n            const token = this.tokens[this.index];\r\n            if (token.type === 'command') {\r\n                return commands.includes(token.value as string);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    parseRowSeparator(): boolean {\r\n        if (this.hasRowSeparator()) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    parseToken(type: string): boolean {\r\n        if (this.hasToken(type)) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    skipWhitespace(): boolean {\r\n        let found = false;\r\n        while (this.hasToken('space')) {\r\n            this.index++;\r\n            found = true;\r\n        }\r\n        return found;\r\n    }\r\n    skipUntilToken(type: string): void {\r\n        while (!this.end() && !this.parseToken(type)) {\r\n            this.get();\r\n        }\r\n    }\r\n    parseArguments(\r\n        info: FunctionDefinition\r\n    ): [\r\n        ParseModePrivate,\r\n        (string | number | BBoxParam | Colspec[] | Atom | Atom[])[]\r\n    ] {\r\n        if (!info || !info.params) return ['', []];\r\n        let explicitGroup: ParseModePrivate = '';\r\n        const args: (\r\n            | string\r\n            | number\r\n            | BBoxParam\r\n            | Colspec[]\r\n            | Atom\r\n            | Atom[]\r\n        )[] = [];\r\n        let i = info.infix ? 2 : 0;\r\n        while (i < info.params.length) {\r\n            const param = info.params[i];\r\n            // Parse an argument\r\n            if (param.isOptional) {\r\n                args.push(this.scanOptionalArg(param.type));\r\n            } else if (param.type.endsWith('*')) {\r\n                // For example 'math*'.\r\n                // In this case, indicate that a 'yet-to-be-parsed'\r\n                // argument (and 'explicit group') is present\r\n                explicitGroup = param.type.slice(0, -1) as ParseModePrivate;\r\n            } else {\r\n                // If it's not present, scanArg returns null.\r\n                const arg = this.scanArg(param.type);\r\n                if (arg) {\r\n                    args.push(arg);\r\n                } else {\r\n                    // Report an error\r\n                    this.onError({ code: 'missing-argument' });\r\n                    return ['', null];\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n        return [explicitGroup, args];\r\n    }\r\n    parseCommand(command: string): boolean {\r\n        if (this.hasCommand(command)) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    parseLiteral(literal: string): boolean {\r\n        if (this.hasLiteral(literal)) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    parseFiller(): boolean {\r\n        let skipped = false;\r\n        let done = false;\r\n        do {\r\n            const skippedSpace = this.skipWhitespace();\r\n            const skippedRelax = this.parseCommand('relax');\r\n            skipped = skipped || skippedSpace || skippedRelax;\r\n            done = !skippedSpace && !skippedRelax;\r\n        } while (!done);\r\n        return skipped;\r\n    }\r\n    /**\r\n     * Keywords are used to specify dimensions, and for various other\r\n     * syntactic constructs. Unlike commands, they are not case sensitive.\r\n     * There are 25 keywords:\r\n     * at by bp cc cm dd depth em ex fil fill filll height in minus\r\n     * mm mu pc plus pt sp spread to true width\r\n     *\r\n     * TeX: 8212\r\n     * @return true if the expected keyword is present\r\n     */\r\n    parseKeyword(keyword: string): boolean {\r\n        const savedIndex = this.index;\r\n        let done = this.end();\r\n        let value = '';\r\n        while (!done) {\r\n            const token = this.get();\r\n            if (token?.type === 'literal') {\r\n                value += token.value;\r\n            }\r\n            done =\r\n                this.end() ||\r\n                token?.type !== 'literal' ||\r\n                value.length >= keyword.length;\r\n        }\r\n        const hasKeyword = keyword.toUpperCase() === value.toUpperCase();\r\n        if (!hasKeyword) {\r\n            this.index = savedIndex;\r\n        }\r\n        return hasKeyword;\r\n    }\r\n    /**\r\n     * Return a sequence of characters as a string.\r\n     * i.e. 'abcd' returns 'abcd'.\r\n     * Terminates on the first non-character encountered\r\n     * e.g. '{', '}' etc...\r\n     * Will also terminate on ']'\r\n     */\r\n    scanString(): string {\r\n        let result = '';\r\n        let done = this.end();\r\n        while (!done) {\r\n            if (this.hasLiteral(']')) {\r\n                done = true;\r\n            } else if (this.hasToken('literal')) {\r\n                result += this.get()!.value;\r\n            } else if (this.skipWhitespace()) {\r\n                result += ' ';\r\n            } else if (this.hasToken('command')) {\r\n                const token = this.get();\r\n                if (token!.value === 'space') {\r\n                    // The 'space' command is the ~\r\n                    // which can be used for example in operator names, i.e.\r\n                    // \\operatorname{lim~inf}. It's interpreted as a nbs\r\n                    result += '\\u00a0'; // NO-BREAK SPACE\r\n                } else {\r\n                    // TeX will give a 'Missing \\endcsname inserted' error\r\n                    // if it encounters any command when expecting a string.\r\n                    // We're a bit more lax.\r\n                    this.onError({ code: 'unbalanced-braces' });\r\n                    result += token!.value;\r\n                }\r\n            } else {\r\n                done = true;\r\n            }\r\n            done = done || this.end();\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return the literal tokens, as a string, until a matching closing \"}\"\r\n     */\r\n    scanLiteralArg(): string {\r\n        let result = '';\r\n        if (this.hasToken('{')) {\r\n            this.get(); // Skip initial \"{\"\r\n            let depth = 1;\r\n            while (depth > 0 && !this.end()) {\r\n                const token = this.get()!;\r\n                if (token.type === 'space') {\r\n                    result += ' ';\r\n                } else if (token.type === '#') {\r\n                    result += '#' + token.value;\r\n                } else if (token.type === 'command') {\r\n                    result += '\\\\' + token.value;\r\n                } else if (token.type === '}') {\r\n                    depth -= 1;\r\n                    if (depth > 0) {\r\n                        // Don't include final '}'\r\n                        result += '}';\r\n                    }\r\n                } else if (token.type === '{') {\r\n                    depth += 1;\r\n                    result += '{';\r\n                } else {\r\n                    result += token.value;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return a CSS color (#rrggbb)\r\n     */\r\n    scanColor(): string {\r\n        return stringToColor(this.scanString());\r\n    }\r\n    /**\r\n     * Return as a number a group of characters representing a\r\n     * numerical quantity.\r\n     *\r\n     * From TeX:8695 (scan_int):\r\n     * An integer number can be preceded by any number of spaces and `\\.+' or\r\n     * `\\.-' signs. Then comes either a decimal constant (i.e., radix 10), an\r\n     * octal constant (i.e., radix 8, preceded by~\\.\\'), a hexadecimal constant\r\n     * (radix 16, preceded by~\\.\"), an alphabetic constant (preceded by~\\.\\`), or\r\n     * an internal variable.\r\n     */\r\n    scanNumber(isInteger = true): number {\r\n        const negative = this.parseLiteral('-');\r\n        // Optional (ignorable) '+' sign\r\n        if (!negative) this.parseLiteral('+');\r\n        this.skipWhitespace();\r\n        isInteger = !!isInteger;\r\n        let radix = 10;\r\n        let digits = /[0-9]/;\r\n        if (this.parseLiteral(\"'\")) {\r\n            // Apostrophe indicates an octal value\r\n            radix = 8;\r\n            digits = /[0-7]/;\r\n            isInteger = true;\r\n        } else if (this.parseLiteral('\"') || this.parseLiteral('x')) {\r\n            // Double-quote indicates a hex value\r\n            // The 'x' prefix notation for the hexadecimal numbers is a MathJax extension.\r\n            // For example: 'x3a'\r\n            radix = 16;\r\n            // Hex digits have to be upper-case\r\n            digits = /[0-9A-F]/;\r\n            isInteger = true;\r\n        }\r\n        let value = '';\r\n        while (this.hasLiteralPattern(digits)) {\r\n            value += this.get()!.value;\r\n        }\r\n        // Parse the fractional part, if applicable\r\n        if (!isInteger && (this.parseLiteral('.') || this.parseLiteral(','))) {\r\n            value += '.';\r\n            while (this.hasLiteralPattern(digits)) {\r\n                value += this.get()!.value;\r\n            }\r\n        }\r\n        const result = isInteger ? parseInt(value, radix) : parseFloat(value);\r\n        return negative ? -result : result;\r\n    }\r\n    /**\r\n     * Return as a floating point number a dimension in pt (1 em = 10 pt)\r\n     *\r\n     * See TeX:8831\r\n     * @todo: note that some units depend on the font (em, ex). So it might be\r\n     * better to return a dimen struct with the value + unit and resolve\r\n     * later when we have a font context....\r\n     */\r\n    scanDimen(): number {\r\n        const value = this.scanNumber(false);\r\n        this.skipWhitespace();\r\n        let result;\r\n        if (this.parseKeyword('pt')) {\r\n            result = convertDimenToEm(value, 'pt');\r\n        } else if (this.parseKeyword('mm')) {\r\n            result = convertDimenToEm(value, 'mm');\r\n        } else if (this.parseKeyword('cm')) {\r\n            result = convertDimenToEm(value, 'cm');\r\n        } else if (this.parseKeyword('ex')) {\r\n            result = convertDimenToEm(value, 'ex');\r\n        } else if (this.parseKeyword('px')) {\r\n            result = convertDimenToEm(value, 'px');\r\n        } else if (this.parseKeyword('em')) {\r\n            result = convertDimenToEm(value, 'em');\r\n        } else if (this.parseKeyword('bp')) {\r\n            result = convertDimenToEm(value, 'bp');\r\n        } else if (this.parseKeyword('dd')) {\r\n            result = convertDimenToEm(value, 'dd');\r\n        } else if (this.parseKeyword('pc')) {\r\n            result = convertDimenToEm(value, 'pc');\r\n        } else if (this.parseKeyword('in')) {\r\n            result = convertDimenToEm(value, 'in');\r\n        } else if (this.parseKeyword('mu')) {\r\n            result = convertDimenToEm(value, 'mu');\r\n        } else {\r\n            // If the units are missing, TeX assumes 'pt'\r\n            this.onError({ code: 'missing-unit' });\r\n            result = convertDimenToEm(value, 'pt');\r\n        }\r\n        return result;\r\n    }\r\n    scanSkip(): number {\r\n        const result = this.scanDimen();\r\n        // We parse, but ignore the optional 'plus' and 'minus'\r\n        // arguments.\r\n        this.skipWhitespace();\r\n        // 'plus', optionally followed by 'minus'\r\n        // ('minus' cannot come before 'plus')\r\n        // dimen or 'hfill'\r\n        if (this.parseKeyword('plus')) {\r\n            // @todo there could also be a \\hFilLlL command here\r\n            this.scanDimen();\r\n        }\r\n        this.skipWhitespace();\r\n        if (this.parseKeyword('minus')) {\r\n            // @todo there could also be a \\hFilLlL command here\r\n            this.scanDimen();\r\n        }\r\n        return result;\r\n    }\r\n    scanColspec(): Colspec[] {\r\n        this.skipWhitespace();\r\n        const result: Colspec[] = [];\r\n        while (!this.end() && !(this.hasToken('}') || this.hasLiteral(']'))) {\r\n            if (this.hasLiteral()) {\r\n                const literal = this.get()!.value as string;\r\n                if ('lcr'.includes(literal)) {\r\n                    result.push({ align: literal as 'l' | 'c' | 'r' });\r\n                } else if (literal === '|') {\r\n                    result.push({ rule: true });\r\n                } else if (literal === '@') {\r\n                    if (this.parseToken('{')) {\r\n                        const savedParsemode = this.swapParseMode('math');\r\n                        result.push({\r\n                            gap: this.scanImplicitGroup(\r\n                                (token) => token.type === '}'\r\n                            ),\r\n                        });\r\n                        this.swapParseMode(savedParsemode);\r\n                    }\r\n                    this.parseToken('}');\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a `\\(...\\)` or `\\[...\\]` sequence\r\n     * @return group for the sequence or null\r\n     */\r\n    scanModeSet(): Atom {\r\n        let final: string;\r\n        if (this.parseCommand('(')) final = ')';\r\n        if (!final && this.parseCommand('[')) final = ']';\r\n        if (!final) return null;\r\n        const savedParsemode = this.swapParseMode('math');\r\n        const result = new Atom('math', 'group');\r\n        result.mathstyle = final === ')' ? 'textstyle' : 'displaystyle';\r\n        result.body = this.scanImplicitGroup(\r\n            (token: Token) => token.type === 'command' && token.value === final\r\n        );\r\n        this.parseCommand(final);\r\n        this.swapParseMode(savedParsemode);\r\n        if (!result.body || result.body.length === 0) return null;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a `$...$` or `$$...$$` sequence\r\n     */\r\n    scanModeShift(): Atom {\r\n        if (!this.hasToken('$') && !this.hasToken('$$')) return null;\r\n        const final = this.get()!.type;\r\n        const result = new Atom('math', 'group');\r\n        result.mathstyle = final === '$' ? 'textstyle' : 'displaystyle';\r\n        result.latexOpen = result.mathstyle === 'textstyle' ? '$' : '$$';\r\n        result.latexClose = result.latexOpen;\r\n        const savedParsemode = this.swapParseMode('math');\r\n        result.body = this.scanImplicitGroup(\r\n            (token: Token) => token.type === final\r\n        );\r\n        this.parseToken(final);\r\n        this.swapParseMode(savedParsemode);\r\n        if (!result.body || result.body.length === 0) return null;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a \\begin{env}...\\end{end} sequence\r\n     */\r\n    scanEnvironment(): Atom {\r\n        // An environment starts with a \\begin command\r\n        if (!this.parseCommand('begin')) return null;\r\n        // The \\begin command is immediately followed by the environment\r\n        // name, as a string argument\r\n        const envName = this.scanArg('string') as string;\r\n        const env = getEnvironmentInfo(envName);\r\n        // If the environment has some arguments, parse them\r\n        const args: (\r\n            | string\r\n            | number\r\n            | BBoxParam\r\n            | Colspec[]\r\n            | Atom\r\n            | Atom[]\r\n        )[] = [];\r\n        if (env?.params) {\r\n            for (const param of env.params) {\r\n                // Parse an argument\r\n                if (param.isOptional) {\r\n                    // If it's not present, scanArg returns null,\r\n                    // but push it on the list of arguments anyway.\r\n                    // The null value will be interpreted as unspecified\r\n                    // optional value by the command parse function.\r\n                    args.push(this.scanOptionalArg(param.type));\r\n                } else {\r\n                    const arg = this.scanArg(param.type);\r\n                    if (!arg) {\r\n                        this.onError({\r\n                            code: 'missing-argument',\r\n                            arg: envName,\r\n                        });\r\n                    }\r\n                    args.push(arg);\r\n                }\r\n            }\r\n        }\r\n        // Some environments change the mode\r\n        const savedMode = this.parseMode;\r\n        const savedTabularMode = this.tabularMode;\r\n        const savedMathList = this.swapMathList([]);\r\n        // @todo: since calling scanImplicitGroup(), may not need to save/restore the mathlist\r\n        this.tabularMode = env.tabular;\r\n        const array: Atom[][][] = [];\r\n        const rowGaps: number[] = [];\r\n        let row: Atom[][] = [];\r\n        let done = false;\r\n        do {\r\n            if (this.end()) {\r\n                this.onError({ code: 'unbalanced-environment', arg: envName });\r\n                done = true;\r\n            }\r\n            if (!done && this.parseCommand('end')) {\r\n                done = this.scanArg('string') === envName;\r\n            }\r\n            if (!done) {\r\n                if (this.parseColumnSeparator()) {\r\n                    row.push(this.swapMathList([]));\r\n                } else if (this.parseRowSeparator()) {\r\n                    row.push(this.swapMathList([]));\r\n                    let gap = 0;\r\n                    this.skipWhitespace();\r\n                    if (this.parseLiteral('[')) {\r\n                        gap = this.scanDimen();\r\n                        this.skipWhitespace();\r\n                        this.parseLiteral(']');\r\n                    }\r\n                    rowGaps.push(gap || 0);\r\n                    array.push(row);\r\n                    row = [];\r\n                } else {\r\n                    this.mathList = this.mathList.concat(\r\n                        this.scanImplicitGroup(\r\n                            (token: Token) =>\r\n                                token.type === '}' ||\r\n                                (token.type === 'literal' &&\r\n                                    token.value === '&') ||\r\n                                (token.type === 'command' &&\r\n                                    /^(end|cr|\\\\)$/.test(token.value as string)) // @revisit\r\n                        )\r\n                    );\r\n                }\r\n            }\r\n        } while (!done);\r\n        row.push(this.swapMathList([]));\r\n        if (row.length > 0) array.push(row);\r\n        const newMathList = this.swapMathList(savedMathList);\r\n        // If we're in tabular mode, we should end up with an empty mathlist\r\n        console.assert(\r\n            !this.tabularMode || newMathList.length === 0,\r\n            'Leftover atoms in tabular mode'\r\n        );\r\n        this.parseMode = savedMode;\r\n        this.tabularMode = savedTabularMode;\r\n        if (!env.tabular && newMathList.length === 0) return null;\r\n        if (env.tabular && array.length === 0) return null;\r\n        const result = new Atom(\r\n            this.parseMode,\r\n            'array',\r\n            newMathList,\r\n            env.parser ? env.parser(envName, args, array) : {}\r\n        );\r\n        result.array = array;\r\n        result.rowGaps = rowGaps;\r\n        result.env = { ...env };\r\n        result.env.name = envName;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a sequence terminated with a group end marker, such as\r\n     * `}`, `\\end`, `&`, etc...\r\n     *\r\n     * Returns an array of atoms or an empty array if the sequence\r\n     * terminates right away.\r\n     *\r\n     * @param done - A predicate indicating if a\r\n     * token signals the end of an implicit group\r\n     */\r\n    scanImplicitGroup(done?: (token: Token) => boolean): Atom[] {\r\n        // An implicit group is a sequence of atoms that terminates with\r\n        // a `'}'`,\r\n        // For environments, they also terminate at\r\n        // `'&'`, `'\\'`, `'\\cr'` or `'\\end'` or the end of the stream\r\n        // and a specific 'done' callback is passed for that\r\n        const savedStyle = this.style;\r\n        if (!done) {\r\n            done = (token: Token): boolean => token.type === '}';\r\n        }\r\n        // To handle infix commands, we'll keep track of their prefix\r\n        // (tokens coming before them) and their arguments\r\n        let infix: Token | null = null;\r\n        let infixInfo = null;\r\n        let infixArgs: Atom[][] = [];\r\n        let prefix = null; // A mathlist\r\n        const savedMathlist = this.swapMathList([]);\r\n        // if (this.index >= this.tokens.length) return true;\r\n        // const token = this.tokens[this.index];\r\n        while (!this.end() && !done(this.peek())) {\r\n            if (\r\n                this.hasImplicitCommand([\r\n                    'displaystyle',\r\n                    'textstyle',\r\n                    'scriptstyle',\r\n                    'scriptscriptstyle',\r\n                ])\r\n            ) {\r\n                // Implicit math style commands such as \\displaystyle, \\textstyle...\r\n                // Note these commands switch to math mode and a specific size\r\n                // \\textsize is the mathstyle used for inlinemath, not for text\r\n                this.parseMode = 'math';\r\n                const atom = new Atom('math', 'mathstyle');\r\n                atom.mathstyle = this.get()!.value as\r\n                    | 'displaystyle'\r\n                    | 'textstyle'\r\n                    | 'scriptstyle'\r\n                    | 'scriptscriptstyle';\r\n                this.mathList.push(atom);\r\n            } else if (this.hasInfixCommand() && !infix) {\r\n                // The next token is an infix and we have not seen one yet\r\n                // (there can be only one infix command per implicit group).\r\n                infix = this.get();\r\n                // The current parseMode, this.parseMode, may no longer have the value\r\n                // it had when we encountered the infix. However, since all infix are\r\n                // only defined in 'math' mode, we can use the 'math' constant\r\n                // for the parseMode\r\n                infixInfo = getInfo('\\\\' + infix.value, 'math', this.macros);\r\n                if (infixInfo) {\r\n                    [, infixArgs] = this.parseArguments(infixInfo) as [\r\n                        ParseModePrivate,\r\n                        Atom[][]\r\n                    ];\r\n                }\r\n                // Save the math list so far and start a new one\r\n                prefix = this.swapMathList([]);\r\n            } else {\r\n                this.parseAtom();\r\n            }\r\n        }\r\n        let result: Atom[];\r\n        if (infix) {\r\n            console.assert(infixInfo);\r\n            infixArgs.unshift(this.swapMathList(savedMathlist)); // suffix\r\n            infixArgs.unshift(prefix);\r\n            result = [\r\n                new Atom(\r\n                    this.parseMode,\r\n                    infixInfo.type,\r\n                    infixInfo.value || infix.value, // Functions don't have\r\n                    infixInfo.parse\r\n                        ? infixInfo.parse('\\\\' + infix.value, infixArgs)\r\n                        : null\r\n                ),\r\n            ];\r\n            result[0].symbol = '\\\\' + infix.value;\r\n        } else {\r\n            result = this.swapMathList(savedMathlist);\r\n        }\r\n\r\n        this.style = savedStyle;\r\n\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a group enclosed in a pair of braces: `{...}`.\r\n     *\r\n     * Return either a group Atom or null if not a group.\r\n     *\r\n     * Return a group Atom with an empty body if an empty\r\n     * group (i.e. `{}`).\r\n     */\r\n    scanGroup(): Atom {\r\n        if (!this.parseToken('{')) return null;\r\n        const result = new Atom(this.parseMode, 'group');\r\n        result.body = this.scanImplicitGroup(\r\n            (token: Token) => token.type === '}'\r\n        );\r\n        this.parseToken('}');\r\n        result.latexOpen = '{';\r\n        result.latexClose = '}';\r\n        return result;\r\n    }\r\n    scanSmartFence(): Atom {\r\n        this.skipWhitespace();\r\n        if (!this.parseLiteral('(')) return null;\r\n        // We've found an open paren... Convert to a `\\mleft...\\mright`\r\n        const result = new Atom(this.parseMode, 'leftright');\r\n        result.leftDelim = '(';\r\n        result.inner = false; // It's a `\\mleft`, not a `\\left`\r\n        const savedMathList = this.swapMathList([]);\r\n        let nestLevel = 1;\r\n        while (!this.end() && nestLevel !== 0) {\r\n            if (this.hasLiteral('(')) nestLevel += 1;\r\n            if (this.hasLiteral(')')) nestLevel -= 1;\r\n            if (nestLevel !== 0) this.parseAtom();\r\n        }\r\n        if (nestLevel === 0) this.parseLiteral(')');\r\n        result.rightDelim = nestLevel === 0 ? ')' : '?';\r\n        result.body = this.swapMathList(savedMathList);\r\n        return result;\r\n    }\r\n    /**\r\n     * Scan a delimiter, e.g. '(', '|', '\\vert', '\\ulcorner'\r\n     *\r\n     * @return The delimiter (as a character or command) or null\r\n     */\r\n    scanDelim(): string {\r\n        this.skipWhitespace();\r\n        const token = this.get();\r\n        if (!token) {\r\n            this.onError({ code: 'unexpected-end-of-string' });\r\n            return null;\r\n        }\r\n        let delim = '.';\r\n        if (token.type === 'command') {\r\n            delim = '\\\\' + token.value;\r\n        } else if (token.type === 'literal') {\r\n            delim = token.value as string;\r\n        }\r\n        const info = getInfo(delim, 'math', this.macros);\r\n        if (!info) {\r\n            this.onError({ code: 'unknown-command', arg: delim });\r\n            return null;\r\n        }\r\n        if (info.mode && !info.mode.includes(this.parseMode)) {\r\n            this.onError({ code: 'unexpected-delimiter', arg: delim });\r\n            return null;\r\n        }\r\n        if (info.type === 'mopen' || info.type === 'mclose') {\r\n            return delim;\r\n        }\r\n        // Some symbols are not of type mopen/mclose, but are still\r\n        // valid delimiters...\r\n        // '?' is a special delimiter used as a 'placeholder'\r\n        // (when the closing delimiter is displayed greyed out)\r\n        if (\r\n            /^(\\.|\\?|\\||<|>|\\\\vert|\\\\Vert|\\\\\\||\\\\surd|\\\\uparrow|\\\\downarrow|\\\\Uparrow|\\\\Downarrow|\\\\updownarrow|\\\\Updownarrow|\\\\mid|\\\\mvert|\\\\mVert)$/.test(\r\n                delim\r\n            )\r\n        ) {\r\n            return delim;\r\n        }\r\n        this.onError({ code: 'unexpected-delimiter', arg: delim });\r\n        return null;\r\n    }\r\n    /**\r\n     * Parse a `/left.../right` sequence.\r\n     *\r\n     * Note: the `/middle` command can occur multiple times inside a\r\n     * `/left.../right` sequence, and is handled separately.\r\n     *\r\n     * Return either an atom of type `'leftright'` or null\r\n     */\r\n    scanLeftRight(): Atom {\r\n        if (this.parseCommand('right') || this.parseCommand('mright')) {\r\n            // We have an unbalanced left/right (there's a \\right, but no \\left)\r\n            this.onError({ code: 'unbalanced-braces' });\r\n            return null;\r\n        }\r\n\r\n        const savedStyle = this.style;\r\n\r\n        let close = 'right';\r\n        if (!this.parseCommand('left')) {\r\n            if (!this.parseCommand('mleft')) return null;\r\n            close = 'mright';\r\n        }\r\n        const leftDelim = this.scanDelim();\r\n        if (!leftDelim) return null;\r\n\r\n        const savedMathList = this.swapMathList([]);\r\n        while (!this.end() && !this.parseCommand(close)) {\r\n            this.parseAtom();\r\n        }\r\n        this.style = savedStyle;\r\n\r\n        // If we've reached the end and there was no `\\right` or\r\n        // there isn't a valid delimiter after `\\right`, we'll\r\n        // consider the `\\right` missing and set the `rightDelim` to undefined\r\n        const rightDelim = this.scanDelim();\r\n\r\n        const result = new Atom(this.parseMode, 'leftright');\r\n        result.leftDelim = leftDelim;\r\n        result.rightDelim = rightDelim;\r\n        result.inner = close === 'right';\r\n        result.body = this.swapMathList(savedMathList);\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a subscript/superscript: `^` and `_`.\r\n     *\r\n     * Modify the last atom accordingly.\r\n     *\r\n     */\r\n    parseSupSub(): boolean {\r\n        // No sup/sub in text or command mode.\r\n        if (this.parseMode !== 'math') return false;\r\n        // Apply the subscript/superscript to the last render atom.\r\n        // If none is present (beginning of the mathlist, i.e. `{^2}`,\r\n        // an empty atom will be created, equivalent to `{{}^2}`\r\n        let result = false;\r\n        while (\r\n            this.hasLiteral('^') ||\r\n            this.hasLiteral('_') ||\r\n            this.hasLiteral(\"'\")\r\n        ) {\r\n            const supsub = this.hasLiteral('^') ? 'superscript' : 'subscript';\r\n            if (this.parseLiteral('^') || this.parseLiteral('_')) {\r\n                const arg = this.scanArg();\r\n                if (arg) {\r\n                    const atom = this.lastMathAtom();\r\n                    atom[supsub] = atom[supsub] || [];\r\n                    atom[supsub] = atom[supsub].concat(arg as Atom[]);\r\n                    result = true;\r\n                }\r\n            } else if (this.parseLiteral(\"'\")) {\r\n                // A single quote (prime) is actually equivalent to a\r\n                // '^{\\prime}'\r\n                const base = this.lastMathAtom();\r\n                const atom = new Atom(base.mode, 'mord', '\\u2032');\r\n                atom.symbol = '\\\\prime';\r\n                base.superscript = base.superscript || [];\r\n                base.superscript.push(atom);\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a `\\limits` or `\\nolimits` command.\r\n     *\r\n     * This will change the placement of limits to be either above or below\r\n     * (if `\\limits`) or in the superscript/subscript position (if `\\nolimits`).\r\n     *\r\n     * This overrides the calculation made for the placement, which is usually\r\n     * dependent on the displaystyle (`inlinemath` prefers `\\nolimits`, while\r\n     * `displaymath` prefers `\\limits`).\r\n     */\r\n    parseLimits(): boolean {\r\n        // Note: technically, \\limits and \\nolimits are only applicable\r\n        // after an operator. However, we apply them in all cases. They\r\n        // will simply be ignored when not applicable (i.e. on a literal)\r\n        // which is actually consistent with TeX.\r\n        if (this.parseCommand('limits')) {\r\n            const lastAtom = this.lastMathAtom();\r\n            lastAtom.limits = 'limits';\r\n            // Record that the limits was set through an explicit command\r\n            // so we can generate the appropriate LaTeX later\r\n            lastAtom.explicitLimits = true;\r\n            return true;\r\n        }\r\n        if (this.parseCommand('nolimits')) {\r\n            const lastAtom = this.lastMathAtom();\r\n            lastAtom.limits = 'nolimits';\r\n            // Record that the limits was set through an explicit command\r\n            // so we can generate the appropriate LaTeX later\r\n            lastAtom.explicitLimits = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    scanOptionalArg(\r\n        parseMode: ParseModePrivate\r\n    ): string | number | BBoxParam | Colspec[] | Atom[] {\r\n        parseMode =\r\n            !parseMode || parseMode === 'auto' ? this.parseMode : parseMode;\r\n        this.skipWhitespace();\r\n        if (!this.parseLiteral('[')) return null;\r\n        const savedParseMode = this.parseMode;\r\n        this.parseMode = parseMode;\r\n        const savedMathlist = this.swapMathList();\r\n        let result: string | number | BBoxParam | Colspec[] | Atom[];\r\n        while (!this.end() && !this.parseLiteral(']')) {\r\n            if (parseMode === 'string') {\r\n                result = this.scanString();\r\n            } else if (parseMode === 'number') {\r\n                result = this.scanNumber();\r\n            } else if (parseMode === 'dimen') {\r\n                result = this.scanDimen();\r\n            } else if (parseMode === 'skip') {\r\n                result = this.scanSkip();\r\n            } else if (parseMode === 'colspec') {\r\n                result = this.scanColspec();\r\n            } else if (parseMode === 'color') {\r\n                result = this.scanColor() || '#ffffff';\r\n            } else if (parseMode === 'bbox') {\r\n                // The \\bbox command takes a very particular argument:\r\n                // a comma delimited list of up to three arguments:\r\n                // a color, a dimension and a string.\r\n                // Split the string by comma delimited sub-strings, ignoring commas\r\n                // that may be inside (). For example\"x, rgb(a, b, c)\" would return\r\n                // ['x', 'rgb(a, b, c)']\r\n                const list = this.scanString()\r\n                    .toLowerCase()\r\n                    .trim()\r\n                    .split(/,(?![^(]*\\)(?:(?:[^(]*\\)){2})*[^\"]*$)/);\r\n                const bboxParam: BBoxParam = {};\r\n                for (const elem of list) {\r\n                    const color = stringToColor(elem);\r\n                    if (color) {\r\n                        bboxParam.backgroundcolor = color;\r\n                    } else {\r\n                        const m = elem.match(/^\\s*([0-9.]+)\\s*([a-z][a-z])/);\r\n                        if (m) {\r\n                            bboxParam.padding = convertDimenToEm(m[1], m[2]);\r\n                        } else {\r\n                            const m = elem.match(/^\\s*border\\s*:\\s*(.*)/);\r\n                            if (m) {\r\n                                bboxParam.border = m[1];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                result = bboxParam;\r\n            } else {\r\n                console.assert(\r\n                    parseMode === 'math',\r\n                    'Unexpected parse mode: \"' + parseMode + '\"'\r\n                );\r\n                this.mathList = this.mathList.concat(\r\n                    this.scanImplicitGroup(\r\n                        (token) =>\r\n                            token.type === 'literal' && token.value === ']'\r\n                    )\r\n                );\r\n            }\r\n        }\r\n        this.parseMode = savedParseMode;\r\n        const mathList = this.swapMathList(savedMathlist);\r\n        return result ? result : mathList;\r\n    }\r\n    /**\r\n     * Parse a math field, an argument to a function.\r\n     *\r\n     * An argument can either be a single atom or\r\n     * a sequence of atoms enclosed in braces.\r\n     *\r\n     * @param parseMode Temporarily overrides the parser parsemode. For\r\n     * example: `'dimen'`, `'color'`, `'text'`, etc...\r\n     */\r\n    scanArg(\r\n        parseMode?: ParseModePrivate\r\n    ): string | number | Atom | Atom[] | Colspec[] {\r\n        parseMode =\r\n            !parseMode || parseMode === 'auto' ? this.parseMode : parseMode;\r\n        this.parseFiller();\r\n        let result: string | number | Atom | Atom[] | Colspec[];\r\n        // An argument (which is called a 'math field' in TeX)\r\n        // could be a single character or symbol, as in `\\frac12`\r\n        // Note that ``\\frac\\sqrt{-1}\\alpha\\beta`` is equivalent to\r\n        // ``\\frac{\\sqrt}{-1}{\\beta}``\r\n        if (!this.parseToken('{')) {\r\n            if (parseMode === 'delim') {\r\n                return this.scanDelim() || '.';\r\n            } else if (/^(math|text)$/.test(parseMode)) {\r\n                // Parse a single token.\r\n                const savedParseMode = this.parseMode;\r\n                this.parseMode = parseMode;\r\n                const atom = this.scanToken();\r\n                this.parseMode = savedParseMode;\r\n                return atom;\r\n            }\r\n        }\r\n        // If this is a param token, substitute it with the\r\n        // (optional) argument passed to the parser\r\n        if (this.hasToken('#')) {\r\n            const paramToken = this.get();\r\n            this.skipUntilToken('}');\r\n            if (paramToken.value === '?') {\r\n                return this.placeholder();\r\n            }\r\n            if (this.args) {\r\n                if (!this.args[paramToken.value] && this.args['?']) {\r\n                    return this.placeholder();\r\n                }\r\n                return typeof this.args[paramToken.value] === 'string'\r\n                    ? parseString(\r\n                          this.args[paramToken.value],\r\n                          this.parseMode,\r\n                          null,\r\n                          this.macros,\r\n                          false,\r\n                          this.onError\r\n                      )\r\n                    : this.args[paramToken.value] || null;\r\n            }\r\n            return null;\r\n        }\r\n        const savedParseMode = this.parseMode;\r\n        this.parseMode = parseMode;\r\n        const savedMathList = this.swapMathList([]);\r\n        if (parseMode === 'string') {\r\n            result = this.scanString();\r\n            this.skipUntilToken('}');\r\n        } else if (parseMode === 'number') {\r\n            result = this.scanNumber();\r\n            this.skipUntilToken('}');\r\n        } else if (parseMode === 'dimen') {\r\n            result = this.scanDimen();\r\n            this.skipUntilToken('}');\r\n        } else if (parseMode === 'skip') {\r\n            result = this.scanSkip();\r\n            this.skipUntilToken('}');\r\n        } else if (parseMode === 'colspec') {\r\n            result = this.scanColspec();\r\n            this.skipUntilToken('}');\r\n        } else if (parseMode === 'color') {\r\n            result = this.scanColor() || '#ffffff';\r\n            this.skipUntilToken('}');\r\n        } else if (parseMode === 'delim') {\r\n            result = this.scanDelim() || '.';\r\n            this.skipUntilToken('}');\r\n        } else {\r\n            console.assert(\r\n                /^(math|text)$/.test(parseMode),\r\n                'Unexpected parse mode: \"' + parseMode + '\"'\r\n            );\r\n\r\n            // Collect an array of tokens until a balanced \"}\"\r\n            const initialIndex = this.index;\r\n            let depth = 1;\r\n            do {\r\n                const token = this.get();\r\n                if (token.type === '}') depth -= 1;\r\n                if (token.type === '{') depth += 1;\r\n            } while (depth > 0 && !this.end());\r\n            result = parseTokens(\r\n                parseMode,\r\n                this.tokens.slice(initialIndex, this.index - 1),\r\n                this.onError,\r\n                {\r\n                    args: this.args,\r\n                    macros: this.macros,\r\n                    smartFence: this.smartFence,\r\n                    style: this.style,\r\n                    parse: (\r\n                        mode: ParseModePrivate,\r\n                        tokens: Token[],\r\n                        options\r\n                    ): [Atom[], Token[]] => {\r\n                        const parser = new Parser(\r\n                            tokens,\r\n                            options.args,\r\n                            options.macros,\r\n                            this.onError\r\n                        );\r\n                        parser.parseMode = mode;\r\n                        parser.style = options.style;\r\n                        result = parser.scanImplicitGroup();\r\n                        return [result, tokens.slice(parser.index)];\r\n                    },\r\n                }\r\n            );\r\n            if (!result) {\r\n                // No mode-specific result. Try again from the start\r\n                this.index = initialIndex;\r\n                do {\r\n                    this.mathList = this.mathList.concat(\r\n                        this.scanImplicitGroup()\r\n                    );\r\n                } while (!this.parseToken('}') && !this.end());\r\n            }\r\n        }\r\n        this.parseMode = savedParseMode;\r\n        const mathList = this.swapMathList(savedMathList);\r\n        return result ? result : mathList;\r\n    }\r\n\r\n    scanToken(): Atom[] {\r\n        const token = this.get();\r\n        if (!token) return null;\r\n        let result: Atom | Atom[] | null = null;\r\n        if (token.type === 'space') {\r\n            if (this.parseMode === 'text') {\r\n                result = new Atom('text', '', ' ', this.style);\r\n                result.symbol = ' ';\r\n            }\r\n        } else if (token.type === 'placeholder') {\r\n            // RENDER PLACEHOLDER\r\n            result = new Atom(\r\n                this.parseMode,\r\n                'placeholder',\r\n                token.value as string\r\n            );\r\n            result.captureSelection = true;\r\n        } else if (token.type === 'command') {\r\n            // RENDER COMMAND\r\n            if (token.value === 'placeholder') {\r\n                result = new Atom(\r\n                    this.parseMode,\r\n                    'placeholder',\r\n                    this.scanArg('string') as string,\r\n                    this.style\r\n                );\r\n                result.captureSelection = true;\r\n            } else if (token.value === 'char') {\r\n                // \\char has a special syntax and requires a non-braced integer\r\n                // argument\r\n                const initialIndex = this.index;\r\n                let codepoint = Math.floor(this.scanNumber(true));\r\n                if (\r\n                    !isFinite(codepoint) ||\r\n                    codepoint < 0 ||\r\n                    codepoint > 0x10ffff\r\n                ) {\r\n                    codepoint = 0x2753; // BLACK QUESTION MARK\r\n                }\r\n                result = new Atom(\r\n                    this.parseMode,\r\n                    this.parseMode === 'math' ? 'mord' : '',\r\n                    String.fromCodePoint(codepoint)\r\n                );\r\n                result.symbol = '\\\\char';\r\n                result.latex =\r\n                    '\\\\char' + tokensToString(this.tokens.slice(initialIndex));\r\n            } else if (token.value === 'hskip' || token.value === 'kern') {\r\n                // \\hskip and \\kern have a special syntax and requires a non-braced\r\n                // 'skip' argument\r\n                const width = this.scanSkip();\r\n                if (isFinite(width)) {\r\n                    result = new Atom(\r\n                        this.parseMode,\r\n                        'spacing',\r\n                        null,\r\n                        this.style\r\n                    );\r\n                    result.width = width;\r\n                    result.symbol = '\\\\' + token.value;\r\n                    result.latex = '\\\\' + token.value;\r\n                }\r\n            } else {\r\n                result = this.scanMacro(token.value as string);\r\n                if (!result) {\r\n                    // This wasn't a macro, so let's see if it's a regular command\r\n                    const info = getInfo(\r\n                        '\\\\' + token.value,\r\n                        this.parseMode,\r\n                        {}\r\n                    );\r\n\r\n                    if (!info) {\r\n                        // An unknown command\r\n                        this.onError({\r\n                            code: 'unknown-command',\r\n                            arg: '\\\\' + token.value,\r\n                        });\r\n                        result = new Atom('math', 'error', '\\\\' + token.value);\r\n                        result.symbol = '\\\\' + token.value;\r\n                        result.latex = '\\\\' + token.value;\r\n                        return [result];\r\n                    }\r\n\r\n                    if (info.mode && !info.mode.includes(this.parseMode)) {\r\n                        // Command invalid in this mode\r\n                        this.onError({\r\n                            code: 'invalid-command',\r\n                            arg: '\\\\' + token.value,\r\n                        });\r\n                        result = new Atom('math', 'error', '\\\\' + token.value);\r\n                        result.symbol = '\\\\' + token.value;\r\n                        result.latex = '\\\\' + token.value;\r\n                        return [result];\r\n                    }\r\n\r\n                    // Parse the arguments\r\n                    // If explicitGroup is not empty, an explicit group is expected\r\n                    // to follow the command and will be parsed *after* the\r\n                    // command has been processed.\r\n                    // This is used for commands such as \\textcolor{color}{content}\r\n                    // that need to apply the color to the content *after* the\r\n                    // style has been changed.\r\n                    // In definitions, this is indicated with a parameter type\r\n                    // of 'auto*'\r\n                    const initialIndex = this.index;\r\n                    const [explicitGroup, args] = this.parseArguments(info);\r\n\r\n                    if (!args) return null; // Some required arguments were missing...\r\n\r\n                    if (info.infix) {\r\n                        // Infix commands should be handled in scanImplicitGroup\r\n                        // If we find an infix command here, it's a syntax error\r\n                        // (second infix command in an implicit group) and should be ignored.\r\n                        this.onError({\r\n                            code: 'too-many-infix-commands',\r\n                            arg: '\\\\' + token.value,\r\n                        });\r\n                    } else {\r\n                        //  Invoke the parse() function if present\r\n                        if (info.parse) {\r\n                            const attributes = info.parse(\r\n                                '\\\\' + token.value,\r\n                                args\r\n                            );\r\n                            if (attributes.type) {\r\n                                // A type was provided: create a new Atom\r\n                                result = new Atom(\r\n                                    this.parseMode,\r\n                                    info.type,\r\n                                    explicitGroup\r\n                                        ? (this.scanArg(\r\n                                              explicitGroup\r\n                                          ) as Atom[])\r\n                                        : null,\r\n                                    { ...this.style, ...attributes }\r\n                                );\r\n                            } else {\r\n                                // No type provided -> the parse function will modify\r\n                                // the current style rather than create a new Atom.\r\n                                const savedMode = this.parseMode;\r\n                                if (attributes.mode) {\r\n                                    // Change to 'text' (or 'math') mode if necessary\r\n                                    this.parseMode = attributes.mode;\r\n                                    delete attributes.mode;\r\n                                }\r\n\r\n                                // If an explicit group is expected, process it now\r\n                                if (explicitGroup) {\r\n                                    // Create a temporary style\r\n                                    const saveStyle = this.style;\r\n                                    this.style = {\r\n                                        ...this.style,\r\n                                        ...attributes,\r\n                                    };\r\n                                    result = this.scanArg(\r\n                                        explicitGroup\r\n                                    ) as Atom[];\r\n                                    this.style = saveStyle;\r\n                                } else {\r\n                                    // Merge the new style info with the current style\r\n                                    this.style = {\r\n                                        ...this.style,\r\n                                        ...attributes,\r\n                                    };\r\n                                }\r\n                                this.parseMode = savedMode;\r\n                            }\r\n                        } else {\r\n                            // The new atom will inherit the style of this atom\r\n                            // Only override the variant if it is not '' or undefined\r\n                            const style = {\r\n                                ...this.style,\r\n                                variant: info.variant || this.style.variant,\r\n                                variantStyle:\r\n                                    info.variantStyle ||\r\n                                    this.style.variantStyle,\r\n                            };\r\n                            result = new Atom(\r\n                                this.parseMode,\r\n                                info.type || 'mop',\r\n                                info.value || (token.value as string),\r\n                                style\r\n                            );\r\n                        }\r\n                        if (\r\n                            result instanceof Atom &&\r\n                            !/^(llap|rlap|class|cssId)$/.test(\r\n                                token.value as string\r\n                            )\r\n                        ) {\r\n                            result.symbol = '\\\\' + token.value;\r\n                            const argString = tokensToString(\r\n                                this.tokens.slice(initialIndex, this.index)\r\n                            );\r\n                            if (argString) {\r\n                                result.latex = result.symbol + argString;\r\n                            }\r\n                            if (result.isFunction && this.smartFence) {\r\n                                // The atom was a function that may be followed by\r\n                                // an argument, like `\\sin(`\r\n                                const smartFence = this.scanSmartFence();\r\n                                if (smartFence) {\r\n                                    result = [result, smartFence];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (\r\n            token.type === 'literal' &&\r\n            typeof token.value === 'string'\r\n        ) {\r\n            const info = getInfo(token.value, this.parseMode, this.macros);\r\n            if (info) {\r\n                const style = { ...this.style };\r\n                result = new Atom(\r\n                    this.parseMode,\r\n                    info.type,\r\n                    info.value || token.value,\r\n                    style\r\n                );\r\n                if (info.isFunction) {\r\n                    result.isFunction = true;\r\n                }\r\n            } else {\r\n                result = new Atom(\r\n                    this.parseMode,\r\n                    this.parseMode === 'math' ? 'mord' : '',\r\n                    token.value,\r\n                    this.style\r\n                );\r\n            }\r\n            result.symbol = token.value;\r\n            result.latex = unicodeCharToLatex(this.parseMode, token.value);\r\n            if (info?.isFunction && this.smartFence) {\r\n                // The atom was a function that may be followed by\r\n                // an argument, like `f(`.\r\n                const smartFence = this.scanSmartFence();\r\n                if (smartFence) {\r\n                    result = [result, smartFence];\r\n                }\r\n            }\r\n        } else if (token.type === '#') {\r\n            // Parameter token\r\n            if (token.value === '?') {\r\n                // '#?' indicates that a placeholder should be used\r\n                result = this.placeholder();\r\n            } else if (this.args) {\r\n                // Otherwise, substitute the token with a provided argument\r\n                if (!this.args[token.value]) {\r\n                    result = this.placeholder();\r\n                } else {\r\n                    result = parseString(\r\n                        this.args[token.value],\r\n                        this.parseMode,\r\n                        [],\r\n                        this.macros,\r\n                        false,\r\n                        this.onError\r\n                    );\r\n                }\r\n            }\r\n        } else {\r\n            if (token.type === '}') {\r\n                this.onError({ latex: '', code: 'unbalanced-braces' });\r\n            } else {\r\n                this.onError({\r\n                    latex: '',\r\n                    code: 'unexpected-token',\r\n                    arg: token.type + (token.value ?? ''),\r\n                });\r\n            }\r\n        }\r\n        // Always return an array of atoms\r\n        return result && !isArray(result)\r\n            ? [result as Atom]\r\n            : (result as Atom[]);\r\n    }\r\n    /**\r\n     * Attempt to scan the macro name and return an atom list if successful.\r\n     * Otherwise, it wasn't a macro.\r\n     */\r\n    scanMacro(macro: string): Atom {\r\n        if (!this.macros || !this.macros[macro]) return null;\r\n        const initialIndex = this.index;\r\n        const args: (string | Atom[])[] = [];\r\n        let def: string;\r\n        let argCount = 0;\r\n        if (typeof this.macros[macro] === 'string') {\r\n            def = this.macros[macro] as string;\r\n            // Let's see if there are arguments in the definition.\r\n            if (/(^|[^\\\\])#1/.test(def)) argCount = 1;\r\n            if (/(^|[^\\\\])#2/.test(def)) argCount = 2;\r\n            if (/(^|[^\\\\])#3/.test(def)) argCount = 3;\r\n            if (/(^|[^\\\\])#4/.test(def)) argCount = 4;\r\n            if (/(^|[^\\\\])#5/.test(def)) argCount = 5;\r\n            if (/(^|[^\\\\])#6/.test(def)) argCount = 6;\r\n            if (/(^|[^\\\\])#7/.test(def)) argCount = 7;\r\n            if (/(^|[^\\\\])#8/.test(def)) argCount = 8;\r\n            if (/(^|[^\\\\])#9/.test(def)) argCount = 9;\r\n        } else {\r\n            def = (this.macros[macro] as MacroDefinition).def;\r\n            argCount = (this.macros[macro] as MacroDefinition).args || 0;\r\n        }\r\n        for (let i = 1; i <= argCount; i++) {\r\n            // Parse each argument as a string. We don't know yet\r\n            // what the proper parse mode is, so defer parsing till later\r\n            // when invoking `parseString`\r\n            args[i] = this.scanLiteralArg();\r\n        }\r\n        // Carry forward the placeholder argument, if any.\r\n        if (this.args && typeof this.args['?'] === 'string') {\r\n            args['?'] = this.args['?'];\r\n        }\r\n        // Group the result of the macro expansion, and set the\r\n        // captureSelection attribute so that it is handled as an unbreakable\r\n        // unit\r\n        const atom = new Atom(\r\n            this.parseMode,\r\n            'group',\r\n            parseString(\r\n                def,\r\n                this.parseMode,\r\n                args,\r\n                this.macros,\r\n                false,\r\n                this.onError\r\n            )\r\n        );\r\n        atom.captureSelection = true;\r\n        atom.symbol = '\\\\' + macro;\r\n        atom.latex =\r\n            '\\\\' + macro + tokensToString(this.tokens.slice(initialIndex));\r\n        return atom;\r\n    }\r\n    /**\r\n     * Make a Atom for the current token or token group and\r\n     * add it to the parser's current mathList\r\n     */\r\n    parseAtom(): boolean {\r\n        let result: Atom | Atom[] =\r\n            this.scanEnvironment() ||\r\n            this.scanModeShift() ||\r\n            this.scanModeSet() ||\r\n            this.scanGroup() ||\r\n            this.scanLeftRight();\r\n        if (!result && (this.parseSupSub() || this.parseLimits())) return true;\r\n        if (!result) result = this.scanToken();\r\n        // If we have an atom to add, push it at the end of the current math list\r\n        // We could have no atom for tokens that were skipped, a ' ' in math mode\r\n        // for example\r\n        if (isArray(result)) {\r\n            this.mathList = this.mathList.concat(result);\r\n        } else if (result) {\r\n            this.mathList.push(result);\r\n        }\r\n        return result !== null;\r\n    }\r\n}\r\n\r\n/**\r\n * Given a string of LaTeX, return a corresponding math list (array of atoms).\r\n * @param args - If there are any placeholder tokens, e.g.\r\n * `#0`, `#1`, etc... they will be replaced by the value provided by `args`.\r\n * @param smartFence - If true, promote plain fences, e.g. `(`,\r\n * as `\\left...\\right` or `\\mleft...\\mright`\r\n */\r\nexport function parseString(\r\n    s: string,\r\n    parseMode: ParseModePrivate,\r\n    args: (string | Atom[])[],\r\n    macros: MacroDictionary,\r\n    smartFence = false,\r\n    error?: ParserErrorListener\r\n): Atom[] {\r\n    let mathlist = [];\r\n    const parser = new Parser(tokenize(s), args, macros, (err) => {\r\n        if (error) {\r\n            error({ ...err, latex: s });\r\n        } else {\r\n            console.warn(\r\n                'MathLive parsing error: ' +\r\n                    err.code +\r\n                    (err.arg ? ' ' + err.arg + ' ' : ''),\r\n                'in \"' + s + '\"'\r\n            );\r\n        }\r\n    });\r\n    parser.parseMode = parseMode || 'math'; // other possible values: 'text', 'color', etc...\r\n    if (smartFence) parser.smartFence = true;\r\n\r\n    while (!parser.end()) {\r\n        mathlist = mathlist.concat(parser.scanImplicitGroup());\r\n    }\r\n    return mathlist;\r\n}\r\n","import { ParseMode } from '../public/core';\r\n\r\nimport { MacroDictionary } from '../core/definitions';\r\nimport { Atom } from '../core/atom';\r\n\r\nimport { Path } from './path';\r\nimport { ModelListeners } from './model-listeners';\r\n\r\nexport type ModelOptions = {\r\n    mode: ParseMode;\r\n    macros: MacroDictionary;\r\n    removeExtraneousParentheses: boolean;\r\n};\r\n\r\nexport type ModelHooks = {\r\n    announce?: (\r\n        target: Mathfield, // @revisit: could drop this argument\r\n        command: string, // verb\r\n        // | 'plonk'\r\n        // | 'replacement'\r\n        //     | 'line'\r\n        //     | 'move'\r\n        //     | 'moveUp'\r\n        //     | 'moveDown'\r\n        //     | 'deleted'\r\n        //     | 'deleted: numerator'\r\n        //     | 'deleted: denominator'\r\n        //     | 'deleted: root'\r\n        //     | 'deleted: superscript',\r\n        modelBefore: ModelInterface,\r\n        atoms: Atom[] // object of the command\r\n    ) => void;\r\n    moveOut?: (\r\n        sender: ModelInterface,\r\n        direction: 'forward' | 'backward'\r\n    ) => boolean;\r\n    tabOut?: (\r\n        sender: ModelInterface,\r\n        direction: 'forward' | 'backward'\r\n    ) => boolean;\r\n};\r\n\r\ndeclare class Mathfield {}\r\n\r\nexport interface ModelInterface {\r\n    // mathfield: Mathfield;\r\n    options: ModelOptions;\r\n    listeners: ModelListeners;\r\n    hooks: Required<ModelHooks>;\r\n    root: Atom;\r\n    path: Path; // @revisit: could be called anchor\r\n    extent: number; // @revisit: could group anchor + extent = Selection\r\n    suppressChangeNotifications: boolean;\r\n    clone(): ModelInterface;\r\n    // @revisit: that's not really a notification: it's a hook. Move to Model.\r\n    announce(\r\n        command: string, // @revisit: be more explicit\r\n        modelBefore?: ModelInterface,\r\n        atoms?: Atom[]\r\n    );\r\n    // toString();\r\n    siblings(): Atom[];\r\n    anchorOffset(): number;\r\n    focusOffset(): number;\r\n    startOffset(): number;\r\n    endOffset(): number;\r\n    sibling(offset: number): Atom;\r\n    ancestor(ancestor: number): Atom;\r\n    parent(): Atom;\r\n    relation(): string;\r\n    insertFirstAtom(): void;\r\n}\r\n\r\nexport function isEmptyMathlist(atoms: Atom[]): boolean {\r\n    return (\r\n        atoms.length === 0 || (atoms.length === 1 && atoms[0].type === 'first')\r\n    );\r\n}\r\n\r\nexport function removeSuggestion(model: ModelInterface): void {\r\n    const siblings = model.siblings();\r\n    // Remove all `suggestion` atoms\r\n    for (let i = siblings.length - 1; i >= 0; i--) {\r\n        if (siblings[i].suggestion) {\r\n            siblings.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Clear the verbatim Latex property for the parent node and its parents.\r\n * This will cause the latex value to be re-calculated.\r\n */\r\nexport function invalidateVerbatimLatex(model: ModelInterface): void {\r\n    let depth = 1;\r\n    let atom = model.ancestor(depth);\r\n    while (atom) {\r\n        atom.latex = undefined;\r\n        depth += 1;\r\n        atom = model.ancestor(depth);\r\n    }\r\n}\r\n","export interface PathSegment {\r\n    relation: string;\r\n    offset: number;\r\n}\r\n\r\nexport type Path = PathSegment[];\r\n\r\nexport interface Selection {\r\n    path: Path;\r\n    extent: number;\r\n}\r\n\r\nexport function pathToString(path: Path, extent?: number): string {\r\n    let result = '';\r\n    for (const segment of path) {\r\n        result += segment.relation + ':' + segment.offset + '/';\r\n    }\r\n    if (extent) {\r\n        result += '#' + extent;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pathFromString(string: string): Selection {\r\n    // Reset the path\r\n    const result: Selection = { path: [], extent: 0 };\r\n\r\n    // Parse the selection extent, if present\r\n    const components = string.split('#');\r\n    if (components.length > 1) {\r\n        result.extent = parseInt(components[1]);\r\n    }\r\n\r\n    // Parse the segments\r\n    const segments = components[0].split('/');\r\n    for (const segment of segments) {\r\n        const m2 = segment.match(/([^:]*):(.*)/);\r\n        if (m2) {\r\n            result.path.push({\r\n                relation: m2[1],\r\n                offset: parseInt(m2[2]),\r\n            });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Given two paths, return a path representing their common ancestor.\r\n */\r\nexport function pathCommonAncestor(p: Path, q: Path): Path {\r\n    const result: Path = [];\r\n    const maxIndex = Math.min(p.length - 1, q.length - 1);\r\n    let i = 0;\r\n    while (\r\n        i <= maxIndex &&\r\n        p[i].relation === q[i].relation &&\r\n        p[i].offset === q[i].offset\r\n    ) {\r\n        result.push(p[i]);\r\n        i += 1;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @return 0 if the paths are identical\r\n *  - 1 if they are siblings\r\n *  - >1 if they are not siblings\r\n */\r\nexport function pathDistance(p: Path, q: Path): number {\r\n    let result = 0;\r\n    let i = -1;\r\n    let done = false;\r\n    while (!done) {\r\n        i += 1;\r\n        done = i >= p.length || i >= q.length;\r\n        done =\r\n            done ||\r\n            !(p[i].relation === q[i].relation && p[i].offset === q[i].offset);\r\n    }\r\n    if (i === p.length && i === q.length) {\r\n        // They're identical\r\n        result = 0;\r\n    } else if (\r\n        i + 1 === p.length &&\r\n        i + 1 === q.length &&\r\n        p[i].relation === q[i].relation\r\n    ) {\r\n        // They're siblings\r\n        result = 1;\r\n    } else {\r\n        result = 2;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function clone(path: Path): Path {\r\n    return pathFromString(pathToString(path)).path;\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { Atom } from '../core/atom';\r\n\r\n/**\r\n * Convert an array row/col into an array index.\r\n */\r\nexport function arrayIndex(array, rowCol): number {\r\n    let result = 0;\r\n\r\n    for (let i = 0; i < rowCol.row; i++) {\r\n        for (let j = 0; j < array[i].length; j++) {\r\n            result += 1;\r\n        }\r\n    }\r\n    result += rowCol.col;\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Convert an array index (scalar) to an array row/col.\r\n * @return {object}\r\n * - row: number\r\n * - col: number\r\n */\r\nexport function arrayColRow(\r\n    array: Atom[][][],\r\n    index: number | string\r\n): {\r\n    col: number;\r\n    row: number;\r\n} {\r\n    let i: number;\r\n    if (typeof index === 'string') {\r\n        const m = index.match(/cell([0-9]*)$/);\r\n        if (m) i = parseInt(m[1]);\r\n    } else {\r\n        i = index;\r\n    }\r\n    const result = { row: 0, col: 0 };\r\n    while (i > 0) {\r\n        result.col += 1;\r\n        if (!array[result.row] || result.col >= array[result.row].length) {\r\n            result.col = 0;\r\n            result.row += 1;\r\n        }\r\n        i -= 1;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return the array cell corresponding to colrow or null (for example in\r\n * a sparse array)\r\n */\r\nexport function arrayCell(\r\n    array: Atom[][][],\r\n    colrow: string | number | { col: number; row: number }\r\n): Atom[] {\r\n    if (typeof colrow !== 'object') colrow = arrayColRow(array, colrow);\r\n    let result: Atom[];\r\n    if (isArray(array[colrow.row])) {\r\n        result = array[colrow.row][colrow.col] || null;\r\n    }\r\n    // If the 'first' math atom is missing, insert it\r\n    if (result && (result.length === 0 || result[0].type !== 'first')) {\r\n        result.unshift(new Atom('', 'first'));\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Total numbers of cells (include sparse cells) in the array.\r\n */\r\nexport function arrayCellCount(array: Atom[][][]): number {\r\n    let result = 0;\r\n    let numRows = 0;\r\n    let numCols = 1;\r\n    for (const row of array) {\r\n        numRows += 1;\r\n        if (row.length > numCols) numCols = row.length;\r\n    }\r\n    result = numRows * numCols;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Adjust colRow to point to the next/previous available row\r\n * If no more rows, go to the next/previous column\r\n * If no more columns, return null\r\n */\r\nexport function arrayAdjustRow(\r\n    array: Atom[][][],\r\n    colRow: { col: number; row: number },\r\n    dir: number\r\n): { col: number; row: number } {\r\n    const result = { ...colRow };\r\n    result.row += dir;\r\n    if (result.row < 0) {\r\n        result.col += dir;\r\n        result.row = array.length - 1;\r\n        if (result.col < 0) return null;\r\n        while (result.row >= 0 && !arrayCell(array, result)) {\r\n            result.row -= 1;\r\n        }\r\n        if (result.row < 0) return null;\r\n    } else if (result.row >= array.length) {\r\n        result.col += dir;\r\n        result.row = 0;\r\n        while (result.row < array.length && !arrayCell(array, result)) {\r\n            result.row += 1;\r\n        }\r\n        if (result.row > array.length - 1) return null;\r\n    }\r\n    return result;\r\n}\r\n","import { Atom, makeRoot } from '../core/atom';\r\nimport { Path, clone as clonePath, pathToString } from './path';\r\nimport { arrayCell } from './model-array-utils';\r\nimport { ModelListeners } from './model-listeners';\r\n\r\nimport { ModelInterface, ModelOptions, ModelHooks } from './model-utils';\r\n\r\ndeclare class Mathfield {}\r\n\r\nexport class ModelPrivate implements ModelInterface {\r\n    mathfield: Mathfield;\r\n    options: ModelOptions;\r\n    listeners: ModelListeners;\r\n    hooks: Required<ModelHooks>;\r\n\r\n    root: Atom;\r\n\r\n    path: Path; // @revisit: could be called anchor\r\n    extent: number; // @revisit: could group anchor + extent = Selection\r\n\r\n    suppressChangeNotifications: boolean;\r\n\r\n    constructor(\r\n        options?: ModelOptions,\r\n        listeners?: ModelListeners,\r\n        hooks?: ModelHooks,\r\n        target?: Mathfield\r\n    ) {\r\n        this.options = {\r\n            mode: 'math',\r\n            removeExtraneousParentheses: false,\r\n            ...options,\r\n        };\r\n        this.root = makeRoot(this.options.mode);\r\n        this.path = [{ relation: 'body', offset: 0 }];\r\n        this.extent = 0;\r\n\r\n        this.setListeners(listeners);\r\n        this.setHooks(hooks);\r\n        this.mathfield = target;\r\n\r\n        this.suppressChangeNotifications = false;\r\n    }\r\n\r\n    clone(): ModelPrivate {\r\n        const result = new ModelPrivate(\r\n            this.options,\r\n            this.listeners,\r\n            this.hooks,\r\n            this.mathfield\r\n        );\r\n        result.root = this.root;\r\n        result.path = clonePath(this.path);\r\n        return result;\r\n    }\r\n    setListeners(listeners?: ModelListeners): void {\r\n        this.listeners = listeners;\r\n    }\r\n    setHooks(hooks?: ModelHooks): void {\r\n        this.hooks = {\r\n            announce: hooks?.announce\r\n                ? hooks.announce\r\n                : (\r\n                      _target: Mathfield,\r\n                      _command: string,\r\n                      _modelBefore: ModelPrivate,\r\n                      _atoms: Atom[]\r\n                  ): void => {\r\n                      return;\r\n                  },\r\n            moveOut: hooks?.moveOut\r\n                ? hooks.moveOut\r\n                : () => {\r\n                      return true;\r\n                  },\r\n            tabOut: hooks?.tabOut\r\n                ? hooks.tabOut\r\n                : () => {\r\n                      return true;\r\n                  },\r\n        };\r\n    }\r\n    announce(\r\n        command: string, // @revisit: be more explicit\r\n        modelBefore?: ModelPrivate,\r\n        atoms: Atom[] = []\r\n    ): void {\r\n        this.hooks.announce(this, command, modelBefore, atoms);\r\n    }\r\n\r\n    /**\r\n     * Return a string representation of the selection.\r\n     * @todo This is a bad name for this function, since it doesn't return\r\n     * a representation of the content, which one might expect...\r\n     */\r\n    toString(): string {\r\n        return pathToString(this.path, this.extent);\r\n    }\r\n\r\n    /**\r\n     * @return array of children of the parent\r\n     */\r\n    siblings(): Atom[] {\r\n        if (this.path.length === 0) return [];\r\n\r\n        let siblings: Atom[];\r\n        if (this.parent().array) {\r\n            siblings = arrayCell(this.parent().array, this.relation());\r\n        } else {\r\n            siblings = this.parent()[this.relation()] || [];\r\n            if (typeof siblings === 'string') siblings = [];\r\n        }\r\n\r\n        // If the 'first' math atom is missing, insert it\r\n        if (siblings.length === 0 || siblings[0].type !== 'first') {\r\n            siblings.unshift(new Atom('', 'first'));\r\n        }\r\n\r\n        return siblings;\r\n    }\r\n\r\n    anchorOffset(): number {\r\n        return this.path.length > 0\r\n            ? this.path[this.path.length - 1].offset\r\n            : 0;\r\n    }\r\n\r\n    focusOffset(): number {\r\n        return this.path.length > 0\r\n            ? this.path[this.path.length - 1].offset + this.extent\r\n            : 0;\r\n    }\r\n\r\n    /**\r\n     * Offset of the first atom included in the selection\r\n     * i.e. `=1` => selection starts with and includes first atom\r\n     * With expression _x=_ and atoms :\r\n     * - 0: _<first>_\r\n     * - 1: _x_\r\n     * - 2: _=_\r\n     *\r\n     * - if caret is before _x_:  `start` = 0, `end` = 0\r\n     * - if caret is after _x_:   `start` = 1, `end` = 1\r\n     * - if _x_ is selected:      `start` = 1, `end` = 2\r\n     * - if _x=_ is selected:   `start` = 1, `end` = 3\r\n     */\r\n    startOffset(): number {\r\n        return Math.min(this.focusOffset(), this.anchorOffset());\r\n    }\r\n\r\n    /**\r\n     * Offset of the first atom not included in the selection\r\n     * i.e. max value of `siblings.length`\r\n     * `endOffset - startOffset = extent`\r\n     */\r\n    endOffset(): number {\r\n        return Math.max(this.focusOffset(), this.anchorOffset());\r\n    }\r\n    /**\r\n     * Sibling, relative to `anchor`\r\n     * `sibling(0)` = start of selection\r\n     * `sibling(-1)` = sibling immediately left of start offset\r\n     */\r\n    sibling(offset: number): Atom {\r\n        return this.siblings()[this.startOffset() + offset];\r\n    }\r\n\r\n    // @revisit: move ancestor, and anything related to the selection to model-selection\r\n    /**\r\n     * @param ancestor distance from self to ancestor.\r\n     * - `ancestor` = 0: self\r\n     * - `ancestor` = 1: parent\r\n     * - `ancestor` = 2: grand-parent\r\n     * - etc...\r\n     */\r\n    ancestor(ancestor: number): Atom {\r\n        // If the requested ancestor goes beyond what's available,\r\n        // return null\r\n        if (ancestor > this.path.length) return null;\r\n\r\n        // Start with the root\r\n        let result = this.root;\r\n\r\n        // Iterate over the path segments, selecting the appropriate\r\n        for (let i = 0; i < this.path.length - ancestor; i++) {\r\n            const segment = this.path[i];\r\n            if (result.array) {\r\n                result = arrayCell(result.array, segment.relation)[\r\n                    segment.offset\r\n                ];\r\n            } else if (!result[segment.relation]) {\r\n                // There is no such relation... (the path got out of sync with the tree)\r\n                return null;\r\n            } else {\r\n                // Make sure the 'first' atom has been inserted, otherwise\r\n                // the segment.offset might be invalid\r\n                if (\r\n                    result[segment.relation].length === 0 ||\r\n                    result[segment.relation][0].type !== 'first'\r\n                ) {\r\n                    result[segment.relation].unshift(new Atom('', 'first'));\r\n                }\r\n                const offset = Math.min(\r\n                    segment.offset,\r\n                    result[segment.relation].length - 1\r\n                );\r\n                result = result[segment.relation][offset];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parent(): Atom {\r\n        return this.ancestor(1);\r\n    }\r\n\r\n    relation(): string {\r\n        return this.path.length > 0\r\n            ? this.path[this.path.length - 1].relation\r\n            : '';\r\n    }\r\n\r\n    /**\r\n     * If necessary, insert a `first` atom in the sibling list.\r\n     * If there's already a `first` atom, do nothing.\r\n     * The `first` atom is used as a 'placeholder' to hold the blinking caret when\r\n     * the caret is positioned at the very beginning of the mathlist.\r\n     */\r\n    insertFirstAtom(): void {\r\n        this.siblings();\r\n    }\r\n}\r\n","import type { ParserErrorListener } from '../public/core';\r\nimport type { ModelInterface } from './model-utils';\r\n\r\nexport type ModelListeners = {\r\n    onContentWillChange: (sender: ModelInterface) => void;\r\n    onContentDidChange: (sender: ModelInterface) => void;\r\n    onSelectionWillChange: (sender: ModelInterface) => void;\r\n    onSelectionDidChange: (sender: ModelInterface) => void;\r\n    onError: ParserErrorListener;\r\n};\r\n\r\nexport function selectionWillChange(model: ModelInterface): void {\r\n    if (\r\n        typeof model.listeners?.onSelectionWillChange === 'function' &&\r\n        !model.suppressChangeNotifications\r\n    ) {\r\n        model.listeners.onSelectionWillChange(model);\r\n    }\r\n}\r\n\r\nexport function selectionDidChange(model: ModelInterface): void {\r\n    if (\r\n        typeof model.listeners?.onSelectionDidChange === 'function' &&\r\n        !model.suppressChangeNotifications\r\n    ) {\r\n        model.listeners.onSelectionDidChange(model);\r\n    }\r\n}\r\n\r\nexport function contentWillChange(model: ModelInterface): void {\r\n    if (\r\n        typeof model.listeners?.onContentWillChange === 'function' &&\r\n        !model.suppressChangeNotifications\r\n    ) {\r\n        model.listeners.onContentWillChange(model);\r\n    }\r\n}\r\n\r\nexport function contentDidChange(model: ModelInterface): void {\r\n    if (\r\n        typeof model.listeners?.onContentDidChange === 'function' &&\r\n        !model.suppressChangeNotifications\r\n    ) {\r\n        model.listeners.onContentDidChange(model);\r\n    }\r\n}\r\n\r\n//////\r\n\r\nexport interface Disposable {\r\n    dispose(): void;\r\n}\r\n\r\nexport class EventEmitter<T> {\r\n    events: Map<string, Function[]>;\r\n\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n\r\n    addListener(\r\n        event: string,\r\n        listener: Function,\r\n        options?: { once?: boolean }\r\n    ): Disposable {\r\n        if (!this.events.has(event)) {\r\n            this.events.set(event, []);\r\n        }\r\n        options = options ?? {};\r\n        if (options.once ?? false) {\r\n            listener = (...payload: any[]): void => {\r\n                this.events.get(event).filter((x) => x !== listener);\r\n                listener.apply(this, ...payload);\r\n            };\r\n        }\r\n\r\n        this.events.get(event).push(listener);\r\n        return {\r\n            dispose: (): void => {\r\n                this.events.set(\r\n                    event,\r\n                    this.events.get(event).filter((x) => x !== listener)\r\n                );\r\n            },\r\n        };\r\n    }\r\n\r\n    on(event: string, listener: Function): Disposable {\r\n        return this.addListener(event, listener);\r\n    }\r\n\r\n    once(event: string, listener: Function): Disposable {\r\n        return this.addListener(event, listener, { once: true });\r\n    }\r\n\r\n    emit(event: string, ...payload: any[]): boolean {\r\n        const listeners = this.events.get(event);\r\n        if (listeners && listeners.length > 0) {\r\n            listeners.forEach((listener) => {\r\n                listener.apply(this, ...payload);\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/*\r\n// type User = { name: string };\r\n\r\n// interface UserEvents {\r\n//     login(user: User): void;\r\n//     logout(): string;\r\n// }\r\n\r\ntype Filter<T, Cond, U extends keyof T = keyof T> = {\r\n    [K in U]: T[K] extends Cond ? K : never;\r\n}[U];\r\n\r\ntype In<T> = T extends (...args: infer U) => any ? U : [];\r\ntype Out<T> = T extends () => infer U ? U : never;\r\n\r\n// Extract an array type of valid event keys\r\ntype EventKey<T> = Filter<T, Function> & string;\r\n\r\n// Extract the argument/return types of a valid event\r\ntype Arguments<T> = T extends (...args: infer U) => any ? U : [];\r\ntype Result<T> = T extends () => infer U ? U : never;\r\n\r\ntype EventIn<T, K extends EventKey<T>> = In<T[K]>;\r\ntype EventOut<T, K extends EventKey<T>> = Out<T[K]> | void;\r\n\r\nexport type Listener<T, K extends EventKey<T> = EventKey<T>> = (\r\n    ...args: EventIn<T, K>\r\n) => EventOut<T, K>;\r\n\r\nexport type ListenerMap<T> = Partial<{ [K in EventKey<T>]: Listener<T, K> }>;\r\n\r\ninterface Emitter<T> {\r\n    on<K extends EventKey<T>>(key: K, fn: Listener<T, K>): typeof fn;\r\n}\r\n\r\n// import { EventEmitter } from 'events';\r\n// const ee = (new EventEmitter() as unknown) as Emitter<UserEvents>;\r\n\r\n// ee.on('login', (user: string) => {});\r\n// ee.on('logout', () => {\r\n//     return 'done';\r\n// });\r\n*/\r\n","import { isArray } from '../common/types';\r\n\r\nimport { ParseMode } from '../public/core';\r\n\r\nimport { LETTER_AND_DIGITS } from '../core/definitions';\r\nimport { Atom } from '../core/atom';\r\nimport {\r\n    Path,\r\n    pathDistance,\r\n    clone as clonePath,\r\n    pathCommonAncestor,\r\n    pathFromString,\r\n} from './path';\r\n\r\nimport type { ModelInterface } from './model-utils';\r\n\r\nimport { ModelPrivate } from './model-class'; // @revisit. Circular dependency because\r\n// we need to create a model to make an iterator (we could use model-utils forward\r\n// declaration otherwise\r\nimport { isEmptyMathlist, removeSuggestion } from './model-utils';\r\nimport {\r\n    arrayCellCount,\r\n    arrayCell,\r\n    arrayIndex,\r\n    arrayColRow,\r\n    arrayAdjustRow,\r\n} from './model-array-utils';\r\nimport { selectionDidChange, selectionWillChange } from './model-listeners';\r\n\r\n/**\r\n * Return true if the atom could be a part of a number\r\n * i.e. \"-12354.568\"\r\n */\r\nfunction isNumber(atom: Atom): boolean {\r\n    if (!atom) return false;\r\n    return (\r\n        (atom.type === 'mord' && /[0-9.]/.test(atom.body as string)) ||\r\n        (atom.type === 'mpunct' && atom.body === ',')\r\n    );\r\n}\r\n\r\n/**\r\n * Return a `{start:, end:}` for the offsets of the command around the insertion\r\n * point, or null.\r\n * - `start` is the first atom which is of type `command`\r\n * - `end` is after the last atom of type `command`\r\n */\r\nexport function getCommandOffsets(\r\n    model: ModelInterface\r\n): { start: number; end: number } {\r\n    const siblings = model.siblings();\r\n    if (siblings.length <= 1) return null;\r\n\r\n    let start = Math.min(model.endOffset(), siblings.length - 1);\r\n    // let start = Math.max(0, model.endOffset());\r\n    if (siblings[start].type !== 'command') return null;\r\n    while (start > 0 && siblings[start].type === 'command') start -= 1;\r\n\r\n    let end = model.startOffset() + 1;\r\n    while (end <= siblings.length - 1 && siblings[end].type === 'command') {\r\n        end += 1;\r\n    }\r\n    if (end > start) {\r\n        return { start: start + 1, end: end };\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function positionInsertionPointAfterCommitedCommand(\r\n    model: ModelInterface\r\n): void {\r\n    const siblings = model.siblings();\r\n    const command = getCommandOffsets(model);\r\n    let i = command.start;\r\n    while (i < command.end && !siblings[i].suggestion) {\r\n        i++;\r\n    }\r\n    setSelection(model, i - 1);\r\n}\r\n\r\nexport function getAnchorMode(model: ModelInterface): ParseMode {\r\n    const anchor = selectionIsCollapsed(model)\r\n        ? getAnchor(model)\r\n        : model.sibling(1);\r\n    let result: ParseMode;\r\n    if (anchor) {\r\n        if (anchor.type === 'command') {\r\n            return 'command';\r\n        }\r\n        result = anchor.mode as ParseMode;\r\n    }\r\n    let i = 1;\r\n    let ancestor = model.ancestor(i);\r\n    while (!result && ancestor) {\r\n        if (ancestor) result = ancestor.mode as ParseMode;\r\n        i += 1;\r\n        ancestor = model.ancestor(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// @revisit any\r\nexport function getAnchorStyle(model: ModelInterface): any {\r\n    const anchor = selectionIsCollapsed(model)\r\n        ? getAnchor(model)\r\n        : model.sibling(1);\r\n    let result;\r\n    if (anchor && anchor.type !== 'first') {\r\n        if (anchor.type === 'command') {\r\n            return {};\r\n        }\r\n        result = {\r\n            color: anchor.color,\r\n            backgroundColor: anchor.backgroundColor,\r\n            fontFamily: anchor.fontFamily,\r\n            fontShape: anchor.fontShape,\r\n            fontSeries: anchor.fontSeries,\r\n            fontSize: anchor.fontSize,\r\n        };\r\n    }\r\n    let i = 1;\r\n    let ancestor = model.ancestor(i);\r\n    while (!result && ancestor) {\r\n        if (ancestor) {\r\n            result = {\r\n                color: ancestor.color,\r\n                backgroundColor: ancestor.backgroundColor,\r\n                fontFamily: ancestor.fontFamily,\r\n                fontShape: ancestor.fontShape,\r\n                fontSeries: ancestor.fontSeries,\r\n                fontSize: ancestor.fontSize,\r\n            };\r\n        }\r\n        i += 1;\r\n        ancestor = model.ancestor(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Move to the next/previous placeholder or empty child list.\r\n * @return False if no placeholder found and did not move\r\n */\r\nexport function leap(\r\n    model: ModelInterface,\r\n    dir: -1 | 1 = 1,\r\n    callHooks = true\r\n): boolean {\r\n    const savedSuppressChangeNotifications = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n    const oldPath = model.clone();\r\n    const oldExtent = model.extent;\r\n    move(model, dir);\r\n\r\n    if (getAnchor(model).type === 'placeholder') {\r\n        // If we're already at a placeholder, move by one more (the placeholder\r\n        // is right after the insertion point)\r\n        move(model, dir);\r\n    }\r\n    // Candidate placeholders are atom of type 'placeholder'\r\n    // or empty children list (except for the root: if the root is empty,\r\n    // it is not a valid placeholder)\r\n    const placeholders = filter(\r\n        model,\r\n        (path, atom) =>\r\n            atom.type === 'placeholder' ||\r\n            (path.length > 1 && model.siblings().length === 1),\r\n        dir\r\n    );\r\n\r\n    // If no placeholders were found, call handler or move to the next focusable\r\n    // element in the document\r\n    if (placeholders.length === 0) {\r\n        // Restore the selection\r\n        setPath(model, oldPath, oldExtent);\r\n        if (callHooks) {\r\n            if (\r\n                model.hooks?.tabOut &&\r\n                model.hooks.tabOut(model, dir > 0 ? 'forward' : 'backward') &&\r\n                document.activeElement\r\n            ) {\r\n                const focussableElements = `a[href]:not([disabled]),\r\n                    button:not([disabled]),\r\n                    textarea:not([disabled]),\r\n                    input[type=text]:not([disabled]),\r\n                    select:not([disabled]),\r\n                    [contentEditable=\"true\"],\r\n                    [tabindex]:not([disabled]):not([tabindex=\"-1\"])`;\r\n                // Get all the potentially focusable elements\r\n                // and exclude (1) those that are invisible (width and height = 0)\r\n                // (2) not the active element\r\n                // (3) the ancestor of the active element\r\n\r\n                const focussable = Array.prototype.filter.call(\r\n                    document.querySelectorAll(focussableElements),\r\n                    (element) =>\r\n                        ((element.offsetWidth > 0 ||\r\n                            element.offsetHeight > 0) &&\r\n                            !element.contains(document.activeElement)) ||\r\n                        element === document.activeElement\r\n                );\r\n                let index = focussable.indexOf(document.activeElement) + dir;\r\n                if (index < 0) index = focussable.length - 1;\r\n                if (index >= focussable.length) index = 0;\r\n                focussable[index].focus();\r\n            }\r\n        }\r\n        model.suppressChangeNotifications = savedSuppressChangeNotifications;\r\n        return false;\r\n    }\r\n\r\n    // Set the selection to the next placeholder\r\n    selectionWillChange(model);\r\n    setPath(model, placeholders[0]);\r\n    if (getAnchor(model).type === 'placeholder') setSelectionExtent(model, -1);\r\n    model.announce('move', oldPath);\r\n    selectionDidChange(model);\r\n    model.suppressChangeNotifications = savedSuppressChangeNotifications;\r\n    return true;\r\n}\r\n\r\n/**\r\n * @param offset\r\n * - &gt;0: index of the child in the group where the selection will start from\r\n * - <0: index counting from the end of the group\r\n * @param extent Number of items in the selection:\r\n * - 0: collapsed selection, single insertion point\r\n * - &gt;0: selection extending _after_ the offset\r\n * - <0: selection extending _before_ the offset\r\n * - `'end'`: selection extending to the end of the group\r\n * - `'start'`: selection extending to the beginning of the group\r\n * @param relation e.g. `'body'`, `'superscript'`, etc...\r\n * @return False if the relation is invalid (no such children)\r\n */\r\nexport function setSelection(\r\n    model: ModelInterface,\r\n    offset = 0,\r\n    extent: number | 'end' | 'start' = 0,\r\n    relation = ''\r\n): boolean {\r\n    // If no relation (\"children\", \"superscript\", etc...) is specified\r\n    // keep the current relation\r\n    const oldRelation = model.path[model.path.length - 1].relation;\r\n    if (!relation) relation = oldRelation;\r\n\r\n    // If the relation is invalid, exit and return false\r\n    const parent = model.parent();\r\n    if (!parent && relation !== 'body') return false;\r\n    const arrayRelation = relation.startsWith('cell');\r\n    if (\r\n        (!arrayRelation && !parent[relation]) ||\r\n        (arrayRelation && !parent.array)\r\n    ) {\r\n        return false;\r\n    }\r\n\r\n    const relationChanged = relation !== oldRelation;\r\n    // Temporarily set the path to the potentially new relation to get the\r\n    // right siblings\r\n    model.path[model.path.length - 1].relation = relation;\r\n\r\n    // Invoking siblings() will have the side-effect of adding the 'first'\r\n    // atom if necessary\r\n    // ... and we want the siblings with the potentially new relation...\r\n    const siblings = model.siblings();\r\n    const siblingsCount = siblings.length;\r\n\r\n    // Restore the relation\r\n    model.path[model.path.length - 1].relation = oldRelation;\r\n\r\n    const oldExtent = model.extent;\r\n    if (extent === 'end') {\r\n        extent = siblingsCount - offset - 1;\r\n    } else if (extent === 'start') {\r\n        extent = -offset;\r\n    }\r\n    setSelectionExtent(model, extent);\r\n    const extentChanged = model.extent !== oldExtent;\r\n    setSelectionExtent(model, oldExtent);\r\n\r\n    // Calculate the new offset, and make sure it is in range\r\n    // (setSelection can be called with an offset that greater than\r\n    // the number of children, for example when doing an up from a\r\n    // numerator to a smaller denominator, e.g. \"1/(x+1)\".\r\n    if (offset < 0) {\r\n        offset = siblingsCount + offset;\r\n    }\r\n    offset = Math.max(0, Math.min(offset, siblingsCount - 1));\r\n\r\n    const oldOffset = model.path[model.path.length - 1].offset;\r\n    const offsetChanged = oldOffset !== offset;\r\n\r\n    if (relationChanged || offsetChanged || extentChanged) {\r\n        if (relationChanged) {\r\n            adjustPlaceholder(model);\r\n        }\r\n        selectionWillChange(model);\r\n\r\n        model.path[model.path.length - 1].relation = relation;\r\n        model.path[model.path.length - 1].offset = offset;\r\n        setSelectionExtent(model, extent);\r\n\r\n        selectionDidChange(model);\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Move the anchor to the next permissible atom\r\n */\r\nexport function next(\r\n    model: ModelInterface,\r\n    options?: { iterateAll?: boolean }\r\n): void {\r\n    options = options || {};\r\n\r\n    const NEXT_RELATION = {\r\n        body: 'numer',\r\n        numer: 'denom',\r\n        denom: 'index',\r\n        index: 'overscript',\r\n        overscript: 'underscript',\r\n        underscript: 'subscript',\r\n        subscript: 'superscript',\r\n    };\r\n\r\n    if (model.anchorOffset() === model.siblings().length - 1) {\r\n        adjustPlaceholder(model);\r\n\r\n        // We've reached the end of this list.\r\n        // Is there another list to consider?\r\n        let relation = NEXT_RELATION[model.relation()];\r\n        const parent = model.parent();\r\n        while (relation && !parent[relation]) {\r\n            relation = NEXT_RELATION[relation];\r\n        }\r\n\r\n        // We found a new relation/set of siblings...\r\n        if (relation) {\r\n            setSelection(model, 0, 0, relation);\r\n            return;\r\n        }\r\n\r\n        // No more siblings, check if we have a sibling cell in an array\r\n        if (model.parent().array) {\r\n            const maxCellCount = arrayCellCount(model.parent().array);\r\n            let cellIndex =\r\n                parseInt(model.relation().match(/cell([0-9]*)$/)[1]) + 1;\r\n            while (cellIndex < maxCellCount) {\r\n                const cell = arrayCell(model.parent().array, cellIndex);\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (cell && setSelection(model, 0, 0, 'cell' + cellIndex)) {\r\n                    selectionDidChange(model);\r\n                    return;\r\n                }\r\n                cellIndex += 1;\r\n            }\r\n        }\r\n\r\n        // No more siblings, go up to the parent.\r\n        if (model.path.length === 1) {\r\n            // Invoke handler and perform default if they return true.\r\n            if (\r\n                model.suppressChangeNotifications ||\r\n                !model.hooks?.moveOut ||\r\n                model.hooks.moveOut(model, 'forward')\r\n            ) {\r\n                // We're at the root, so loop back\r\n                model.path[0].offset = 0;\r\n            }\r\n        } else {\r\n            // We've reached the end of the siblings. If we're a group\r\n            // with skipBoundary, when exiting, move one past the next atom\r\n            const skip = !options.iterateAll && model.parent().skipBoundary;\r\n            model.path.pop();\r\n            if (skip) {\r\n                next(model, options);\r\n            }\r\n        }\r\n\r\n        selectionDidChange(model);\r\n        return;\r\n    }\r\n\r\n    // Still some siblings to go through. Move on to the next one.\r\n    setSelection(model, model.anchorOffset() + 1);\r\n    const anchor = getAnchor(model);\r\n\r\n    // Dive into its components, if the new anchor is a compound atom,\r\n    // and allows capture of the selection by its sub-elements\r\n    if (anchor && !anchor.captureSelection) {\r\n        let relation;\r\n        if (anchor.array) {\r\n            // Find the first non-empty cell in this array\r\n            let cellIndex = 0;\r\n            relation = '';\r\n            const maxCellCount = arrayCellCount(anchor.array);\r\n            while (!relation && cellIndex < maxCellCount) {\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (arrayCell(anchor.array, cellIndex)) {\r\n                    relation = 'cell' + cellIndex.toString();\r\n                }\r\n                cellIndex += 1;\r\n            }\r\n            console.assert(relation);\r\n            model.path.push({ relation: relation, offset: 0 });\r\n            setSelection(model, 0, 0, relation);\r\n            return;\r\n        }\r\n        relation = 'body';\r\n        while (relation) {\r\n            if (isArray(anchor[relation])) {\r\n                model.path.push({ relation: relation, offset: 0 });\r\n                model.insertFirstAtom();\r\n                if (!options.iterateAll && anchor.skipBoundary) {\r\n                    next(model, options);\r\n                }\r\n                return;\r\n            }\r\n            relation = NEXT_RELATION[relation];\r\n        }\r\n    }\r\n}\r\n\r\nexport function previous(\r\n    model: ModelInterface,\r\n    options?: { iterateAll?: boolean }\r\n): void {\r\n    options = options || {};\r\n\r\n    const PREVIOUS_RELATION = {\r\n        numer: 'body',\r\n        denom: 'numer',\r\n        index: 'denom',\r\n        overscript: 'index',\r\n        underscript: 'overscript',\r\n        subscript: 'underscript',\r\n        superscript: 'subscript',\r\n    };\r\n    if (\r\n        !options.iterateAll &&\r\n        model.anchorOffset() === 1 &&\r\n        model.parent() &&\r\n        model.parent().skipBoundary\r\n    ) {\r\n        setSelection(model, 0);\r\n    }\r\n    if (model.anchorOffset() < 1) {\r\n        // We've reached the first of these siblings.\r\n        // Is there another set of siblings to consider?\r\n        let relation = PREVIOUS_RELATION[model.relation()];\r\n        while (relation && !setSelection(model, -1, 0, relation)) {\r\n            relation = PREVIOUS_RELATION[relation];\r\n        }\r\n        // Ignore the body of the subsup scaffolding and of\r\n        // 'mop' atoms (for example, \\sum): their body is not editable.\r\n        const parentType = model.parent() ? model.parent().type : 'none';\r\n        if (\r\n            relation === 'body' &&\r\n            (parentType === 'msubsup' || parentType === 'mop')\r\n        ) {\r\n            relation = null;\r\n        }\r\n        // We found a new relation/set of siblings...\r\n        if (relation) return;\r\n\r\n        adjustPlaceholder(model);\r\n\r\n        selectionWillChange(model);\r\n\r\n        // No more siblings, check if we have a sibling cell in an array\r\n        if (model.relation().startsWith('cell')) {\r\n            let cellIndex =\r\n                parseInt(model.relation().match(/cell([0-9]*)$/)[1]) - 1;\r\n            while (cellIndex >= 0) {\r\n                const cell = arrayCell(model.parent().array, cellIndex);\r\n                if (cell && setSelection(model, -1, 0, 'cell' + cellIndex)) {\r\n                    selectionDidChange(model);\r\n                    return;\r\n                }\r\n                cellIndex -= 1;\r\n            }\r\n        }\r\n\r\n        // No more siblings, go up to the parent.\r\n        if (model.path.length === 1) {\r\n            // Invoke handler and perform default if they return true.\r\n            if (\r\n                model.suppressChangeNotifications ||\r\n                !model.hooks?.moveOut ||\r\n                model.hooks.moveOut(model, 'backward')\r\n            ) {\r\n                // We're at the root, so loop back\r\n                model.path[0].offset = model.root.body.length - 1;\r\n            }\r\n        } else {\r\n            model.path.pop();\r\n            setSelection(model, model.anchorOffset() - 1);\r\n        }\r\n\r\n        selectionDidChange(model);\r\n        return;\r\n    }\r\n\r\n    // If the new anchor is a compound atom, dive into its components\r\n    const anchor = getAnchor(model);\r\n    // Only dive in if the atom allows capture of the selection by\r\n    // its sub-elements\r\n    if (!anchor.captureSelection) {\r\n        let relation;\r\n        if (anchor.array) {\r\n            relation = '';\r\n            const maxCellCount = arrayCellCount(anchor.array);\r\n            let cellIndex = maxCellCount - 1;\r\n            while (!relation && cellIndex < maxCellCount) {\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (arrayCell(anchor.array, cellIndex)) {\r\n                    relation = 'cell' + cellIndex.toString();\r\n                }\r\n                cellIndex -= 1;\r\n            }\r\n            cellIndex += 1;\r\n            console.assert(relation);\r\n            model.path.push({\r\n                relation: relation,\r\n                offset: arrayCell(anchor.array, cellIndex).length - 1,\r\n            });\r\n            setSelection(model, -1, 0, relation);\r\n            return;\r\n        }\r\n        relation = 'superscript';\r\n        while (relation) {\r\n            if (isArray(anchor[relation])) {\r\n                model.path.push({\r\n                    relation: relation,\r\n                    offset: anchor[relation].length - 1,\r\n                });\r\n\r\n                setSelection(model, -1, 0, relation);\r\n                return;\r\n            }\r\n            relation = PREVIOUS_RELATION[relation];\r\n        }\r\n    }\r\n    // There wasn't a component to navigate to, so...\r\n    // Still some siblings to go through: move on to the previous one.\r\n    setSelection(model, model.anchorOffset() - 1);\r\n\r\n    if (\r\n        !options.iterateAll &&\r\n        model.sibling(0) &&\r\n        model.sibling(0).skipBoundary\r\n    ) {\r\n        previous(model, options);\r\n    }\r\n}\r\n\r\nexport function move(model: ModelInterface, dist: number, options?): boolean {\r\n    options = options || { extend: false };\r\n    const extend = options.extend || false;\r\n\r\n    removeSuggestion(model);\r\n\r\n    if (extend) {\r\n        extend(model, dist, options);\r\n    } else {\r\n        const oldPath = model.clone();\r\n        // const previousParent = model.parent();\r\n        // const previousRelation = model.relation();\r\n        // const previousSiblings = model.siblings();\r\n\r\n        if (dist > 0) {\r\n            if (collapseSelectionForward(model)) dist--;\r\n            while (dist > 0) {\r\n                next(model);\r\n                dist--;\r\n            }\r\n        } else if (dist < 0) {\r\n            if (collapseSelectionBackward(model)) dist++;\r\n            while (dist !== 0) {\r\n                previous(model);\r\n                dist++;\r\n            }\r\n        }\r\n\r\n        // ** @todo: can't do that without updating the path.\r\n        // If the siblings list we left was empty, remove the relation\r\n        // if (previousSiblings.length <= 1) {\r\n        //     if (['superscript', 'subscript', 'index'].includes(previousRelation)) {\r\n        //         previousParent[previousRelation] = null;\r\n        //     }\r\n        // }\r\n        model.announce('move', oldPath);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function up(model: ModelInterface, options?): boolean {\r\n    options = options || { extend: false };\r\n    const extend = options.extend || false;\r\n\r\n    collapseSelectionBackward(model);\r\n    const relation = model.relation();\r\n\r\n    if (relation === 'denom') {\r\n        if (extend) {\r\n            selectionWillChange(model);\r\n            model.path.pop();\r\n            model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, 1);\r\n            selectionDidChange(model);\r\n        } else {\r\n            setSelection(model, model.anchorOffset(), 0, 'numer');\r\n        }\r\n        model.announce('moveUp');\r\n    } else if (model.parent().array) {\r\n        // In an array\r\n        let colRow = arrayColRow(model.parent().array, relation);\r\n        colRow = arrayAdjustRow(model.parent().array, colRow, -1);\r\n        if (colRow && arrayCell(model.parent().array, colRow)) {\r\n            model.path[model.path.length - 1].relation =\r\n                'cell' + arrayIndex(model.parent().array, colRow);\r\n            setSelection(model, model.anchorOffset());\r\n\r\n            model.announce('moveUp');\r\n        } else {\r\n            move(model, -1, options);\r\n        }\r\n    } else {\r\n        model.announce('line');\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function down(model: ModelInterface, options?): boolean {\r\n    options = options || { extend: false };\r\n    const extend = options.extend || false;\r\n\r\n    collapseSelectionForward(model);\r\n    const relation = model.relation();\r\n    if (relation === 'numer') {\r\n        if (extend) {\r\n            selectionWillChange(model);\r\n            model.path.pop();\r\n            model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, 1);\r\n            selectionDidChange(model);\r\n        } else {\r\n            setSelection(model, model.anchorOffset(), 0, 'denom');\r\n        }\r\n        model.announce('moveDown');\r\n    } else if (model.parent().array) {\r\n        // In an array\r\n        let colRow = arrayColRow(model.parent().array, relation);\r\n        colRow = arrayAdjustRow(model.parent().array, colRow, +1);\r\n        // @revisit: validate this codepath\r\n        if (colRow && arrayCell(model.parent().array, colRow)) {\r\n            model.path[model.path.length - 1].relation =\r\n                'cell' + arrayIndex(model.parent().array, colRow);\r\n            setSelection(model, model.anchorOffset());\r\n\r\n            model.announce('moveDown');\r\n        } else {\r\n            move(model, +1, options);\r\n        }\r\n    } else {\r\n        model.announce('line');\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Change the range of the selection\r\n *\r\n * @param dist - The change (positive or negative) to the extent\r\n * of the selection. The anchor point does not move.\r\n */\r\nexport function extend(model: ModelInterface, dist: number): boolean {\r\n    let offset = model.path[model.path.length - 1].offset;\r\n    let extent = 0;\r\n    const oldPath = model.clone();\r\n\r\n    extent = model.extent + dist;\r\n\r\n    const newFocusOffset = offset + extent;\r\n    if (newFocusOffset < 0 && extent !== 0) {\r\n        // We're trying to extend beyond the first element.\r\n        // Go up to the parent.\r\n        if (model.path.length > 1) {\r\n            selectionWillChange(model);\r\n            model.path.pop();\r\n            // model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, -1);\r\n            selectionDidChange(model);\r\n            model.announce('move', oldPath);\r\n            return true;\r\n        }\r\n        // @todo exit left extend\r\n        // If we're at the very beginning, nothing to do.\r\n        offset = model.path[model.path.length - 1].offset;\r\n        extent = model.extent;\r\n    } else if (newFocusOffset >= model.siblings().length) {\r\n        // We're trying to extend beyond the last element.\r\n        // Go up to the parent\r\n        if (model.path.length > 1) {\r\n            selectionWillChange(model);\r\n            model.path.pop();\r\n            model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, 1);\r\n            selectionDidChange(model);\r\n            model.announce('move', oldPath);\r\n            return true;\r\n        }\r\n        // @todo exit right extend\r\n        if (selectionIsCollapsed(model)) {\r\n            offset -= 1;\r\n        }\r\n        extent -= 1;\r\n    }\r\n    setSelection(model, offset, extent);\r\n    model.announce('move', oldPath);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Move the selection focus to the next/previous point of interest.\r\n * A point of interest is an atom of a different type (mbin, mord, etc...)\r\n * than the current focus.\r\n * If `extend` is true, the selection will be extended. Otherwise, it is\r\n * collapsed, then moved.\r\n * @param dir +1 to skip forward, -1 to skip back\r\n */\r\nexport function skip(model: ModelInterface, dir: 1 | -1, options?): boolean {\r\n    options = options || { extend: false };\r\n    const extend = options.extend || false;\r\n    dir = dir < 0 ? -1 : +1;\r\n\r\n    const oldPath = model.clone();\r\n\r\n    const siblings = model.siblings();\r\n    const focus = model.focusOffset();\r\n    let offset = focus + dir;\r\n    if (extend) offset = Math.min(Math.max(0, offset), siblings.length - 1);\r\n    if (offset < 0 || offset >= siblings.length) {\r\n        // If we've reached the end, just move out of the list\r\n        move(model, dir, options);\r\n        return;\r\n    }\r\n    if (siblings[offset] && siblings[offset].mode === 'text') {\r\n        // We're in a text zone, skip word by word\r\n        offset = wordBoundaryOffset(model, offset, dir);\r\n        if (offset < 0 && !extend) {\r\n            setSelection(model, 0);\r\n            return;\r\n        }\r\n        if (offset > siblings.length) {\r\n            setSelection(model, siblings.length - 1);\r\n            move(model, dir, options);\r\n            return;\r\n        }\r\n    } else {\r\n        const type = siblings[offset] ? siblings[offset].type : '';\r\n        if ((type === 'mopen' && dir > 0) || (type === 'mclose' && dir < 0)) {\r\n            // We're right before (or after) an opening (or closing)\r\n            // fence. Skip to the balanced element (in level, but not necessarily in\r\n            // fence symbol).\r\n            let level = type === 'mopen' ? 1 : -1;\r\n            offset += dir > 0 ? 1 : -1;\r\n            while (offset >= 0 && offset < siblings.length && level !== 0) {\r\n                if (siblings[offset].type === 'mopen') {\r\n                    level += 1;\r\n                } else if (siblings[offset].type === 'mclose') {\r\n                    level -= 1;\r\n                }\r\n                offset += dir;\r\n            }\r\n            if (level !== 0) {\r\n                // We did not find a balanced element. Just move a little.\r\n                offset = focus + dir;\r\n            }\r\n            if (dir > 0) offset = offset - 1;\r\n        } else {\r\n            while (\r\n                siblings[offset] &&\r\n                siblings[offset].mode === 'math' &&\r\n                siblings[offset].type === type\r\n            ) {\r\n                offset += dir;\r\n            }\r\n            offset -= dir > 0 ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    if (extend) {\r\n        const anchor = model.anchorOffset();\r\n        setSelection(model, anchor, offset - anchor);\r\n    } else {\r\n        setSelection(model, offset);\r\n    }\r\n    model.announce('move', oldPath);\r\n}\r\n\r\n/**\r\n * Move to the next/previous expression boundary\r\n */\r\nexport function jump(model: ModelInterface, dir, options?): boolean {\r\n    options = options || { extend: false };\r\n    const extend = options.extend || false;\r\n    dir = dir < 0 ? -1 : +1;\r\n\r\n    const siblings = model.siblings();\r\n    let focus = model.focusOffset();\r\n    if (dir > 0) focus = Math.min(focus + 1, siblings.length - 1);\r\n\r\n    const offset = dir < 0 ? 0 : siblings.length - 1;\r\n\r\n    if (extend) {\r\n        extend(model, offset - focus);\r\n    } else {\r\n        move(model, offset - focus);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function jumpToMathFieldBoundary(\r\n    model: ModelInterface,\r\n    dir: number,\r\n    options?\r\n): boolean {\r\n    options = options || { extend: false };\r\n    const extend = options.extend || false;\r\n    dir = dir || +1;\r\n    dir = dir < 0 ? -1 : +1;\r\n\r\n    const oldPath = model.clone();\r\n    const path = [{ relation: 'body', offset: model.path[0].offset }];\r\n    let extent;\r\n\r\n    if (!extend) {\r\n        // Change the anchor to the end/start of the root expression\r\n        path[0].offset = dir < 0 ? 0 : model.root.body.length - 1;\r\n        extent = 0;\r\n    } else {\r\n        // Don't change the anchor, but update the extent\r\n        if (dir < 0) {\r\n            if (path[0].offset > 0) {\r\n                extent = -path[0].offset;\r\n            } else {\r\n                // @todo exit left extend\r\n            }\r\n        } else {\r\n            if (path[0].offset < model.siblings().length - 1) {\r\n                extent = model.siblings().length - 1 - path[0].offset;\r\n            } else {\r\n                // @todo exit right extend\r\n            }\r\n        }\r\n    }\r\n\r\n    setPath(model, path, extent);\r\n    model.announce('move', oldPath);\r\n    return true;\r\n}\r\n\r\n/**\r\n * @return The currently selected atoms, or `null` if the\r\n * selection is collapsed\r\n */\r\nexport function getSelectedAtoms(model: ModelInterface): Atom[] {\r\n    if (selectionIsCollapsed(model)) return null;\r\n    const result = [];\r\n    const siblings = model.siblings();\r\n    const firstOffset = model.startOffset() + 1;\r\n    const lastOffset = model.endOffset() + 1;\r\n    for (let i = firstOffset; i < lastOffset; i++) {\r\n        if (siblings[i] && siblings[i].type !== 'first') {\r\n            result.push(siblings[i]);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @return True if `atom` is within the selection range\r\n * @todo: poorly named, since this is specific to the selection, not the math\r\n * field\r\n */\r\n// export function contains(model: Model, atom) {\r\n//     if (selectionIsCollapsed(model)) return false;\r\n//     const siblings = model.siblings();\r\n//     const firstOffset = model.startOffset();\r\n//     const lastOffset = model.endOffset();\r\n//     for (let i = firstOffset; i < lastOffset; i++) {\r\n//         if (atomContains(siblings[i], atom)) return true;\r\n//     }\r\n//     return false;\r\n// }\r\n\r\n/**\r\n * Select all the atoms in the current group, that is all the siblings.\r\n * When the selection is in a numerator, the group is the numerator. When\r\n * the selection is a superscript or subscript, the group is the supsub.\r\n * When the selection is in a text zone, the \"group\" is a word.\r\n */\r\nexport function selectGroup(model: ModelInterface): boolean {\r\n    const siblings = model.siblings();\r\n    if (getAnchorMode(model) === 'text') {\r\n        let start = model.startOffset();\r\n        let end = model.endOffset();\r\n        //\r\n        while (\r\n            siblings[start] &&\r\n            siblings[start].mode === 'text' &&\r\n            LETTER_AND_DIGITS.test(siblings[start].body as string)\r\n        ) {\r\n            start -= 1;\r\n        }\r\n        while (\r\n            siblings[end] &&\r\n            siblings[end].mode === 'text' &&\r\n            LETTER_AND_DIGITS.test(siblings[end].body as string)\r\n        ) {\r\n            end += 1;\r\n        }\r\n        end -= 1;\r\n        if (start >= end) {\r\n            // No word found. Select a single character\r\n            setSelection(model, model.endOffset() - 1, 1);\r\n            return true;\r\n        }\r\n\r\n        setSelection(model, start, end - start);\r\n    } else {\r\n        // In a math zone, select all the sibling nodes\r\n        if (\r\n            model.sibling(0).type === 'mord' &&\r\n            /[0-9,.]/.test(model.sibling(0).body as string)\r\n        ) {\r\n            // In a number, select all the digits\r\n            let start = model.startOffset();\r\n            let end = model.endOffset();\r\n            //\r\n            while (isNumber(siblings[start])) start -= 1;\r\n            while (isNumber(siblings[end])) end += 1;\r\n            end -= 1;\r\n            setSelection(model, start, end - start);\r\n        } else {\r\n            setSelection(model, 0, 'end');\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function selectAll(model: ModelInterface): boolean {\r\n    model.path = [{ relation: 'body', offset: 0 }];\r\n    return setSelection(model, 0, 'end');\r\n}\r\n\r\n/**\r\n * @return {boolean} True if the selection is an insertion point.\r\n */\r\nexport function selectionIsCollapsed(model: ModelInterface): boolean {\r\n    return model.extent === 0;\r\n}\r\n\r\nexport function setSelectionExtent(\r\n    model: ModelInterface,\r\n    extent: number\r\n): boolean {\r\n    model.extent = extent;\r\n    return true;\r\n}\r\n\r\nexport function collapseSelectionForward(model: ModelInterface): boolean {\r\n    if (model.extent === 0) return false;\r\n\r\n    setSelection(model, model.endOffset());\r\n    return true;\r\n}\r\n\r\nexport function collapseSelectionBackward(model: ModelInterface): boolean {\r\n    if (model.extent === 0) return false;\r\n\r\n    setSelection(model, model.startOffset());\r\n    return true;\r\n}\r\n\r\nexport function moveAfterParent(model: ModelInterface): boolean {\r\n    if (model.path.length > 1) {\r\n        const oldPath = model.clone();\r\n        model.path.pop();\r\n        setSelectionExtent(model, 0);\r\n        model.announce('move', oldPath);\r\n        return true;\r\n    }\r\n    model.announce('plonk');\r\n    return false;\r\n}\r\n\r\n/**\r\n * The atom where the selection starts.\r\n *\r\n * When the selection is extended the anchor remains fixed. The anchor\r\n * could be either before or after the focus.\r\n */\r\nexport function getAnchor(model: ModelInterface): Atom {\r\n    if (model.parent().array) {\r\n        return arrayCell(model.parent().array, model.relation())[\r\n            model.anchorOffset()\r\n        ];\r\n    }\r\n    const siblings = model.siblings();\r\n    return siblings[Math.min(siblings.length - 1, model.anchorOffset())];\r\n}\r\n\r\n/**\r\n * Extend the selection between `from` and `to` nodes\r\n *\r\n * @param {object} options\r\n * - options.extendToWordBoundary\r\n * @return true if the range was actually changed\r\n */\r\nexport function setRange(\r\n    model: ModelInterface,\r\n    from: Path,\r\n    to: Path,\r\n    options: { extendToWordBoundary?: boolean } = {\r\n        extendToWordBoundary: false,\r\n    }\r\n): boolean {\r\n    // Measure the 'distance' between `from` and `to`\r\n    const distance = pathDistance(from, to);\r\n    if (distance === 0) {\r\n        // `from` and `to` are equal.\r\n\r\n        if (options.extendToWordBoundary) {\r\n            from = wordBoundary(model, from, -1);\r\n            to = wordBoundary(model, to, +1);\r\n            return setRange(model, from, to);\r\n        }\r\n\r\n        // Set the path to a collapsed insertion point\r\n        return setPath(model, clonePath(from), 0);\r\n    }\r\n\r\n    if (distance === 1) {\r\n        const extent = to[to.length - 1].offset - from[from.length - 1].offset;\r\n        if (options.extendToWordBoundary) {\r\n            from = wordBoundary(model, from, extent < 0 ? +1 : -1);\r\n            to = wordBoundary(model, to, extent < 0 ? -1 : +1);\r\n            return setRange(model, from, to);\r\n        }\r\n        // They're siblings, set an extent\r\n        return setPath(model, clonePath(from), extent);\r\n    }\r\n\r\n    // They're neither identical, not siblings.\r\n\r\n    // Find the common ancestor between the nodes\r\n    let commonAncestor = pathCommonAncestor(from, to);\r\n    const ancestorDepth = commonAncestor.length;\r\n    if (\r\n        from.length === ancestorDepth ||\r\n        to.length === ancestorDepth ||\r\n        from[ancestorDepth].relation !== to[ancestorDepth].relation\r\n    ) {\r\n        return setPath(model, commonAncestor, -1);\r\n    }\r\n\r\n    commonAncestor.push(from[ancestorDepth]);\r\n    commonAncestor = clonePath(commonAncestor);\r\n\r\n    let extent = to[ancestorDepth].offset - from[ancestorDepth].offset + 1;\r\n\r\n    if (extent <= 0) {\r\n        if (to.length > ancestorDepth + 1) {\r\n            // axb/c+y -> select from y to x\r\n            commonAncestor[ancestorDepth].relation = to[ancestorDepth].relation;\r\n            commonAncestor[ancestorDepth].offset = to[ancestorDepth].offset;\r\n            commonAncestor[commonAncestor.length - 1].offset -= 1;\r\n            extent = -extent + 2;\r\n        } else {\r\n            // x+(ayb/c) -> select from y to x\r\n            commonAncestor[ancestorDepth].relation = to[ancestorDepth].relation;\r\n            commonAncestor[ancestorDepth].offset = to[ancestorDepth].offset;\r\n            extent = -extent + 1;\r\n        }\r\n    } else if (to.length <= from.length) {\r\n        // axb/c+y -> select from x to y\r\n        commonAncestor[commonAncestor.length - 1].offset -= 1;\r\n    } else if (to.length > from.length) {\r\n        commonAncestor[ancestorDepth].offset -= 1;\r\n    }\r\n\r\n    return setPath(model, commonAncestor, extent);\r\n}\r\n\r\n/**\r\n *\r\n * @param {string|Array} selection\r\n * @param  extent the length of the selection\r\n * @return true if the path has actually changed\r\n */\r\nexport function setPath(model: ModelInterface, selection, extent = 0): boolean {\r\n    // Convert to a path array if necessary\r\n    if (typeof selection === 'string') {\r\n        selection = pathFromString(selection);\r\n    } else if (isArray(selection)) {\r\n        // need to temporarily change the path of this to use 'sibling()'\r\n        const newPath = clonePath(selection);\r\n        const oldPath = model.path;\r\n        model.path = newPath;\r\n        if (extent === 0 && getAnchor(model).type === 'placeholder') {\r\n            // select the placeholder\r\n            newPath[newPath.length - 1].offset = model.anchorOffset() - 1;\r\n            extent = 1;\r\n        }\r\n        selection = {\r\n            path: newPath,\r\n            extent: extent || 0,\r\n        };\r\n        model.path = oldPath;\r\n    }\r\n\r\n    const pathChanged = pathDistance(model.path, selection.path) !== 0;\r\n    const extentChanged = selection.extent !== model.extent;\r\n\r\n    if (pathChanged || extentChanged) {\r\n        if (pathChanged) {\r\n            adjustPlaceholder(model);\r\n        }\r\n        selectionWillChange(model);\r\n\r\n        model.path = clonePath(selection.path);\r\n\r\n        if (model.siblings().length < model.anchorOffset()) {\r\n            // The new path is out of bounds.\r\n            // Reset the path to something valid\r\n            console.warn(\r\n                'Invalid selection: ' +\r\n                    model.toString() +\r\n                    ' in \"' +\r\n                    model.root.toLatex(false) +\r\n                    '\"'\r\n            );\r\n\r\n            model.path = [{ relation: 'body', offset: 0 }];\r\n            model.extent = 0;\r\n        } else {\r\n            setSelectionExtent(model, selection.extent);\r\n        }\r\n\r\n        selectionDidChange(model);\r\n    }\r\n\r\n    return pathChanged || extentChanged;\r\n}\r\n\r\n/**\r\n * Locate the offset before the insertion point that would indicate\r\n * a good place to select as an implicit argument.\r\n * For example with '1+\\sin(x)', if the insertion point is at the\r\n * end, the implicit arg offset would be after the plus. As a result,\r\n * inserting a fraction after the sin would yield: '1+\\frac{\\sin(c)}{\\placeholder{}}'\r\n */\r\nexport function getImplicitArgOffset(model: ModelInterface): number {\r\n    const siblings = model.siblings();\r\n\r\n    let result = model.startOffset();\r\n    if (siblings[result].mode === 'text') {\r\n        while (result >= 1 && siblings[result].mode === 'text') {\r\n            result--;\r\n        }\r\n    } else {\r\n        // Find the first 'mrel', etc... to the left of the insertion point\r\n        while (\r\n            result >= 1 &&\r\n            /^(mord|surd|msubsup|leftright|mop)$/.test(siblings[result].type)\r\n        ) {\r\n            result--;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param cb - A callback called for each selected atom in the\r\n * mathlist.\r\n */\r\nexport function forEachSelected(\r\n    model: ModelInterface,\r\n    cb: (atom: Atom) => void,\r\n    options?: { recursive?: boolean }\r\n): void {\r\n    options = options ?? {};\r\n    options.recursive = options.recursive ?? false;\r\n\r\n    const siblings = model.siblings();\r\n    const firstOffset = model.startOffset() + 1;\r\n    const lastOffset = model.endOffset() + 1;\r\n\r\n    if (options.recursive) {\r\n        for (let i = firstOffset; i < lastOffset; i++) {\r\n            if (siblings[i] && siblings[i].type !== 'first') {\r\n                siblings[i].forEach(cb);\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = firstOffset; i < lastOffset; i++) {\r\n            if (siblings[i] && siblings[i].type !== 'first') {\r\n                cb(siblings[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function getContentFromSiblings(\r\n    model: ModelInterface,\r\n    start,\r\n    end\r\n): string {\r\n    const siblings = model.siblings();\r\n    if (isEmptyMathlist(siblings)) return '';\r\n    if (siblings[0].type === 'first' && start === 0) {\r\n        start = 1;\r\n    }\r\n    if (\r\n        model.parent().type === 'root' &&\r\n        start === 1 &&\r\n        end === siblings.length - 1\r\n    ) {\r\n        // It's the entire sibling list. Get the parent's latex\r\n        return model.parent().toLatex(false);\r\n    }\r\n    let result = '';\r\n    let i = start;\r\n    while (i <= end) {\r\n        result += siblings[i].toLatex(false);\r\n        i++;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * When changing the selection, if the former selection is an empty list,\r\n * insert a placeholder if necessary. For example, if in an empty numerator.\r\n */\r\nfunction adjustPlaceholder(model: ModelInterface): void {\r\n    // Should we insert a placeholder?\r\n    // Check if we're an empty list that is the child of a fraction\r\n    const siblings = model.siblings();\r\n    if (siblings && siblings.length <= 1) {\r\n        let placeholder;\r\n        const relation = model.relation();\r\n        if (relation === 'numer') {\r\n            placeholder = 'numerator';\r\n        } else if (relation === 'denom') {\r\n            placeholder = 'denominator';\r\n        } else if (model.parent().type === 'surd' && relation === 'body') {\r\n            // Surd (roots)\r\n            placeholder = 'radicand';\r\n        } else if (model.parent().type === 'overunder' && relation === 'body') {\r\n            placeholder = 'base';\r\n        } else if (relation === 'underscript' || relation === 'overscript') {\r\n            placeholder = 'annotation';\r\n        }\r\n        if (placeholder) {\r\n            // ◌ ⬚\r\n            // const placeholderAtom = [\r\n            //     new Atom('math', 'placeholder', '⬚', getAnchorStyle(model)),\r\n            // ];\r\n            // Array.prototype.splice.apply(\r\n            //     siblings,\r\n            //     [1, 0].concat(placeholderAtom)\r\n            // );\r\n            // @revisit\r\n            siblings.splice(\r\n                1,\r\n                0,\r\n                new Atom('math', 'placeholder', '⬚', getAnchorStyle(model))\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction wordBoundary(model: ModelInterface, path, dir): Path {\r\n    dir = dir < 0 ? -1 : +1;\r\n\r\n    const iter = new ModelPrivate();\r\n    iter.path = clonePath(path);\r\n    iter.root = model.root;\r\n\r\n    let i = 0;\r\n    while (\r\n        iter.sibling(i) &&\r\n        iter.sibling(i).mode === 'text' &&\r\n        LETTER_AND_DIGITS.test(iter.sibling(i).body as string)\r\n    ) {\r\n        i += dir;\r\n    }\r\n    if (!iter.sibling(i)) i -= dir;\r\n    iter.path[iter.path.length - 1].offset += i;\r\n    return iter.path;\r\n}\r\n\r\n/*\r\n * Calculates the offset of the \"next word\".\r\n * This is inspired by the behavior of text editors on macOS, namely:\r\n    blue   yellow\r\n      ^-\r\n         ^-------\r\n * That is:\r\n\r\n * (1) If starts with an alphanumerical character, find the first alphanumerical\r\n * character which is followed by a non-alphanumerical character\r\n *\r\n * The behavior regarding non-alphanumeric characters is less consistent.\r\n * Here's the behavior we use:\r\n *\r\n *   +=-()_:”     blue\r\n * ^---------\r\n *   +=-()_:”     blue\r\n *      ^---------\r\n *   +=-()_:”blue\r\n *      ^--------\r\n *\r\n * (2) If starts in whitespace, skip whitespace, then find first non-whitespace*\r\n *    followed by whitespace\r\n * (*) Pages actually uses the character class of the first non-whitespace\r\n * encountered.\r\n *\r\n * (3) If starts in a non-whitespace, non alphanumerical character, find the first\r\n *      whitespace\r\n *\r\n */\r\nfunction wordBoundaryOffset(\r\n    model: ModelInterface,\r\n    offset: number,\r\n    dir: number\r\n): number {\r\n    dir = dir < 0 ? -1 : +1;\r\n\r\n    const siblings = model.siblings();\r\n    if (!siblings[offset]) return offset;\r\n    if (siblings[offset].mode !== 'text') return offset;\r\n\r\n    let result;\r\n    if (LETTER_AND_DIGITS.test(siblings[offset].body as string)) {\r\n        // (1) We start with an alphanumerical character\r\n        let i = offset;\r\n        let match;\r\n        do {\r\n            match =\r\n                siblings[i].mode === 'text' &&\r\n                LETTER_AND_DIGITS.test(siblings[i].body as string);\r\n            i += dir;\r\n        } while (siblings[i] && match);\r\n        result = siblings[i] ? i - 2 * dir : i - dir;\r\n    } else if (/\\s/.test(siblings[offset].body as string)) {\r\n        // (2) We start with whitespace\r\n\r\n        // Skip whitespace\r\n        let i = offset;\r\n        while (\r\n            siblings[i] &&\r\n            siblings[i].mode === 'text' &&\r\n            /\\s/.test(siblings[i].body as string)\r\n        ) {\r\n            i += dir;\r\n        }\r\n        if (!siblings[i]) {\r\n            // We've reached the end\r\n            result = i - dir;\r\n        } else {\r\n            let match = true;\r\n            do {\r\n                match =\r\n                    siblings[i].mode === 'text' &&\r\n                    !/\\s/.test(siblings[i].body as string);\r\n                i += dir;\r\n            } while (siblings[i] && match);\r\n            result = siblings[i] ? i - 2 * dir : i - dir;\r\n        }\r\n    } else {\r\n        // (3)\r\n        let i = offset;\r\n        // Skip non-whitespace\r\n        while (\r\n            siblings[i] &&\r\n            siblings[i].mode === 'text' &&\r\n            !/\\s/.test(siblings[i].body as string)\r\n        ) {\r\n            i += dir;\r\n        }\r\n        result = siblings[i] ? i : i - dir;\r\n        let match = true;\r\n        while (siblings[i] && match) {\r\n            match =\r\n                siblings[i].mode === 'text' &&\r\n                /\\s/.test(siblings[i].body as string);\r\n            if (match) result = i;\r\n            i += dir;\r\n        }\r\n        result = siblings[i] ? i - 2 * dir : i - dir;\r\n    }\r\n\r\n    return result - (dir > 0 ? 0 : 1);\r\n}\r\n\r\n/**\r\n * Iterate over each atom in the expression, starting with the focus.\r\n *\r\n * Return an array of all the paths for which the callback predicate\r\n * returned true.\r\n *\r\n * @param {function} cb - A predicate being passed a path and the atom at this\r\n * path. Return true to include the designated atom in the result.\r\n * @param {number} dir - `+1` to iterate forward, `-1` to iterate backward.\r\n * @return The paths (as a string) for all the atoms which the predicate is true\r\n */\r\nexport function filter(model: ModelInterface, cb, dir: -1 | 1 = +1): string[] {\r\n    dir = dir < 0 ? -1 : +1;\r\n\r\n    const result = [];\r\n\r\n    const iter = new ModelPrivate();\r\n    iter.path = clonePath(model.path);\r\n    iter.extent = model.extent;\r\n    iter.root = model.root;\r\n\r\n    if (dir >= 0) {\r\n        collapseSelectionForward(iter);\r\n    } else {\r\n        collapseSelectionBackward(iter);\r\n        move(iter, 1);\r\n    }\r\n    const initialAnchor = getAnchor(iter);\r\n    do {\r\n        if (cb.bind(iter)(iter.path, getAnchor(iter))) {\r\n            result.push(iter.toString());\r\n        }\r\n        if (dir >= 0) {\r\n            next(iter, { iterateAll: true });\r\n        } else {\r\n            previous(iter, { iterateAll: true });\r\n        }\r\n    } while (initialAnchor !== getAnchor(iter));\r\n\r\n    return result;\r\n}\r\n","import { InlineShortcutDefinition } from '../public/shortcuts';\r\n// export { InlineShortcutDefinition };\r\n\r\n/**\r\n * These shortcut strings are replaced with the corresponding LaTeX expression\r\n * without requiring an escape sequence or command.\r\n */\r\nexport const INLINE_SHORTCUTS: {\r\n    [shorcut: string]: InlineShortcutDefinition;\r\n} = {\r\n    // Primes\r\n    \"''\": { mode: 'math', value: '^{\\\\doubleprime}' },\r\n\r\n    // Greek letters\r\n    alpha: '\\\\alpha',\r\n    delta: '\\\\delta',\r\n    Delta: '\\\\Delta',\r\n    pi: { mode: 'math', value: '\\\\pi' },\r\n    'pi ': { mode: 'text', value: '\\\\pi ' },\r\n    Pi: { mode: 'math', value: '\\\\Pi' },\r\n    theta: '\\\\theta',\r\n    Theta: '\\\\Theta',\r\n\r\n    // Letter-like\r\n    ii: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\imaginaryI',\r\n    },\r\n    jj: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\imaginaryJ',\r\n    },\r\n    ee: {\r\n        mode: 'math',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\exponentialE',\r\n    },\r\n\r\n    nabla: { mode: 'math', value: '\\\\nabla' },\r\n    grad: { mode: 'math', value: '\\\\nabla' },\r\n    del: { mode: 'math', value: '\\\\partial' },\r\n\r\n    '\\u221e': '\\\\infty', // @TODO: doesn't work\r\n    // '&infin;': '\\\\infty',\r\n    // '&#8734;': '\\\\infty',\r\n    oo: {\r\n        mode: 'math',\r\n        after:\r\n            'nothing+digit+frac+surd+binop+relop+punct+array+openfence+closefence+space',\r\n        value: '\\\\infty',\r\n    },\r\n\r\n    // Big operators\r\n    '∑': { mode: 'math', value: '\\\\sum' },\r\n    sum: { mode: 'math', value: '\\\\sum_{#?}^{#?}' },\r\n    prod: { mode: 'math', value: '\\\\prod_{#?}^{#?}' },\r\n    sqrt: { mode: 'math', value: '\\\\sqrt' },\r\n    // '∫':                    '\\\\int',             // There's a alt-B command for this\r\n    '∆': { mode: 'math', value: '\\\\differentialD' }, // @TODO: is \\\\diffD most common?\r\n    '∂': { mode: 'math', value: '\\\\differentialD' },\r\n\r\n    // Functions\r\n    sin: { mode: 'math', value: '\\\\sin' },\r\n    cos: { mode: 'math', value: '\\\\cos' },\r\n    tan: { mode: 'math', value: '\\\\tan' },\r\n    tanh: { mode: 'math', value: '\\\\tanh' },\r\n    log: { mode: 'math', value: '\\\\log' },\r\n    ln: { mode: 'math', value: '\\\\ln' },\r\n    exp: { mode: 'math', value: '\\\\exp' },\r\n    lim: { mode: 'math', value: '\\\\lim_{#?}' },\r\n\r\n    // Differentials\r\n    // According to ISO31/XI (ISO 80000-2), differentials should be upright\r\n    dx: '\\\\differentialD x',\r\n    dy: '\\\\differentialD y',\r\n    dt: '\\\\differentialD t',\r\n\r\n    // Logic\r\n    AA: { mode: 'math', value: '\\\\forall' },\r\n    EE: { mode: 'math', value: '\\\\exists' },\r\n    '!EE': { mode: 'math', value: '\\\\nexists' },\r\n    '&&': { mode: 'math', value: '\\\\land' },\r\n    // The shortcut for the greek letter \"xi\" is interfering with \"x in\"\r\n    xin: {\r\n        mode: 'math',\r\n        after: 'nothing+text+relop+punct+openfence+space',\r\n        value: 'x \\\\in',\r\n    },\r\n    in: {\r\n        mode: 'math',\r\n        after: 'nothing+letter+closefence',\r\n        value: '\\\\in',\r\n    },\r\n    '!in': { mode: 'math', value: '\\\\notin' },\r\n\r\n    // Sets\r\n    NN: '\\\\N', // Natural numbers\r\n    ZZ: '\\\\Z', // Integers\r\n    QQ: '\\\\Q', // Rational numbers\r\n    RR: '\\\\R', // Real numbers\r\n    CC: '\\\\C', // Complex numbers\r\n    PP: '\\\\P', // Prime numbers\r\n\r\n    // Operators\r\n    xx: '\\\\times',\r\n    '+-': '\\\\pm',\r\n\r\n    // Relational operators\r\n    '!=': '\\\\ne',\r\n    '>=': '\\\\ge',\r\n    '<=': '\\\\le',\r\n    '<<': '\\\\ll',\r\n    '>>': '\\\\gg',\r\n    '~~': '\\\\approx',\r\n\r\n    // More operators\r\n    '≈': '\\\\approx',\r\n    '?=': '\\\\questeq',\r\n    '÷': '\\\\div',\r\n    '¬': '\\\\neg',\r\n    ':=': '\\\\coloneq',\r\n    '::': '\\\\Colon',\r\n\r\n    // Fences\r\n    '(:': '\\\\langle',\r\n    ':)': '\\\\rangle',\r\n\r\n    // More Greek letters\r\n    beta: '\\\\beta',\r\n    chi: '\\\\chi',\r\n    epsilon: '\\\\epsilon',\r\n    varepsilon: '\\\\varepsilon',\r\n    eta: {\r\n        mode: 'math',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\eta',\r\n    },\r\n    'eta ': {\r\n        mode: 'text',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\eta ',\r\n    },\r\n    gamma: '\\\\gamma',\r\n    Gamma: '\\\\Gamma',\r\n    iota: '\\\\iota',\r\n    kappa: '\\\\kappa',\r\n    lambda: '\\\\lambda',\r\n    Lambda: '\\\\Lambda',\r\n    mu: {\r\n        mode: 'math',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\mu',\r\n    },\r\n    'mu ': {\r\n        mode: 'text',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\mu ',\r\n    },\r\n    nu: {\r\n        mode: 'math',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\nu',\r\n    },\r\n    'nu ': {\r\n        mode: 'text',\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\nu ',\r\n    },\r\n    µ: '\\\\mu', // @TODO: or micro?\r\n    phi: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\phi',\r\n    },\r\n    Phi: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\Phi',\r\n    },\r\n    varphi: '\\\\varphi',\r\n    psi: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\psi',\r\n    },\r\n    Psi: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\Psi',\r\n    },\r\n    rho: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\rho',\r\n    },\r\n    sigma: '\\\\sigma',\r\n    Sigma: '\\\\Sigma',\r\n    tau: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\tau',\r\n    },\r\n    vartheta: '\\\\vartheta',\r\n    upsilon: '\\\\upsilon',\r\n    xi: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\xi',\r\n    },\r\n    Xi: {\r\n        after:\r\n            'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\Xi',\r\n    },\r\n    zeta: '\\\\zeta',\r\n    omega: '\\\\omega',\r\n    Omega: '\\\\Omega',\r\n    Ω: '\\\\omega', // @TODO: or ohm?\r\n\r\n    // More Logic\r\n    forall: '\\\\forall',\r\n    exists: {\r\n        mode: 'math',\r\n        value: '\\\\exists',\r\n    },\r\n    '!exists': {\r\n        mode: 'math',\r\n        value: '\\\\nexists',\r\n    },\r\n    ':.': {\r\n        mode: 'math',\r\n        value: '\\\\therefore',\r\n    },\r\n\r\n    // MORE FUNCTIONS\r\n    // 'arg': '\\\\arg',\r\n    liminf: '\\\\operatorname*{lim~inf}_{#?}',\r\n    limsup: '\\\\operatorname*{lim~sup}_{#?}',\r\n    argmin: '\\\\operatorname*{arg~min}_{#?}',\r\n    argmax: '\\\\operatorname*{arg~max}_{#?}',\r\n    det: '\\\\det',\r\n    mod: {\r\n        mode: 'math',\r\n        value: '\\\\mod',\r\n    },\r\n    max: {\r\n        mode: 'math',\r\n        value: '\\\\max',\r\n    },\r\n    min: {\r\n        mode: 'math',\r\n        value: '\\\\min',\r\n    },\r\n    erf: '\\\\operatorname{erf}',\r\n    erfc: '\\\\operatorname{erfc}',\r\n    bessel: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{bessel}',\r\n    },\r\n    mean: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{mean}',\r\n    },\r\n    median: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{median}',\r\n    },\r\n    fft: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{fft}',\r\n    },\r\n    lcm: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{lcm}',\r\n    },\r\n    gcd: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{gcd}',\r\n    },\r\n    randomReal: '\\\\operatorname{randomReal}',\r\n    randomInteger: '\\\\operatorname{randomInteger}',\r\n    Re: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{Re}',\r\n    },\r\n    Im: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{Im}',\r\n    },\r\n\r\n    // UNITS\r\n    mm: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{mm}', // millimeter\r\n    },\r\n    cm: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{cm}', // centimeter\r\n    },\r\n    km: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{km}', // kilometer\r\n    },\r\n    kg: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{kg}', // kilogram\r\n    },\r\n\r\n    // '||':                   '\\\\lor',\r\n    '...': '\\\\ldots', // In general, use \\ldots\r\n    '+...': '+\\\\cdots', // ... but use \\cdots after + ...\r\n    '-...': '-\\\\cdots', // ... - and ...\r\n    '->...': '\\\\to\\\\cdots', // ->\r\n\r\n    '->': '\\\\to',\r\n    '|->': '\\\\mapsto',\r\n    '-->': '\\\\longrightarrow',\r\n    //    '<-':                   '\\\\leftarrow',\r\n    '<--': '\\\\longleftarrow',\r\n    '=>': '\\\\Rightarrow',\r\n    '==>': '\\\\Longrightarrow',\r\n    // '<=': '\\\\Leftarrow',     // CONFLICTS WITH LESS THAN OR EQUAL\r\n    '<=>': '\\\\Leftrightarrow',\r\n    '<->': '\\\\leftrightarrow',\r\n\r\n    '(.)': '\\\\odot',\r\n    '(+)': '\\\\oplus',\r\n    '(/)': '\\\\oslash',\r\n    '(*)': '\\\\otimes',\r\n    '(-)': '\\\\ominus',\r\n    // '(-)':                  '\\\\circleddash',\r\n\r\n    '||': '\\\\Vert',\r\n    '{': '\\\\{',\r\n    '}': '\\\\}',\r\n\r\n    '*': '\\\\cdot',\r\n\r\n    /*\r\n    //\r\n    // ASCIIIMath\r\n    //\r\n    // Binary operation symbols\r\n    '**':                   '\\\\ast',\r\n    '***':                  '\\\\star',\r\n    '//':                   '\\\\slash',\r\n    '\\\\\\\\':                 '\\\\backslash',\r\n    'setminus':             '\\\\backslash',\r\n    '|><':                  '\\\\ltimes',\r\n    '><|':                  '\\\\rtimes',\r\n    '|><|':                 '\\\\bowtie',\r\n    '-:':                   '\\\\div',\r\n    'divide':               '\\\\div',\r\n    '@':                    '\\\\circ',\r\n    'o+':                   '\\\\oplus',\r\n    'ox':                   '\\\\otimes',\r\n    'o.':                   '\\\\odot',\r\n    '^^':                   '\\\\wedge',\r\n    '^^^':                  '\\\\bigwedge',\r\n    'vv':                   '\\\\vee',\r\n    'vvv':                  '\\\\bigvee',\r\n    'nn':                   '\\\\cap',\r\n    'nnn':                  '\\\\bigcap',\r\n    'uu':                   '\\\\cup',\r\n    'uuu':                  '\\\\bigcup',\r\n\r\n    // Binary relation symbols\r\n    '-=':                   '\\\\equiv',\r\n    '~=':                   '\\\\cong',\r\n    'lt':                   '<',\r\n    'lt=':                  '\\\\leq',\r\n    'gt':                   '>',\r\n    'gt=':                  '\\\\geq',\r\n    '-<':                   '\\\\prec',\r\n    '-lt':                  '\\\\prec',\r\n    '-<=':                  '\\\\preceq',\r\n    // '>-':                   '\\\\succ',\r\n    '>-=':                  '\\\\succeq',\r\n    'prop':                 '\\\\propto',\r\n    'diamond':              '\\\\diamond',\r\n    'square':               '\\\\square',\r\n    'iff':                  '\\\\iff',\r\n\r\n    'sub':                  '\\\\subset',\r\n    'sup':                  '\\\\supset',\r\n    'sube':                 '\\\\subseteq',\r\n    'supe':                 '\\\\supseteq',\r\n    'uarr':                 '\\\\uparrow',\r\n    'darr':                 '\\\\downarrow',\r\n    'rarr':                 '\\\\rightarrow',\r\n    'rArr':                 '\\\\Rightarrow',\r\n    'larr':                 '\\\\leftarrow',\r\n    'lArr':                 '\\\\Leftarrow',\r\n    'harr':                 '\\\\leftrightarrow',\r\n    'hArr':                 '\\\\Leftrightarrow',\r\n    'aleph':                '\\\\aleph',\r\n\r\n    // Logic\r\n    'and':                  '\\\\land',\r\n    'or':                   '\\\\lor',\r\n    'not':                  '\\\\neg',\r\n    '_|_':                   '\\\\bot',\r\n    'TT':                   '\\\\top',\r\n    '|--':                  '\\\\vdash',\r\n    '|==':                  '\\\\models',\r\n    \r\n    // Other functions\r\n    '|__':                  '\\\\lfloor',\r\n    '__|':                  '\\\\rfloor',\r\n\r\n    '|~':                   '\\\\lceil',\r\n    '~|':                   '\\\\rceil',\r\n\r\n    // Arrows\r\n    '>->':                   '\\\\rightarrowtail',\r\n    '->>':                   '\\\\twoheadrightarrow',\r\n    '>->>':                  '\\\\twoheadrightarrowtail'\r\n*/\r\n};\r\n","/**\r\n * The index of this array is a keystroke combination as returned by the key\r\n * field of a JavaScript keyboard event as documented here:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\n * except for:\r\n * - `Escape`         → `Esc`\r\n * - `LeftArrow`...   → `Left/Right/Up/Down`\r\n * - `Delete`         → `Del`\r\n * - `Escape`         → `Esc`\r\n * - ' '              → `Spacebar`\r\n *\r\n * The modifiers are specified before the main key, in the following order:\r\n * 1. `Ctrl`\r\n * 2. `Meta`: Command key on Mac OS. On Windows this is the Windows key,\r\n * but the system intercepts those key combinations so they are never received\r\n * 3. `Alt`: Option key on Mac OS\r\n * 4. `Shift`\r\n *\r\n * The keys can be preceded by a context to restrict when the shortcut is\r\n * applicable. For example, \"math:Ctrl-KeyA\" will restrict this shortcut\r\n * to only apply in the \"math\" context (parseMode). Other valid context include\r\n * \"text\" and \"command\".\r\n *\r\n * The value of the entries represent the command to perform.\r\n * This can be either a single selector, or an array of a selector followed\r\n * by its arguments.\r\n * Selectors uses the following naming conventions:\r\n * - a 'char' is a math atom (a letter, digit, symbol or compound atom)\r\n * - a 'word' is a sequence of math atoms of the same type\r\n * - a 'group' is a sequence of sibling atoms, for example a numerator or\r\n * a superscript\r\n * - the 'Mathfield' is the entire expression being edited\r\n * - a 'placeholder' is either an actual placeholder atom or an empty child\r\n * list, for example an empty numerator\r\n * - 'move' changes the position of the insertion point (and collapses the\r\n * selection range if necessary)\r\n * - 'extend' keeps the anchor of the  selection, but moves the focus (extends,\r\n * or shrinks, the range of selected items)\r\n *\r\n */\r\nexport const KEYBOARD_SHORTCUTS = {\r\n    Left: 'moveToPreviousChar',\r\n    Right: 'moveToNextChar',\r\n    Up: 'moveUp',\r\n    Down: 'moveDown',\r\n\r\n    'Shift-Left': 'extendToPreviousChar',\r\n    'Shift-Right': 'extendToNextChar',\r\n    'Shift-Up': 'extendUp',\r\n    'Shift-Down': 'extendDown',\r\n\r\n    Backspace: 'deletePreviousChar',\r\n    'Alt-Del': 'deletePreviousChar',\r\n\r\n    Del: 'deleteNextChar',\r\n    'Alt-Backspace': 'deleteNextChar',\r\n\r\n    'Alt-Left': 'moveToPreviousWord',\r\n    'Alt-Right': 'moveToNextWord',\r\n\r\n    'Alt-Shift-Left': 'extendToPreviousWord',\r\n    'Alt-Shift-Right': 'extendToNextWord',\r\n\r\n    'Ctrl-Left': 'moveToGroupStart',\r\n    'Ctrl-Right': 'moveToGroupEnd',\r\n\r\n    'Ctrl-Shift-Left': 'extendToGroupStart',\r\n    'Ctrl-Shift-Right': 'extendToGroupEnd',\r\n\r\n    'math:Spacebar': 'moveAfterParent',\r\n    'math:Shift-Spacebar': 'moveBeforeParent',\r\n\r\n    Home: 'moveToMathFieldStart',\r\n    'mac:Meta-Left': 'moveToMathFieldStart',\r\n    'Shift-Home': 'extendToMathFieldStart',\r\n    'mac:Meta-Shift-Left': 'extendToMathFieldStart',\r\n\r\n    End: 'moveToMathFieldEnd',\r\n    'mac:Meta-Right': 'moveToMathFieldEnd',\r\n    'Shift-End': 'extendToMathFieldEnd',\r\n    'mac:Meta-Shift-Right': 'extendToMathFieldEnd',\r\n\r\n    PageUp: 'moveToGroupStart',\r\n    PageDown: 'moveToGroupEnd',\r\n\r\n    'math:Tab': 'moveToNextPlaceholder',\r\n    'math:F8': 'moveToNextPlaceholder', // Visual Studio\r\n    'math:Shift-Tab': 'moveToPreviousPlaceholder',\r\n    'math:Shift-F8': 'moveToPreviousPlaceholder', // Visual Studio\r\n\r\n    'text:Tab': 'moveToNextPlaceholder',\r\n    'text:F8': 'moveToNextPlaceholder', // Visual Studio\r\n    'text:Shift-Tab': 'moveToPreviousPlaceholder',\r\n    'text:Shift-F8': 'moveToPreviousPlaceholder', // Visual Studio\r\n\r\n    'math:Esc': ['switch-mode', 'command'],\r\n    'math:Backslash': ['switch-mode', 'command'],\r\n\r\n    'math:Alt-Equal': ['apply-style', { mode: 'text' }],\r\n    'text:Alt-Equal': ['apply-style', { mode: 'math' }],\r\n\r\n    'command:Esc': ['complete', { discard: true }], // discard the command, insert nothing\r\n    'command:Tab': ['complete', { acceptSuggestion: true }], // complete the suggestion\r\n    'command:Return': 'complete',\r\n    'command:Enter': 'complete',\r\n    'command:Shift-Esc': ['complete', { discard: true }], // Some keyboards can't generate\r\n    // this combination, for example in 60% keyboards it is mapped to ~\r\n    'command:Down': 'nextSuggestion',\r\n    'ios:command:Tab': 'nextSuggestion',\r\n    'command:Up': 'previousSuggestion',\r\n\r\n    '!mac:Ctrl-KeyA': 'selectAll',\r\n    'mac:Meta-KeyA': 'selectAll',\r\n\r\n    // Rare keys on some extended keyboards\r\n    Cut: 'cut',\r\n    Copy: 'copy',\r\n    Paste: 'paste',\r\n    Clear: 'delete',\r\n\r\n    '!mac:Ctrl-KeyZ': 'undo',\r\n    'mac:Meta-KeyZ': 'undo',\r\n    Undo: 'undo',\r\n    '!mac:Ctrl-KeyY': 'redo', // ARIA recommendation\r\n    'mac:Meta-Shift-KeyY': 'redo',\r\n    '!mac:Ctrl-Shift-KeyZ': 'redo',\r\n    'mac:Meta-Shift-KeyZ': 'redo',\r\n    Redo: 'redo',\r\n\r\n    EraseEof: 'deleteToGroupEnd',\r\n\r\n    // EMACS/MACOS BINDINGS\r\n    'mac:Ctrl-KeyB': 'moveToPreviousChar',\r\n    'mac:Ctrl-KeyF': 'moveToNextChar',\r\n    'mac:Ctrl-KeyP': 'moveUp',\r\n    'mac:Ctrl-KeyN': 'moveDown',\r\n    'mac:Ctrl-KeyA': 'moveToMathFieldStart',\r\n    'mac:Ctrl-KeyE': 'moveToMathFieldEnd',\r\n\r\n    'mac:Ctrl-Shift-KeyB': 'extendToPreviousChar',\r\n    'mac:Ctrl-Shift-KeyF': 'extendToNextChar',\r\n    'mac:Ctrl-Shift-KeyP': 'extendUp',\r\n    'mac:Ctrl-Shift-KeyN': 'extendDown',\r\n    'mac:Ctrl-Shift-KeyA': 'extendToMathFieldStart',\r\n    'mac:Ctrl-Shift-KeyE': 'extendToMathFieldEnd',\r\n    'mac:Ctrl-Alt-KeyB': 'moveToPreviousWord',\r\n    'mac:Ctrl-Alt-KeyF': 'moveToNextWord',\r\n    'mac:Ctrl-Shift-Alt-KeyB': 'extendToPreviousWord',\r\n    'mac:Ctrl-Shift-Alt-KeyF': 'extendToNextWord',\r\n\r\n    'mac:Ctrl-KeyH': 'deletePreviousChar',\r\n    'mac:Ctrl-KeyD': 'deleteNextChar',\r\n    'mac:Ctrl-KeyL': 'scrollIntoView',\r\n    'mac:Ctrl-KeyT': 'transpose',\r\n\r\n    'math:Shift-Quote': ['switch-mode', 'text', '', '“'],\r\n    'text:Shift-Quote': ['switch-mode', 'math', '”', ''],\r\n\r\n    // WOLFRAM MATHEMATICA BINDINGS\r\n    'math:Ctrl-Digit2': ['insert', '$$\\\\sqrt{#0}$$'],\r\n    'math:Ctrl-Digit5': 'moveToOpposite',\r\n    'math:Ctrl-Digit6': 'moveToSuperscript',\r\n    'math:Ctrl-Minus': 'moveToSubscript',\r\n    'math:Alt-BracketLeft': ['insert', '$$\\\\left\\\\lbrack #0 \\\\right\\\\rbrack$$'],\r\n    'math:Alt-Shift-BracketLeft': [\r\n        'insert',\r\n        '$$\\\\left\\\\lbrace #0 \\\\right\\\\rbrace$$',\r\n    ],\r\n    'math:Return': 'addRowAfter',\r\n    'math:Enter': 'addRowAfter',\r\n    'math:Ctrl-Comma': 'addColumnAfter',\r\n    // Excel shortcuts:\r\n    // Shift-space: select entire row, ctrl+space: select an entire column\r\n    // ctrl+shift++ or ctrl+numpad+\r\n    // ctrl+- to delete a row or columns\r\n\r\n    // MATHLIVE BINDINGS\r\n    'math:Alt-KeyQ': ['insert', '$$\\\\theta$$'],\r\n    'math:Alt-KeyP': ['insert', '$$\\\\pi$$'],\r\n    'math:Alt-KeyV': ['insert', '$$\\\\sqrt{#0}$$'],\r\n    'math:Alt-KeyW': ['insert', '$$\\\\sum_{i=#?}^{#?}$$'],\r\n    'math:Alt-KeyB': ['insert', '$$\\\\int_{#?}^{#?}$$'],\r\n    'math:Alt-KeyU': ['insert', '$$\\\\cup$$'],\r\n    'math:Alt-KeyN': ['insert', '$$\\\\cap$$'],\r\n    'math:Alt-KeyO': ['insert', '$$\\\\emptyset$$'],\r\n    'math:Alt-KeyD': ['insert', '$$\\\\differentialD$$'],\r\n    'math:Alt-Shift-KeyO': ['insert', '$$\\\\varnothing$$'],\r\n    'math:Alt-Shift-KeyD': ['insert', '$$\\\\partial$$'],\r\n    'math:Alt-Shift-KeyP': ['insert', '$$\\\\prod_{i=#?}^{#?}$$'],\r\n    'math:Alt-Shift-KeyU': ['insert', '$$\\\\bigcup$$'],\r\n    'math:Alt-Shift-KeyN': ['insert', '$$\\\\bigcap$$'],\r\n    'math:Alt-Shift-KeyA': ['insert', '$$\\\\forall$$'],\r\n    'math:Alt-Shift-KeyE': ['insert', '$$\\\\exists$$'],\r\n    'math:Alt-Digit5': ['insert', '$\\\\infty$$'], // \"%\" key\r\n    'math:Alt-Digit6': ['insert', '$$\\\\wedge$$'], // \"^\" key\r\n    'math:Alt-Shift-Digit6': ['insert', '$$\\\\vee$$'], // \"^\" key\r\n    'math:Alt-Digit9': ['insert', '('], // \"(\" key, override smartFence\r\n    'math:Alt-Digit0': ['insert', ')'], // \")\" key, override smartFence\r\n    'math:Alt-Shift-Backslash': ['insert', '|'], // \"|\" key, override smartFence\r\n    'math:Alt-Backslash': ['insert', '$$\\\\backslash$$'], // \"|\" key, override command mode\r\n    'math:Slash': ['insert', '$$\\\\frac{#@}{#?}$$'],\r\n    'math:Alt-Slash': ['insert', '$$\\\\frac{#?}{#@}$$'],\r\n    'math:NumpadDivide': ['insert', '$$\\\\frac{#@}{#?}$$'],\r\n    'math:Alt-NumpadDivide': ['insert', '\\\\frac{#?}{#@}'],\r\n    'math:Shift-Backquote': ['insert', '$$\\\\~$$'],\r\n    'math:Alt-Shift-Slash': ['insert', '$$\\\\/$$'],\r\n\r\n    // Accessibility\r\n    'Alt-Shift-KeyK': 'toggleKeystrokeCaption',\r\n    'Alt-Space': 'toggleVirtualKeyboard',\r\n\r\n    // Note: On Mac OS (as of 10.12), there is a bug/behavior that causes\r\n    // a beep to be generated with certain command+control key combinations.\r\n    // The workaround is to create a default binding file to silence them.\r\n    // In ~/Library/KeyBindings/DefaultKeyBinding.dict add these entries:\r\n    /*\r\n {\r\n    \"^@\\UF701\" = \"noop:\";\r\n    \"^@\\UF702\" = \"noop:\";\r\n    \"^@\\UF703\" = \"noop:\";\r\n}\r\n*/\r\n    'mac:Ctrl-Meta-Up': ['speak', 'parent', { withHighlighting: false }],\r\n    '!mac:Ctrl-Alt-Up': ['speak', 'parent', { withHighlighting: false }],\r\n    'mac:Ctrl-Meta-Down': ['speak', 'all', { withHighlighting: false }],\r\n    '!mac:Ctrl-Alt-Down': ['speak', 'all', { withHighlighting: false }],\r\n    'mac:Ctrl-Meta-Left': ['speak', 'left', { withHighlighting: false }],\r\n    '!mac:Ctrl-Alt-Left': ['speak', 'left', { withHighlighting: false }],\r\n    'mac:Ctrl-Meta-Right': ['speak', 'right', { withHighlighting: false }],\r\n    '!mac:Ctrl-Alt-Right': ['speak', 'right', { withHighlighting: false }],\r\n    '!mac:Ctrl-Alt-Period': ['speak', 'selection', { withHighlighting: false }],\r\n    'mac:Ctrl-Meta-Period': ['speak', 'selection', { withHighlighting: false }],\r\n\r\n    'mac:Ctrl-Meta-Shift-Up': ['speak', 'parent', { withHighlighting: true }],\r\n    '!mac:Ctrl-Alt-Shift-Up': ['speak', 'parent', { withHighlighting: true }],\r\n    'mac:Ctrl-Meta-Shift-Down': ['speak', 'all', { withHighlighting: true }],\r\n    '!mac:Ctrl-Alt-Shift-Down': ['speak', 'all', { withHighlighting: true }],\r\n    'mac:Ctrl-Meta-Shift-Left': ['speak', 'left', { withHighlighting: true }],\r\n    '!mac:Ctrl-Alt-Shift-Left': ['speak', 'left', { withHighlighting: true }],\r\n    'mac:Ctrl-Meta-Shift-Right': ['speak', 'right', { withHighlighting: true }],\r\n    '!mac:Ctrl-Alt-Shift-Right': ['speak', 'right', { withHighlighting: true }],\r\n    '!mac:Ctrl-Alt-Shift-Period': [\r\n        'speak',\r\n        'selection',\r\n        { withHighlighting: true },\r\n    ],\r\n    'mac:Ctrl-Meta-Shift-Period': [\r\n        'speak',\r\n        'selection',\r\n        { withHighlighting: true },\r\n    ],\r\n    // '!mac:Ctrl-Alt-Shift-Home': ['speak', 'start', {withHighlighting: true}],\r\n    // 'mac:Ctrl-Alt-Shift-Home':  ['speak', 'start', {withHighlighting: true}],\r\n    // '!mac:Ctrl-Alt-Shift-End':  ['speak', 'end', {withHighlighting: true}],\r\n    // 'mac:Ctrl-Alt-Shift-End':   ['speak', 'end', {withHighlighting: true}],\r\n};\r\n\r\n/**\r\n * Most commands can be associated to their keyboard shortcuts from the\r\n * KEYBOARD_SHORTCUTS table above, for example 'speakSelection' -> 'Ctrl-KeyR'\r\n * However, those that contain complex commands are more ambiguous.\r\n * For example, '\\sqrt' -> 'math:Alt-KeyV'. This table provides the reverse\r\n * mapping for those more complex commands. It is used when displaying\r\n * keyboard shortcuts for specific commands in the popover.\r\n */\r\nexport const REVERSE_KEYBOARD_SHORTCUTS = {\r\n    '\\\\theta': 'Alt-KeyQ',\r\n    '\\\\sqrt': ['Alt-KeyV', 'Ctrl-Digit2'],\r\n    '\\\\pi': 'Alt-KeyP',\r\n    '\\\\prod': 'Alt-Shift-KeyP',\r\n    '\\\\sum': 'Alt-KeyW',\r\n    '\\\\int': 'Alt-KeyB',\r\n    '\\\\cup': 'Alt-KeyU',\r\n    '\\\\cap': 'Alt-KeyN',\r\n    '\\\\bigcup': 'Alt-Shift-KeyU',\r\n    '\\\\bigcap': 'Alt-Shift-KeyN',\r\n    '\\\\forall': 'Alt-Shift-KeyA',\r\n    '\\\\exists': 'Alt-Shift-KeyE',\r\n    '\\\\infty': 'Alt-Digit5',\r\n    '\\\\wedge': 'Alt-Digit5',\r\n    '\\\\vee': 'Alt-Shift-Digit6',\r\n    '\\\\differentialD': 'Alt-keyD',\r\n    '\\\\partial': 'Alt-Shift-KeyD',\r\n    '\\\\frac': 'Slash',\r\n    '\\\\emptyset': 'Alt-KeyO',\r\n    '\\\\varnothing': 'Alt-Shift-KeyO',\r\n    '\\\\~': '~',\r\n};\r\n","import { isArray } from '../common/types';\r\n\r\nimport { LETTER } from '../core/definitions';\r\nimport { MathfieldConfigPrivate, InlineShortcutDefinition } from './config';\r\nimport { ParseMode } from '../public/core';\r\nimport { Atom } from '../core/atom';\r\nimport { INLINE_SHORTCUTS } from './shortcuts-definitions-inline';\r\nimport {\r\n    KEYBOARD_SHORTCUTS,\r\n    REVERSE_KEYBOARD_SHORTCUTS,\r\n} from './shortcuts-definitions-keyboard';\r\nexport { InlineShortcutDefinition };\r\n\r\nexport { KEYBOARD_SHORTCUTS } from './shortcuts-definitions-keyboard';\r\nexport { INLINE_SHORTCUTS } from './shortcuts-definitions-inline';\r\n\r\n/**\r\n * Return an array of potential shortcuts\r\n */\r\nexport function getInlineShortcutsStartingWith(\r\n    s: string,\r\n    config: MathfieldConfigPrivate\r\n): string[] {\r\n    const result = [];\r\n\r\n    const skipDefaultShortcuts = config.overrideDefaultInlineShortcuts;\r\n\r\n    for (let i = 0; i <= s.length - 1; i++) {\r\n        const s2 = s.substring(i);\r\n        if (!skipDefaultShortcuts) {\r\n            Object.keys(INLINE_SHORTCUTS).forEach((key) => {\r\n                if (key.startsWith(s2) && !result.includes(key)) {\r\n                    result.push(key);\r\n                }\r\n            });\r\n        }\r\n\r\n        const customInlineShortcuts = config?.inlineShortcuts\r\n            ? config.inlineShortcuts\r\n            : null;\r\n        if (customInlineShortcuts) {\r\n            Object.keys(customInlineShortcuts).forEach((key) => {\r\n                if (key.startsWith(s2)) {\r\n                    result.push(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param siblings atoms preceding this potential shortcut\r\n */\r\nfunction validateShortcut(\r\n    mode: ParseMode,\r\n    siblings: Atom[],\r\n    shortcut: InlineShortcutDefinition\r\n): string {\r\n    if (!shortcut) return '';\r\n\r\n    // If it's a simple shortcut (no conditional), it's always valid\r\n    if (typeof shortcut === 'string') return shortcut;\r\n\r\n    if (shortcut.mode !== mode) {\r\n        return '';\r\n    }\r\n\r\n    // If we have no context, we assume all the shortcuts are valid\r\n    if (!siblings) return shortcut.value;\r\n\r\n    let nothing = false;\r\n    let letter = false;\r\n    let digit = false;\r\n    let isFunction = false;\r\n    let frac = false;\r\n    let surd = false;\r\n    let binop = false;\r\n    let relop = false;\r\n    let punct = false;\r\n    let array = false;\r\n    let openfence = false;\r\n    let closefence = false;\r\n    let text = false;\r\n    let space = false;\r\n    let sibling = siblings[siblings.length - 1];\r\n    let index = siblings.length - 1;\r\n    while (sibling && /msubsup|placeholder/.test(sibling.type)) {\r\n        index -= 1;\r\n        sibling = siblings[index];\r\n    }\r\n    nothing = !sibling || sibling.type === 'first'; // start of a group\r\n    if (sibling) {\r\n        text = sibling.mode === 'text';\r\n        letter =\r\n            !text &&\r\n            sibling.type === 'mord' &&\r\n            LETTER.test(sibling.body as string);\r\n        digit =\r\n            !text &&\r\n            sibling.type === 'mord' &&\r\n            /[0-9]+$/.test(sibling.body as string);\r\n        isFunction = !text && sibling.isFunction;\r\n        frac = sibling.type === 'genfrac';\r\n        surd = sibling.type === 'surd';\r\n        binop = sibling.type === 'mbin';\r\n        relop = sibling.type === 'mrel';\r\n        punct = sibling.type === 'mpunct' || sibling.type === 'minner';\r\n        array = !!sibling.array;\r\n        openfence = sibling.type === 'mopen';\r\n        closefence = sibling.type === 'mclose' || sibling.type === 'leftright';\r\n        space = sibling.type === 'space';\r\n    }\r\n\r\n    if (typeof shortcut.after !== 'undefined') {\r\n        // If this is a conditional shortcut, consider the conditions now\r\n        if (\r\n            (/nothing/.test(shortcut.after) && nothing) ||\r\n            (/letter/.test(shortcut.after) && letter) ||\r\n            (/digit/.test(shortcut.after) && digit) ||\r\n            (/function/.test(shortcut.after) && isFunction) ||\r\n            (/frac/.test(shortcut.after) && frac) ||\r\n            (/surd/.test(shortcut.after) && surd) ||\r\n            (/binop/.test(shortcut.after) && binop) ||\r\n            (/relop/.test(shortcut.after) && relop) ||\r\n            (/punct/.test(shortcut.after) && punct) ||\r\n            (/array/.test(shortcut.after) && array) ||\r\n            (/openfence/.test(shortcut.after) && openfence) ||\r\n            (/closefence/.test(shortcut.after) && closefence) ||\r\n            (/text/.test(shortcut.after) && text) ||\r\n            (/space/.test(shortcut.after) && space)\r\n        ) {\r\n            return shortcut.value;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    return shortcut.value;\r\n}\r\n\r\n/**\r\n *\r\n * @param context - atoms preceding the candidate, potentially used\r\n * to reduce which shortcuts are applicable. If 'null', no restrictions are\r\n * applied.\r\n * @param s - candidate inline shortcuts (e.g. `'pi'`)\r\n * @return A replacement string matching the shortcut (e.g. `'\\pi'`)\r\n */\r\nexport function getInlineShortcut(\r\n    mode: ParseMode,\r\n    context: Atom[],\r\n    s: string,\r\n    shortcuts?: { [key: string]: InlineShortcutDefinition }\r\n): string {\r\n    return validateShortcut(\r\n        mode,\r\n        context,\r\n        shortcuts?.[s] ?? INLINE_SHORTCUTS[s]\r\n    );\r\n}\r\n\r\n/**\r\n * Return `p`, the platform name if `p` is the current platform, otherwise\r\n * return `!p`. For example, when running on Windows, `platform('mac')` returns\r\n * `'!mac'`.\r\n * The valid values for `p` are:\r\n * - `'mac'`\r\n * - `'win'`\r\n * - `'android`'\r\n * - `'ios'`\r\n * - `'chromeos'`\r\n * - `'other'` (Linux, etc...)\r\n * @param p The platform to test against.\r\n * @return if we are running on the candidate platform, return it.\r\n * Otherwise, return \"!\" + candidate.\r\n */\r\nfunction platform(p: string): string {\r\n    let result = 'other';\r\n    if (navigator?.platform && navigator.userAgent) {\r\n        if (/^(mac)/i.test(navigator.platform)) {\r\n            result = 'mac';\r\n        } else if (/^(win)/i.test(navigator.platform)) {\r\n            result = 'win';\r\n        } else if (/(android)/i.test(navigator.userAgent)) {\r\n            result = 'android';\r\n        } else if (\r\n            /(iphone)/i.test(navigator.userAgent) ||\r\n            /(ipod)/i.test(navigator.userAgent) ||\r\n            /(ipad)/i.test(navigator.userAgent)\r\n        ) {\r\n            result = 'ios';\r\n        } else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\r\n            result = 'chromeos';\r\n        }\r\n    }\r\n\r\n    return result === p ? p : '!' + p;\r\n}\r\n\r\n/**\r\n * Return the selector matching the keystroke.\r\n *\r\n */\r\nexport function getKeyboardShortcut(mode: ParseMode, keystroke): string {\r\n    for (const c of [\r\n        platform('mac') + ':' + mode + ':' + keystroke,\r\n        platform('win') + ':' + mode + ':' + keystroke,\r\n        platform('ios') + ':' + mode + ':' + keystroke,\r\n        platform('android') + ':' + mode + ':' + keystroke,\r\n        platform('chromeos') + ':' + mode + ':' + keystroke,\r\n        platform('other') + ':' + mode + ':' + keystroke,\r\n\r\n        platform('mac') + ':' + keystroke,\r\n        platform('win') + ':' + keystroke,\r\n        platform('ios') + ':' + keystroke,\r\n        platform('android') + ':' + keystroke,\r\n        platform('chromeos') + ':' + keystroke,\r\n\r\n        mode + ':' + keystroke,\r\n\r\n        keystroke,\r\n    ]) {\r\n        if (KEYBOARD_SHORTCUTS[c]) {\r\n            return KEYBOARD_SHORTCUTS[c];\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction commandToString(command): string {\r\n    let result = command;\r\n\r\n    if (isArray(result) && result.length > 0) {\r\n        result = result[0] + '(' + result.slice(1).join('') + ')';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function getShortcutForCommand(command): string {\r\n    let result = [];\r\n\r\n    if (typeof command === 'string') {\r\n        const candidate = REVERSE_KEYBOARD_SHORTCUTS[command];\r\n        if (isArray(candidate)) {\r\n            result = candidate.slice();\r\n        } else if (candidate) {\r\n            result.push(candidate);\r\n        }\r\n    }\r\n\r\n    // A command can be either a simple selector, or a selector\r\n    // with arguments. Normalize it to a string\r\n    command = commandToString(command);\r\n\r\n    const regex = new RegExp(\r\n        '^' +\r\n            command\r\n                .replace('\\\\', '\\\\\\\\')\r\n                .replace('|', '\\\\|')\r\n                .replace('*', '\\\\*')\r\n                .replace('$', '\\\\$')\r\n                .replace('^', '\\\\^') +\r\n            '([^*a-zA-Z]|$)'\r\n    );\r\n    Object.keys(KEYBOARD_SHORTCUTS).forEach((shortcut) => {\r\n        if (regex.test(commandToString(KEYBOARD_SHORTCUTS[shortcut]))) {\r\n            const m = shortcut.match(/:([^:]*)$/);\r\n            if (m) result.push(m[1]);\r\n        }\r\n    });\r\n\r\n    return result.map(getShortcutMarkup).join('');\r\n}\r\n\r\n/**\r\n * Return a human readable representation of a shortcut as a markup string\r\n */\r\nexport function getShortcutMarkup(shortcut: string): string {\r\n    let result: string;\r\n    const platMatch = shortcut.match(/(^[^:]*):/);\r\n    const plat = platMatch ? platMatch[1] : '';\r\n\r\n    if (\r\n        plat === platform('mac') ||\r\n        plat === platform('win') ||\r\n        plat === platform('ios') ||\r\n        plat === platform('android') ||\r\n        plat === platform('chromeos') ||\r\n        plat === platform('other')\r\n    ) {\r\n        const m = shortcut.match(/:([^:]*)$/);\r\n        result = m ? m[1] : shortcut;\r\n    } else if (\r\n        ![\r\n            'mac',\r\n            '!mac',\r\n            'win',\r\n            '!win',\r\n            'ios',\r\n            '!ios',\r\n            'android',\r\n            '!android',\r\n            'chromeos',\r\n            '!chromeos',\r\n            'other',\r\n            '!other',\r\n        ].includes(plat)\r\n    ) {\r\n        const m = shortcut.match(/:([^:]*)$/);\r\n        result = m ? m[1] : shortcut;\r\n    }\r\n    if (result) {\r\n        const useSymbol =\r\n            platform('mac') === 'mac' || platform('ios') === 'ios';\r\n        const modifiers = result.length > 1 ? result.split('-') : [result];\r\n        result = '';\r\n        for (const modifier of modifiers) {\r\n            if (!useSymbol && result) {\r\n                result += '<span class=\"ML__shortcut-join\">+</span>';\r\n            }\r\n            if (modifier.substr(0, 3) === 'Key') {\r\n                result += modifier.substr(3, 1);\r\n            } else if (modifier.substr(0, 5) === 'Digit') {\r\n                result += modifier.substr(5, 1);\r\n            } else {\r\n                result +=\r\n                    {\r\n                        Meta: useSymbol ? '\\u2318' : 'command',\r\n                        Shift: useSymbol ? '\\u21e7' : 'shift',\r\n                        Alt: useSymbol ? '\\u2325' : 'alt',\r\n                        Ctrl: useSymbol ? '\\u2303' : 'control',\r\n                        '\\n': useSymbol ? '\\u23ce' : 'return',\r\n                        Return: useSymbol ? '\\u23ce' : 'return',\r\n                        Enter: useSymbol ? '\\u2324' : 'enter',\r\n                        Tab: useSymbol ? '\\u21e5' : 'tab',\r\n                        // 'Esc':          useSymbol ? '\\u238b' : 'esc',\r\n                        Esc: 'esc',\r\n\r\n                        Backspace: useSymbol ? '\\u232b' : 'backspace',\r\n                        Del: useSymbol ? '\\u2326' : 'del',\r\n                        PageUp: useSymbol ? '\\u21de' : 'page up',\r\n                        PageDown: useSymbol ? '\\u21df' : 'page down',\r\n                        Home: useSymbol ? '\\u2912' : 'home',\r\n                        End: useSymbol ? '\\u2913' : 'end',\r\n                        Spacebar: 'space',\r\n                        Semicolon: ';',\r\n                        Period: '.',\r\n                        Comma: ',',\r\n                        Minus: '-',\r\n                        Equal: '=',\r\n                        Quote: \"'\",\r\n                        BracketLeft: '[',\r\n                        BracketRight: ']',\r\n                        Backslash: '\\\\',\r\n                        IntlBackslash: '\\\\',\r\n                        Backquote: '`',\r\n                        Slash: '/',\r\n                        NumpadMultiply: '* &#128290;',\r\n                        NumpadDivide: '/ &#128290;', // Numeric keypad\r\n                        NumpadSubtract: '- &#128290;',\r\n                        NumpadAdd: '+ &#128290;',\r\n                        NumpadDecimal: '. &#128290;',\r\n                        NumpadComma: ', &#128290;',\r\n                        Help: 'help',\r\n                        Left: '\\u21E0',\r\n                        Up: '\\u21E1',\r\n                        Right: '\\u21E2',\r\n                        Down: '\\u21E3',\r\n                    }[modifier] || modifier;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { Style, ParseMode } from '../public/core';\r\n\r\nimport { ModelPrivate } from './model';\r\nimport { UndoManager } from './undo';\r\nimport { SelectorPrivate } from './commands';\r\nimport { MathfieldConfigPrivate } from './config';\r\n\r\nexport declare interface Mathfield {\r\n    model: ModelPrivate;\r\n    config: Required<MathfieldConfigPrivate>;\r\n\r\n    undoManager: UndoManager;\r\n\r\n    readOnly: boolean;\r\n\r\n    dirty: boolean; // If true, need to be redrawn\r\n    pasteInProgress: boolean;\r\n    smartModeSuppressed: boolean;\r\n    _resizeTimer: number; // Timer handle\r\n\r\n    element: HTMLElement;\r\n    originalContent: string;\r\n\r\n    textarea: HTMLElement;\r\n    field: HTMLElement;\r\n    virtualKeyboardToggleDOMNode: HTMLElement;\r\n    ariaLiveText: HTMLElement;\r\n    accessibleNode: HTMLElement;\r\n    popover: HTMLElement;\r\n    keystrokeCaption: HTMLElement;\r\n    virtualKeyboard: HTMLElement;\r\n\r\n    keystrokeCaptionVisible: boolean;\r\n    virtualKeyboardVisible: boolean;\r\n    blurred: boolean;\r\n\r\n    keystrokeBuffer: string;\r\n    keystrokeBufferStates: any[]; // @revisit\r\n    keystrokeBufferResetTimer: any; // @revisit\r\n\r\n    suggestionIndex: number;\r\n\r\n    mode: ParseMode;\r\n    style: Style;\r\n\r\n    keypressSound: HTMLAudioElement; // @revisit. Is this used? The sounds are in config, no?\r\n    spacebarKeypressSound: HTMLAudioElement;\r\n    returnKeypressSound: HTMLAudioElement;\r\n    deleteKeypressSound: HTMLAudioElement;\r\n    plonkSound: HTMLAudioElement;\r\n\r\n    $perform(command: SelectorPrivate): boolean;\r\n    $focus(): void;\r\n    $select(): void;\r\n    $selectedText(format: string): string;\r\n    $text(format: string): string;\r\n    $clearSelection(): void;\r\n    $hasFocus(): boolean;\r\n    $insert(s: string, options?): boolean;\r\n\r\n    resetKeystrokeBuffer(): void;\r\n    switchMode(mode: ParseMode, prefix?: string, suffix?: string): void;\r\n    scrollIntoView(): void;\r\n    groupIsSelected(): boolean;\r\n}\r\n\r\nexport function on(el, selectors, listener, options?) {\r\n    selectors = selectors.split(' ');\r\n    for (const sel of selectors) {\r\n        const m = sel.match(/(.*):(.*)/);\r\n        if (m) {\r\n            const options2 = options || {};\r\n            if (m[2] === 'active') {\r\n                options2.passive = false;\r\n            } else {\r\n                options2[m[2]] = true;\r\n            }\r\n            el.addEventListener(m[1], listener, options2);\r\n        } else {\r\n            el.addEventListener(sel, listener, options);\r\n        }\r\n    }\r\n}\r\n\r\nexport function off(el, selectors, listener, options?) {\r\n    selectors = selectors.split(' ');\r\n    for (const sel of selectors) {\r\n        const m = sel.match(/(.*):(.*)/);\r\n        if (m) {\r\n            const options2 = options || {};\r\n            if (m[2] === 'active') {\r\n                options2.passive = false;\r\n            } else {\r\n                options2[m[2]] = true;\r\n            }\r\n            el.removeEventListener(m[1], listener, options2);\r\n        } else {\r\n            el.removeEventListener(sel, listener, options);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getSharedElement(id: string, cls: string): HTMLElement {\r\n    let result = document.getElementById(id);\r\n    if (result) {\r\n        result.setAttribute(\r\n            'data-refcount',\r\n            Number(\r\n                parseInt(result.getAttribute('data-refcount')) + 1\r\n            ).toString()\r\n        );\r\n    } else {\r\n        result = document.createElement('div');\r\n        result.setAttribute('aria-hidden', 'true');\r\n        result.setAttribute('data-refcount', '1');\r\n        result.className = cls;\r\n        result.id = id;\r\n        document.body.appendChild(result);\r\n    }\r\n    return result;\r\n}\r\n\r\n// @revisit: check the elements are correctly released\r\nexport function releaseSharedElement(el: HTMLElement): void {\r\n    if (!el) return;\r\n    const refcount = parseInt(el.getAttribute('data-refcount'));\r\n    if (refcount <= 1) {\r\n        el.remove();\r\n    } else {\r\n        el.setAttribute('data-refcount', Number(refcount - 1).toString());\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the argument is a valid Mathfield.\r\n * After a Mathfield has been destroyed (for example by calling revertToOriginalContent()\r\n * the Mathfield is no longer valid. However, there may be some pending\r\n * operations invoked via requestAnimationFrame() for example, that would\r\n * need to ensure the mathfield is still valid by the time they're executed.\r\n */\r\nexport function isValidMathfield(mf) {\r\n    return mf.element && mf.element.mathfield === mf;\r\n}\r\n\r\n/**\r\n * Utility function that returns the element which has the caret\r\n *\r\n */\r\nfunction _findElementWithCaret(el) {\r\n    if (\r\n        el.classList.contains('ML__caret') ||\r\n        el.classList.contains('ML__text-caret') ||\r\n        el.classList.contains('ML__command-caret')\r\n    ) {\r\n        return el;\r\n    }\r\n    let result;\r\n    for (const child of el.children) {\r\n        result = result || _findElementWithCaret(child);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return the (x,y) client coordinates of the caret\r\n */\r\nexport function getCaretPosition(el) {\r\n    const caret = _findElementWithCaret(el);\r\n    if (caret) {\r\n        const bounds = caret.getBoundingClientRect();\r\n        const position = {\r\n            x: bounds.right,\r\n            y: bounds.bottom,\r\n            height: bounds.height,\r\n        };\r\n        return position;\r\n    }\r\n    return null;\r\n}\r\nexport function getSelectionBounds(el) {\r\n    const selectedNodes = el.querySelectorAll('.ML__selected');\r\n    if (selectedNodes && selectedNodes.length > 0) {\r\n        const selectionRect = {\r\n            top: Infinity,\r\n            bottom: -Infinity,\r\n            left: Infinity,\r\n            right: -Infinity,\r\n        };\r\n        // Calculate the union of the bounds of all the selected spans\r\n        selectedNodes.forEach((node) => {\r\n            const bounds = node.getBoundingClientRect();\r\n            if (bounds.left < selectionRect.left) {\r\n                selectionRect.left = bounds.left;\r\n            }\r\n            if (bounds.right > selectionRect.right) {\r\n                selectionRect.right = bounds.right;\r\n            }\r\n            if (bounds.bottom > selectionRect.bottom) {\r\n                selectionRect.bottom = bounds.bottom;\r\n            }\r\n            if (bounds.top < selectionRect.top) {\r\n                selectionRect.top = bounds.top;\r\n            }\r\n        });\r\n        const fieldRect = el.getBoundingClientRect();\r\n        const w = selectionRect.right - selectionRect.left;\r\n        const h = selectionRect.bottom - selectionRect.top;\r\n        selectionRect.left = Math.ceil(\r\n            selectionRect.left - fieldRect.left + el.scrollLeft\r\n        );\r\n        selectionRect.right = selectionRect.left + w;\r\n        selectionRect.top = Math.ceil(selectionRect.top - fieldRect.top);\r\n        selectionRect.bottom = selectionRect.top + h;\r\n        return selectionRect;\r\n    }\r\n    return null;\r\n}\r\n","import { Mathfield, on } from './mathfield-utils';\r\n\r\n/**\r\n * Attach event handlers to an element so that it will react by executing\r\n * a command when pressed.\r\n * `\"command\"` can be:\r\n * - a string, a single selector\r\n * - an array, whose first element is a selector followed by one or more arguments.\r\n * - an object, with the following keys:\r\n *    * 'default': command performed on up, with a down + up sequence with no\r\n *      delay between down and up\r\n *    * 'alt', 'shift', 'altshift' keys: command performed on up with\r\n *      one of these modifiers pressed\r\n *    * 'pressed': command performed on 'down'\r\n *    * 'pressAndHoldStart': command performed after a tap/down followed by a\r\n * delay (optional)\r\n *    * 'pressAndHoldEnd': command performed on up, if there was a delay\r\n *     between down and up, if absent, 'default' is performed\r\n * The value of the keys specify which selector (string\r\n * or array) to perform depending on the keyboard state when the button is\r\n * pressed.\r\n *\r\n * The 'pressed' and 'active' classes will get added to\r\n * the element, as the :hover and :active pseudo-classes are not reliable\r\n * (at least on Chrome Android).\r\n *\r\n */\r\nexport function attachButtonHandlers(\r\n    mathfield: Mathfield,\r\n    el: Element,\r\n    command:\r\n        | string\r\n        | {\r\n              default: string | any[];\r\n              pressed?: string | any[];\r\n              acceptSuggestion?: boolean;\r\n              alt?: string | any[];\r\n              altshift?: string | any[];\r\n              shift?: string | any[];\r\n              pressAndHoldStart?: string | any[];\r\n              pressAndHoldEnd?: string | any[];\r\n          }\r\n): void {\r\n    if (typeof command === 'object' && (command.default || command.pressed)) {\r\n        // Attach the default (no modifiers pressed) command to the element\r\n        if (command.default) {\r\n            el.setAttribute(\r\n                'data-' + mathfield.config.namespace + 'command',\r\n                JSON.stringify(command.default)\r\n            );\r\n        }\r\n        if (command.alt) {\r\n            el.setAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-alt',\r\n                JSON.stringify(command.alt)\r\n            );\r\n        }\r\n        if (command.altshift) {\r\n            el.setAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-altshift',\r\n                JSON.stringify(command.altshift)\r\n            );\r\n        }\r\n        if (command.shift) {\r\n            el.setAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-shift',\r\n                JSON.stringify(command.shift)\r\n            );\r\n        }\r\n        // .pressed: command to perform when the button is pressed (i.e.\r\n        // on mouse down/touch). Otherwise the command is performed when\r\n        // the button is released\r\n        if (command.pressed) {\r\n            el.setAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-pressed',\r\n                JSON.stringify(command.pressed)\r\n            );\r\n        }\r\n        if (command.pressAndHoldStart) {\r\n            el.setAttribute(\r\n                'data-' +\r\n                    mathfield.config.namespace +\r\n                    'command-pressAndHoldStart',\r\n                JSON.stringify(command.pressAndHoldStart)\r\n            );\r\n        }\r\n        if (command.pressAndHoldEnd) {\r\n            el.setAttribute(\r\n                'data-' +\r\n                    mathfield.config.namespace +\r\n                    'command-pressAndHoldEnd',\r\n                JSON.stringify(command.pressAndHoldEnd)\r\n            );\r\n        }\r\n    } else {\r\n        // We need to turn the command into a string to attach it to the dataset\r\n        // associated with the button (the command could be an array made of a\r\n        // selector and one or more parameters)\r\n        el.setAttribute(\r\n            'data-' + mathfield.config.namespace + 'command',\r\n            JSON.stringify(command)\r\n        );\r\n    }\r\n    let pressHoldStart;\r\n    let pressHoldElement;\r\n    let touchID;\r\n    let syntheticTarget; // Target while touch move\r\n    let pressAndHoldTimer;\r\n    on(el, 'mousedown touchstart:passive', function (ev) {\r\n        if (ev.type !== 'mousedown' || ev.buttons === 1) {\r\n            // The primary button was pressed or the screen was tapped.\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            el.classList.add('pressed');\r\n            pressHoldStart = Date.now();\r\n            // Record the ID of the primary touch point for tracking on touchmove\r\n            if (ev.type === 'touchstart') {\r\n                touchID = ev.changedTouches[0].identifier;\r\n            }\r\n            // Parse the JSON to get the command (and its optional arguments)\r\n            // and perform it immediately\r\n            const command = el.getAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-pressed'\r\n            );\r\n            if (command) {\r\n                mathfield.$perform(JSON.parse(command));\r\n            }\r\n            // If there is a `press and hold start` command, perform it\r\n            // after a delay, if we're still pressed by then.\r\n            const pressAndHoldStartCommand = el.getAttribute(\r\n                'data-' +\r\n                    mathfield.config.namespace +\r\n                    'command-pressAndHoldStart'\r\n            );\r\n            if (pressAndHoldStartCommand) {\r\n                pressHoldElement = el;\r\n                if (pressAndHoldTimer) {\r\n                    clearTimeout(pressAndHoldTimer);\r\n                }\r\n                pressAndHoldTimer = window.setTimeout(function () {\r\n                    if (el.classList.contains('pressed')) {\r\n                        mathfield.$perform(\r\n                            JSON.parse(pressAndHoldStartCommand)\r\n                        );\r\n                    }\r\n                }, 300);\r\n            }\r\n        }\r\n    });\r\n    on(el, 'mouseleave touchcancel', function () {\r\n        el.classList.remove('pressed');\r\n        // let command = el.getAttribute('data-' + mathfield.config.namespace +\r\n        //     'command-pressAndHoldEnd');\r\n        // const now = Date.now();\r\n        // if (command && now > pressHoldStart + 300) {\r\n        //     mathfield.$perform(JSON.parse(command));\r\n        // }\r\n    });\r\n    on(el, 'touchmove:passive', function (ev) {\r\n        // Unlike with mouse tracking, touch tracking only sends events\r\n        // to the target that was originally tapped on. For consistency,\r\n        // we want to mimic the behavior of the mouse interaction by\r\n        // tracking the touch events and dispatching them to potential targets\r\n        ev.preventDefault();\r\n        for (let i = 0; i < ev.changedTouches.length; i++) {\r\n            if (ev.changedTouches[i].identifier === touchID) {\r\n                // Found a touch matching our primary/tracked touch\r\n                const target = document.elementFromPoint(\r\n                    ev.changedTouches[i].clientX,\r\n                    ev.changedTouches[i].clientY\r\n                );\r\n                if (target !== syntheticTarget && syntheticTarget) {\r\n                    syntheticTarget.dispatchEvent(\r\n                        new MouseEvent('mouseleave'),\r\n                        { bubbles: true }\r\n                    );\r\n                    syntheticTarget = null;\r\n                }\r\n                if (target) {\r\n                    syntheticTarget = target;\r\n                    target.dispatchEvent(\r\n                        new MouseEvent('mouseenter', {\r\n                            bubbles: true,\r\n                            buttons: 1,\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    });\r\n    on(el, 'mouseenter', function (ev) {\r\n        if (ev.buttons === 1) {\r\n            el.classList.add('pressed');\r\n        }\r\n    });\r\n    on(el, 'mouseup touchend click', function (ev) {\r\n        if (syntheticTarget) {\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            const target = syntheticTarget;\r\n            syntheticTarget = null;\r\n            target.dispatchEvent(new MouseEvent('mouseup', { bubbles: true }));\r\n            return;\r\n        }\r\n        el.classList.remove('pressed');\r\n        el.classList.add('active');\r\n        if (ev.type === 'click' && ev.detail !== 0) {\r\n            // This is a click event triggered by a mouse interaction\r\n            // (and not a keyboard interaction)\r\n            // Ignore it, we'll handle the mouseup (or touchend) instead.\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            return;\r\n        }\r\n        // Since we want the active state to be visible for a while,\r\n        // use a timer to remove it after a short delay\r\n        window.setTimeout(function () {\r\n            el.classList.remove('active');\r\n        }, 150);\r\n        let command = el.getAttribute(\r\n            'data-' + mathfield.config.namespace + 'command-pressAndHoldEnd'\r\n        );\r\n        const now = Date.now();\r\n        // If the button has not been pressed for very long or if we were\r\n        // not the button that started the press and hold, don't consider\r\n        // it a press-and-hold.\r\n        if (el !== pressHoldElement || now < pressHoldStart + 300) {\r\n            command = undefined;\r\n        }\r\n        if (!command && ev.altKey && ev.shiftKey) {\r\n            command = el.getAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-altshift'\r\n            );\r\n        }\r\n        if (!command && ev.altKey) {\r\n            command = el.getAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-alt'\r\n            );\r\n        }\r\n        if (!command && ev.shiftKey) {\r\n            command = el.getAttribute(\r\n                'data-' + mathfield.config.namespace + 'command-shift'\r\n            );\r\n        }\r\n        if (!command) {\r\n            command = el.getAttribute(\r\n                'data-' + mathfield.config.namespace + 'command'\r\n            );\r\n        }\r\n        if (command) {\r\n            // Parse the JSON to get the command (and its optional arguments)\r\n            // and perform it\r\n            mathfield.$perform(JSON.parse(command));\r\n        }\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n    });\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport {\r\n    MATHSTYLES,\r\n    decompose,\r\n    makeSpan,\r\n    makeStruts,\r\n    parseString,\r\n} from '../core/core';\r\n\r\nimport { getAnchor } from './model-selection';\r\nimport { getShortcutForCommand } from './shortcuts';\r\nimport { attachButtonHandlers } from './mathfield-buttons';\r\nimport { getCaretPosition } from './mathfield-utils';\r\n\r\nimport type { Mathfield } from './mathfield';\r\n\r\n// A textual description of a LaTeX command.\r\n// The value can be either a single string, or an array of string\r\n// in order to provide alternatives or additional context.\r\n// In that case, the first string in the array should be appropriate\r\n// to be spoken for accessibility.\r\nexport const NOTES = {\r\n    '\\\\text': 'roman text',\r\n    '\\\\textrm': 'roman text',\r\n    '\\\\textnormal': 'roman text',\r\n    '\\\\textit': 'italic text',\r\n    '\\\\textbf': 'bold text',\r\n    '\\\\texttt': 'monospaced text',\r\n    '\\\\textsf': 'sans-serif text',\r\n    '\\\\mathrm': ['roman', '(upright)'],\r\n    '\\\\mathbf': 'bold',\r\n    '\\\\bf': 'bold',\r\n    '\\\\bold': 'bold',\r\n    '\\\\mathit': 'italic',\r\n    '\\\\mathbb': 'blackboard',\r\n    '\\\\mathscr': 'script',\r\n    '\\\\mathtt': ['typewriter', '(monospaced)'],\r\n    '\\\\mathsf': 'sans-serif',\r\n    '\\\\mathcal': 'caligraphic',\r\n    '\\\\frak': ['fraktur', '(gothic)'],\r\n    '\\\\mathfrak': ['fraktur', '(gothic)'],\r\n\r\n    '\\\\textcolor': 'text color',\r\n    '\\\\color': 'color',\r\n\r\n    '\\\\forall': 'for all',\r\n    '\\\\exists': 'there exists',\r\n    '\\\\nexists': 'there does not exist',\r\n    '\\\\frac': 'fraction',\r\n    '\\\\dfrac': 'display fraction',\r\n    '\\\\cfrac': 'continuous fraction',\r\n    '\\\\tfrac': 'text fraction',\r\n    '\\\\binom': 'binomial coefficient',\r\n    '\\\\dbinom': 'display binomial coefficient',\r\n    '\\\\tbinom': 'text binomial coefficient',\r\n    '\\\\pdiff': 'partial differential',\r\n\r\n    '\\\\vec': 'vector',\r\n    '\\\\check': 'caron',\r\n    '\\\\acute': 'acute',\r\n    '\\\\breve': 'breve',\r\n    '\\\\tilde': 'tilde',\r\n    '\\\\dot': 'dot',\r\n    '\\\\hat': ['hat', 'circumflex'],\r\n    '\\\\ddot': 'double dot',\r\n    '\\\\bar': 'bar',\r\n\r\n    '\\\\prime': 'prime',\r\n    '\\\\doubleprime': 'double prime',\r\n    '\\\\varnothing': 'empty set',\r\n    '\\\\emptyset': 'empty set',\r\n    '\\\\subseteq': 'subset of or <br>equal to',\r\n    '\\\\supseteq': 'superset of or <br>equal to',\r\n    '\\\\supset': 'superset of',\r\n    '\\\\subset': 'subset of',\r\n    '\\\\partial': 'partial derivative',\r\n    '\\\\bigcup': 'union',\r\n    '\\\\bigcap': 'intersection',\r\n    '\\\\approx': 'approximately equal to',\r\n    '\\\\notin': 'not an element of',\r\n    '\\\\in': ['element of', 'included in'],\r\n    '\\\\infty': 'infinity',\r\n    '\\\\land': 'logical and',\r\n    '\\\\sqrt': 'square root',\r\n    '\\\\prod': 'product',\r\n    '\\\\sum': 'summation',\r\n    '\\\\amalg': ['amalgamation', 'coproduct', 'free product', 'disjoint union'],\r\n    '\\\\cup': 'union with',\r\n    '\\\\cap': 'intersection with',\r\n    '\\\\int': 'integral',\r\n    '\\\\iint': 'surface integral',\r\n    '\\\\oint': 'curve integral',\r\n    '\\\\iiint': 'volume integral',\r\n    '\\\\iff': 'if and only if',\r\n    '\\\\ln': 'natural logarithm',\r\n    '\\\\boldsymbol': 'bold',\r\n    '\\\\setminus': 'set subtraction',\r\n    '\\\\stackrel': 'relation with symbol above',\r\n    '\\\\stackbin': 'operator with symbol above',\r\n    '\\\\underset': 'symbol with annotation below',\r\n    '\\\\overset': 'symbol with annotation above',\r\n    '\\\\hslash': ['h-bar', 'Planck constant'],\r\n    '\\\\gtrsim': 'greater than or <br>similar to',\r\n    '\\\\propto': 'proportional to',\r\n    '\\\\equiv': 'equivalent to',\r\n\r\n    '\\\\!': ['negative thin space', '(-3 mu)'],\r\n    '\\\\ ': ['space', '(6 mu)'],\r\n    '\\\\,': ['thin space', '(3 mu)'],\r\n    '\\\\:': ['medium space', '(4 mu)'],\r\n    '\\\\;': ['thick space', '(5 mu)'],\r\n    '\\\\quad': ['1 em space', '(18 mu)'],\r\n    '\\\\qquad': ['2 em space', '(36 mu)'],\r\n    '\\\\enskip': ['&#189; em space', '(9 mu)'],\r\n\r\n    '\\\\mp': 'minus or plus',\r\n    '\\\\pm': 'plus or minus',\r\n    '\\\\Im': 'Imaginary part of',\r\n    '\\\\Re': 'Real part of',\r\n    '\\\\gothicCapitalR': 'Real part of',\r\n    '\\\\gothicCapitalI': 'Imaginary part part of',\r\n    '\\\\differentialD': 'differential d',\r\n    '\\\\aleph': [\r\n        'aleph',\r\n        'infinite cardinal',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Cardinal_number\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\beth': [\r\n        'beth',\r\n        'beth number',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Beth_number\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\gimel': [\r\n        'gimel',\r\n        'gimel function',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Gimel_function\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n\r\n    '\\\\O': 'empty set',\r\n    '\\\\N': 'set of <br>natural numbers',\r\n    '\\\\Z': 'set of <br>integers',\r\n    '\\\\Q': 'set of <br>rational numbers',\r\n    '\\\\C': 'set of <br>complex numbers',\r\n    '\\\\R': 'set of <br>real numbers',\r\n    '\\\\P': 'set of <br>prime numbers',\r\n\r\n    '\\\\lesseqqgtr': 'less than, equal to or<br> greater than',\r\n    '\\\\gnapprox': 'greater than and <br>not approximately',\r\n    '\\\\lnapprox': 'lesser than and <br>not approximately',\r\n\r\n    '\\\\j': 'dotless j',\r\n    '\\\\i': 'dotless i',\r\n    '\\\\cdot': 'centered dot',\r\n    '\\\\lmoustache': 'left moustache',\r\n    '\\\\rmoustache': 'right moustache',\r\n    '\\\\nabla': ['nabla', 'del', 'differential vector operator'],\r\n\r\n    '\\\\square': [\r\n        'square',\r\n        'd’Alembert operator',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/D%27Alembert_operator\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\blacksquare': [\r\n        'black square',\r\n        'end of proof',\r\n        'tombstone',\r\n        'Halmos symbol',\r\n    ],\r\n    '\\\\Box': 'end of proof',\r\n    '\\\\colon': ['such that', 'ratio'],\r\n    '\\\\coloneq': ['is defined by', 'is assigned'],\r\n    '\\\\Colon': ['is defined by', 'as'],\r\n    '\\\\_': ['underbar', 'underscore'],\r\n    '\\\\ll': 'much less than',\r\n    '\\\\gg': 'much greater than',\r\n    '\\\\doteq': 'approximately equal to',\r\n    '\\\\Doteq': 'approximately equal to',\r\n    '\\\\doteqdot': 'approximately equal to',\r\n    '\\\\cong': ['isomorphism of', '(for algebras, modules...)'],\r\n    '\\\\det': ['determinant of', '(of a matrix)'],\r\n    '\\\\dotplus': 'Cartesian product algebra',\r\n    '\\\\otimes': [\r\n        'tensor product',\r\n        '(of algebras)',\r\n        'Kronecker product',\r\n        '(of matrices)',\r\n    ],\r\n    '\\\\oplus': ['direct sum', '(of modules)'],\r\n    '\\\\lb': 'base-2 logarithm',\r\n    '\\\\lg': 'base-10 logarithm',\r\n    '\\\\wp': [\r\n        'Weierstrass P',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Weierstrass%27s_elliptic_functions\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\wr': [\r\n        'wreath product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Wreath_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\top': ['tautology', 'Proposition P is universally true'],\r\n    '\\\\bot': ['contradiction', 'Proposition P is contradictory'],\r\n    '\\\\mid': ['probability', 'of event A given B'],\r\n    '\\\\mho': [\r\n        'Siemens',\r\n        'electrical conductance in SI unit',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Siemens_(unit)\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n\r\n    '\\\\Longrightarrow': 'implies',\r\n    '\\\\Longleftrightarrow': 'if, and only if,',\r\n\r\n    '\\\\prec': 'precedes',\r\n    '\\\\preceq': 'precedes or is equal to',\r\n    '\\\\succ': 'succeedes',\r\n    '\\\\succeq': 'succeedes or is equal to',\r\n    '\\\\perp': ['is perpendicular to', 'is independent of'],\r\n\r\n    '\\\\models': [\r\n        'entails',\r\n        'double-turnstyle, models',\r\n        'is a semantic consequence of',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Double_turnstile\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\vdash': [\r\n        'satisfies',\r\n        'turnstyle, assertion sign',\r\n        'syntactic inference',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Turnstile_(symbol)\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n\r\n    '\\\\implies': ['implies', 'logical consequence'],\r\n    '\\\\impliedby': ['implied by', 'logical consequence'],\r\n\r\n    '\\\\surd': ['surd', 'root of', 'checkmark'],\r\n    '\\\\ltimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\rtimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\leftthreetimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\rightthreetimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\divideontimes': ['divide on times'],\r\n    '\\\\curlywedge': 'nor',\r\n    '\\\\curlyvee': 'nand',\r\n\r\n    '\\\\simeq': 'is group isomorphic with',\r\n    '\\\\vartriangleleft': ['is a normal subgroup of', 'is an ideal ring of'],\r\n\r\n    '\\\\circ': ['circle', 'ring', 'function composition'],\r\n\r\n    '\\\\rlap': ['overlap right', '\\\\rlap{x}o'],\r\n    '\\\\llap': ['overlap left', 'o\\\\llap{/}'],\r\n    '\\\\colorbox': ['color box', '\\\\colorbox{#fbc0bd}{...}'],\r\n    '\\\\ast': ['asterisk', 'reflexive closure (as a superscript)'],\r\n    '\\\\bullet': 'bullet',\r\n\r\n    '\\\\lim': 'limit',\r\n};\r\n\r\nfunction getNote(symbol): string {\r\n    let result = NOTES[symbol] || '';\r\n    if (isArray(result)) {\r\n        result = result.join('<br>');\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction latexToMarkup(latex: string, mf: Mathfield): string {\r\n    const parse = parseString(latex, 'math', null, mf.config.macros);\r\n    const spans = decompose(\r\n        {\r\n            mathstyle: MATHSTYLES.displaystyle,\r\n            macros: mf.config.macros,\r\n        },\r\n        parse\r\n    );\r\n\r\n    const wrapper = makeStruts(makeSpan(spans, 'ML__base'), 'ML__mathlive');\r\n\r\n    return wrapper.toMarkup();\r\n}\r\n\r\nexport function showPopoverWithLatex(mf: Mathfield, latex, displayArrows) {\r\n    if (!latex || latex.length === 0) {\r\n        hidePopover(mf);\r\n        return;\r\n    }\r\n\r\n    const command = latex;\r\n    const commandMarkup = latexToMarkup(latex, mf);\r\n    const commandNote = getNote(command);\r\n    const commandShortcuts = getShortcutForCommand(command);\r\n\r\n    let template = displayArrows\r\n        ? '<div class=\"ML__popover__prev-shortcut\" role=\"button\" aria-label=\"Previous suggestion\"><span><span>&#x25B2;</span></span></div>'\r\n        : '';\r\n    template += '<span class=\"ML__popover__content\" role=\"button\">';\r\n    template += '<div class=\"ML__popover__command\">' + commandMarkup + '</div>';\r\n    if (commandNote) {\r\n        template += '<div class=\"ML__popover__note\">' + commandNote + '</div>';\r\n    }\r\n    if (commandShortcuts) {\r\n        template +=\r\n            '<div class=\"ML__popover__shortcut\">' + commandShortcuts + '</div>';\r\n    }\r\n    template += '</span>';\r\n    template += displayArrows\r\n        ? '<div class=\"ML__popover__next-shortcut\" role=\"button\" aria-label=\"Next suggestion\"><span><span>&#x25BC;</span></span></div>'\r\n        : '';\r\n    showPopover(mf, template);\r\n\r\n    let el = mf.popover.getElementsByClassName('ML__popover__content');\r\n    if (el && el.length > 0) {\r\n        attachButtonHandlers(mf, el[0], {\r\n            default: ['complete', { acceptSuggestion: true }],\r\n        });\r\n    }\r\n\r\n    el = mf.popover.getElementsByClassName('ML__popover__prev-shortcut');\r\n    if (el && el.length > 0) {\r\n        attachButtonHandlers(mf, el[0], 'previousSuggestion');\r\n    }\r\n\r\n    el = mf.popover.getElementsByClassName('ML__popover__next-shortcut');\r\n    if (el && el.length > 0) {\r\n        attachButtonHandlers(mf, el[0], 'nextSuggestion');\r\n    }\r\n}\r\n\r\nexport function updatePopoverPosition(\r\n    mf: Mathfield,\r\n    options?: { deferred: boolean }\r\n) {\r\n    // Check that the mathfield is still valid\r\n    // (we're calling ourselves from requestAnimationFrame() and the mathfield\r\n    // could have gotten destroyed\r\n    if (!mf.element || mf.element['mathfield'] !== mf) return;\r\n\r\n    // If the popover pane is visible...\r\n    if (mf.popover.classList.contains('is-visible')) {\r\n        if (options?.deferred) {\r\n            // Call ourselves again later, typically after the\r\n            // rendering/layout of the DOM has been completed\r\n            window.requestAnimationFrame(() => updatePopoverPosition(mf));\r\n        } else {\r\n            if (\r\n                !getAnchor(mf.model) ||\r\n                getAnchor(mf.model).type !== 'command'\r\n            ) {\r\n                hidePopover(mf);\r\n            } else {\r\n                // ... get the caret position\r\n                const position = getCaretPosition(mf.field);\r\n                if (position) setPopoverPosition(mf, position);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function showPopover(mf: Mathfield, markup) {\r\n    mf.popover.innerHTML = markup;\r\n\r\n    const position = getCaretPosition(mf.field);\r\n    if (position) setPopoverPosition(mf, position);\r\n\r\n    mf.popover.classList.add('is-visible');\r\n}\r\n\r\nfunction setPopoverPosition(mf, position) {\r\n    // get screen width & height (browser compatibility)\r\n    const screenHeight =\r\n        window.innerHeight ||\r\n        document.documentElement.clientHeight ||\r\n        document.body.clientHeight;\r\n    const screenWidth =\r\n        window.innerWidth ||\r\n        document.documentElement.clientWidth ||\r\n        document.body.clientWidth;\r\n\r\n    // get scrollbar size. This would be 0 in mobile device (also no needed).\r\n    const scrollbarWidth =\r\n        window.innerWidth - document.documentElement.clientWidth;\r\n    const scrollbarHeight =\r\n        window.innerHeight - document.documentElement.clientHeight;\r\n    const virtualkeyboardHeight = mf.virtualKeyboardVisible\r\n        ? mf.virtualKeyboard.offsetHeight\r\n        : 0;\r\n    // prevent screen overflow horizontal.\r\n    if (\r\n        position.x + mf.popover.offsetWidth / 2 >\r\n        screenWidth - scrollbarWidth\r\n    ) {\r\n        mf.popover.style.left =\r\n            screenWidth - mf.popover.offsetWidth - scrollbarWidth + 'px';\r\n    } else if (position.x - mf.popover.offsetWidth / 2 < 0) {\r\n        mf.popover.style.left = 0;\r\n    } else {\r\n        mf.popover.style.left = position.x - mf.popover.offsetWidth / 2 + 'px';\r\n    }\r\n\r\n    // and position the popover right below or above the caret\r\n    if (\r\n        position.y + mf.popover.offsetHeight + 5 >\r\n        screenHeight - scrollbarHeight - virtualkeyboardHeight\r\n    ) {\r\n        mf.popover.classList.add('reverse-direction');\r\n        mf.popover.style.top =\r\n            position.y - position.height - mf.popover.offsetHeight - 5 + 'px';\r\n    } else {\r\n        mf.popover.classList.remove('reverse-direction');\r\n        mf.popover.style.top = position.y + 5 + 'px';\r\n    }\r\n}\r\n\r\nexport function hidePopover(mf: Mathfield) {\r\n    mf.popover.classList.remove('is-visible');\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport type { Atom } from '../core/atom';\r\n\r\nimport type { ModelInterface } from './model-utils';\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\nimport { arrayCellCount, arrayCell } from './model-array-utils';\r\nimport {\r\n    getCommandOffsets,\r\n    setSelectionExtent,\r\n    setSelection,\r\n    leap,\r\n} from './model-selection';\r\n\r\nexport function extractCommandStringAroundInsertionPoint(\r\n    model: ModelInterface,\r\n    beforeInsertionPointOnly = false\r\n): string {\r\n    let result = '';\r\n\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        const end = beforeInsertionPointOnly\r\n            ? model.anchorOffset() + 1\r\n            : command.end;\r\n        const siblings = model.siblings();\r\n        for (let i = command.start; i < end; i++) {\r\n            // All these atoms are 'command' atom with a body that's\r\n            // a single character\r\n            result += siblings[i].body || '';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param value - If true, decorate the command string around the\r\n * insertion point with an error indicator (red dotted underline). If false,\r\n * remove it.\r\n */\r\nexport function decorateCommandStringAroundInsertionPoint(\r\n    model: ModelInterface,\r\n    hasError: boolean\r\n): void {\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        const siblings = model.siblings();\r\n        for (let i = command.start; i < command.end; i++) {\r\n            siblings[i].error = hasError;\r\n        }\r\n    }\r\n}\r\n\r\nexport function commitCommandStringBeforeInsertionPoint(\r\n    model: ModelInterface\r\n): void {\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        const siblings = model.siblings();\r\n        const anchorOffset = model.anchorOffset() + 1;\r\n        for (let i = command.start; i < anchorOffset; i++) {\r\n            if (siblings[i]) {\r\n                siblings[i].suggestion = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function spliceCommandStringAroundInsertionPoint(\r\n    model: ModelInterface,\r\n    mathlist: Atom[]\r\n): void {\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        // Dispatch notifications\r\n        contentWillChange(model);\r\n\r\n        if (!mathlist) {\r\n            model.siblings().splice(command.start, command.end - command.start);\r\n            setSelection(model, command.start - 1, 0);\r\n        } else {\r\n            // Array.prototype.splice.apply(\r\n            //     model.siblings(),\r\n            //     [command.start, command.end - command.start].concat(mathlist)\r\n            // );\r\n            // @revisit\r\n            model\r\n                .siblings()\r\n                .splice(\r\n                    command.start,\r\n                    command.end - command.start,\r\n                    ...mathlist\r\n                );\r\n            let newPlaceholders = [];\r\n            for (const atom of mathlist) {\r\n                newPlaceholders = newPlaceholders.concat(\r\n                    atom.filter((atom) => atom.type === 'placeholder')\r\n                );\r\n            }\r\n            setSelectionExtent(model, 0);\r\n\r\n            // Set the anchor offset to a reasonable value that can be used by\r\n            // leap(). In particular, the current offset value may be invalid\r\n            // if the length of the mathlist is shorter than the name of the command\r\n            model.path[model.path.length - 1].offset = command.start - 1;\r\n\r\n            if (newPlaceholders.length === 0 || !leap(model, +1, false)) {\r\n                setSelection(model, command.start + mathlist.length - 1);\r\n            }\r\n        }\r\n\r\n        // Dispatch notifications\r\n        contentDidChange(model);\r\n    }\r\n}\r\n\r\nfunction removeCommandStringFromAtom(atom: Atom | Atom[]) {\r\n    if (!atom) return;\r\n    if (isArray(atom)) {\r\n        for (let i = atom.length - 1; i >= 0; i--) {\r\n            if (atom[i].type === 'command') {\r\n                atom.splice(i, 1);\r\n                // i += 1;\r\n            } else {\r\n                removeCommandStringFromAtom(atom[i]);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    removeCommandStringFromAtom(atom.body as Atom[]);\r\n    removeCommandStringFromAtom(atom.superscript);\r\n    removeCommandStringFromAtom(atom.subscript);\r\n    removeCommandStringFromAtom(atom.underscript);\r\n    removeCommandStringFromAtom(atom.overscript);\r\n    removeCommandStringFromAtom(atom.numer);\r\n    removeCommandStringFromAtom(atom.denom);\r\n    removeCommandStringFromAtom(atom.index);\r\n\r\n    if (atom.array) {\r\n        for (let j = arrayCellCount(atom.array); j >= 0; j--) {\r\n            removeCommandStringFromAtom(arrayCell(atom.array, j));\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeCommandString(model: ModelInterface): void {\r\n    contentWillChange(model);\r\n    const contentWasChanging = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n\r\n    removeCommandStringFromAtom(model.root.body as Atom[]);\r\n\r\n    model.suppressChangeNotifications = contentWasChanging;\r\n    contentDidChange(model);\r\n}\r\n","import { Atom } from '../core/atom';\r\nimport { stringToColor } from '../core/color';\r\n\r\nconst SPECIAL_OPERATORS = {\r\n    '\\\\pm': '&#177;',\r\n    '\\\\times': '&#215;',\r\n    '\\\\colon': ':',\r\n    '\\\\vert': '|',\r\n    '\\\\Vert': '\\u2225',\r\n    '\\\\mid': '\\u2223',\r\n    '\\\\lbrace': '{',\r\n    '\\\\rbrace': '}',\r\n    '\\\\langle': '\\u27e8',\r\n    '\\\\rangle': '\\u27e9',\r\n    '\\\\lfloor': '\\u230a',\r\n    '\\\\rfloor': '\\u230b',\r\n    '\\\\lceil': '\\u2308',\r\n    '\\\\rceil': '\\u2309',\r\n\r\n    '\\\\vec': '&#x20d7;',\r\n    '\\\\acute': '&#x00b4;',\r\n    '\\\\grave': '&#x0060;',\r\n    '\\\\dot': '&#x02d9;',\r\n    '\\\\ddot': '&#x00a8;',\r\n    '\\\\tilde': '&#x007e;',\r\n    '\\\\bar': '&#x00af;',\r\n    '\\\\breve': '&#x02d8;',\r\n    '\\\\check': '&#x02c7;',\r\n    '\\\\hat': '&#x005e;',\r\n};\r\n\r\nfunction xmlEscape(str) {\r\n    return (\r\n        str\r\n            // .replace(/&/g, '&amp;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#39;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n    );\r\n}\r\n\r\nfunction makeID(id, options) {\r\n    if (!id || !options.generateID) return '';\r\n    // Note: the 'extid' attribute is recognized by SRE as an attribute\r\n    // to be passed to SSML as a <mark> tag.\r\n    return ' extid=\"' + id + '\"';\r\n}\r\n\r\nfunction scanIdentifier(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    let mathML = '';\r\n    let body = '';\r\n    let superscript = -1;\r\n    let subscript = -1;\r\n    const atom = stream.atoms[stream.index];\r\n\r\n    if (\r\n        stream.index < final &&\r\n        (atom.type === 'mord' || atom.type === 'textord') &&\r\n        '0123456789,.'.indexOf(atom.body) < 0\r\n    ) {\r\n        body = atomToMathML(atom, options);\r\n        if (atom.superscript) {\r\n            superscript = stream.index;\r\n        }\r\n        if (atom.subscript) {\r\n            subscript = stream.index;\r\n        }\r\n        stream.index += 1;\r\n    }\r\n\r\n    if (body.length > 0) {\r\n        result = true;\r\n\r\n        // If there are separate atoms for sub/sup, record them\r\n        if (isSuperscriptAtom(stream)) {\r\n            superscript = stream.index;\r\n            stream.index += 1;\r\n        }\r\n        if (isSubscriptAtom(stream)) {\r\n            subscript = stream.index;\r\n            stream.index += 1;\r\n        }\r\n\r\n        if (superscript >= 0 && subscript >= 0) {\r\n            mathML = '<msubsup>' + body;\r\n            mathML += toMathML(stream.atoms[subscript].subscript, 0, 0, options)\r\n                .mathML;\r\n            mathML += toMathML(\r\n                stream.atoms[superscript].superscript,\r\n                0,\r\n                0,\r\n                options\r\n            ).mathML;\r\n            mathML += '</msubsup>';\r\n        } else if (superscript >= 0) {\r\n            mathML = '<msup>' + body;\r\n            if (isSuperscriptAtom(stream)) {\r\n                // There's another superscript after this one. Maybe double-prime?\r\n                const sup = toMathML(\r\n                    stream.atoms[superscript].superscript,\r\n                    0,\r\n                    0,\r\n                    options\r\n                ).mathML;\r\n\r\n                const sup2 = toMathML(\r\n                    stream.atoms[superscript + 1].superscript,\r\n                    0,\r\n                    0,\r\n                    options\r\n                ).mathML;\r\n                if (\r\n                    (sup === '<mi>\\u2032</mi>' ||\r\n                        sup === '<mi>&#x2032;</mi>') &&\r\n                    (sup2 === '<mi>\\u2032</mi>' || sup2 === '<mi>&#x2032;</mi>')\r\n                ) {\r\n                    mathML += '<mi>&#x2033;</mi>';\r\n                } else if (\r\n                    sup === '<mi>\\u2032</mi>' ||\r\n                    sup === '<mi>&#x2032;</mi>'\r\n                ) {\r\n                    mathML += '<mi>&#x2032;</mi>';\r\n                } else {\r\n                    mathML += sup;\r\n                }\r\n            } else {\r\n                mathML += toMathML(\r\n                    stream.atoms[superscript].superscript,\r\n                    0,\r\n                    0,\r\n                    options\r\n                ).mathML;\r\n            }\r\n            mathML += '</msup>';\r\n        } else if (subscript >= 0) {\r\n            mathML = '<msub>' + body;\r\n            mathML += toMathML(stream.atoms[subscript].subscript, 0, 0, options)\r\n                .mathML;\r\n            mathML += '</msub>';\r\n        } else {\r\n            mathML = body;\r\n        }\r\n\r\n        if (\r\n            (stream.lastType === 'mi' ||\r\n                stream.lastType === 'mn' ||\r\n                stream.lastType === 'mtext' ||\r\n                stream.lastType === 'fence') &&\r\n            !/^<mo>(.*)<\\/mo>$/.test(mathML)\r\n        ) {\r\n            mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\r\n        }\r\n\r\n        if (body.endsWith('>f</mi>') || body.endsWith('>g</mi>')) {\r\n            mathML += '<mo>&x2061;</mo>'; // &ApplyFunction;\r\n            stream.lastType = 'applyfunction';\r\n        } else {\r\n            stream.lastType = /^<mo>(.*)<\\/mo>$/.test(mathML) ? 'mo' : 'mi';\r\n        }\r\n\r\n        stream.mathML += mathML;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return true if the current atom is a standalone superscript atom\r\n * i.e. an atom with no content, except of a superscript.\r\n * Superscripts can be encoded either as an attribute on the last atom\r\n * or as a standalone, empty, atom following the one to which it applies.\r\n * @param {object} stream\r\n */\r\nfunction isSuperscriptAtom(stream) {\r\n    return (\r\n        stream.index < stream.atoms.length &&\r\n        stream.atoms[stream.index].superscript &&\r\n        stream.atoms[stream.index].type === 'msubsup'\r\n    );\r\n}\r\n\r\nfunction isSubscriptAtom(stream) {\r\n    return (\r\n        stream.index < stream.atoms.length &&\r\n        stream.atoms[stream.index].subscript &&\r\n        stream.atoms[stream.index].type === 'msubsup'\r\n    );\r\n}\r\n\r\nfunction indexOfSuperscriptInNumber(stream) {\r\n    let result = -1;\r\n    let i = stream.index;\r\n    let done = false;\r\n    let found = false;\r\n    while (i < stream.atoms.length && !done && !found) {\r\n        done =\r\n            stream.atoms[i].type !== 'mord' ||\r\n            '0123456789,.'.indexOf(stream.atoms[i].body) < 0;\r\n        found = !done && stream.atoms[i].superscript;\r\n        i++;\r\n    }\r\n\r\n    if (found) {\r\n        result = i - 1;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction parseSubsup(base, stream, options) {\r\n    let result = false;\r\n    let mathML = '';\r\n    let atom = stream.atoms[stream.index - 1];\r\n\r\n    if (!atom) return false;\r\n\r\n    if (!atom.superscript && !atom.subscript) {\r\n        if (isSuperscriptAtom(stream) || isSubscriptAtom(stream)) {\r\n            atom = stream.atoms[stream.index];\r\n            stream.index += 1;\r\n        }\r\n    }\r\n    if (!atom) return false;\r\n\r\n    if (atom.superscript && atom.subscript) {\r\n        mathML = '<msubsup>' + base;\r\n        mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n        mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n        mathML += '</msubsup>';\r\n    } else if (atom.superscript) {\r\n        mathML = '<msup>' + base;\r\n        mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n        mathML += '</msup>';\r\n    } else if (atom.subscript) {\r\n        mathML = '<msub>' + base;\r\n        mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n        mathML += '</msub>';\r\n    }\r\n\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        stream.mathML += mathML;\r\n        stream.lastType = '';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction scanText(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    const initial = stream.index;\r\n    let mathML = '';\r\n    while (stream.index < final && stream.atoms[stream.index].mode === 'text') {\r\n        mathML += stream.atoms[stream.index].body\r\n            ? stream.atoms[stream.index].body\r\n            : ' ';\r\n        stream.index += 1;\r\n    }\r\n\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        mathML =\r\n            '<mtext' +\r\n            makeID(stream.atoms[initial].id, options) +\r\n            '>' +\r\n            mathML +\r\n            '</mtext>';\r\n\r\n        stream.mathML += mathML;\r\n        stream.lastType = 'mtext';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction scanNumber(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    const initial = stream.index;\r\n    let mathML = '';\r\n\r\n    let superscript = indexOfSuperscriptInNumber(stream);\r\n    if (superscript >= 0 && superscript < final) {\r\n        final = superscript;\r\n    }\r\n\r\n    while (\r\n        stream.index < final &&\r\n        stream.atoms[stream.index].type === 'mord' &&\r\n        '0123456789,.'.indexOf(stream.atoms[stream.index].body) >= 0\r\n    ) {\r\n        mathML += stream.atoms[stream.index].body;\r\n        stream.index += 1;\r\n    }\r\n\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        mathML =\r\n            '<mn' +\r\n            makeID(stream.atoms[initial].id, options) +\r\n            '>' +\r\n            mathML +\r\n            '</mn>';\r\n\r\n        if (superscript < 0 && isSuperscriptAtom(stream)) {\r\n            superscript = stream.index;\r\n            stream.index += 1;\r\n        }\r\n\r\n        if (superscript >= 0) {\r\n            mathML = '<msup>' + mathML;\r\n            mathML += toMathML(\r\n                stream.atoms[superscript].superscript,\r\n                0,\r\n                0,\r\n                options\r\n            ).mathML;\r\n            mathML += '</msup>';\r\n        }\r\n\r\n        stream.mathML += mathML;\r\n        stream.lastType = 'mn';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction scanFence(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    let mathML = '';\r\n    let lastType = '';\r\n\r\n    if (stream.index < final && stream.atoms[stream.index].type === 'mopen') {\r\n        let found = false;\r\n        let depth = 0;\r\n        const openIndex = stream.index;\r\n        let closeIndex = -1;\r\n        let index = openIndex + 1;\r\n        while (index < final && !found) {\r\n            if (stream.atoms[index].type === 'mopen') {\r\n                depth += 1;\r\n            } else if (stream.atoms[index].type === 'mclose') {\r\n                depth -= 1;\r\n            }\r\n            if (depth === -1) {\r\n                found = true;\r\n                closeIndex = index;\r\n            }\r\n            index += 1;\r\n        }\r\n        if (found) {\r\n            // TODO: could add attribute indicating it's a fence (fence=true)\r\n            mathML = '<mrow>';\r\n            mathML += toMo(stream.atoms[openIndex], options);\r\n\r\n            mathML += toMathML(stream.atoms, openIndex + 1, closeIndex, options)\r\n                .mathML;\r\n\r\n            // TODO: could add attribute indicating it's a fence (fence=true)\r\n            mathML += toMo(stream.atoms[closeIndex], options);\r\n            mathML += '</mrow>';\r\n\r\n            if (\r\n                stream.lastType === 'mi' ||\r\n                stream.lastType === 'mn' ||\r\n                stream.lastType === 'mfrac' ||\r\n                stream.lastType === 'fence'\r\n            ) {\r\n                mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\r\n            }\r\n            stream.index = closeIndex + 1;\r\n\r\n            if (parseSubsup(mathML, stream, options)) {\r\n                result = true;\r\n                stream.lastType = '';\r\n                mathML = '';\r\n            }\r\n\r\n            lastType = 'fence';\r\n        }\r\n    }\r\n\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        stream.mathML += mathML;\r\n        stream.lastType = lastType;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction scanOperator(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    let mathML = '';\r\n    let lastType = '';\r\n    const atom = stream.atoms[stream.index];\r\n\r\n    if (\r\n        stream.index < final &&\r\n        (atom.type === 'mbin' || atom.type === 'mrel')\r\n    ) {\r\n        mathML += atomToMathML(stream.atoms[stream.index], options);\r\n        stream.index += 1;\r\n        lastType = 'mo';\r\n    } else if (stream.index < final && atom.type === 'mop') {\r\n        // mathML += '<mrow>';\r\n\r\n        if (atom.limits === 'limits' && (atom.superscript || atom.subscript)) {\r\n            // Operator with limits, e.g. \\sum\r\n            const op = toMo(atom, options);\r\n            if (atom.superscript && atom.subscript) {\r\n                // Both superscript and subscript\r\n                mathML +=\r\n                    (atom.limits !== 'nolimits'\r\n                        ? '<munderover>'\r\n                        : '<msubsup>') + op;\r\n                mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n                mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n                mathML +=\r\n                    atom.limits !== 'nolimits' ? '</munderover>' : '</msubsup>';\r\n            } else if (atom.superscript) {\r\n                // Superscript only\r\n                mathML +=\r\n                    (atom.limits !== 'nolimits' ? '<mover>' : '<msup>') + op;\r\n                mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n                mathML += atom.limits !== 'nolimits' ? '</mover>' : '</msup>';\r\n            } else {\r\n                // Subscript only\r\n                mathML +=\r\n                    (atom.limits !== 'nolimits' ? '<munder>' : '<msub>') + op;\r\n                mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n                mathML += atom.limits !== 'nolimits' ? '</munder>' : '</msub>';\r\n            }\r\n            lastType = 'mo';\r\n        } else {\r\n            const atom = stream.atoms[stream.index];\r\n            const isUnit = atom.symbol === '\\\\operatorname';\r\n            const op = isUnit\r\n                ? '<mi class=\"MathML-Unit\"' +\r\n                  makeID(atom.id, options) +\r\n                  '>' +\r\n                  toString(atom.body) +\r\n                  '</mi>'\r\n                : toMo(atom, options);\r\n            mathML += op;\r\n            stream.index += 1;\r\n            if (parseSubsup(mathML, stream, options)) {\r\n                result = true;\r\n                stream.lastType = '';\r\n                mathML = '';\r\n            }\r\n            stream.index -= 1;\r\n            if (!isUnit && !/^<mo>(.*)<\\/mo>$/.test(op)) {\r\n                mathML += '<mo>&#x2061;</mo>'; // APPLY FUNCTION\r\n                // mathML += scanArgument(stream);\r\n                lastType = 'applyfunction';\r\n            } else {\r\n                lastType = isUnit ? 'mi' : 'mo';\r\n            }\r\n        }\r\n        // mathML += '</mrow>';\r\n\r\n        if (\r\n            (stream.lastType === 'mi' || stream.lastType === 'mn') &&\r\n            !/^<mo>(.*)<\\/mo>$/.test(mathML)\r\n        ) {\r\n            mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\r\n        }\r\n        stream.index += 1;\r\n    }\r\n\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        stream.mathML += mathML;\r\n        stream.lastType = lastType;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Given an atom or an array of atoms, return their MathML representation as\r\n * a string.\r\n * @param {string|Atom|Atom[]} input\r\n * @param initial index of the input to start conversion from\r\n * @param final last index of the input to stop conversion to\r\n */\r\nfunction toMathML(input, initial: number, final: number, options) {\r\n    const result = {\r\n        atoms: input,\r\n        index: initial || 0,\r\n        mathML: '',\r\n        lastType: '',\r\n    };\r\n    final = final || (input ? input.length : 0);\r\n\r\n    if (typeof input === 'number' || typeof input === 'boolean') {\r\n        result.mathML = input.toString();\r\n    } else if (typeof input === 'string') {\r\n        result.mathML = input;\r\n    } else if (input instanceof Atom) {\r\n        result.mathML = atomToMathML(input, options);\r\n    } else if (Array.isArray(input)) {\r\n        let count = 0;\r\n\r\n        while (result.index < final) {\r\n            if (\r\n                scanText(result, final, options) ||\r\n                scanNumber(result, final, options) ||\r\n                scanIdentifier(result, final, options) ||\r\n                scanOperator(result, final, options) ||\r\n                scanFence(result, final, options)\r\n            ) {\r\n                count += 1;\r\n            } else if (result.index < final) {\r\n                let mathML = atomToMathML(result.atoms[result.index], options);\r\n                if (\r\n                    result.lastType === 'mn' &&\r\n                    mathML.length > 0 &&\r\n                    result.atoms[result.index].type === 'genfrac'\r\n                ) {\r\n                    // If this is a fraction preceded by a number (e.g. 2 1/2),\r\n                    // add an \"invisible plus\" (U+0264) character in front of it\r\n                    mathML = '<mo>&#x2064;</mo>' + mathML;\r\n                }\r\n                if (result.atoms[result.index].type === 'genfrac') {\r\n                    result.lastType = 'mfrac';\r\n                } else {\r\n                    result.lastType = '';\r\n                }\r\n                if (mathML.length > 0) {\r\n                    result.mathML += mathML;\r\n                    count += 1;\r\n                }\r\n                result.index += 1;\r\n            }\r\n        }\r\n\r\n        // If there are more than a single element, wrap them in a mrow tag.\r\n        if (count > 1) {\r\n            result.mathML = '<mrow>' + result.mathML + '</mrow>';\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction toMo(atom, options) {\r\n    let result = '';\r\n    const body = toString(atom.body);\r\n    if (body) {\r\n        result = '<mo' + makeID(atom.id, options) + '>' + body + '</mo>';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction toString(atoms) {\r\n    if (!atoms) return '';\r\n    if (typeof atoms === 'string') return xmlEscape(atoms);\r\n    if (!Array.isArray(atoms) && typeof atoms.body === 'string') {\r\n        return xmlEscape(atoms.body);\r\n    }\r\n    let result = '';\r\n    for (const atom of atoms) {\r\n        if (typeof atom.body === 'string') {\r\n            result += atom.body;\r\n        }\r\n    }\r\n    return xmlEscape(result);\r\n}\r\n\r\n/**\r\n * Return a MathML fragment representation of a single atom\r\n *\r\n */\r\nfunction atomToMathML(atom, options): string {\r\n    // For named SVG atoms, map to a Unicode char\r\n    const SVG_CODE_POINTS = {\r\n        widehat: '^',\r\n        widecheck: 'ˇ',\r\n        widetilde: '~',\r\n        utilde: '~',\r\n        overleftarrow: '\\u2190',\r\n        underleftarrow: '\\u2190',\r\n        xleftarrow: '\\u2190',\r\n        overrightarrow: '\\u2192',\r\n        underrightarrow: '\\u2192',\r\n        xrightarrow: '\\u2192',\r\n        underbrace: '\\u23df',\r\n        overbrace: '\\u23de',\r\n        overgroup: '\\u23e0',\r\n        undergroup: '\\u23e1',\r\n        overleftrightarrow: '\\u2194',\r\n        underleftrightarrow: '\\u2194',\r\n        xleftrightarrow: '\\u2194',\r\n        Overrightarrow: '\\u21d2',\r\n        xRightarrow: '\\u21d2',\r\n        overleftharpoon: '\\u21bc',\r\n        xleftharpoonup: '\\u21bc',\r\n        overrightharpoon: '\\u21c0',\r\n        xrightharpoonup: '\\u21c0',\r\n        xLeftarrow: '\\u21d0',\r\n        xLeftrightarrow: '\\u21d4',\r\n        xhookleftarrow: '\\u21a9',\r\n        xhookrightarrow: '\\u21aa',\r\n        xmapsto: '\\u21a6',\r\n        xrightharpoondown: '\\u21c1',\r\n        xleftharpoondown: '\\u21bd',\r\n        xrightleftharpoons: '\\u21cc',\r\n        xleftrightharpoons: '\\u21cb',\r\n        xtwoheadleftarrow: '\\u219e',\r\n        xtwoheadrightarrow: '\\u21a0',\r\n        xlongequal: '=',\r\n        xtofrom: '\\u21c4',\r\n        xrightleftarrows: '\\u21c4',\r\n        xrightequilibrium: '\\u21cc', // Not a perfect match.\r\n        xleftequilibrium: '\\u21cb', // None better available.\r\n    };\r\n\r\n    const SPECIAL_IDENTIFIERS = {\r\n        '\\\\exponentialE': '&#x02147;',\r\n        '\\\\imaginaryI': '&#x2148;',\r\n        '\\\\differentialD': '&#x2146;',\r\n        '\\\\capitalDifferentialD': '&#x2145;',\r\n        '\\\\alpha': '&#x03b1;',\r\n        '\\\\pi': '&#x03c0;',\r\n        '\\\\infty': '&#x221e;',\r\n        '\\\\forall': '&#x2200;',\r\n        '\\\\nexists': '&#x2204;',\r\n        '\\\\exists': '&#x2203;',\r\n        '\\\\hbar': '\\u210f',\r\n        '\\\\cdotp': '\\u22c5',\r\n        '\\\\ldots': '\\u2026',\r\n        '\\\\cdots': '\\u22ef',\r\n        '\\\\ddots': '\\u22f1',\r\n        '\\\\vdots': '\\u22ee',\r\n        '\\\\ldotp': '\\u002e',\r\n        // TODO: include all the 'textord' that are identifiers, not operators.\r\n    };\r\n\r\n    const MATH_VARIANTS = {\r\n        cal: 'script',\r\n        frak: 'fraktur',\r\n        bb: 'double-struck',\r\n        scr: 'script',\r\n        cmtt: 'monospace',\r\n        cmss: 'sans-serif',\r\n    };\r\n    const SPACING = {\r\n        '\\\\!': -3 / 18,\r\n        '\\\\ ': 6 / 18,\r\n        '\\\\,': 3 / 18,\r\n        '\\\\:': 4 / 18,\r\n        '\\\\;': 5 / 18,\r\n        '\\\\enspace': 0.5,\r\n        '\\\\quad': 1,\r\n        '\\\\qquad': 2,\r\n        '\\\\enskip': 0.5,\r\n    };\r\n\r\n    let result = '';\r\n    let sep = '';\r\n    let col, row, i;\r\n    let underscript, overscript, body;\r\n    let variant = MATH_VARIANTS[atom.fontFamily || atom.font] || '';\r\n    if (variant) {\r\n        variant = ' mathvariant=\"' + variant + '\"';\r\n    }\r\n\r\n    const command = atom.symbol;\r\n    if (atom.mode === 'text') {\r\n        result = '<mi' + makeID(atom.id, options) + '>' + atom.body + '</mi>';\r\n    } else {\r\n        switch (atom.type) {\r\n            case 'first':\r\n                break; // nothing to do\r\n            case 'group':\r\n            case 'root':\r\n                result = toMathML(atom.body, 0, 0, options).mathML;\r\n                break;\r\n\r\n            case 'array':\r\n                if (\r\n                    (atom.lFence && atom.lFence !== '.') ||\r\n                    (atom.rFence && atom.rFence !== '.')\r\n                ) {\r\n                    result += '<mrow>';\r\n                    if (atom.lFence && atom.lFence !== '.') {\r\n                        result +=\r\n                            '<mo>' +\r\n                            (SPECIAL_OPERATORS[atom.lFence] || atom.lFence) +\r\n                            '</mo>';\r\n                    }\r\n                }\r\n                result += '<mtable';\r\n                if (atom.colFormat) {\r\n                    result += ' columnalign=\"';\r\n                    for (i = 0; i < atom.colFormat.length; i++) {\r\n                        if (atom.colFormat[i].align) {\r\n                            result +=\r\n                                { l: 'left', c: 'center', r: 'right' }[\r\n                                    atom.colFormat[i].align\r\n                                ] + ' ';\r\n                        }\r\n                    }\r\n                    result += '\"';\r\n                }\r\n\r\n                result += '>';\r\n                for (row = 0; row < atom.array.length; row++) {\r\n                    result += '<mtr>';\r\n                    for (col = 0; col < atom.array[row].length; col++) {\r\n                        result +=\r\n                            '<mtd>' +\r\n                            toMathML(atom.array[row][col], 0, 0, options)\r\n                                .mathML +\r\n                            '</mtd>';\r\n                    }\r\n                    result += '</mtr>';\r\n                }\r\n\r\n                result += '</mtable>';\r\n\r\n                if (\r\n                    (atom.lFence && atom.lFence !== '.') ||\r\n                    (atom.rFence && atom.rFence !== '.')\r\n                ) {\r\n                    if (atom.rFence && atom.rFence !== '.') {\r\n                        result +=\r\n                            '<mo>' +\r\n                            (SPECIAL_OPERATORS[atom.lFence] || atom.rFence) +\r\n                            '</mo>';\r\n                    }\r\n                    result += '</mrow>';\r\n                }\r\n                break;\r\n\r\n            case 'genfrac':\r\n                if (atom.leftDelim || atom.rightDelim) {\r\n                    result += '<mrow>';\r\n                }\r\n                if (atom.leftDelim && atom.leftDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                        makeID(atom.id, options) +\r\n                        '>' +\r\n                        (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) +\r\n                        '</mo>';\r\n                }\r\n                if (atom.hasBarLine) {\r\n                    result += '<mfrac>';\r\n                    result +=\r\n                        toMathML(atom.numer, 0, 0, options).mathML ||\r\n                        '<mi>&nbsp;</mi>';\r\n                    result +=\r\n                        toMathML(atom.denom, 0, 0, options).mathML ||\r\n                        '<mi>&nbsp;</mi>';\r\n                    result += '</mfrac>';\r\n                } else {\r\n                    // No bar line, i.e. \\choose, etc...\r\n                    result += '<mtable' + makeID(atom.id, options) + '>';\r\n                    result +=\r\n                        '<mtr>' +\r\n                        toMathML(atom.numer, 0, 0, options).mathML +\r\n                        '</mtr>';\r\n                    result +=\r\n                        '<mtr>' +\r\n                        toMathML(atom.denom, 0, 0, options).mathML +\r\n                        '</mtr>';\r\n                    result += '</mtable>';\r\n                }\r\n                if (atom.rightDelim && atom.rightDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                        makeID(atom.id, options) +\r\n                        '>' +\r\n                        (SPECIAL_OPERATORS[atom.rightDelim] ||\r\n                            atom.rightDelim) +\r\n                        '</mo>';\r\n                }\r\n                if (atom.leftDelim || atom.rightDelim) {\r\n                    result += '</mrow>';\r\n                }\r\n                break;\r\n\r\n            case 'surd':\r\n                if (atom.index) {\r\n                    result += '<mroot' + makeID(atom.id, options) + '>';\r\n                    result += toMathML(atom.body, 0, 0, options).mathML;\r\n                    result += toMathML(atom.index, 0, 0, options).mathML;\r\n                    result += '</mroot>';\r\n                } else {\r\n                    result += '<msqrt' + makeID(atom.id, options) + '>';\r\n                    result += toMathML(atom.body, 0, 0, options).mathML;\r\n                    result += '</msqrt>';\r\n                }\r\n                break;\r\n\r\n            case 'leftright':\r\n                // TODO: could add fence=true attribute\r\n                result = '<mrow>';\r\n                if (atom.leftDelim && atom.leftDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                        makeID(atom.id, options) +\r\n                        '>' +\r\n                        (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) +\r\n                        '</mo>';\r\n                }\r\n                if (atom.body) {\r\n                    result += toMathML(atom.body, 0, 0, options).mathML;\r\n                }\r\n                if (atom.rightDelim && atom.rightDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                        makeID(atom.id, options) +\r\n                        '>' +\r\n                        (SPECIAL_OPERATORS[atom.rightDelim] ||\r\n                            atom.rightDelim) +\r\n                        '</mo>';\r\n                }\r\n                result += '</mrow>';\r\n                break;\r\n\r\n            case 'sizeddelim':\r\n            case 'delim':\r\n                result +=\r\n                    '<mo separator=\"true\"' +\r\n                    makeID(atom.id, options) +\r\n                    '>' +\r\n                    (SPECIAL_OPERATORS[atom.delim] || atom.delim) +\r\n                    '</mo>';\r\n                break;\r\n\r\n            case 'accent':\r\n                result +=\r\n                    '<mover accent=\"true\"' + makeID(atom.id, options) + '>';\r\n                result += toMathML(atom.body, 0, 0, options).mathML;\r\n                result +=\r\n                    '<mo>' +\r\n                    (SPECIAL_OPERATORS[command] || atom.accent) +\r\n                    '</mo>';\r\n                result += '</mover>';\r\n                break;\r\n\r\n            case 'line':\r\n            case 'overlap':\r\n                break;\r\n\r\n            case 'overunder':\r\n                overscript = atom.overscript;\r\n                underscript = atom.underscript;\r\n                if (\r\n                    (atom.svgAbove || overscript) &&\r\n                    (atom.svgBelow || underscript)\r\n                ) {\r\n                    body = atom.body;\r\n                } else if (overscript) {\r\n                    body = atom.body;\r\n                    if (atom.body && atom.body[0] && atom.body[0].underscript) {\r\n                        underscript = atom.body[0].underscript;\r\n                        body = atom.body[0].body;\r\n                    } else if (\r\n                        atom.body &&\r\n                        atom.body[0] &&\r\n                        atom.body[0].type === 'first' &&\r\n                        atom.body[1] &&\r\n                        atom.body[1].underscript\r\n                    ) {\r\n                        underscript = atom.body[1].underscript;\r\n                        body = atom.body[1].body;\r\n                    }\r\n                } else if (underscript) {\r\n                    body = atom.body;\r\n                    if (atom.body && atom.body[0] && atom.body[0].overscript) {\r\n                        overscript = atom.body[0].overscript;\r\n                        body = atom.body[0].body;\r\n                    } else if (\r\n                        atom.body &&\r\n                        atom.body[0] &&\r\n                        atom.body[0].type === 'first' &&\r\n                        atom.body[1] &&\r\n                        atom.body[1].overscript\r\n                    ) {\r\n                        overscript = atom.body[1].overscript;\r\n                        body = atom.body[1].body;\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    (atom.svgAbove || overscript) &&\r\n                    (atom.svgBelow || underscript)\r\n                ) {\r\n                    result += `<munderover ${variant} ${makeID(\r\n                        atom.id,\r\n                        options\r\n                    )}>`;\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgBody] ||\r\n                        toMathML(body, 0, 0, options).mathML;\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgBelow] ||\r\n                        toMathML(underscript, 0, 0, options).mathML;\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgAbove] ||\r\n                        toMathML(overscript, 0, 0, options).mathML;\r\n                    result += '</munderover>';\r\n                } else if (atom.svgAbove || overscript) {\r\n                    result +=\r\n                        `<mover ${variant} ${makeID(atom.id, options)}>` +\r\n                        (SVG_CODE_POINTS[atom.svgBody] ||\r\n                            toMathML(body, 0, 0, options).mathML);\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgAbove] ||\r\n                        toMathML(overscript, 0, 0, options).mathML;\r\n                    result += '</mover>';\r\n                } else if (atom.svgBelow || underscript) {\r\n                    result +=\r\n                        `<munder ${variant} ${makeID(atom.id, options)}>` +\r\n                        (SVG_CODE_POINTS[atom.svgBody] ||\r\n                            toMathML(body, 0, 0, options).mathML);\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgBelow] ||\r\n                        toMathML(underscript, 0, 0, options).mathML;\r\n                    result += '</munder>';\r\n                }\r\n                break;\r\n\r\n            case 'placeholder': // no real equivalent in MathML -- will generate a '?'qq\r\n            case 'mord': {\r\n                result =\r\n                    SPECIAL_IDENTIFIERS[command] ||\r\n                    command ||\r\n                    (typeof atom.body === 'string' ? atom.body : '');\r\n                const m = command\r\n                    ? command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/)\r\n                    : null;\r\n                if (m) {\r\n                    // It's a \\char command\r\n                    result = '&#x' + m[1] + ';';\r\n                } else if (result.length > 0 && result.charAt(0) === '\\\\') {\r\n                    // This is an identifier with no special handling. Use the\r\n                    // Unicode value\r\n                    if (\r\n                        typeof atom.body === 'string' &&\r\n                        atom.body.charCodeAt(0) > 255\r\n                    ) {\r\n                        result =\r\n                            '&#x' +\r\n                            (\r\n                                '000000' + atom.body.charCodeAt(0).toString(16)\r\n                            ).substr(-4) +\r\n                            ';';\r\n                    } else if (typeof atom.body === 'string') {\r\n                        result = atom.body.charAt(0);\r\n                    } else {\r\n                        result = atom.body;\r\n                    }\r\n                }\r\n                const tag = /\\d/.test(result) ? 'mn' : 'mi';\r\n                result =\r\n                    '<' +\r\n                    tag +\r\n                    variant +\r\n                    makeID(atom.id, options) +\r\n                    '>' +\r\n                    xmlEscape(result) +\r\n                    '</' +\r\n                    tag +\r\n                    '>';\r\n                break;\r\n            }\r\n            case 'mbin':\r\n            case 'mrel':\r\n            case 'textord':\r\n            case 'minner':\r\n                if (command && SPECIAL_IDENTIFIERS[command]) {\r\n                    // Some 'textord' are actually identifiers. Check them here.\r\n                    result =\r\n                        '<mi' +\r\n                        makeID(atom.id, options) +\r\n                        '>' +\r\n                        SPECIAL_IDENTIFIERS[command] +\r\n                        '</mi>';\r\n                } else if (command && SPECIAL_OPERATORS[command]) {\r\n                    result =\r\n                        '<mo' +\r\n                        makeID(atom.id, options) +\r\n                        '>' +\r\n                        SPECIAL_OPERATORS[command] +\r\n                        '</mo>';\r\n                } else {\r\n                    result = toMo(atom, options);\r\n                }\r\n                break;\r\n\r\n            case 'mpunct':\r\n                result =\r\n                    '<mo separator=\"true\"' +\r\n                    makeID(atom.id, options) +\r\n                    '>' +\r\n                    (SPECIAL_OPERATORS[command] || command) +\r\n                    '</mo>';\r\n                break;\r\n\r\n            case 'mop':\r\n                if (atom.body !== '\\u200b') {\r\n                    // Not ZERO-WIDTH\r\n                    result = '<mo' + makeID(atom.id, options) + '>';\r\n                    if (command === '\\\\operatorname') {\r\n                        result += atom.body;\r\n                    } else {\r\n                        result += command || atom.body;\r\n                    }\r\n                    result += '</mo>';\r\n                }\r\n                break;\r\n\r\n            case 'mathstyle':\r\n                // TODO: mathstyle is a switch. Need to figure out its scope to properly wrap it around a <mstyle> tag\r\n                // if (atom.mathstyle === 'displaystyle') {\r\n                //     result += '<mstyle displaystyle=\"true\">';\r\n                //     result += '</mstyle>';\r\n                // } else {\r\n                //     result += '<mstyle displaystyle=\"false\">';\r\n                //     result += '</mstyle>';\r\n                // };\r\n                break;\r\n\r\n            case 'box':\r\n                result = '<menclose notation=\"box\"';\r\n                if (atom.backgroundcolor) {\r\n                    result +=\r\n                        ' mathbackground=\"' +\r\n                        stringToColor(atom.backgroundcolor) +\r\n                        '\"';\r\n                }\r\n                result +=\r\n                    makeID(atom.id, options) +\r\n                    '>' +\r\n                    toMathML(atom.body, 0, 0, options).mathML +\r\n                    '</menclose>';\r\n                break;\r\n\r\n            case 'spacing':\r\n                result += '<mspace width=\"' + (SPACING[command] || 0) + 'em\"/>';\r\n                break;\r\n\r\n            case 'enclose':\r\n                result = '<menclose notation=\"';\r\n                for (const notation in atom.notation) {\r\n                    if (\r\n                        Object.prototype.hasOwnProperty.call(\r\n                            atom.notation,\r\n                            notation\r\n                        ) &&\r\n                        atom.notation[notation]\r\n                    ) {\r\n                        result += sep + notation;\r\n                        sep = ' ';\r\n                    }\r\n                }\r\n                result +=\r\n                    makeID(atom.id, options) +\r\n                    '\">' +\r\n                    toMathML(atom.body, 0, 0, options).mathML +\r\n                    '</menclose>';\r\n                break;\r\n\r\n            case 'space':\r\n                result += '&nbsp;';\r\n                break;\r\n            default:\r\n                console.log(\r\n                    'In conversion to MathML, unknown type : ' + atom.type\r\n                );\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function atomsToMathML(atoms, options) {\r\n    return toMathML(atoms, 0, 0, options).mathML;\r\n}\r\n","import { decompose } from '../core/atom-utils';\r\nimport { makeSpan, makeStruts } from '../core/span';\r\nimport { MATHSTYLES } from '../core/mathstyle';\r\nimport { pathToString } from './path';\r\nimport {\r\n    selectionIsCollapsed,\r\n    getAnchor,\r\n    forEachSelected,\r\n} from './model-selection';\r\nimport {\r\n    Mathfield,\r\n    getSelectionBounds,\r\n    isValidMathfield,\r\n} from './mathfield-utils';\r\nimport { atomsToMathML } from '../addons/math-ml';\r\n\r\n/*\r\n * Return a hash (32-bit integer) representing the content of the mathfield\r\n * (but not the selection state)\r\n */\r\nfunction hash(latex: string) {\r\n    let result = 0;\r\n    for (let i = 0; i < latex.length; i++) {\r\n        result = result * 31 + latex.charCodeAt(i);\r\n        result = result | 0; // Force it to a 32-bit number\r\n    }\r\n    return Math.abs(result);\r\n}\r\n\r\nexport function requestUpdate(mathfield: Mathfield) {\r\n    if (!mathfield.dirty) {\r\n        mathfield.dirty = true;\r\n        requestAnimationFrame(\r\n            (_) => isValidMathfield(mathfield) && render(mathfield)\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Lay-out the mathfield and generate the DOM.\r\n *\r\n * This is usually done automatically, but if the font-size, or other geometric\r\n * attributes are modified, outside of MathLive, this function may need to be\r\n * called explicitly.\r\n *\r\n */\r\nexport function render(mathfield: Mathfield, renderOptions?) {\r\n    renderOptions = renderOptions || {};\r\n    mathfield.dirty = false;\r\n    //\r\n    // 1. Stop and reset read aloud state\r\n    //\r\n    if (!window['mathlive']) {\r\n        window['mathlive'] = {};\r\n    }\r\n    //\r\n    // 2. Validate selection\r\n    //\r\n    if (!getAnchor(mathfield.model)) {\r\n        console.warn(\r\n            'Invalid selection, resetting it. ' +\r\n                pathToString(mathfield.model.path)\r\n        );\r\n        mathfield.model.path = [{ relation: 'body', offset: 0 }];\r\n    }\r\n    //\r\n    // 3. Update selection state and blinking cursor (caret)\r\n    //\r\n    mathfield.model.root.forEach((a) => {\r\n        a.caret = '';\r\n        a.isSelected = false;\r\n        a.containsCaret = false;\r\n    });\r\n    const hasFocus = mathfield.$hasFocus();\r\n    if (selectionIsCollapsed(mathfield.model)) {\r\n        getAnchor(mathfield.model).caret =\r\n            hasFocus && !mathfield.config.readOnly ? mathfield.mode : '';\r\n    } else {\r\n        forEachSelected(mathfield.model, (a) => {\r\n            a.isSelected = true;\r\n        });\r\n    }\r\n\r\n    if (hasFocus && !mathfield.config.readOnly) {\r\n        let ancestor = mathfield.model.ancestor(1);\r\n        let i = 1;\r\n        let done = false;\r\n        while (ancestor && !done) {\r\n            if (ancestor.type === 'surd' || ancestor.type === 'leftright') {\r\n                ancestor.containsCaret = true;\r\n                done = true;\r\n            }\r\n            i += 1;\r\n            ancestor = mathfield.model.ancestor(i);\r\n        }\r\n    }\r\n    //\r\n    // 4. Create spans corresponding to the updated mathlist\r\n    //\r\n    const spans = decompose(\r\n        {\r\n            mathstyle: MATHSTYLES.displaystyle,\r\n            letterShapeStyle: mathfield.config.letterShapeStyle,\r\n            atomIdsSettings: {\r\n                // Using the hash as a seed for the ID\r\n                // keeps the IDs the same until the content of the field changes.\r\n                seed: hash(mathfield.model.root.toLatex(false)),\r\n                // The `groupNumbers` flag indicates that extra spans should be generated\r\n                // to represent group of atoms, for example, a span to group\r\n                // consecutive digits to represent a number.\r\n                groupNumbers: renderOptions.forHighlighting,\r\n            },\r\n            smartFence: mathfield.config.smartFence,\r\n            macros: mathfield.config.macros,\r\n        },\r\n        mathfield.model.root\r\n    );\r\n    //\r\n    // 5. Construct struts around the spans\r\n    //\r\n    const base = makeSpan(spans, 'ML__base');\r\n    base.attributes = {\r\n        // Sometimes Google Translate kicks in an attempts to 'translate' math\r\n        // This doesn't work very well, so turn off translate\r\n        translate: 'no',\r\n        // Hint to screen readers to not attempt to read this span\r\n        // They should use instead the 'aria-label' below.\r\n        'aria-hidden': 'true',\r\n    };\r\n    const wrapper = makeStruts(base, 'ML__mathlive');\r\n\r\n    //\r\n    // 6. Generate markup and accessible node\r\n    //\r\n    mathfield.field.innerHTML = wrapper.toMarkup(\r\n        0,\r\n        mathfield.config.horizontalSpacingScale\r\n    );\r\n    mathfield.field.classList.toggle(\r\n        'ML__focused',\r\n        hasFocus && !mathfield.config.readOnly\r\n    );\r\n\r\n    mathfield.accessibleNode.innerHTML =\r\n        '<math xmlns=\"http://www.w3.org/1998/Math/MathML\">' +\r\n        atomsToMathML(mathfield.model.root, mathfield.config) +\r\n        '</math>';\r\n    //mathfield.ariaLiveText.textContent = \"\";\r\n\r\n    //\r\n    // 7. Calculate selection rectangle\r\n    //\r\n    const selectionRect = getSelectionBounds(mathfield.field);\r\n    if (selectionRect) {\r\n        const selectionElement = document.createElement('div');\r\n        selectionElement.classList.add('ML__selection');\r\n        selectionElement.style.position = 'absolute';\r\n        selectionElement.style.left = selectionRect.left + 'px';\r\n        selectionElement.style.top = selectionRect.top + 'px';\r\n        selectionElement.style.width =\r\n            Math.ceil(selectionRect.right - selectionRect.left) + 'px';\r\n        selectionElement.style.height =\r\n            Math.ceil(selectionRect.bottom - selectionRect.top - 1) + 'px';\r\n        mathfield.field.insertBefore(\r\n            selectionElement,\r\n            mathfield.field.childNodes[0]\r\n        );\r\n    }\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { hidePopover, showPopoverWithLatex } from './popover'; // @revisit\r\nimport { suggest } from '../core/definitions';\r\nimport { Mathfield } from './mathfield-utils';\r\nimport { selectionIsCollapsed } from './model-selection';\r\nimport { extractCommandStringAroundInsertionPoint } from './model-command-mode';\r\nimport { requestUpdate } from './mathfield-render';\r\nimport { SelectorPrivate, CommandRegistry } from './commands-definitions';\r\nexport { SelectorPrivate };\r\n\r\n// @revisit: move to mathfield.vibrate()\r\nexport const HAPTIC_FEEDBACK_DURATION = 3; // in ms\r\n\r\ninterface RegisterCommandOptions {\r\n    target: 'model' | 'mathfield' | 'virtual-keyboard';\r\n    category?:\r\n        | 'delete'\r\n        | 'edit' // Changes the content\r\n        | 'array-edit' // Changes the content\r\n        | 'autocomplete'\r\n        | 'clipboard'\r\n        | 'scroll'\r\n        | 'selection-anchor'\r\n        | 'selection-extend'\r\n        | 'speech'\r\n        | 'virtual-keyboard'\r\n        | '';\r\n    audioFeedback?: string;\r\n    canUndo?: boolean;\r\n    changeContent?: boolean; // To update popover\r\n    changeSelection?: boolean; // To update inline shortcut buffer\r\n}\r\n\r\nconst COMMANDS: CommandRegistry<RegisterCommandOptions> = {};\r\n\r\nexport function register(\r\n    commands: { [selector: string]: (...args: any[]) => boolean },\r\n    options?: RegisterCommandOptions\r\n): void {\r\n    options = options ?? { target: 'mathfield', canUndo: false };\r\n\r\n    Object.keys(commands).forEach((selector) => {\r\n        console.assert(\r\n            !COMMANDS[selector],\r\n            'Selector already defined: ',\r\n            selector\r\n        );\r\n        COMMANDS[selector] = { ...options, fn: commands[selector] };\r\n    });\r\n}\r\n\r\nexport function perform(\r\n    mathfield: Mathfield,\r\n    command: SelectorPrivate | any[]\r\n): boolean {\r\n    if (!command) {\r\n        return false;\r\n    }\r\n\r\n    let selector: SelectorPrivate;\r\n    let args: string[] = [];\r\n    let handled = false;\r\n    let dirty = false;\r\n\r\n    if (isArray(command)) {\r\n        selector = command[0] as SelectorPrivate;\r\n        args = command.slice(1);\r\n    } else {\r\n        selector = command;\r\n    }\r\n\r\n    // Convert kebab case (like-this) to camel case (likeThis).\r\n    selector = selector.replace(/-\\w/g, (m) =>\r\n        m[1].toUpperCase()\r\n    ) as SelectorPrivate;\r\n    if (COMMANDS[selector]?.target === 'model') {\r\n        if (/^(delete|transpose|add)/.test(selector)) {\r\n            mathfield.resetKeystrokeBuffer();\r\n        }\r\n        if (\r\n            /^(delete|transpose|add)/.test(selector) &&\r\n            mathfield.mode !== 'command'\r\n        ) {\r\n            // Update the undo state to account for the current selection\r\n            mathfield.undoManager.pop();\r\n            mathfield.undoManager.snapshot(mathfield.config);\r\n        }\r\n        COMMANDS[selector].fn(mathfield.model, ...args);\r\n        if (\r\n            /^(delete|transpose|add)/.test(selector) &&\r\n            mathfield.mode !== 'command'\r\n        ) {\r\n            mathfield.undoManager.snapshot(mathfield.config);\r\n        }\r\n        if (/^(delete)/.test(selector) && mathfield.mode === 'command') {\r\n            const command = extractCommandStringAroundInsertionPoint(\r\n                mathfield.model\r\n            );\r\n            const suggestions = suggest(command);\r\n            if (suggestions.length === 0) {\r\n                hidePopover(mathfield);\r\n            } else {\r\n                showPopoverWithLatex(\r\n                    mathfield,\r\n                    suggestions[0].match,\r\n                    suggestions.length > 1\r\n                );\r\n            }\r\n        }\r\n        dirty = true;\r\n        handled = true;\r\n    } else if (COMMANDS[selector]) {\r\n        dirty = COMMANDS[selector].fn(mathfield, ...args);\r\n        handled = true;\r\n    } else {\r\n        throw Error('Unknown command \"' + selector + '\"');\r\n    }\r\n    // If the command changed the selection so that it is no longer\r\n    // collapsed, or if it was an editing command, reset the inline\r\n    // shortcut buffer and the user style\r\n    if (\r\n        !selectionIsCollapsed(mathfield.model) ||\r\n        /^(transpose|paste|complete|((moveToNextChar|moveToPreviousChar|extend).*))_$/.test(\r\n            selector\r\n        )\r\n    ) {\r\n        mathfield.resetKeystrokeBuffer();\r\n        mathfield.style = {};\r\n    }\r\n    // Render the mathlist\r\n    if (dirty) {\r\n        requestUpdate(mathfield);\r\n    }\r\n    return handled;\r\n}\r\n\r\n/**\r\n * Perform a command, but:\r\n * * focus the mathfield\r\n * * provide haptic and audio feedback\r\n * This is used by the virtual keyboard when command keys (delete, arrows, etc..)\r\n * are pressed.\r\n */\r\n\r\nexport function performWithFeedback(mathfield: Mathfield, selector): boolean {\r\n    // @revisit: have a registry of commands -> sound\r\n    mathfield.$focus();\r\n    if (mathfield.config.keypressVibration && navigator.vibrate) {\r\n        navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\r\n    }\r\n    // Convert kebab case to camel case.\r\n    selector = selector.replace(/-\\w/g, (m) => m[1].toUpperCase());\r\n    if (\r\n        selector === 'moveToNextPlaceholder' ||\r\n        selector === 'moveToPreviousPlaceholder' ||\r\n        selector === 'complete'\r\n    ) {\r\n        if (mathfield.returnKeypressSound) {\r\n            mathfield.returnKeypressSound.load();\r\n            mathfield.returnKeypressSound\r\n                .play()\r\n                .catch((err) => console.warn(err));\r\n        } else if (mathfield.keypressSound) {\r\n            mathfield.keypressSound.load();\r\n            mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n        }\r\n    } else if (\r\n        selector === 'deletePreviousChar' ||\r\n        selector === 'deleteNextChar' ||\r\n        selector === 'deletePreviousWord' ||\r\n        selector === 'deleteNextWord' ||\r\n        selector === 'deleteToGroupStart' ||\r\n        selector === 'deleteToGroupEnd' ||\r\n        selector === 'deleteToMathFieldStart' ||\r\n        selector === 'deleteToMathFieldEnd'\r\n    ) {\r\n        if (mathfield.deleteKeypressSound) {\r\n            mathfield.deleteKeypressSound.load();\r\n            mathfield.deleteKeypressSound\r\n                .play()\r\n                .catch((err) => console.warn(err));\r\n        } else if (mathfield.keypressSound) {\r\n            mathfield.keypressSound.load();\r\n            mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n        }\r\n    } else if (mathfield.keypressSound) {\r\n        mathfield.keypressSound.load();\r\n        mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n    }\r\n    return mathfield.$perform(selector);\r\n}\r\n\r\nregister({\r\n    performWithFeedback: (mathfield: Mathfield, command: string): boolean =>\r\n        performWithFeedback(mathfield, command),\r\n});\r\n","import { isArray } from '../common/types';\r\n\r\nimport { getEnvironmentInfo } from '../core/definitions';\r\nimport { Atom } from '../core/atom';\r\nimport type { ModelInterface } from './model-utils';\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\nimport { getAnchorMode } from './model-selection';\r\nimport { register as registerCommand } from './commands';\r\nimport { arrayIndex, arrayColRow, arrayCell } from './model-array-utils';\r\nexport * from './model-array-utils';\r\n\r\n/**\r\n * Join all the cells at the indicated row into a single mathlist\r\n */\r\nexport function arrayJoinColumns(\r\n    row: Atom[][],\r\n    separator = ',',\r\n    style?\r\n): Atom[] {\r\n    if (!row) return [];\r\n    let result: Atom[] = [];\r\n    let sep: Atom;\r\n    for (let cell of row) {\r\n        if (cell && cell.length > 0 && cell[0].type === 'first') {\r\n            // Remove the 'first' atom, if present\r\n            cell = cell.slice(1);\r\n        }\r\n        if (cell && cell.length > 0) {\r\n            if (sep) {\r\n                result.push(sep);\r\n            } else {\r\n                sep = new Atom('math', 'mpunct', separator, style);\r\n            }\r\n            result = result.concat(cell);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Join all the rows into a single atom list\r\n */\r\nexport function arrayJoinRows(\r\n    array: Atom[][][],\r\n    separators = [';', ','],\r\n    style?\r\n): Atom[] {\r\n    let result = [];\r\n    let sep;\r\n    for (const row of array) {\r\n        if (sep) {\r\n            result.push(sep);\r\n        } else {\r\n            sep = new Atom('math', 'mpunct', separators[0], style);\r\n        }\r\n        result = result.concat(arrayJoinColumns(row, separators[1]));\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return the number of non-empty cells in that column\r\n */\r\nexport function arrayColumnCellCount(array: Atom[][][], col: number): number {\r\n    let result = 0;\r\n    const colRow = { col: col, row: 0 };\r\n    while (colRow.row < array.length) {\r\n        const cell = arrayCell(array, colRow);\r\n        if (cell && cell.length > 0) {\r\n            let cellLen = cell.length;\r\n            if (cell[0].type === 'first') cellLen -= 1;\r\n            if (cellLen > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        colRow.row += 1;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Remove the indicated column from the array\r\n */\r\nexport function arrayRemoveColumn(array: Atom[][][], col: number): void {\r\n    let row = 0;\r\n    while (row < array.length) {\r\n        if (array[row][col]) {\r\n            array[row].splice(col, 1);\r\n        }\r\n        row += 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Remove the indicated row from the array\r\n */\r\nexport function arrayRemoveRow(array: Atom[][][], row: number): void {\r\n    array.splice(row, 1);\r\n}\r\n\r\n/**\r\n * Return the first non-empty cell, row by row\r\n */\r\nexport function arrayFirstCellByRow(array: Atom[][][]): string {\r\n    const colRow = { col: 0, row: 0 };\r\n    while (colRow.row < array.length && !arrayCell(array, colRow)) {\r\n        colRow.row += 1;\r\n    }\r\n    return arrayCell(array, colRow) ? 'cell' + arrayIndex(array, colRow) : '';\r\n}\r\n\r\n/**\r\n * Internal primitive to add a column/row in a matrix\r\n */\r\nfunction addCell(\r\n    model: ModelInterface,\r\n    where: 'after row' | 'before row' | 'after column' | 'before column'\r\n): void {\r\n    // This command is only applicable if we're in an array\r\n    const parent = model.parent();\r\n    if (parent && parent.type === 'array' && isArray(parent.array)) {\r\n        const relation = model.relation();\r\n        if (parent.array) {\r\n            const colRow = arrayColRow(parent.array, relation);\r\n\r\n            if (where === 'after row' || where === 'before row') {\r\n                // Insert a row\r\n                colRow.col = 0;\r\n                colRow.row = colRow.row + (where === 'after row' ? 1 : 0);\r\n\r\n                parent.array.splice(colRow.row, 0, [[]]);\r\n            } else {\r\n                // Insert a column\r\n                colRow.col += where === 'after column' ? 1 : 0;\r\n                parent.array[colRow.row].splice(colRow.col, 0, []);\r\n            }\r\n\r\n            const cellIndex = arrayIndex(parent.array, colRow);\r\n\r\n            model.path.pop();\r\n            model.path.push({\r\n                relation: 'cell' + cellIndex.toString(),\r\n                offset: 0,\r\n            });\r\n            model.insertFirstAtom();\r\n        }\r\n    }\r\n}\r\n\r\nexport function convertParentToArray(model: ModelInterface): void {\r\n    const parent = model.parent();\r\n    if (parent.type === 'leftright') {\r\n        parent.type = 'array';\r\n        const envName =\r\n            { '(': 'pmatrix', '\\\\lbrack': 'bmatrix', '\\\\lbrace': 'cases' }[\r\n                parent.leftDelim\r\n            ] || 'matrix';\r\n        const env = getEnvironmentInfo(envName);\r\n        const array = [[parent.body as Atom[]]];\r\n        if (env.parser) {\r\n            Object.assign(parent, env.parser(envName, [], array));\r\n        }\r\n        parent.mode = getAnchorMode(model);\r\n        parent.env = { ...env };\r\n        parent.env.name = envName;\r\n        parent.array = array;\r\n        parent.rowGaps = [0];\r\n        delete parent.body;\r\n        model.path[model.path.length - 1].relation = 'cell0';\r\n    }\r\n    // Note: could also be a group, or we could be a subscript or an\r\n    // underscript (for multi-valued conditions on a \\sum, for example)\r\n    // Or if at root, this could be a 'align*' environment\r\n}\r\n\r\nexport function addRowAfter(model: ModelInterface): boolean {\r\n    contentWillChange(model);\r\n    convertParentToArray(model);\r\n    addCell(model, 'after row');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\n\r\nexport function addRowBefore(model: ModelInterface): boolean {\r\n    contentWillChange(model);\r\n    convertParentToArray(model);\r\n    addCell(model, 'before row');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\nexport function addColumnAfter(model: ModelInterface): boolean {\r\n    contentWillChange(model);\r\n    convertParentToArray(model);\r\n    addCell(model, 'after column');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\n\r\nexport function addColumnBefore(model: ModelInterface): boolean {\r\n    contentWillChange(model);\r\n    convertParentToArray(model);\r\n    addCell(model, 'before column');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\n\r\nregisterCommand(\r\n    {\r\n        addRowAfter: addRowAfter,\r\n        addColumnAfter: addColumnAfter,\r\n        addRowBefore: addRowBefore,\r\n        addColumnBefore: addColumnBefore,\r\n    },\r\n    { target: 'model', category: 'array-edit' }\r\n);\r\n","import {\r\n    ModelInterface,\r\n    removeSuggestion,\r\n    invalidateVerbatimLatex,\r\n} from './model-utils';\r\nimport {\r\n    selectionWillChange,\r\n    selectionDidChange,\r\n    contentDidChange,\r\n    contentWillChange,\r\n} from './model-listeners';\r\nimport { setSelection, move, selectionIsCollapsed } from './model-selection';\r\nimport {\r\n    arrayFirstCellByRow,\r\n    arrayColRow,\r\n    arrayAdjustRow,\r\n    arrayIndex,\r\n    arrayJoinColumns,\r\n    arrayRemoveRow,\r\n    arrayColumnCellCount,\r\n    arrayRemoveColumn,\r\n    arrayJoinRows,\r\n} from './model-array';\r\n\r\n/**\r\n * @param dir If the selection is not collapsed, and dir is\r\n * negative, delete backwards, starting with the anchor atom.\r\n * That is, delete(-1) will delete only the anchor atom.\r\n * If dir = 0, delete only if the selection is not collapsed\r\n */\r\nfunction delete_(model: ModelInterface, dir: 0 | -1 | 1 = 0) {\r\n    // Dispatch notifications\r\n    contentWillChange(model);\r\n    selectionWillChange(model);\r\n    const contentWasChanging = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n\r\n    dir = dir < 0 ? -1 : dir > 0 ? +1 : dir;\r\n\r\n    removeSuggestion(model);\r\n\r\n    if (model.parent().array) {\r\n        if (dir < 0 && model.startOffset() === 0) {\r\n            const array = model.parent().array;\r\n            if (arrayFirstCellByRow(array) === model.relation()) {\r\n                // (1) First cell:\r\n                // delete array, replace it with linearized content\r\n                const atoms = arrayJoinRows(array);\r\n                model.path.pop();\r\n                model.siblings().splice(model.anchorOffset(), 1, ...atoms);\r\n                setSelection(model, model.anchorOffset() - 1, atoms.length);\r\n            } else {\r\n                const colRow = arrayColRow(array, model.relation());\r\n                if (colRow.col === 0) {\r\n                    // (2) First (non-empty) column (but not first row):\r\n\r\n                    // Move to the end of the last cell of the previous row\r\n                    const dest = arrayAdjustRow(array, colRow, -1);\r\n                    dest.col = array[dest.row].length - 1;\r\n\r\n                    model.path[model.path.length - 1].relation =\r\n                        'cell' + arrayIndex(array, dest);\r\n                    const destLength = array[dest.row][dest.col].length;\r\n\r\n                    // (2.1) Linearize it and merge it with last cell of previous row\r\n                    // (note that atoms could be empty if there are no non-empty\r\n                    // cells left in the row)\r\n                    const atoms = arrayJoinColumns(array[colRow.row]);\r\n                    array[dest.row][dest.col] = array[dest.row][\r\n                        dest.col\r\n                    ].concat(atoms);\r\n                    setSelection(model, destLength - 1, atoms.length);\r\n\r\n                    // (2.2) Remove row\r\n                    arrayRemoveRow(array, colRow.row);\r\n                } else {\r\n                    // (3) Non-first column\r\n                    // (3.1) If column is empty, remove it\r\n                    if (arrayColumnCellCount(array, colRow.col) === 0) {\r\n                        arrayRemoveColumn(array, colRow.col);\r\n                        colRow.col -= 1;\r\n                        model.path[model.path.length - 1].relation =\r\n                            'cell' + arrayIndex(array, colRow);\r\n                        const destCell = array[colRow.row][colRow.col];\r\n                        setSelection(model, destCell.length - 1, 0);\r\n                    }\r\n                    // (3.2) merge cell with cell in previous column\r\n                }\r\n            }\r\n\r\n            // Dispatch notifications\r\n            model.suppressChangeNotifications = contentWasChanging;\r\n            selectionDidChange(model);\r\n            contentDidChange(model);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const siblings = model.siblings();\r\n\r\n    if (!selectionIsCollapsed(model)) {\r\n        // There is a selection extent. Delete all the atoms within it.\r\n        const first = model.startOffset() + 1;\r\n        const last = model.endOffset() + 1;\r\n\r\n        model.announce('deleted', null, siblings.slice(first, last));\r\n        siblings.splice(first, last - first);\r\n\r\n        // Adjust the anchor\r\n        setSelection(model, first - 1);\r\n    } else {\r\n        const anchorOffset = model.anchorOffset();\r\n        if (dir < 0) {\r\n            if (anchorOffset !== 0) {\r\n                // We're not at the begining of the sibling list.\r\n                // If the previous sibling is a compound (fractions, group),\r\n                // just move into it, otherwise delete it\r\n                const sibling = model.sibling(0);\r\n                if (sibling.type === 'leftright') {\r\n                    sibling.rightDelim = '?';\r\n                    move(model, -1);\r\n                } else if (\r\n                    !sibling.captureSelection &&\r\n                    /^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(\r\n                        sibling.type\r\n                    )\r\n                ) {\r\n                    move(model, -1);\r\n                } else {\r\n                    model.announce(\r\n                        'deleted',\r\n                        null,\r\n                        siblings.slice(anchorOffset, anchorOffset + 1)\r\n                    );\r\n                    siblings.splice(anchorOffset, 1);\r\n                    setSelection(model, anchorOffset - 1);\r\n                }\r\n            } else {\r\n                // We're at the beginning of the sibling list.\r\n                // Delete what comes before\r\n                const relation = model.relation();\r\n                if (relation === 'superscript' || relation === 'subscript') {\r\n                    const supsub = model\r\n                        .parent()\r\n                        [relation].filter(\r\n                            (atom) =>\r\n                                atom.type !== 'placeholder' &&\r\n                                atom.type !== 'first'\r\n                        );\r\n                    model.parent()[relation] = null;\r\n                    model.path.pop();\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 0].concat(supsub)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 0, ...supsub);\r\n                    setSelection(model, model.anchorOffset() - 1);\r\n                    model.announce('deleted: ' + relation);\r\n                } else if (relation === 'denom') {\r\n                    // Fraction denominator\r\n                    const numer = model\r\n                        .parent()\r\n                        .numer.filter(\r\n                            (atom) =>\r\n                                atom.type !== 'placeholder' &&\r\n                                atom.type !== 'first'\r\n                        );\r\n                    const denom = model\r\n                        .parent()\r\n                        .denom.filter(\r\n                            (atom) =>\r\n                                atom.type !== 'placeholder' &&\r\n                                atom.type !== 'first'\r\n                        );\r\n                    model.path.pop();\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 1].concat(denom)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 1, ...denom);\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 0].concat(numer)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 0, ...numer);\r\n                    setSelection(\r\n                        model,\r\n                        model.anchorOffset() + numer.length - 1\r\n                    );\r\n                    model.announce('deleted: denominator');\r\n                } else if (relation === 'body') {\r\n                    const body = model\r\n                        .siblings()\r\n                        .filter((atom) => atom.type !== 'placeholder');\r\n                    if (model.path.length > 1) {\r\n                        body.shift(); // Remove the 'first' atom\r\n                        model.path.pop();\r\n                        // Array.prototype.splice.apply(\r\n                        //     model.siblings(),\r\n                        //     [model.anchorOffset(), 1].concat(body)\r\n                        // );\r\n                        // @revisit\r\n                        model\r\n                            .siblings()\r\n                            .splice(model.anchorOffset(), 1, ...body);\r\n                        setSelection(model, model.anchorOffset() - 1);\r\n                        model.announce('deleted: root');\r\n                    }\r\n                } else {\r\n                    move(model, -1);\r\n                    deleteChar(model, -1);\r\n                }\r\n            }\r\n        } else if (dir > 0) {\r\n            if (anchorOffset !== siblings.length - 1) {\r\n                if (\r\n                    /^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(\r\n                        model.sibling(1).type\r\n                    )\r\n                ) {\r\n                    move(model, +1);\r\n                } else {\r\n                    model.announce(\r\n                        'deleted',\r\n                        null,\r\n                        siblings.slice(anchorOffset + 1, anchorOffset + 2)\r\n                    );\r\n                    siblings.splice(anchorOffset + 1, 1);\r\n                }\r\n            } else {\r\n                // We're at the end of the sibling list, delete what comes next\r\n                const relation = model.relation();\r\n                if (relation === 'numer') {\r\n                    const numer = model\r\n                        .parent()\r\n                        .numer.filter(\r\n                            (atom) =>\r\n                                atom.type !== 'placeholder' &&\r\n                                atom.type !== 'first'\r\n                        );\r\n                    const denom = model\r\n                        .parent()\r\n                        .denom.filter(\r\n                            (atom) =>\r\n                                atom.type !== 'placeholder' &&\r\n                                atom.type !== 'first'\r\n                        );\r\n                    model.path.pop();\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 1].concat(denom)\r\n                    // );\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 0].concat(numer)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 1, ...denom);\r\n                    model.siblings().splice(model.anchorOffset(), 0, ...numer);\r\n                    setSelection(\r\n                        model,\r\n                        model.anchorOffset() + numer.length - 1\r\n                    );\r\n                    model.announce('deleted: numerator');\r\n                } else {\r\n                    move(model, 1);\r\n                    deleteChar(model, -1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Something has been deleted and the parent latex is no longer valid\r\n    invalidateVerbatimLatex(model);\r\n\r\n    // Dispatch notifications\r\n    model.suppressChangeNotifications = contentWasChanging;\r\n    selectionDidChange(model);\r\n    contentDidChange(model);\r\n}\r\n\r\n/**\r\n * Delete sibling atoms\r\n */\r\nexport function deleteAtoms(model: ModelInterface, count: number) {\r\n    if (count > 0) {\r\n        model.siblings().splice(model.anchorOffset() + 1, count);\r\n    } else {\r\n        model.siblings().splice(model.anchorOffset() + count + 1, -count);\r\n        setSelection(model, model.anchorOffset() + count);\r\n    }\r\n}\r\n\r\n/**\r\n * Delete the selection, or multiple characters\r\n */\r\nexport function deleteChar(model: ModelInterface, count = 0): boolean {\r\n    if (count === 0) {\r\n        delete_(model, 0);\r\n    } else if (count > 0) {\r\n        while (count > 0) {\r\n            delete_(model, +1);\r\n            count--;\r\n        }\r\n    } else {\r\n        while (count < 0) {\r\n            delete_(model, -1);\r\n            count++;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n","import { InlineShortcutDefinition, getInlineShortcut } from './shortcuts';\r\n\r\n/**\r\n * Attempts to parse and interpret a string in an unknown format, possibly\r\n * ASCIIMath and return a canonical LaTeX string.\r\n *\r\n * The format recognized are one of these variations:\r\n * - ASCIIMath: Only supports a subset\r\n * (1/2x)\r\n * 1/2sin x                     -> \\frac {1}{2}\\sin x\r\n * 1/2sinx                      -> \\frac {1}{2}\\sin x\r\n * (1/2sin x (x^(2+1))          // Unbalanced parentheses\r\n * (1/2sin(x^(2+1))             -> \\left(\\frac {1}{2}\\sin \\left(x^{2+1}\\right)\\right)\r\n * alpha + (pi)/(4)             -> \\alpha +\\frac {\\pi }{4}\r\n * x=(-b +- sqrt(b^2 – 4ac))/(2a)\r\n * alpha/beta\r\n * sqrt2 + sqrtx + sqrt(1+a) + sqrt(1/2)\r\n * f(x) = x^2 \"when\" x >= 0\r\n * AA n in QQ\r\n * AA x in RR \",\" |x| > 0\r\n * AA x in RR \",\" abs(x) > 0\r\n *\r\n * - UnicodeMath (generated by Microsoft Word): also only supports a subset\r\n *      - See https://www.unicode.org/notes/tn28/UTN28-PlainTextMath-v3.1.pdf\r\n * √(3&x+1)\r\n * {a+b/c}\r\n * [a+b/c]\r\n * _a^b x\r\n * lim_(n->\\infty) n\r\n * \\iint_(a=0)^\\infty  a\r\n *\r\n * - \"JavaScript Latex\": a variant that is LaTeX, but with escaped backslashes\r\n *  \\\\frac{1}{2} \\\\sin x\r\n */\r\nexport function parseMathString(\r\n    s: string,\r\n    options?: {\r\n        format?: string;\r\n        inlineShortcuts?: { [key: string]: InlineShortcutDefinition };\r\n    }\r\n) {\r\n    if (!s) return ['latex', ''];\r\n\r\n    // Nothing to do if a single character\r\n    if (s.length <= 1) return ['latex', s];\r\n\r\n    if (!options || options.format !== 'ASCIIMath') {\r\n        // This is not explicitly ASCIIMath. Try to infer if this is LaTex...\r\n\r\n        // If the strings is surrounded by `$..$` or `$$..$$`, assumes it is LaTeX\r\n        const trimedString = s.trim();\r\n        if (\r\n            (trimedString.startsWith('$$') && trimedString.endsWith('$$')) ||\r\n            (trimedString.startsWith('\\\\[') && trimedString.endsWith('\\\\]')) ||\r\n            (trimedString.startsWith('\\\\(') && trimedString.endsWith('\\\\)'))\r\n        ) {\r\n            return [\r\n                'latex',\r\n                trimedString.substring(2, trimedString.length - 2),\r\n            ];\r\n        }\r\n\r\n        if (trimedString.startsWith('$') && trimedString.endsWith('$')) {\r\n            return [\r\n                'latex',\r\n                trimedString.substring(1, trimedString.length - 1),\r\n            ];\r\n        }\r\n\r\n        // Replace double-backslash (coming from JavaScript) to a single one\r\n        s = s.replace(/\\\\\\\\([^\\s\\n])/g, '\\\\$1');\r\n\r\n        if (/\\\\/.test(s)) {\r\n            // If the string includes a '\\' it's probably a LaTeX string\r\n            // (that's not completely true, it could be a UnicodeMath string, since\r\n            // UnicodeMath supports some LaTeX commands. However, we need to pick\r\n            // one in order to correctly interpret {} (which are argument delimiters\r\n            // in LaTeX, and are fences in UnicodeMath)\r\n            return ['latex', s];\r\n        }\r\n    }\r\n\r\n    s = s.replace(/\\u2061/gu, ''); // Remove function application\r\n    s = s.replace(/\\u3016/gu, '{'); // WHITE LENTICULAR BRACKET (grouping)\r\n    s = s.replace(/\\u3017/gu, '}'); // WHITE LENTICULAR BRACKET (grouping)\r\n\r\n    s = s.replace(/([^\\\\])sinx/g, '$1\\\\sin x'); // common typo\r\n    s = s.replace(/([^\\\\])cosx/g, '$1\\\\cos x '); // common typo\r\n    s = s.replace(/\\u2013/g, '-'); // EN-DASH, sometimes used as a minus sign\r\n\r\n    return [\r\n        options?.format || 'ASCIIMath',\r\n        parseMathExpression(s, options ?? {}),\r\n    ];\r\n}\r\n\r\nfunction parseMathExpression(\r\n    s: string,\r\n    options: {\r\n        format?: string;\r\n        inlineShortcuts?: { [key: string]: InlineShortcutDefinition };\r\n    }\r\n) {\r\n    if (!s) return '';\r\n    let done = false;\r\n    let m;\r\n\r\n    if (!done && (s[0] === '^' || s[0] === '_')) {\r\n        // Superscript and subscript\r\n        m = parseMathArgument(s.substr(1), {\r\n            inlineShortcuts: options?.inlineShortcuts ?? {},\r\n            noWrap: true,\r\n        });\r\n        s = s[0] + '{' + m.match + '}';\r\n        s += parseMathExpression(m.rest, options);\r\n        done = true;\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^(sqrt|\\u221a)(.*)/);\r\n        if (m) {\r\n            // Square root\r\n            m = parseMathArgument(m[2], {\r\n                inlineShortcuts: options?.inlineShortcuts ?? {},\r\n                noWrap: true,\r\n            });\r\n            s = '\\\\sqrt{' + m.match + '}';\r\n            s += parseMathExpression(m.rest, options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^(\\\\cbrt|\\u221b)(.*)/);\r\n        if (m) {\r\n            // Cube root\r\n            m = parseMathArgument(m[2], {\r\n                inlineShortcuts: options?.inlineShortcuts ?? {},\r\n                noWrap: true,\r\n            });\r\n            s = '\\\\sqrt[3]{' + m.match + '}';\r\n            s += parseMathExpression(m.rest, options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^abs(.*)/);\r\n        if (m) {\r\n            // Absolute value\r\n            m = parseMathArgument(m[1], {\r\n                inlineShortcuts: options?.inlineShortcuts ?? {},\r\n                noWrap: true,\r\n            });\r\n            s = '\\\\left|' + m.match + '\\\\right|';\r\n            s += parseMathExpression(m.rest, options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^[\"”“](.*?)[\"”“](.*)/);\r\n        if (m) {\r\n            // Quoted text\r\n            s = '\\\\text{' + m[1] + '}';\r\n            s += parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^([^a-zA-Z({[_^\\\\\\s\"]+)(.*)/);\r\n        // A string of symbols...\r\n        // Could be a binary or relational operator, etc...\r\n        if (m) {\r\n            s = paddedShortcut(m[1], options);\r\n            s += parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done && /^(f|g|h)[^a-zA-Z]/.test(s)) {\r\n        // This could be a function...\r\n        m = parseMathArgument(s.substring(1), {\r\n            inlineShortcuts: options.inlineShortcuts ?? {},\r\n            noWrap: true,\r\n        });\r\n        if (s[1] === '(') {\r\n            s = s[0] + '\\\\mleft(' + m.match + '\\\\mright)';\r\n        } else {\r\n            s = s[0] + m.match;\r\n        }\r\n        s += parseMathExpression(m.rest, options);\r\n        done = true;\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^([a-zA-Z]+)(.*)/);\r\n        if (m) {\r\n            // Some alphabetical string...\r\n            // Could be a function name (sin) or symbol name (alpha)\r\n            s = paddedShortcut(m[1], options);\r\n            s += parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done) {\r\n        m = parseMathArgument(s, {\r\n            inlineShortcuts: options.inlineShortcuts ?? {},\r\n            noWrap: true,\r\n        });\r\n        if (m.match && m.rest[0] === '/') {\r\n            // Fraction\r\n            const m2 = parseMathArgument(m.rest.substr(1), {\r\n                inlineShortcuts: options.inlineShortcuts ?? {},\r\n                noWrap: true,\r\n            });\r\n            if (m2.match) {\r\n                s =\r\n                    '\\\\frac{' +\r\n                    m.match +\r\n                    '}{' +\r\n                    m2.match +\r\n                    '}' +\r\n                    parseMathExpression(m2.rest, options);\r\n            }\r\n            done = true;\r\n        } else if (m.match) {\r\n            if (s[0] === '(') {\r\n                s =\r\n                    '\\\\left(' +\r\n                    m.match +\r\n                    '\\\\right)' +\r\n                    parseMathExpression(m.rest, options);\r\n            } else {\r\n                s = m.match + parseMathExpression(m.rest, options);\r\n            }\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    if (!done) {\r\n        m = s.match(/^(\\s+)(.*)$/);\r\n        // Whitespace\r\n        if (m) {\r\n            s = ' ' + parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\n/**\r\n * Parse a math argument, as defined by ASCIIMath and UnicodeMath:\r\n * - Either an expression fenced in (), {} or []\r\n * - a number (- sign, digits, decimal point, digits)\r\n * - a single [a-zA-Z] letter (an identifier)\r\n * - a multi-letter shortcut (e.g., pi)\r\n * - a LaTeX command (\\pi) (for UnicodeMath)\r\n * @return\r\n * - match: the parsed (and converted) portion of the string that is an argument\r\n * - rest: the raw, unconverted, rest of the string\r\n */\r\nfunction parseMathArgument(\r\n    s: string,\r\n    options: {\r\n        noWrap?: boolean;\r\n        format?: string;\r\n        inlineShortcuts?: { [key: string]: InlineShortcutDefinition };\r\n    }\r\n): { match: string; rest: string } {\r\n    let match = '';\r\n    s = s.trim();\r\n    let rest = s;\r\n    let lFence = s.charAt(0);\r\n    let rFence = { '(': ')', '{': '}', '[': ']' }[lFence];\r\n    if (rFence) {\r\n        // It's a fence\r\n        let level = 1;\r\n        let i = 1;\r\n        while (i < s.length && level > 0) {\r\n            if (s[i] === lFence) level++;\r\n            if (s[i] === rFence) level--;\r\n            i++;\r\n        }\r\n        if (level === 0) {\r\n            // We've found the matching closing fence\r\n            if (options.noWrap && lFence === '(') {\r\n                match = parseMathExpression(s.substring(1, i - 1), options);\r\n            } else {\r\n                if (lFence === '{' && rFence === '}') {\r\n                    lFence = '\\\\{';\r\n                    rFence = '\\\\}';\r\n                }\r\n                match =\r\n                    '\\\\left' +\r\n                    lFence +\r\n                    parseMathExpression(s.substring(1, i - 1), options) +\r\n                    '\\\\right' +\r\n                    rFence;\r\n            }\r\n            rest = s.substring(i);\r\n        } else {\r\n            // Unbalanced fence...\r\n            match = s.substring(1, i);\r\n            rest = '';\r\n        }\r\n    } else {\r\n        let m = s.match(/^([a-zA-Z]+)/);\r\n        if (m) {\r\n            // It's a string of letter, maybe a shortcut\r\n            let shortcut = getInlineShortcut(\r\n                'math',\r\n                null,\r\n                s,\r\n                options.inlineShortcuts\r\n            );\r\n            if (shortcut) {\r\n                shortcut = shortcut.replace('_{#?}', '');\r\n                shortcut = shortcut.replace('^{#?}', '');\r\n                return { match: shortcut, rest: s.substring(shortcut.length) };\r\n            }\r\n        }\r\n\r\n        m = s.match(/^([a-zA-Z])/);\r\n        if (m) {\r\n            // It's a single letter\r\n            return { match: m[1], rest: s.substring(1) };\r\n        }\r\n\r\n        m = s.match(/^(-)?\\d+(\\.\\d*)?/);\r\n        if (m) {\r\n            // It's a number\r\n            return { match: m[0], rest: s.substring(m[0].length) };\r\n        }\r\n\r\n        if (!/^\\\\(left|right)/.test(s)) {\r\n            // It's a LaTeX command (but not a \\left\\right)\r\n            m = s.match(/^(\\\\[a-zA-Z]+)/);\r\n            if (m) {\r\n                rest = s.substring(m[1].length);\r\n                match = m[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    return { match: match, rest: rest };\r\n}\r\n\r\nfunction paddedShortcut(s: string, options: { format?: string }) {\r\n    let result = getInlineShortcut('math', null, s, options);\r\n    if (result) {\r\n        result = result.replace('_{#?}', '');\r\n        result = result.replace('^{#?}', '');\r\n        result += ' ';\r\n    } else {\r\n        result = s;\r\n    }\r\n    return result;\r\n}\r\n","import { RIGHT_DELIM } from '../core/definitions';\r\nimport type { Atom } from '../core/atom';\r\nimport type { ModelInterface } from './model-utils';\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\nimport {\r\n    selectionIsCollapsed,\r\n    setSelection,\r\n    getAnchor,\r\n    move,\r\n} from './model-selection';\r\nimport { insert } from './model-insert';\r\n\r\n/**\r\n * Insert a smart fence '(', '{', '[', etc...\r\n * If not handled (because `fence` wasn't a fence), return false.\r\n */\r\nexport function insertSmartFence(\r\n    model: ModelInterface,\r\n    fence: string,\r\n    style\r\n): boolean {\r\n    const parent = model.parent();\r\n\r\n    // We're inserting a middle punctuation, for example as in {...|...}\r\n    if (parent.type === 'leftright' && parent.leftDelim !== '|') {\r\n        if (/\\||\\\\vert|\\\\Vert|\\\\mvert|\\\\mid/.test(fence)) {\r\n            insert(model, '\\\\,\\\\middle' + fence + '\\\\, ', {\r\n                mode: 'math',\r\n                format: 'latex',\r\n                style: style,\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n    if (fence === '{' || fence === '\\\\{') fence = '\\\\lbrace';\r\n    if (fence === '}' || fence === '\\\\}') fence = '\\\\rbrace';\r\n    if (fence === '[' || fence === '\\\\[') fence = '\\\\lbrack';\r\n    if (fence === ']' || fence === '\\\\]') fence = '\\\\rbrack';\r\n\r\n    const rDelim = RIGHT_DELIM[fence];\r\n    if (rDelim && !(parent.type === 'leftright' && parent.leftDelim === '|')) {\r\n        // We have a valid open fence as input\r\n        let s = '';\r\n        const collapsed =\r\n            selectionIsCollapsed(model) ||\r\n            getAnchor(model).type === 'placeholder';\r\n\r\n        if (model.sibling(0).isFunction) {\r\n            // We're before a function (e.g. `\\sin`, or 'f'):  this is an\r\n            // argument list.\r\n            // Use `\\mleft...\\mright'.\r\n            s = '\\\\mleft' + fence + '\\\\mright';\r\n        } else {\r\n            s = '\\\\left' + fence + '\\\\right';\r\n        }\r\n        s += collapsed ? '?' : rDelim;\r\n\r\n        let content = [];\r\n        if (collapsed) {\r\n            // content = model.siblings().slice(model.anchorOffset() + 1);\r\n            content = model\r\n                .siblings()\r\n                .splice(model.anchorOffset() + 1, model.siblings().length);\r\n        }\r\n        insert(model, s, { mode: 'math', format: 'latex', style: style });\r\n        if (collapsed) {\r\n            // Move everything that was after the anchor into the leftright\r\n            model.sibling(0).body = content;\r\n            move(model, -1);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // We did not have a valid open fence. Maybe it's a close fence?\r\n    let lDelim;\r\n    Object.keys(RIGHT_DELIM).forEach((delim) => {\r\n        if (fence === RIGHT_DELIM[delim]) lDelim = delim;\r\n    });\r\n    if (lDelim) {\r\n        // We found the matching open fence, so it was a valid close fence.\r\n        // Note that `lDelim` may not match `fence`. That's OK.\r\n\r\n        // If we're the last atom inside a 'leftright',\r\n        // update the parent\r\n        if (\r\n            parent &&\r\n            parent.type === 'leftright' &&\r\n            model.endOffset() === model.siblings().length - 1\r\n        ) {\r\n            contentWillChange(model);\r\n            parent.rightDelim = fence;\r\n            move(model, +1);\r\n            contentDidChange(model);\r\n            return true;\r\n        }\r\n\r\n        // If we have a 'leftright' sibling to our left\r\n        // with an indeterminate right fence,\r\n        // move what's between us and the 'leftright' inside the leftright\r\n        const siblings = model.siblings();\r\n        let i: number;\r\n        for (i = model.endOffset(); i >= 0; i--) {\r\n            if (\r\n                siblings[i].type === 'leftright' &&\r\n                siblings[i].rightDelim === '?'\r\n            ) {\r\n                break;\r\n            }\r\n        }\r\n        if (i >= 0) {\r\n            contentWillChange(model);\r\n            siblings[i].rightDelim = fence;\r\n            siblings[i].body = (siblings[i].body as Atom[]).concat(\r\n                siblings.slice(i + 1, model.endOffset() + 1)\r\n            );\r\n            siblings.splice(i + 1, model.endOffset() - i);\r\n            setSelection(model, i);\r\n            contentDidChange(model);\r\n            return true;\r\n        }\r\n\r\n        // If we're inside a 'leftright', but not the last atom,\r\n        // and the 'leftright' right delim is indeterminate\r\n        // adjust the body (put everything after the insertion point outside)\r\n        if (\r\n            parent &&\r\n            parent.type === 'leftright' &&\r\n            parent.rightDelim === '?'\r\n        ) {\r\n            contentWillChange(model);\r\n            parent.rightDelim = fence;\r\n\r\n            const tail = siblings.slice(model.endOffset() + 1);\r\n            siblings.splice(model.endOffset() + 1);\r\n            model.path.pop();\r\n\r\n            // Array.prototype.splice.apply(\r\n            //     model.siblings(),\r\n            //     [model.endOffset() + 1, 0].concat(tail)\r\n            // );\r\n            // @revisit: veryfiy this does the right thing\r\n            model.siblings().splice(model.endOffset() + 1, 0, ...tail);\r\n            contentDidChange(model);\r\n\r\n            return true;\r\n        }\r\n\r\n        // Is our grand-parent a 'leftright'?\r\n        // If `\\left(\\frac{1}{x|}\\right?` with the caret at `|`\r\n        // go up to the 'leftright' and apply it there instead\r\n        const grandparent = model.ancestor(2);\r\n        if (\r\n            grandparent &&\r\n            grandparent.type === 'leftright' &&\r\n            grandparent.rightDelim === '?' &&\r\n            model.endOffset() === siblings.length - 1\r\n        ) {\r\n            move(model, 1);\r\n            return insertSmartFence(model, fence, style);\r\n        }\r\n\r\n        // Meh... We couldn't find a matching open fence. Just insert the\r\n        // closing fence as a regular character\r\n        insert(model, fence, { mode: 'math', format: 'latex', style: style });\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { Atom, isAtomArray } from '../core/atom';\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\nimport type { ModelInterface } from './model-utils';\r\nimport { selectionIsCollapsed, forEachSelected } from './model-selection';\r\n\r\nimport { Style, FontSeries, FontShape } from '../public/core';\r\n\r\nexport function applyStyleToUnstyledAtoms(\r\n    atom: Atom | Atom[],\r\n    style: Style\r\n): void {\r\n    if (!atom || !style) return;\r\n    if (isAtomArray(atom)) {\r\n        // Apply styling options to each atom\r\n        atom.forEach((x) => applyStyleToUnstyledAtoms(x, style));\r\n    } else if (typeof atom === 'object') {\r\n        if (\r\n            !atom.color &&\r\n            !atom.backgroundColor &&\r\n            !atom.fontFamily &&\r\n            !atom.fontShape &&\r\n            !atom.fontSeries &&\r\n            !atom.fontSize\r\n        ) {\r\n            atom.applyStyle(style);\r\n            applyStyleToUnstyledAtoms(atom.body as Atom[], style);\r\n            applyStyleToUnstyledAtoms(atom.numer, style);\r\n            applyStyleToUnstyledAtoms(atom.denom, style);\r\n            applyStyleToUnstyledAtoms(atom.index, style);\r\n            applyStyleToUnstyledAtoms(atom.overscript, style);\r\n            applyStyleToUnstyledAtoms(atom.underscript, style);\r\n            applyStyleToUnstyledAtoms(atom.subscript, style);\r\n            applyStyleToUnstyledAtoms(atom.superscript, style);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Apply a style (color, background) to the selection.\r\n *\r\n * If the style is already applied to the selection, remove it. If the selection\r\n * has the style partially applied (i.e. only some sections), remove it from\r\n * those sections, and apply it to the entire selection.\r\n */\r\n\r\nexport function applyStyle(\r\n    model: ModelInterface,\r\n    style: Style & { series?: FontSeries; shape?: FontShape; size?: string }\r\n): void {\r\n    // No selection, nothing to do.\r\n    if (selectionIsCollapsed(model)) return;\r\n\r\n    function everyStyle(property, value): boolean {\r\n        let result = true;\r\n        forEachSelected(\r\n            model,\r\n            (x) => {\r\n                result = result && x[property] === value;\r\n            },\r\n            { recursive: true }\r\n        );\r\n        return result;\r\n    }\r\n\r\n    if (style.color && everyStyle('color', style.color)) {\r\n        // If the selection already has this color, turn it off\r\n        style.color = 'none';\r\n    }\r\n\r\n    if (\r\n        style.backgroundColor &&\r\n        everyStyle('backgroundColor', style.backgroundColor)\r\n    ) {\r\n        // If the selection already has this color, turn it off\r\n        style.backgroundColor = 'none';\r\n    }\r\n\r\n    if (style.fontFamily && everyStyle('fontFamily', style.fontFamily)) {\r\n        // If the selection already has this font family, turn it off\r\n        style.fontFamily = 'none';\r\n    }\r\n\r\n    if (style.series) style.fontSeries = style.series;\r\n    if (style.fontSeries && everyStyle('fontSeries', style.fontSeries)) {\r\n        // If the selection already has this series (weight), turn it off\r\n        style.fontSeries = 'auto';\r\n    }\r\n\r\n    if (style.shape) style.fontShape = style.shape;\r\n    if (style.fontShape && everyStyle('fontShape', style.fontShape)) {\r\n        // If the selection already has this shape (italic), turn it off\r\n        style.fontShape = 'auto';\r\n    }\r\n\r\n    if (style.size) style.fontSize = style.size;\r\n    if (style.fontSize && everyStyle('fontSize', style.fontSize)) {\r\n        // If the selection already has this size, reset it to default size\r\n        style.fontSize = 'size5';\r\n    }\r\n\r\n    contentWillChange(model);\r\n    forEachSelected(model, (x) => x.applyStyle(style), { recursive: true });\r\n    contentDidChange(model);\r\n}\r\n","import { InsertOptions } from '../public/mathfield';\r\n\r\nimport {\r\n    Atom,\r\n    COMMAND_MODE_CHARACTERS,\r\n    isAtomArray,\r\n    parseString,\r\n} from '../core/core';\r\n\r\nimport { parseMathString } from './parse-math-string';\r\n\r\nimport type { ModelInterface } from './model-utils';\r\nimport { invalidateVerbatimLatex, isEmptyMathlist } from './model-utils';\r\nimport { arrayCellCount, arrayCell } from './model-array-utils';\r\nimport { deleteAtoms, deleteChar } from './model-delete';\r\nimport { insertSmartFence } from './model-smartfence';\r\nimport { applyStyleToUnstyledAtoms } from './model-styling';\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\n\r\nimport {\r\n    selectionIsCollapsed,\r\n    getAnchorMode,\r\n    setSelection,\r\n    leap,\r\n    move,\r\n    getSelectedAtoms,\r\n    collapseSelectionBackward,\r\n    collapseSelectionForward,\r\n    getImplicitArgOffset,\r\n    getContentFromSiblings,\r\n} from './model-selection';\r\n\r\nexport function insert(\r\n    model: ModelInterface,\r\n    s: string,\r\n    options: InsertOptions\r\n): void {\r\n    // Try to insert a smart fence.\r\n    if (!(options.smartFence ?? false)) {\r\n        // When smartFence is turned off, only do a \"smart\" fence insert\r\n        // if we're inside a `leftright`, at the last char\r\n        const parent = model.parent();\r\n        if (\r\n            parent?.type === 'leftright' &&\r\n            parent.rightDelim === '?' &&\r\n            model.endOffset() === model.siblings().length - 1 &&\r\n            /^[)}\\]|]$/.test(s)\r\n        ) {\r\n            contentWillChange(model);\r\n            parent.rightDelim = s;\r\n            move(model, +1);\r\n            contentDidChange(model);\r\n            return;\r\n        }\r\n    } else if (insertSmartFence(model, s, options.style)) {\r\n        return;\r\n    }\r\n\r\n    const suppressChangeNotifications = model.suppressChangeNotifications;\r\n    if (options.suppressChangeNotifications) {\r\n        model.suppressChangeNotifications = true;\r\n    }\r\n    // Dispatch notifications\r\n    contentWillChange(model);\r\n    const contentWasChanging = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n\r\n    if (!options.insertionMode) options.insertionMode = 'replaceSelection';\r\n    if (!options.selectionMode) options.selectionMode = 'placeholder';\r\n    if (!options.format) options.format = 'auto';\r\n    options.macros = options.macros ?? model.options.macros;\r\n\r\n    const mode = options.mode || getAnchorMode(model);\r\n    let mathlist;\r\n\r\n    // Save the content of the selection, if any\r\n    const args = [getSelectedAtoms(model)];\r\n\r\n    // If a placeholder was specified, use it\r\n    if (options.placeholder !== undefined) {\r\n        args['?'] = options.placeholder;\r\n    }\r\n\r\n    // Delete any selected items\r\n    if (\r\n        options.insertionMode === 'replaceSelection' &&\r\n        !selectionIsCollapsed(model)\r\n    ) {\r\n        deleteChar(model);\r\n    } else if (options.insertionMode === 'replaceAll') {\r\n        model.root.body = [];\r\n        model.root.latex = '';\r\n        model.path = [{ relation: 'body', offset: 0 }];\r\n        model.extent = 0;\r\n    } else if (options.insertionMode === 'insertBefore') {\r\n        collapseSelectionBackward(model);\r\n    } else if (options.insertionMode === 'insertAfter') {\r\n        collapseSelectionForward(model);\r\n    }\r\n\r\n    // Delete any placeholders before or after the insertion point\r\n    const siblings = model.siblings();\r\n    const firstOffset = model.startOffset();\r\n    if (\r\n        firstOffset + 1 < siblings.length &&\r\n        siblings[firstOffset + 1] &&\r\n        siblings[firstOffset + 1].type === 'placeholder'\r\n    ) {\r\n        deleteChar(model, 1);\r\n    } else if (\r\n        firstOffset > 0 &&\r\n        siblings[firstOffset] &&\r\n        siblings[firstOffset].type === 'placeholder'\r\n    ) {\r\n        deleteChar(model, -1);\r\n    }\r\n\r\n    if (mode === 'math' && options.format === 'ASCIIMath') {\r\n        [, s] = parseMathString(s, { format: 'ASCIIMath' });\r\n        mathlist = parseString(\r\n            s,\r\n            'math',\r\n            null,\r\n            options?.macros,\r\n            false,\r\n            model.listeners.onError\r\n        );\r\n\r\n        // Simplify result.\r\n        simplifyParen(model, mathlist);\r\n    } else if (\r\n        mode !== 'text' &&\r\n        (options.format === 'auto' || options.format === 'latex')\r\n    ) {\r\n        if (mode === 'command') {\r\n            // Short-circuit the tokenizer and parser if in command mode\r\n            mathlist = [];\r\n            for (const c of s) {\r\n                if (COMMAND_MODE_CHARACTERS.test(c)) {\r\n                    mathlist.push(new Atom('command', 'command', c));\r\n                }\r\n            }\r\n        } else if (s === '\\u001b') {\r\n            // Insert an 'esc' character triggers the command mode\r\n            mathlist = [new Atom('command', 'command', '\\\\')];\r\n        } else {\r\n            if (options.format === 'auto') {\r\n                [options.format, s] = parseMathString(s);\r\n            }\r\n\r\n            // Replace placeholders\r\n            s = s.replace(/(^|[^\\\\])#\\?/g, '$1\\\\placeholder{}');\r\n\r\n            if (args[0]) {\r\n                // There was a selection, we'll use it for #@\r\n                s = s.replace(/(^|[^\\\\])#@/g, '$1#0');\r\n            } else if (/(^|[^\\\\])#@/.test(s)) {\r\n                // If we're inserting a latex fragment that includes a #@ argument\r\n                // substitute the preceding `mord`s or text mode atoms for it (implicit argument)\r\n                const offset = getImplicitArgOffset(model);\r\n                s = s.replace(\r\n                    /(^|[^\\\\])#@/g,\r\n                    '$1' +\r\n                        getContentFromSiblings(\r\n                            model,\r\n                            offset + 1,\r\n                            model.startOffset()\r\n                        )\r\n                );\r\n                // Delete the implicit argument\r\n                deleteAtoms(model, offset - model.startOffset());\r\n            } else {\r\n                // No selection, no 'mord' before. Let's make '#@' a placeholder.\r\n                s = s.replace(/(^|[^\\\\])#@/g, '$1#?');\r\n            }\r\n            if (/^\\$\\$(.*)\\$\\$$/.test(s)) {\r\n                s = s.substring(2, s.length - 2);\r\n            }\r\n            mathlist = parseString(\r\n                s,\r\n                mode,\r\n                args,\r\n                options.macros,\r\n                options.smartFence ?? false,\r\n                model.listeners.onError\r\n            );\r\n\r\n            // Simplify result.\r\n            if (options.format !== 'latex') {\r\n                simplifyParen(model, mathlist);\r\n            }\r\n        }\r\n    } else if (mode === 'text' || options.format === 'text') {\r\n        // Map special TeX characters to alternatives\r\n        // Must do this one first, since other replacements include backslash\r\n        s = s.replace(/\\\\/g, '\\\\textbackslash ');\r\n\r\n        s = s.replace(/#/g, '\\\\#');\r\n        s = s.replace(/\\$/g, '\\\\$');\r\n        s = s.replace(/%/g, '\\\\%');\r\n        s = s.replace(/&/g, '\\\\&');\r\n        // s = s.replace(/:/g, '\\\\colon');     // text colon?\r\n        // s = s.replace(/\\[/g, '\\\\lbrack');\r\n        // s = s.replace(/]/g, '\\\\rbrack');\r\n        s = s.replace(/_/g, '\\\\_');\r\n        s = s.replace(/{/g, '\\\\textbraceleft ');\r\n        s = s.replace(/}/g, '\\\\textbraceright ');\r\n        s = s.replace(/\\^/g, '\\\\textasciicircum ');\r\n        s = s.replace(/~/g, '\\\\textasciitilde ');\r\n        s = s.replace(/£/g, '\\\\textsterling ');\r\n\r\n        mathlist = parseString(\r\n            s,\r\n            'text',\r\n            args,\r\n            options.macros,\r\n            false,\r\n            model.listeners.onError\r\n        );\r\n    }\r\n\r\n    // Something has been inserted, and the parent's verbatim latex is no longer valid\r\n    invalidateVerbatimLatex(model);\r\n\r\n    // Some atoms may already have a style (for example if there was an\r\n    // argument, i.e. the selection, that this was applied to).\r\n    // So, don't apply style to atoms that are already styled, but *do*\r\n    // apply it to newly created atoms that have no style yet.\r\n    applyStyleToUnstyledAtoms(mathlist, options.style);\r\n\r\n    // Insert the mathlist at the position following the anchor\r\n    const parent = model.parent();\r\n    if (\r\n        options.format !== 'latex' &&\r\n        model.options.removeExtraneousParentheses &&\r\n        parent &&\r\n        parent.type === 'leftright' &&\r\n        parent.leftDelim === '(' &&\r\n        isEmptyMathlist(parent.body as Atom[]) &&\r\n        mathlist &&\r\n        mathlist.length === 1 &&\r\n        mathlist[0].type === 'genfrac'\r\n    ) {\r\n        // If the insert is fraction inside a lefright, remove the leftright\r\n        model.path.pop();\r\n        model.siblings()[model.anchorOffset()] = mathlist[0];\r\n    } else {\r\n        if (options.format === 'latex' && args.length === 1 && !args[0]) {\r\n            // If we are given a latex string with no arguments, store it verbatim\r\n            // Caution: we can only do this if the toLatex() for this parent\r\n            // would return an empty string. If the latex is generated using other\r\n            // properties than parent.body, for example by adding '\\left.' and\r\n            // '\\right.' with a 'leftright' type, we can't use this shortcut.\r\n            if (\r\n                parent.type === 'root' &&\r\n                isEmptyMathlist(parent.body as Atom[])\r\n            ) {\r\n                parent.latex = s;\r\n            }\r\n        }\r\n        Array.prototype.splice.apply(\r\n            model.siblings(),\r\n            [model.anchorOffset() + 1, 0].concat(mathlist)\r\n        );\r\n    }\r\n\r\n    // If needed, make sure there's a first atom in the siblings list\r\n    model.insertFirstAtom();\r\n\r\n    // Prepare to dispatch notifications\r\n    // (for selection changes, then content change)\r\n    model.suppressChangeNotifications = contentWasChanging;\r\n\r\n    // Update the anchor's location\r\n    if (options.selectionMode === 'placeholder') {\r\n        // Move to the next placeholder\r\n        let newPlaceholders = [];\r\n        for (const atom of mathlist) {\r\n            newPlaceholders = newPlaceholders.concat(\r\n                atom.filter((atom) => atom.type === 'placeholder')\r\n            );\r\n        }\r\n        if (newPlaceholders.length === 0 || !leap(model, +1, false)) {\r\n            // No placeholder found, move to right after what we just inserted\r\n            setSelection(model, model.anchorOffset() + mathlist.length);\r\n            // model.path[model.path.length - 1].offset += mathlist.length;\r\n        } else {\r\n            model.announce('move'); // should have placeholder selected\r\n        }\r\n    } else if (options.selectionMode === 'before') {\r\n        // Do nothing: don't change the anchorOffset.\r\n    } else if (options.selectionMode === 'after') {\r\n        setSelection(model, model.anchorOffset() + mathlist.length);\r\n    } else if (options.selectionMode === 'item') {\r\n        setSelection(model, model.anchorOffset(), mathlist.length);\r\n    }\r\n\r\n    contentDidChange(model);\r\n\r\n    model.suppressChangeNotifications = suppressChangeNotifications;\r\n}\r\n\r\nfunction removeParen(list: Atom[]): Atom[] {\r\n    if (!list) return undefined;\r\n\r\n    if (\r\n        list.length === 1 &&\r\n        list[0].type === 'leftright' &&\r\n        list[0].leftDelim === '('\r\n    ) {\r\n        list = list[0].body as Atom[];\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n/**\r\n * If it's a fraction with a parenthesized numerator or denominator\r\n * remove the parentheses\r\n *\r\n */\r\nfunction simplifyParen(model: ModelInterface, atoms: Atom[]): void {\r\n    if (atoms && model.options.removeExtraneousParentheses) {\r\n        for (let i = 0; atoms[i]; i++) {\r\n            if (atoms[i].type === 'leftright' && atoms[i].leftDelim === '(') {\r\n                if (isAtomArray(atoms[i].body)) {\r\n                    let genFracCount = 0;\r\n                    let genFracIndex = 0;\r\n                    let nonGenFracCount = 0;\r\n                    for (let j = 0; atoms[i].body[j]; j++) {\r\n                        if ((atoms[i].body[j] as Atom).type === 'genfrac') {\r\n                            genFracCount++;\r\n                            genFracIndex = j;\r\n                        }\r\n                        if ((atoms[i].body[j] as Atom).type !== 'first') {\r\n                            nonGenFracCount++;\r\n                        }\r\n                    }\r\n                    if (nonGenFracCount === 0 && genFracCount === 1) {\r\n                        // This is a single frac inside a leftright: remove the leftright\r\n                        atoms[i] = atoms[i].body[genFracIndex] as Atom;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        atoms.forEach((atom) => {\r\n            if (atom.type === 'genfrac') {\r\n                simplifyParen(model, atom.numer);\r\n                simplifyParen(model, atom.denom);\r\n                atom.numer = removeParen(atom.numer);\r\n                atom.denom = removeParen(atom.denom);\r\n            }\r\n            if (atom.superscript) {\r\n                simplifyParen(model, atom.superscript);\r\n                atom.superscript = removeParen(atom.superscript);\r\n            }\r\n            if (atom.subscript) {\r\n                simplifyParen(model, atom.subscript);\r\n                atom.subscript = removeParen(atom.subscript);\r\n            }\r\n            if (atom.underscript) {\r\n                simplifyParen(model, atom.underscript);\r\n                atom.underscript = removeParen(atom.underscript);\r\n            }\r\n            if (atom.overscript) {\r\n                simplifyParen(model, atom.overscript);\r\n                atom.overscript = removeParen(atom.overscript);\r\n            }\r\n            if (atom.index) {\r\n                simplifyParen(model, atom.index);\r\n                atom.index = removeParen(atom.index);\r\n            }\r\n            if (atom.type === 'surd') {\r\n                simplifyParen(model, atom.body as Atom[]);\r\n                atom.body = removeParen(atom.body as Atom[]);\r\n            } else if (isAtomArray(atom.body)) {\r\n                simplifyParen(model, atom.body);\r\n            }\r\n\r\n            if (atom.array) {\r\n                for (let i = arrayCellCount(atom.array); i >= 0; i--) {\r\n                    simplifyParen(model, arrayCell(atom.array, i));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { register } from './commands';\r\nimport type { ModelInterface } from './model-utils';\r\nimport {\r\n    setSelection,\r\n    move,\r\n    leap,\r\n    skip,\r\n    jumpToMathFieldBoundary,\r\n    up,\r\n    down,\r\n    collapseSelectionForward,\r\n    getAnchor,\r\n    getAnchorStyle,\r\n    selectGroup,\r\n    extend,\r\n    setSelectionExtent,\r\n    selectAll,\r\n    moveAfterParent,\r\n} from './model-selection';\r\nimport { deleteChar } from './model-delete';\r\nimport { Atom } from '../core/atom';\r\n\r\n/**\r\n * Switch the cursor to the superscript and select it. If there is no subscript\r\n * yet, create one.\r\n */\r\nexport function moveToSuperscript(model: ModelInterface): boolean {\r\n    collapseSelectionForward(model);\r\n    if (getAnchor(model).superscript) {\r\n        if (getAnchor(model).subscript) {\r\n            getAnchor(model).superscript = [new Atom('', 'first')];\r\n        } else {\r\n            const sibling = model.sibling(1);\r\n            if (sibling?.superscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n                //            setSelection(model, model.anchorOffset() + 1);\r\n            } else if (sibling?.subscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n                //            setSelection(model, model.anchorOffset() + 1);\r\n                getAnchor(model).superscript = [new Atom('', 'first')];\r\n            } else {\r\n                if (getAnchor(model).limits !== 'limits') {\r\n                    model\r\n                        .siblings()\r\n                        .splice(\r\n                            model.anchorOffset() + 1,\r\n                            0,\r\n                            new Atom(\r\n                                model.parent().mode,\r\n                                'msubsup',\r\n                                '\\u200b',\r\n                                getAnchorStyle(model)\r\n                            )\r\n                        );\r\n                    model.path[model.path.length - 1].offset += 1;\r\n                    //            setSelection(model, model.anchorOffset() + 1);\r\n                }\r\n                getAnchor(model).superscript = [new Atom('', 'first')];\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    model.path.push({ relation: 'superscript', offset: 0 });\r\n    selectGroup(model);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Switch the cursor to the subscript and select it. If there is no subscript\r\n * yet, create one.\r\n */\r\nexport function moveToSubscript(model: ModelInterface): boolean {\r\n    collapseSelectionForward(model);\r\n    if (!getAnchor(model).subscript) {\r\n        if (getAnchor(model).superscript) {\r\n            getAnchor(model).subscript = [new Atom('', 'first')];\r\n        } else {\r\n            const sibling = model.sibling(1);\r\n            if (sibling?.subscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n                // setSelection(model, model.anchorOffset() + 1);\r\n            } else if (sibling?.superscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n                // setSelection(model, model.anchorOffset() + 1);\r\n                getAnchor(model).subscript = [new Atom('', 'first')];\r\n            } else {\r\n                if (getAnchor(model).limits !== 'limits') {\r\n                    model\r\n                        .siblings()\r\n                        .splice(\r\n                            model.anchorOffset() + 1,\r\n                            0,\r\n                            new Atom(\r\n                                model.parent().mode,\r\n                                'msubsup',\r\n                                '\\u200b',\r\n                                getAnchorStyle(model)\r\n                            )\r\n                        );\r\n                    model.path[model.path.length - 1].offset += 1;\r\n                    // setSelection(model, model.anchorOffset() + 1);\r\n                }\r\n                getAnchor(model).subscript = [new Atom('', 'first')];\r\n            }\r\n        }\r\n    }\r\n    model.path.push({ relation: 'subscript', offset: 0 });\r\n    selectGroup(model);\r\n    return true;\r\n}\r\n\r\n/**\r\n * If cursor is currently in:\r\n * - superscript: move to subscript, creating it if necessary\r\n * - subscript: move to superscript, creating it if necessary\r\n * - numerator: move to denominator\r\n * - denominator: move to numerator\r\n * - otherwise: move to superscript\r\n */\r\nregister(\r\n    {\r\n        moveToOpposite: (model: ModelInterface): boolean => {\r\n            const OPPOSITE_RELATIONS = {\r\n                superscript: 'subscript',\r\n                subscript: 'superscript',\r\n                denom: 'numer',\r\n                numer: 'denom',\r\n            };\r\n            const oppositeRelation = OPPOSITE_RELATIONS[model.relation()];\r\n            if (!oppositeRelation) {\r\n                moveToSuperscript(model);\r\n            }\r\n\r\n            if (!model.parent()[oppositeRelation]) {\r\n                // Don't have children of the opposite relation yet\r\n                // Add them\r\n                model.parent()[oppositeRelation] = [new Atom('', 'first')];\r\n            }\r\n\r\n            setSelection(model, 0, 'end', oppositeRelation);\r\n            return true;\r\n        },\r\n        moveBeforeParent: (model: ModelInterface): boolean => {\r\n            if (model.path.length > 1) {\r\n                model.path.pop();\r\n                setSelection(model, model.anchorOffset() - 1);\r\n                return true;\r\n            }\r\n            model.announce('plonk');\r\n            return false;\r\n        },\r\n        moveAfterParent: (model: ModelInterface): boolean =>\r\n            moveAfterParent(model),\r\n\r\n        moveToNextPlaceholder: (model: ModelInterface): boolean =>\r\n            leap(model, +1),\r\n        moveToPreviousPlaceholder: (model: ModelInterface): boolean =>\r\n            leap(model, -1),\r\n        moveToNextChar: (model: ModelInterface): boolean => move(model, +1),\r\n        moveToPreviousChar: (model: ModelInterface): boolean => move(model, -1),\r\n        moveUp: (model: ModelInterface): boolean => up(model),\r\n        moveDown: (model: ModelInterface): boolean => down(model),\r\n        moveToNextWord: (model: ModelInterface): boolean => skip(model, +1),\r\n        moveToPreviousWord: (model: ModelInterface): boolean => skip(model, -1),\r\n        moveToGroupStart: (model: ModelInterface): boolean =>\r\n            setSelection(model, 0),\r\n        moveToGroupEnd: (model: ModelInterface): boolean =>\r\n            setSelection(model, -1),\r\n        moveToMathFieldStart: (model: ModelInterface): boolean =>\r\n            jumpToMathFieldBoundary(model, -1),\r\n        moveToMathFieldEnd: (model: ModelInterface): boolean =>\r\n            jumpToMathFieldBoundary(model, +1),\r\n        moveToSuperscript: (model: ModelInterface): boolean =>\r\n            moveToSuperscript(model),\r\n    },\r\n    { target: 'model', category: 'selection-anchor' }\r\n);\r\n\r\nregister(\r\n    {\r\n        selectGroup: (model: ModelInterface): boolean => selectGroup(model),\r\n\r\n        selectAll: (model: ModelInterface): boolean => selectAll(model),\r\n        extendToNextChar: (model: ModelInterface): boolean => extend(model, +1),\r\n        extendToPreviousChar: (model: ModelInterface): boolean =>\r\n            extend(model, -1),\r\n        extendToNextWord: (model: ModelInterface): boolean =>\r\n            skip(model, +1, { extend: true }),\r\n        extendToPreviousWord: (model: ModelInterface): boolean =>\r\n            skip(model, -1, { extend: true }),\r\n        extendUp: (model: ModelInterface): boolean =>\r\n            up(model, { extend: true }),\r\n        extendDown: (model: ModelInterface): boolean =>\r\n            down(model, { extend: true }),\r\n        /**\r\n         * Extend the selection until the next boundary is reached. A boundary\r\n         * is defined by an atom of a different type (mbin, mord, etc...)\r\n         * than the current focus. For example, in \"1234+x=y\", if the focus is between\r\n         * \"1\" and \"2\", invoking `extendToNextBoundary_` would extend the selection\r\n         * to \"234\".\r\n         */\r\n        extendToNextBoundary: (model: ModelInterface): boolean =>\r\n            skip(model, +1, { extend: true }),\r\n\r\n        /**\r\n         * Extend the selection until the previous boundary is reached. A boundary\r\n         * is defined by an atom of a different type (mbin, mord, etc...)\r\n         * than the current focus. For example, in \"1+23456\", if the focus is between\r\n         * \"5\" and \"6\", invoking `extendToPreviousBoundary` would extend the selection\r\n         * to \"2345\".\r\n         */\r\n        extendToPreviousBoundary: (model: ModelInterface): boolean =>\r\n            skip(model, -1, { extend: true }),\r\n        extendToGroupStart: (model: ModelInterface): boolean =>\r\n            setSelectionExtent(model, -model.anchorOffset()),\r\n        extendToGroupEnd: (model: ModelInterface): boolean =>\r\n            setSelectionExtent(\r\n                model,\r\n                model.siblings().length - model.anchorOffset()\r\n            ),\r\n        extendToMathFieldStart: (model: ModelInterface): boolean =>\r\n            jumpToMathFieldBoundary(model, -1, { extend: true }),\r\n        extendToMathFieldEnd: (model: ModelInterface): boolean =>\r\n            jumpToMathFieldBoundary(model, +1, { extend: true }),\r\n    },\r\n    { target: 'model', category: 'selection-extend' }\r\n);\r\n\r\nregister(\r\n    {\r\n        deleteAll: (model: ModelInterface): boolean => {\r\n            selectAll(model);\r\n            return deleteChar(model);\r\n        },\r\n        deleteNextChar: (model: ModelInterface): boolean =>\r\n            deleteChar(model, +1),\r\n        deletePreviousChar: (model: ModelInterface): boolean =>\r\n            deleteChar(model, -1),\r\n        deleteNextWord: (model: ModelInterface): boolean => {\r\n            skip(model, +1, { extend: true });\r\n            return deleteChar(model);\r\n        },\r\n        deletePreviousWord: (model: ModelInterface): boolean => {\r\n            skip(model, -1, { extend: true });\r\n            return deleteChar(model);\r\n        },\r\n        deleteToGroupStart: (model: ModelInterface): boolean => {\r\n            setSelectionExtent(model, -model.anchorOffset());\r\n            return deleteChar(model);\r\n        },\r\n        deleteToGroupEnd: (model: ModelInterface): boolean => {\r\n            jumpToMathFieldBoundary(model, -1, { extend: true });\r\n            return deleteChar(model);\r\n        },\r\n        deleteToMathFieldEnd: (model: ModelInterface): boolean => {\r\n            jumpToMathFieldBoundary(model, +1, { extend: true });\r\n            return deleteChar(model);\r\n        },\r\n    },\r\n    { target: 'model', category: 'delete' }\r\n);\r\n","/**\r\n * This modules handles low-level keyboard events and normalize them across\r\n * browsers.\r\n */\r\n\r\n// These keys on international (non-US QWERTY) keyboards should\r\n// be mapped to the coresponding virtual keys (they could be shifted keys on\r\n// international keyboards)\r\nconst INTL_KEY = {\r\n    '#': '#',\r\n    '|': '|',\r\n    '[': 'BracketLeft',\r\n    ']': 'BracketRight',\r\n    '-': 'Minus',\r\n    '+': 'Plus',\r\n    '=': 'Equal',\r\n    '/': 'Slash',\r\n    '\\\\': 'Backslash',\r\n};\r\n\r\nconst KEY_NAMES = {\r\n    Space: 'Spacebar',\r\n    ' ': 'Spacebar',\r\n    Escape: 'Esc',\r\n    ArrowLeft: 'Left',\r\n    ArrowUp: 'Up',\r\n    ArrowRight: 'Right',\r\n    ArrowDown: 'Down',\r\n    Delete: 'Del',\r\n};\r\n\r\nconst VIRTUAL_KEY_NAMES = {\r\n    q: 'KeyQ',\r\n    w: 'KeyW',\r\n    e: 'KeyE',\r\n    r: 'KeyR',\r\n    t: 'KeyT',\r\n    y: 'KeyY',\r\n    u: 'KeyU',\r\n    i: 'KeyI',\r\n    o: 'KeyO',\r\n    p: 'KeyP',\r\n    a: 'KeyA',\r\n    s: 'KeyS',\r\n    d: 'KeyD',\r\n    f: 'KeyF',\r\n    g: 'KeyG',\r\n    h: 'KeyH',\r\n    j: 'KeyJ',\r\n    k: 'KeyK',\r\n    l: 'KeyL',\r\n    z: 'KeyZ',\r\n    x: 'KeyX',\r\n    c: 'KeyC',\r\n    v: 'KeyV',\r\n    b: 'KeyB',\r\n    n: 'KeyN',\r\n    m: 'KeyM',\r\n\r\n    '1': 'Digit1',\r\n    '2': 'Digit2',\r\n    '3': 'Digit3',\r\n    '4': 'Digit4',\r\n    '5': 'Digit5',\r\n    '6': 'Digit6',\r\n    '7': 'Digit7',\r\n    '8': 'Digit8',\r\n    '9': 'Digit9',\r\n    '0': 'Digit0',\r\n\r\n    '!': 'Shift-Digit1',\r\n    '@': 'Shift-Digit2',\r\n    '#': 'Shift-Digit3',\r\n    $: 'Shift-Digit4',\r\n    '%': 'Shift-Digit5',\r\n    '^': 'Shift-Digit6',\r\n    '&': 'Shift-Digit7',\r\n    '*': 'Shift-Digit8',\r\n    '(': 'Shift-Digit9',\r\n    ')': 'Shift-Digit0',\r\n\r\n    '-': 'Minus',\r\n    _: 'Shift-Minus',\r\n\r\n    '/': 'Slash',\r\n    '\\\\': 'Backslash', // Some virtual keyboards (iOS) return '\\' as the event.key\r\n    // with no evt.code\r\n    '|': 'Shift-Backslash',\r\n    '?': 'Shift-Slash',\r\n\r\n    ' ': 'Spacebar',\r\n};\r\n\r\n/**\r\n *\r\n * Create a normalized string representation of the key combo,\r\n * i.e., key code and modifier keys. For example:\r\n * - `Ctrl-Shift-Alt-KeyF`\r\n * - `Alt-Space`\r\n * - `Shift-Digit6`\r\n * @todo See https://github.com/madrobby/keymaster/blob/master/keymaster.js\r\n * - Doesn't work very well for command-<key>\r\n * - Returns \"Alt-Alt\" when only the Alt key is pressed\r\n */\r\nfunction keyboardEventToString(evt) {\r\n    let keyname;\r\n    let useModifiers = true;\r\n\r\n    if (evt.key === 'Unidentified') {\r\n        // On Android, the evt.key seems to always be Unidentified.\r\n        // Get the value entered in the event target\r\n        if (evt.target) {\r\n            keyname = VIRTUAL_KEY_NAMES[evt.target.value] || evt.target.value;\r\n        }\r\n    }\r\n\r\n    if (!keyname) {\r\n        if (INTL_KEY[evt.key]) {\r\n            keyname = INTL_KEY[evt.key];\r\n            useModifiers = false;\r\n        } else {\r\n            keyname = KEY_NAMES[evt.key];\r\n        }\r\n\r\n        // For virtual keyboards (iOS, Android) and Microsoft Edge (!)\r\n        // the `evt.code`, which represents the physical key pressed, is set\r\n        // to undefined. In that case, map the virtual key (\"q\") to a\r\n        // pseudo-hardware key (\"KeyQ\")\r\n        if (!keyname) {\r\n            keyname = VIRTUAL_KEY_NAMES[evt.key.toLowerCase()];\r\n        }\r\n    }\r\n\r\n    if (!keyname && evt.code) {\r\n        keyname = KEY_NAMES[evt.code] || evt.code;\r\n    }\r\n\r\n    const modifiers = [];\r\n\r\n    if (evt.ctrlKey) modifiers.push('Ctrl');\r\n    if (evt.metaKey) modifiers.push('Meta');\r\n    if (useModifiers && evt.altKey) modifiers.push('Alt');\r\n    if (useModifiers && evt.shiftKey) modifiers.push('Shift');\r\n\r\n    // If no modifiers, simply return the key name\r\n    if (modifiers.length === 0) return keyname;\r\n\r\n    modifiers.push(keyname);\r\n\r\n    return modifiers.join('-');\r\n}\r\n\r\n/**\r\n * Setup to capture the keyboard events from a `TextArea` and redispatch them to\r\n * handlers.\r\n *\r\n * In general, commands (arrows, delete, etc..) should be handled\r\n * in the `keystroke()` handler while text input should be handled in\r\n * `typedtext()`.\r\n *\r\n * @param {HTMLElement} textarea A `TextArea` element that will capture the keyboard\r\n * events. While this element will usually be a `TextArea`, it could be any\r\n * element that is focusable and can receive keyboard events.\r\n * @param {Object.<string, any>} handlers\r\n * @param {HTMLElement} [handlers.container]\r\n * @param {function} handlers.keystroke invoked on a key down event, including\r\n * for special keys such as ESC, arrow keys, tab, etc... and their variants\r\n * with modifiers.\r\n * @param {function} handlers.typedtext invoked on a keypress or other events\r\n * when a key corresponding to a character has been pressed. This include `a-z`,\r\n * `0-9`, `{}`, `^_()`, etc...\r\n * This does not include arrow keys, tab, etc... but does include 'space'\r\n * When a 'character' key is pressed, both `keystroke()` and `typedtext()` will\r\n * be invoked. When a control/function key is pressed, only `keystroke()` will\r\n * be invoked. In some cases, for example when using input methods or entering\r\n * emoji, only `typedtext()` will be invoked.\r\n * @param {function} handlers.paste(text) Invoked in response to a paste\r\n * command. Not all browsers support this (Chrome doesn't), so typedtext()\r\n * will be invoked instead.\r\n * @param {function} handlers.cut\r\n * @param {function} handlers.copy\r\n * @memberof module:editor/keyboard\r\n * @private\r\n */\r\nfunction delegateKeyboardEvents(textarea, handlers) {\r\n    let keydownEvent = null;\r\n    let keypressEvent = null;\r\n    let compositionInProgress = false;\r\n    let deadKey = false;\r\n\r\n    // This callback is invoked after a keyboard event has been processed\r\n    // by the textarea\r\n    let callbackTimeoutID;\r\n\r\n    function defer(cb) {\r\n        clearTimeout(callbackTimeoutID);\r\n        callbackTimeoutID = setTimeout(function () {\r\n            clearTimeout(callbackTimeoutID);\r\n            cb();\r\n        });\r\n    }\r\n\r\n    function handleTypedText() {\r\n        // Some browsers (Firefox, Opera) fire a keypress event for commands\r\n        // such as command-C where there might be a non-empty selection.\r\n        // We need to ignore these.\r\n        if (hasSelection(textarea)) return;\r\n\r\n        const text = textarea.value;\r\n        textarea.value = '';\r\n        if (text.length > 0) handlers.typedText(text);\r\n    }\r\n\r\n    function onKeydown(e) {\r\n        const allowDeadKey =\r\n            typeof handlers.allowDeadKey === 'function' &&\r\n            handlers.allowDeadKey();\r\n        if (\r\n            !allowDeadKey &&\r\n            (e.key === 'Dead' || e.key === 'Unidentified' || e.keyCode === 229)\r\n        ) {\r\n            deadKey = true;\r\n            compositionInProgress = false;\r\n            // This sequence seems to cancel dead keys\r\n            // but don't call our blur/focus handlers\r\n            const savedBlur = handlers.blur;\r\n            const savedFocus = handlers.focus;\r\n            handlers.blur = null;\r\n            handlers.focus = null;\r\n            textarea.blur();\r\n            textarea.focus();\r\n            handlers.blur = savedBlur;\r\n            handlers.focus = savedFocus;\r\n        } else {\r\n            deadKey = false;\r\n        }\r\n        if (\r\n            !compositionInProgress &&\r\n            e.code !== 'CapsLock' &&\r\n            !/(Control|Meta|Alt|Shift)(Right|Left)/.test(e.code)\r\n        ) {\r\n            keydownEvent = e;\r\n            keypressEvent = null;\r\n            return handlers.keystroke(keyboardEventToString(e), e);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function onKeypress(e) {\r\n        // If this is not the first keypress after a keydown, that is,\r\n        // if this is a repeated keystroke, call the keystroke handler.\r\n        if (!compositionInProgress) {\r\n            if (keydownEvent && keypressEvent) {\r\n                handlers.keystroke(\r\n                    keyboardEventToString(keydownEvent),\r\n                    keydownEvent\r\n                );\r\n            }\r\n\r\n            keypressEvent = e;\r\n            defer(handleTypedText);\r\n        }\r\n    }\r\n\r\n    function onKeyup() {\r\n        // If we've received a keydown, but no keypress, check what's in the\r\n        // textarea field.\r\n        if (!compositionInProgress && keydownEvent && !keypressEvent) {\r\n            handleTypedText();\r\n        }\r\n    }\r\n\r\n    function onPaste() {\r\n        // In some cases (Linux browsers), the text area might not be focused\r\n        // when doing a middle-click paste command.\r\n        textarea.focus();\r\n        const text = textarea.value;\r\n        textarea.value = '';\r\n        if (text.length > 0) handlers.paste(text);\r\n    }\r\n\r\n    function onCopy(e) {\r\n        if (handlers.copy) handlers.copy(e);\r\n    }\r\n\r\n    function onCut(e) {\r\n        if (handlers.cut) handlers.cut(e);\r\n    }\r\n\r\n    function onBlur() {\r\n        keydownEvent = null;\r\n        keypressEvent = null;\r\n        if (handlers.blur) handlers.blur();\r\n    }\r\n    function onFocus() {\r\n        if (handlers.focus) {\r\n            handlers.focus();\r\n        }\r\n    }\r\n\r\n    const target = textarea || handlers.container;\r\n\r\n    target.addEventListener('keydown', onKeydown, true);\r\n    target.addEventListener('keypress', onKeypress, true);\r\n    target.addEventListener('keyup', onKeyup, true);\r\n    target.addEventListener('paste', onPaste, true);\r\n    target.addEventListener('copy', onCopy, true);\r\n    target.addEventListener('cut', onCut, true);\r\n    target.addEventListener('blur', onBlur, true);\r\n    target.addEventListener('focus', onFocus, true);\r\n    target.addEventListener(\r\n        'compositionstart',\r\n        () => {\r\n            compositionInProgress = true;\r\n        },\r\n        true\r\n    );\r\n    target.addEventListener(\r\n        'compositionend',\r\n        () => {\r\n            compositionInProgress = false;\r\n            defer(handleTypedText);\r\n        },\r\n        true\r\n    );\r\n\r\n    // The `input` handler gets called when the field is changed, for example\r\n    // with input methods or emoji input...\r\n    target.addEventListener('input', () => {\r\n        if (deadKey) {\r\n            const savedBlur = handlers.blur;\r\n            const savedFocus = handlers.focus;\r\n            handlers.blur = null;\r\n            handlers.focus = null;\r\n            textarea.blur();\r\n            textarea.focus();\r\n            handlers.blur = savedBlur;\r\n            handlers.focus = savedFocus;\r\n            deadKey = false;\r\n            compositionInProgress = false;\r\n            defer(handleTypedText);\r\n        } else if (!compositionInProgress) {\r\n            defer(handleTypedText);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hasSelection(textarea) {\r\n    return textarea.selectionStart !== textarea.selectionEnd;\r\n}\r\n\r\nfunction eventToChar(evt) {\r\n    if (!evt) return '';\r\n    let result;\r\n    if (evt.key === 'Unidentified') {\r\n        // On Android, the evt.key seems to always be 'Unidentified'.\r\n        // Get the value entered in the event target\r\n        if (evt.target) {\r\n            result = evt.target.value;\r\n        }\r\n    }\r\n    result = result || evt.key || evt.code;\r\n    if (\r\n        /^(Return|Enter|Tab|Escape|Delete|PageUp|PageDown|Home|End|Help|ArrowLeft|ArrowRight|ArrowUp|ArrowDown)$/.test(\r\n            result\r\n        )\r\n    ) {\r\n        result = '';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction charToEvent(c) {\r\n    const result = {\r\n        key: c,\r\n        metaKey: false,\r\n        ctrlKey: false,\r\n        altKey: false,\r\n        shiftKey: false,\r\n    };\r\n\r\n    return result;\r\n}\r\n\r\nexport default {\r\n    delegateKeyboardEvents: delegateKeyboardEvents,\r\n    keyboardEventToString,\r\n    eventToChar,\r\n    charToEvent,\r\n};\r\n","import { ModelPrivate } from './model';\r\nimport { insert } from './model-insert';\r\nimport { setPath } from './model-selection';\r\nimport { UndoStateChangeListener } from '../public/config';\r\n\r\ntype UndoRecord = {\r\n    latex: string;\r\n    selection: string;\r\n};\r\n\r\ndeclare class Mathfield {}\r\n\r\ninterface UndoOptions {\r\n    onUndoStateWillChange?: UndoStateChangeListener;\r\n    onUndoStateDidChange?: UndoStateChangeListener;\r\n    suppressChangeNotifications?: boolean;\r\n}\r\n\r\n/**\r\n *\r\n * @class UndoManager\r\n * @property {Atom[]} mathlist\r\n * @property {object[]} stack Stack of undo/redo states\r\n * @property {number} index Index pointing to the undo/redo stack\r\n * @property {number} maximumDepth Maximum number of undo/redo states\r\n */\r\nexport class UndoManager {\r\n    mathlist: ModelPrivate;\r\n    maximumDepth: number;\r\n    record: boolean;\r\n    canCoalesce: boolean;\r\n    stack: UndoRecord[];\r\n    index: number;\r\n\r\n    constructor(mathlist: ModelPrivate) {\r\n        this.mathlist = mathlist;\r\n        this.maximumDepth = 1000;\r\n        this.record = false;\r\n        this.canCoalesce = false;\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.stack = [];\r\n        this.index = -1;\r\n    }\r\n\r\n    startRecording(): void {\r\n        this.record = true;\r\n    }\r\n\r\n    canUndo(): boolean {\r\n        return this.index > 0;\r\n    }\r\n\r\n    canRedo(): boolean {\r\n        return this.index !== this.stack.length - 1;\r\n    }\r\n\r\n    undo(options: UndoOptions): void {\r\n        if (this.canUndo()) {\r\n            if (typeof options?.onUndoStateWillChange === 'function') {\r\n                options.onUndoStateWillChange(this.mathlist.mathfield, 'undo');\r\n            }\r\n            this.restore(this.stack[this.index - 1], options);\r\n            this.index -= 1;\r\n            if (options && typeof options.onUndoStateDidChange === 'function') {\r\n                options.onUndoStateDidChange(this.mathlist.mathfield, 'undo');\r\n            }\r\n            this.canCoalesce = false;\r\n        }\r\n    }\r\n    redo(options: UndoOptions): void {\r\n        if (this.canRedo()) {\r\n            if (typeof options?.onUndoStateWillChange === 'function') {\r\n                options.onUndoStateWillChange(this.mathlist.mathfield, 'redo');\r\n            }\r\n            this.index += 1;\r\n            this.restore(this.stack[this.index], options);\r\n            if (options && typeof options.onUndoStateDidChange === 'function') {\r\n                options.onUndoStateDidChange(this.mathlist.mathfield, 'redo');\r\n            }\r\n            this.canCoalesce = false;\r\n        }\r\n    }\r\n    pop(): void {\r\n        if (this.canUndo()) {\r\n            this.index -= 1;\r\n            this.stack.pop();\r\n        }\r\n    }\r\n    /**\r\n     * Push a snapshot of the content and selection of the mathfield onto the\r\n     * undo stack so that it can potentially be reverted to later.\r\n     */\r\n    snapshot(options: UndoOptions): void {\r\n        if (!this.record) return;\r\n\r\n        if (typeof options?.onUndoStateWillChange === 'function') {\r\n            options.onUndoStateWillChange(this.mathlist.mathfield, 'snapshot');\r\n        }\r\n        // Drop any entries that are part of the redo stack\r\n        this.stack.splice(this.index + 1, this.stack.length - this.index - 1);\r\n        // Add a new entry\r\n        this.stack.push({\r\n            latex: this.mathlist.root.toLatex(false),\r\n            selection: this.mathlist.toString(),\r\n        });\r\n\r\n        this.index++;\r\n        // If we've reached the maximum number of undo operations, forget the\r\n        // oldest one.\r\n        if (this.stack.length > this.maximumDepth) {\r\n            this.stack.shift();\r\n        }\r\n        if (options && typeof options.onUndoStateDidChange === 'function') {\r\n            options.onUndoStateDidChange(this.mathlist.mathfield, 'snapshot');\r\n        }\r\n        this.canCoalesce = false;\r\n    }\r\n\r\n    snapshotAndCoalesce(options: UndoOptions): void {\r\n        if (this.canCoalesce) {\r\n            this.pop();\r\n        }\r\n        this.snapshot(options);\r\n        this.canCoalesce = true;\r\n    }\r\n\r\n    /**\r\n     * Return an object capturing the state of the content and selection of the\r\n     * mathfield. Pass this object to restore() to reset the value of the math\r\n     * field to this saved value. This does not affect the undo stack.\r\n     */\r\n    save(): UndoRecord {\r\n        return {\r\n            latex: this.mathlist.root.toLatex(false),\r\n            selection: this.mathlist.toString(),\r\n        };\r\n    }\r\n    /**\r\n     * Set the content and selection of the mathfield to a value previously\r\n     * captured with save() or stored in the undo stack.\r\n     * This does not affect the undo stack.\r\n     */\r\n    restore(state: UndoRecord, options: UndoOptions): void {\r\n        const wasSuppressing = this.mathlist.suppressChangeNotifications;\r\n        if (typeof options.suppressChangeNotifications !== 'undefined') {\r\n            this.mathlist.suppressChangeNotifications =\r\n                options.suppressChangeNotifications;\r\n        }\r\n\r\n        // Restore the content\r\n        insert(this.mathlist, state ? state.latex : '', {\r\n            ...options,\r\n            format: 'latex',\r\n            mode: 'math',\r\n            insertionMode: 'replaceAll',\r\n            selectionMode: 'after',\r\n            smartFence: false,\r\n        });\r\n\r\n        // Restore the selection\r\n        setPath(\r\n            this.mathlist,\r\n            state ? state.selection : [{ relation: 'body', offset: 0 }]\r\n        );\r\n\r\n        this.mathlist.suppressChangeNotifications = wasSuppressing;\r\n    }\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { Atom } from '../core/atom';\r\n\r\nconst SPECIAL_IDENTIFIERS = {\r\n    '\\u2212': '-', // MINUS SIGN\r\n    '-': '-',\r\n    '\\\\alpha': 'alpha',\r\n    '\\\\beta': 'beta',\r\n    '\\\\gamma': 'gamma',\r\n    '\\\\delta': 'delta',\r\n    '\\\\epsilon': 'epsilon',\r\n    '\\\\varepsilon': 'varepsilon',\r\n    '\\\\zeta': 'zeta',\r\n    '\\\\eta': 'eta',\r\n    '\\\\theta': 'theta',\r\n    '\\\\vartheta': 'vartheta',\r\n    '\\\\iota': 'iota',\r\n    '\\\\kappa': 'kappa',\r\n    '\\\\lambda': 'lambda',\r\n    '\\\\mu': 'mu',\r\n    '\\\\nu': 'nu',\r\n    '\\\\xi': 'xi',\r\n    '\\\\pi': 'pi',\r\n    '\\\\rho': 'rho',\r\n    '\\\\sigma': 'sigma',\r\n    '\\\\tau': 'tau',\r\n    '\\\\upsilon': 'upsilon',\r\n    '\\\\phi': 'phi',\r\n    '\\\\varphi': 'varphi',\r\n    '\\\\chi': 'chi',\r\n    '\\\\psi': 'psi',\r\n    '\\\\omega': 'omega',\r\n    '\\\\Gamma': 'Gamma',\r\n    '\\\\Delta': 'Delta',\r\n    '\\\\Theta': 'Theta',\r\n    '\\\\Lambda': 'Lambda',\r\n    '\\\\Xi': 'Xi',\r\n    '\\\\Pi': 'Pi',\r\n    '\\\\Sigma': 'Sigma',\r\n    '\\\\Phi': 'Phi',\r\n    '\\\\Psi': 'Psi',\r\n    '\\\\Omega': 'Omega',\r\n};\r\n\r\nconst SPECIAL_OPERATORS = {\r\n    '\\\\pm': '+-',\r\n    '\\\\times': 'xx',\r\n    '\\\\colon': ':',\r\n    '\\\\vert': '|',\r\n    '\\\\Vert': '||',\r\n    '\\\\mid': '|',\r\n    '\\\\lbrace': '{',\r\n    '\\\\rbrace': '}',\r\n    '\\\\langle': '(:',\r\n    '\\\\rangle': ':)',\r\n    // '\\\\lfloor': '\\u230a',\r\n    // '\\\\rfloor': '\\u230b',\r\n    // '\\\\lceil': '\\u2308',\r\n    // '\\\\rceil': '\\u2309',\r\n\r\n    // '\\\\vec': '&#x20d7;',\r\n    // '\\\\acute': '&#x00b4;',\r\n    // '\\\\grave': '&#x0060;',\r\n    // '\\\\dot': '&#x02d9;',\r\n    // '\\\\ddot': '&#x00a8;',\r\n    // '\\\\tilde': '&#x007e;',\r\n    // '\\\\bar': '&#x00af;',\r\n    // '\\\\breve': '&#x02d8;',\r\n    // '\\\\check': '&#x02c7;',\r\n    // '\\\\hat': '&#x005e;'\r\n};\r\n\r\nexport function atomToAsciiMath(atom: Atom | Atom[], options?): string {\r\n    if (!atom) return '';\r\n    if (isArray(atom)) {\r\n        let result = '';\r\n        if (atom.length === 0) return '';\r\n        if (atom[0].type === 'first') atom.shift();\r\n        if (atom.length === 0) return '';\r\n        if (atom[0].mode === 'text') {\r\n            // Text mode... put it in (ASCII) quotes\r\n            let i = 0;\r\n            result = '\"';\r\n            while (atom[i] && atom[i].mode === 'text') {\r\n                result += atom[i].body;\r\n                i++;\r\n            }\r\n            result += '\"' + atomToAsciiMath(atom.slice(i), options);\r\n        } else if (atom[0].mode === 'math') {\r\n            let i = 0;\r\n            while (atom[i] && atom[i].mode === 'math') {\r\n                result += atomToAsciiMath(atom[i], options);\r\n                i++;\r\n            }\r\n            result += atomToAsciiMath(atom.slice(i), options);\r\n        } else {\r\n            console.warn('toASCIIMath: Unexpected mode');\r\n        }\r\n        return result.trim();\r\n    }\r\n\r\n    if (atom.mode === 'text') {\r\n        return '\"' + atom.body + '\"'; // text -- add in (ASCII) quotes\r\n    }\r\n\r\n    let result = '';\r\n    const command = atom.symbol;\r\n    let m;\r\n\r\n    switch (atom.type) {\r\n        case 'group':\r\n        case 'root':\r\n            result = atomToAsciiMath(atom.body as Atom[], options);\r\n            break;\r\n\r\n        case 'array':\r\n            break;\r\n\r\n        case 'genfrac':\r\n            if (atom.leftDelim || atom.rightDelim) {\r\n                result +=\r\n                    atom.leftDelim === '.' || !atom.leftDelim\r\n                        ? '{:'\r\n                        : atom.leftDelim;\r\n            }\r\n            if (atom.hasBarLine) {\r\n                result += '(';\r\n                result += atomToAsciiMath(atom.numer, options);\r\n                result += ')/(';\r\n                result += atomToAsciiMath(atom.denom, options);\r\n                result += ')';\r\n            } else {\r\n                // No bar line, i.e. \\choose, etc...\r\n                result += '(' + atomToAsciiMath(atom.numer, options) + '),';\r\n                result += '(' + atomToAsciiMath(atom.denom, options) + ')';\r\n            }\r\n            if (atom.leftDelim || atom.rightDelim) {\r\n                result +=\r\n                    atom.rightDelim === '.' || !atom.rightDelim\r\n                        ? '{:'\r\n                        : atom.rightDelim;\r\n            }\r\n            break;\r\n\r\n        case 'surd':\r\n            if (atom.index) {\r\n                result +=\r\n                    'root(' +\r\n                    atomToAsciiMath(atom.index, options) +\r\n                    ')(' +\r\n                    atomToAsciiMath(atom.body as Atom[], options) +\r\n                    ')';\r\n            } else {\r\n                result +=\r\n                    'sqrt(' +\r\n                    atomToAsciiMath(atom.body as Atom[], options) +\r\n                    ')';\r\n            }\r\n            break;\r\n\r\n        case 'leftright':\r\n            result +=\r\n                atom.leftDelim === '.' || !atom.leftDelim\r\n                    ? '{:'\r\n                    : atom.leftDelim;\r\n            result += atomToAsciiMath(atom.body as Atom[], options);\r\n            result +=\r\n                atom.rightDelim === '.' || !atom.rightDelim\r\n                    ? ':}'\r\n                    : atom.rightDelim;\r\n            break;\r\n\r\n        case 'sizeddelim':\r\n        case 'delim':\r\n            // result += '<mo separator=\"true\"' + makeID(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.delim] || atom.delim) + '</mo>';\r\n            break;\r\n\r\n        case 'overlap':\r\n            break;\r\n\r\n        case 'overunder':\r\n            break;\r\n\r\n        case 'mord':\r\n            // @todo, deal with some special identifiers: \\alpha, etc...\r\n            result =\r\n                SPECIAL_IDENTIFIERS[command] ||\r\n                command ||\r\n                (typeof atom.body === 'string' ? atom.body : '');\r\n            if (result[0] === '\\\\') result += '';\r\n            m = command\r\n                ? command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/)\r\n                : null;\r\n            if (m) {\r\n                // It's a \\char command\r\n                result = String.fromCharCode(parseInt('0x' + m[1]));\r\n            } else if (result.length > 0 && result.charAt(0) === '\\\\') {\r\n                // atom is an identifier with no special handling. Use the\r\n                // Unicode value\r\n                if (typeof atom.body === 'string') {\r\n                    result = atom.body.charAt(0);\r\n                } else {\r\n                    result = atom.symbol;\r\n                }\r\n            }\r\n            // result = '<mi' + variant + makeID(atom.id, options) + '>' + xmlEscape(result) + '</mi>';\r\n            break;\r\n\r\n        case 'mbin':\r\n        case 'mrel':\r\n        case 'textord':\r\n        case 'minner':\r\n            if (command && SPECIAL_IDENTIFIERS[command]) {\r\n                // Some 'textord' are actually identifiers. Check them here.\r\n                result = SPECIAL_IDENTIFIERS[command];\r\n            } else if (command && SPECIAL_OPERATORS[command]) {\r\n                result = SPECIAL_OPERATORS[command];\r\n            } else {\r\n                result = atom.body as string;\r\n            }\r\n            break;\r\n\r\n        case 'mopen':\r\n        case 'mclose':\r\n            result += atom.body;\r\n            break;\r\n\r\n        case 'mpunct':\r\n            result = SPECIAL_OPERATORS[command] || command;\r\n            break;\r\n\r\n        case 'mop':\r\n            if (atom.body !== '\\u200b') {\r\n                // Not ZERO-WIDTH\r\n                result = '';\r\n                if (command === '\\\\operatorname') {\r\n                    result += atomToAsciiMath(atom.body as Atom[], options);\r\n                } else {\r\n                    result += atom.body || command;\r\n                }\r\n                result += ' ';\r\n            }\r\n            break;\r\n\r\n        case 'mathstyle':\r\n            break;\r\n\r\n        case 'box':\r\n            break;\r\n\r\n        case 'spacing':\r\n            break;\r\n\r\n        case 'enclose':\r\n            break;\r\n\r\n        case 'space':\r\n            result = ' ';\r\n            break;\r\n    }\r\n    // Subscripts before superscripts (according to the ASCIIMath spec)\r\n    if (atom.subscript) {\r\n        result += '_';\r\n        const arg = atomToAsciiMath(atom.subscript, options);\r\n        if (arg.length > 1 && !/^(-)?\\d+(\\.\\d*)?$/.test(arg)) {\r\n            result += '(' + arg + ')';\r\n        } else {\r\n            result += arg;\r\n        }\r\n    }\r\n\r\n    if (atom.superscript) {\r\n        result += '^';\r\n        const arg = atomToAsciiMath(atom.superscript, options);\r\n        if (arg.length > 1 && !/^(-)?\\d+(\\.\\d*)?$/.test(arg)) {\r\n            result += '(' + arg + ')';\r\n        } else {\r\n            result += arg;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","export const STRINGS = {\r\n    en: {\r\n        'keyboard.tooltip.functions': 'Functions',\r\n        'keyboard.tooltip.greek': 'Greek Letters',\r\n        'keyboard.tooltip.command': 'LaTeX Command Mode',\r\n        'keyboard.tooltip.numeric': 'Numeric',\r\n        'keyboard.tooltip.roman': 'Symbols and Roman Letters',\r\n        'tooltip.copy to clipboard': 'Copy to Clipboard',\r\n        'tooltip.redo': 'Redo',\r\n        'tooltip.toggle virtual keyboard': 'Toggle Virtual Keyboard',\r\n        'tooltip.undo': 'Undo',\r\n    },\r\n    ar: {\r\n        'keyboard.tooltip.functions': 'مهام',\r\n        'keyboard.tooltip.greek': 'حروف يونانية',\r\n        'keyboard.tooltip.command': 'حالة تلقي الأوامر اللاتك',\r\n        'keyboard.tooltip.numeric': 'الرقمية',\r\n        'keyboard.tooltip.roman': 'رموز الاحرف الرومانية',\r\n        'tooltip.copy to clipboard': 'نسخ إلى الحافظة',\r\n        'tooltip.redo': 'الإعادة',\r\n        'tooltip.toggle virtual keyboard': 'تبديل لوحة المفاتيح الإفتراضية',\r\n        'tooltip.undo': 'إلغاء',\r\n    },\r\n    de: {\r\n        'keyboard.tooltip.functions': 'Funktionen',\r\n        'keyboard.tooltip.greek': 'Griechische Buchstaben',\r\n        'keyboard.tooltip.command': 'LaTeX-Befehlsmodus',\r\n        'keyboard.tooltip.numeric': 'Numerisch',\r\n        'keyboard.tooltip.roman': 'Symbole und römische Buchstaben',\r\n        'tooltip.copy to clipboard': 'In die Zwischenablage kopieren',\r\n        'tooltip.redo': 'Wiederholen',\r\n        'tooltip.toggle virtual keyboard': 'Virtuelle Tastatur umschalten',\r\n        'tooltip.undo': 'Widerrufen',\r\n    },\r\n    el: {\r\n        'keyboard.tooltip.functions': 'συναρτήσεις',\r\n        'keyboard.tooltip.greek': 'ελληνικά γράμματα',\r\n        'keyboard.tooltip.command': 'Λειτουργία εντολών LaTeX',\r\n        'keyboard.tooltip.numeric': 'Αριθμητικός',\r\n        'keyboard.tooltip.roman': 'Σύμβολα και ρωμαϊκά γράμματα',\r\n        'tooltip.copy to clipboard': 'Αντιγραφή στο πρόχειρο',\r\n        'tooltip.redo': 'Ξανακάνω',\r\n        'tooltip.toggle virtual keyboard': 'Εναλλαγή εικονικού πληκτρολογίου',\r\n        'tooltip.undo': 'Ξεκάνω',\r\n    },\r\n    es: {\r\n        'keyboard.tooltip.functions': 'Funciones',\r\n        'keyboard.tooltip.greek': 'Letras griegas',\r\n        'keyboard.tooltip.command': 'Modo Comando LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numérico',\r\n        'keyboard.tooltip.roman': 'Símbolos y letras romanas',\r\n        'tooltip.copy to clipboard': 'Copiar al portapapeles',\r\n        'tooltip.redo': 'Rehacer',\r\n        'tooltip.toggle virtual keyboard': 'Alternar teclado virtual',\r\n        'tooltip.undo': 'Deshacer',\r\n    },\r\n    fa: {\r\n        'keyboard.tooltip.functions': 'توابع',\r\n        'keyboard.tooltip.greek': 'حروف یونانی',\r\n        'keyboard.tooltip.command': 'حالت دستور لاتک',\r\n        'keyboard.tooltip.numeric': 'عددی',\r\n        'keyboard.tooltip.roman': 'علائم و حروف لاتین',\r\n        'tooltip.copy to clipboard': 'کپی به کلیپبورد',\r\n        'tooltip.redo': 'بازگشت به بعد',\r\n        'tooltip.toggle virtual keyboard': 'نمایش/نهفتن کیبورد مجازی',\r\n        'tooltip.undo': 'بازگشت به قبل',\r\n    },\r\n    fr: {\r\n        'keyboard.tooltip.functions': 'Fonctions',\r\n        'keyboard.tooltip.greek': 'Lettres grecques',\r\n        'keyboard.tooltip.command': 'Mode de commandes LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numérique',\r\n        'keyboard.tooltip.roman': 'Lettres et symboles romains',\r\n        'tooltip.copy to clipboard': 'Copier dans le presse-papiers',\r\n        'tooltip.redo': 'Rétablir',\r\n        'tooltip.toggle virtual keyboard':\r\n            'Afficher/Masquer le clavier virtuel',\r\n        'tooltip.undo': 'Annuler',\r\n    },\r\n    it: {\r\n        'keyboard.tooltip.functions': 'Funzioni',\r\n        'keyboard.tooltip.greek': 'Lettere greche',\r\n        'keyboard.tooltip.command': 'Modalità di comando LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numerico',\r\n        'keyboard.tooltip.roman': 'Simboli e lettere romane',\r\n        'tooltip.copy to clipboard': 'Copia negli appunti',\r\n        'tooltip.redo': 'Rifare',\r\n        'tooltip.toggle virtual keyboard':\r\n            'Attiva / disattiva la tastiera virtuale',\r\n        'tooltip.undo': 'Disfare',\r\n    },\r\n    ja: {\r\n        'keyboard.tooltip.functions': '関数',\r\n        'keyboard.tooltip.greek': 'ギリシャ文字',\r\n        'keyboard.tooltip.command': 'LaTeXコマンドモード',\r\n        'keyboard.tooltip.numeric': '数値',\r\n        'keyboard.tooltip.roman': '記号とローマ字',\r\n        'tooltip.copy to clipboard': 'クリップボードにコピー',\r\n        'tooltip.redo': 'やり直し',\r\n        'tooltip.toggle virtual keyboard': '仮想キーボードの切り替え',\r\n        'tooltip.undo': '元に戻す',\r\n    },\r\n    pl: {\r\n        'keyboard.tooltip.functions': 'Funkcje',\r\n        'keyboard.tooltip.greek': 'Litery greckie',\r\n        'keyboard.tooltip.command': 'Tryb poleceń LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numeryczne',\r\n        'keyboard.tooltip.roman': 'Symbole i litery rzymskie',\r\n        'tooltip.copy to clipboard': 'Kopiuj do Schowka',\r\n        'tooltip.redo': 'Przywróć',\r\n        'tooltip.toggle virtual keyboard': 'Przełącz wirtualną klawiaturę',\r\n        'tooltip.undo': 'Cofnij',\r\n    },\r\n    ru: {\r\n        'keyboard.tooltip.functions': 'Функции',\r\n        'keyboard.tooltip.greek': 'Греческие буквы',\r\n        'keyboard.tooltip.command': 'Режим командной строки LaTeX',\r\n        'keyboard.tooltip.numeric': 'числовой',\r\n        'keyboard.tooltip.roman': 'Символы и римские буквы',\r\n        'tooltip.copy to clipboard': 'Скопировать в буфер обмена',\r\n        'tooltip.redo': 'переделывать',\r\n        'tooltip.toggle virtual keyboard': 'Переключить виртуальную клавиатуру',\r\n        'tooltip.undo': 'расстегивать',\r\n    },\r\n};\r\n","// import { Keys } from '../types-utils';\r\nimport { STRINGS } from './l10n-strings';\r\n\r\nexport const l10n: {\r\n    locale?: string;\r\n    plural?(value, s, options): Intl.PluralRules;\r\n    ordinal?(value, s, options): Intl.PluralRules;\r\n    cardinal?(value, s, options): Intl.PluralRules;\r\n    merge?(\r\n        locale: string | { [language: string]: { [key: string]: string } },\r\n        strings?: { [key: string]: string }\r\n    ): void;\r\n    _ordinalEnglishPluralCategories?: string[];\r\n    _ordinalPluralCategories?: string[];\r\n    _ordinalEnglish?: Intl.PluralRules;\r\n    _ordinal?: Intl.PluralRules;\r\n    _cardinalPluralCategories?: string[];\r\n    _cardinalEnglishPluralCategories?: string[];\r\n    _cardinalEnglish?: Intl.PluralRules;\r\n    _cardinal?: Intl.PluralRules;\r\n    _locale?: string;\r\n    strings?: { [language: string]: { [key: string]: string } };\r\n} = {};\r\n\r\nl10n.plural = function (value, s, options) {\r\n    options = options || {};\r\n    options.type = options.type || 'cardinal';\r\n    const language = l10n.locale.substring(0, 2);\r\n    const rules = options.type === 'ordinal' ? l10n._ordinal : l10n._cardinal;\r\n    let rule =\r\n        options.type === 'ordinal'\r\n            ? l10n._ordinalPluralCategories.indexOf(rules.select(value))\r\n            : l10n._cardinalPluralCategories.indexOf(rules.select(value));\r\n\r\n    let result;\r\n    if (l10n.strings[l10n.locale]) result = l10n.strings[l10n.locale][s];\r\n    if (!result && l10n.strings[language]) result = l10n.strings[language][s];\r\n    if (!result) {\r\n        result = l10n.strings['en'][s];\r\n        if (!result) result = s;\r\n        if (options.type === 'ordinal') {\r\n            rule = l10n._ordinalPluralCategories.indexOf(\r\n                l10n._ordinalEnglish.select(value)\r\n            );\r\n        } else {\r\n            rule = l10n._cardinalPluralCategories.indexOf(\r\n                l10n._cardinalEnglish.select(value)\r\n            );\r\n        }\r\n    }\r\n    return result.split(';')[rule] || result.split(';')[0];\r\n};\r\n\r\n/*\r\n * Two forms for this function:\r\n * - merge(locale, strings)\r\n * Merge a dictionary of keys -> values for the specified locale\r\n * - merge(strings)\r\n * Merge a dictionary of locale code -> dictionary of keys -> values\r\n *\r\n */\r\nl10n.merge = function (\r\n    locale: string | { [language: string]: { [key: string]: string } },\r\n    strings?: { [key: string]: string }\r\n) {\r\n    if (locale && strings) {\r\n        const savedLocale = l10n._locale;\r\n        l10n.locale = locale as string; // Load the necessary json file\r\n\r\n        l10n.strings[locale as string] = {\r\n            ...l10n.strings[locale as string],\r\n            ...strings,\r\n        };\r\n        l10n.locale = savedLocale;\r\n    } else if (locale && !strings) {\r\n        Object.keys(\r\n            locale as { [language: string]: { [key: string]: string } }\r\n        ).forEach((l) => l10n.merge(l, locale[l]));\r\n    }\r\n};\r\n\r\n// Add getter and setter for the _locale property of l10n\r\nObject.defineProperty(l10n, 'locale', {\r\n    set(locale) {\r\n        l10n._locale = locale;\r\n        l10n._ordinal = null;\r\n        l10n._cardinal = null;\r\n    },\r\n    get() {\r\n        // Use the browser defined language as the default language,\r\n        // \"english\" if not running in a browser (node.js)\r\n        if (!l10n._locale) {\r\n            // Use the setter, which will load the necessary .json files.\r\n            l10n._locale =\r\n                typeof navigator === 'undefined'\r\n                    ? 'en'\r\n                    : navigator.language.slice(0, 5);\r\n        }\r\n        return l10n._locale;\r\n    },\r\n});\r\n\r\nObject.defineProperty(l10n, 'ordinal', {\r\n    get() {\r\n        if (!l10n._ordinal) {\r\n            l10n._ordinalEnglish = new Intl.PluralRules('en', {\r\n                type: 'ordinal',\r\n            });\r\n            l10n._ordinalEnglishPluralCategories = l10n._ordinalEnglish.resolvedOptions().pluralCategories;\r\n            l10n._ordinal = new Intl.PluralRules(l10n.locale, {\r\n                type: 'ordinal',\r\n            });\r\n            l10n._ordinalPluralCategories = l10n._ordinal.resolvedOptions().pluralCategories;\r\n            //    \"zero\", \"one\", \"two\", \"few\", \"many\" and \"other\"\r\n        }\r\n        return l10n._ordinal;\r\n    },\r\n});\r\n\r\nObject.defineProperty(l10n, 'cardinal', {\r\n    get() {\r\n        if (!l10n._cardinal) {\r\n            l10n._cardinalEnglish = new Intl.PluralRules('en', {\r\n                type: 'cardinal',\r\n            });\r\n            l10n._cardinalEnglishPluralCategories = l10n._cardinalEnglish.resolvedOptions().pluralCategories;\r\n            l10n._cardinal = new Intl.PluralRules(l10n.locale, {\r\n                type: 'cardinal',\r\n            });\r\n            l10n._cardinalPluralCategories = l10n._ordinal.resolvedOptions().pluralCategories;\r\n        }\r\n        return l10n._cardinal;\r\n    },\r\n});\r\n\r\nl10n.strings = STRINGS;\r\n\r\nexport function localize(s: string): string {\r\n    const language = l10n.locale.substring(0, 2);\r\n\r\n    let result = '';\r\n\r\n    // Attempt to find a match for the current locale\r\n    if (l10n.strings[l10n.locale]) result = l10n.strings[l10n.locale][s];\r\n    // If none is found, attempt to find a match for the language\r\n    if (!result && l10n.strings[language]) result = l10n.strings[language][s];\r\n    // If none is found, try english\r\n    if (!result) result = l10n.strings['en'][s];\r\n    // If that didn't work, use the key...\r\n    if (!result) result = s;\r\n\r\n    return result;\r\n}\r\n","import { Atom } from '../core/atom';\r\nimport { parseString } from '../core/parser';\r\nimport { suggest, commandAllowed } from '../core/definitions-utils';\r\n\r\nimport type { ModelInterface } from './model-utils';\r\nimport { register as registerCommand } from './commands';\r\nimport { hidePopover, showPopoverWithLatex } from './popover';\r\nimport { insert } from './model-insert';\r\nimport {\r\n    decorateCommandStringAroundInsertionPoint,\r\n    extractCommandStringAroundInsertionPoint,\r\n    spliceCommandStringAroundInsertionPoint,\r\n} from './model-command-mode';\r\nimport { removeSuggestion } from './model-utils';\r\nimport { positionInsertionPointAfterCommitedCommand } from './model-selection';\r\nimport type { Mathfield } from './mathfield-utils';\r\nimport { requestUpdate } from './mathfield-render';\r\n\r\nexport function insertSuggestion(model: ModelInterface, s, l): void {\r\n    removeSuggestion(model);\r\n\r\n    const mathlist = [];\r\n\r\n    // Make a mathlist from the string argument with the `suggestion` property set\r\n    const subs = s.substr(l);\r\n    for (const c of subs) {\r\n        const atom = new Atom('command', 'command', c);\r\n        atom.suggestion = true;\r\n        mathlist.push(atom);\r\n    }\r\n\r\n    // Splice in the mathlist after the insertion point, but don't change the\r\n    // insertion point\r\n    Array.prototype.splice.apply(\r\n        model.siblings(),\r\n        [model.anchorOffset() + 1, 0].concat(mathlist)\r\n    );\r\n}\r\n\r\n/**\r\n * When in command mode, insert the select command and return to math mode\r\n * If escape is true, the command is discared.\r\n * @param options.discard if true, the command is discarded and the\r\n * mode switched back to math\r\n * @param options.acceptSuggestion if true, accept the suggestion to\r\n * complete the command. Otherwise, only use what has been entered so far.\r\n */\r\nexport function complete(\r\n    mathfield: Mathfield,\r\n    options?: {\r\n        discard?: boolean;\r\n        acceptSuggestion?: boolean;\r\n    }\r\n) {\r\n    options = options || { acceptSuggestion: false };\r\n    hidePopover(mathfield);\r\n    if (options.discard) {\r\n        spliceCommandStringAroundInsertionPoint(mathfield.model, null);\r\n        mathfield.switchMode('math');\r\n        return true;\r\n    }\r\n    const command = extractCommandStringAroundInsertionPoint(\r\n        mathfield.model,\r\n        !options.acceptSuggestion\r\n    );\r\n    if (command) {\r\n        if (command === '\\\\(' || command === '\\\\)') {\r\n            spliceCommandStringAroundInsertionPoint(mathfield.model, []);\r\n            insert(mathfield.model, command.slice(1), {\r\n                mode: mathfield.mode,\r\n            });\r\n        } else {\r\n            // We'll assume we want to insert in math mode\r\n            // (commands are only available in math mode)\r\n            const mode = 'math';\r\n            if (commandAllowed(mode, command)) {\r\n                const mathlist = parseString(\r\n                    command,\r\n                    mode,\r\n                    null,\r\n                    mathfield.config.macros\r\n                );\r\n                spliceCommandStringAroundInsertionPoint(\r\n                    mathfield.model,\r\n                    mathlist\r\n                );\r\n            } else {\r\n                // mathfield wasn't a simple function or symbol.\r\n                // Interpret the input as LaTeX code\r\n                const mathlist = parseString(\r\n                    command,\r\n                    mode,\r\n                    null,\r\n                    mathfield.config.macros\r\n                );\r\n                if (mathlist) {\r\n                    spliceCommandStringAroundInsertionPoint(\r\n                        mathfield.model,\r\n                        mathlist\r\n                    );\r\n                } else {\r\n                    decorateCommandStringAroundInsertionPoint(\r\n                        mathfield.model,\r\n                        true\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        mathfield.undoManager.snapshot(mathfield.config);\r\n        mathfield.model.announce('replacement');\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction updateSuggestion(mathfield: Mathfield): boolean {\r\n    positionInsertionPointAfterCommitedCommand(mathfield.model);\r\n    removeSuggestion(mathfield.model);\r\n    const command = extractCommandStringAroundInsertionPoint(mathfield.model);\r\n    const suggestions = suggest(command);\r\n    if (suggestions.length === 0) {\r\n        hidePopover(mathfield);\r\n        decorateCommandStringAroundInsertionPoint(mathfield.model, true);\r\n    } else {\r\n        const index = mathfield.suggestionIndex % suggestions.length;\r\n        const l = command.length - suggestions[index].match.length;\r\n        if (l !== 0) {\r\n            insertSuggestion(mathfield.model, suggestions[index].match, l);\r\n        }\r\n        showPopoverWithLatex(\r\n            mathfield,\r\n            suggestions[index].match,\r\n            suggestions.length > 1\r\n        );\r\n    }\r\n    requestUpdate(mathfield);\r\n    return true;\r\n}\r\n\r\nfunction nextSuggestion(mathfield: Mathfield): boolean {\r\n    mathfield.suggestionIndex += 1;\r\n    // The modulo of the suggestionIndex is used to determine which suggestion\r\n    // to display, so no need to worry about rolling over.\r\n    updateSuggestion(mathfield);\r\n    return false;\r\n}\r\n\r\nfunction previousSuggestion(mathfield: Mathfield): boolean {\r\n    mathfield.suggestionIndex -= 1;\r\n    if (mathfield.suggestionIndex < 0) {\r\n        // We're rolling over\r\n        // Get the list of suggestions, so we can know how many there are\r\n        // Not very efficient, but simple.\r\n        removeSuggestion(mathfield.model);\r\n        const command = extractCommandStringAroundInsertionPoint(\r\n            mathfield.model\r\n        );\r\n        const suggestions = suggest(command);\r\n        mathfield.suggestionIndex = suggestions.length - 1;\r\n    }\r\n    updateSuggestion(mathfield);\r\n    return false;\r\n}\r\n\r\nregisterCommand(\r\n    {\r\n        complete: complete,\r\n        nextSuggestion: nextSuggestion,\r\n        previousSuggestion: previousSuggestion,\r\n    },\r\n    { target: 'mathfield', category: 'autocomplete' }\r\n);\r\n","import { TextToSpeechOptions } from '../public/config';\r\n\r\nimport { Atom, isAtomArray } from '../core/atom';\r\n\r\nimport { atomsToMathML } from '../addons/math-ml';\r\n\r\n// Markup\r\n// Two common flavor of markups: SSML and 'mac'. The latter is only available\r\n// when using the native TTS synthesizer on Mac OS.\r\n// Use SSML in the production rules below. The markup will either be striped\r\n// off or replaced with the 'mac' markup as necessary.\r\n//\r\n// SSML                                             Mac\r\n// ----                                             ----\r\n// <emphasis>WORD</emphasis>                        [[emph +]]WORD\r\n// <break time=\"150ms\"/>                            [[slc 150]]\r\n// <say-as interpret-as=\"character\">A</say-as>      [[char LTRL] A [[char NORM]]\r\n\r\n// https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/SpeechSynthesisProgrammingGuide/FineTuning/FineTuning.html#//apple_ref/doc/uid/TP40004365-CH5-SW3\r\n\r\n// https://pdfs.semanticscholar.org/8887/25b82b8dbb45dd4dd69b36a65f092864adb0.pdf\r\n\r\n// \"<audio src='non_existing_file.au'>File could not be played.</audio>\"\r\n\r\n// \"I am now <prosody rate='+0.06'>speaking 6% faster.</prosody>\"\r\n\r\nconst PRONUNCIATION = {\r\n    '\\\\alpha': 'alpha ',\r\n    '\\\\mu': 'mew ',\r\n    '\\\\sigma': 'sigma ',\r\n    '\\\\pi': 'pie ',\r\n    '\\\\imaginaryI': 'eye ',\r\n\r\n    '\\\\sum': 'Summation ',\r\n    '\\\\prod': 'Product ',\r\n\r\n    a: '<phoneme alphabet=\"ipa\" ph=\"eɪ\">a</phoneme>',\r\n    A: 'capital <phoneme alphabet=\"ipa\" ph=\"eɪ\">A</phoneme>',\r\n    '+': 'plus ',\r\n    '-': 'minus ',\r\n    ';': '<break time=\"150ms\"/> semi-colon <break time=\"150ms\"/>',\r\n    ',': '<break time=\"150ms\"/> comma  <break time=\"150ms\"/>',\r\n    '|': '<break time=\"150ms\"/>Vertical bar<break time=\"150ms\"/>',\r\n    '(': '<break time=\"150ms\"/>Open paren. <break time=\"150ms\"/>',\r\n    ')': '<break time=\"150ms\"/> Close paren. <break time=\"150ms\"/>',\r\n    '=': 'equals ',\r\n    '<': 'is less than ',\r\n    '\\\\lt': 'is less than ',\r\n    '<=': 'is less than or equal to ',\r\n    '\\\\le': 'is less than or equal to ',\r\n    '\\\\gt': 'is greater than ',\r\n    '>': 'is greater than ',\r\n    '\\\\ge': 'is greater than or equal to ',\r\n    '\\\\geq': 'is greater than or equal to ',\r\n    '\\\\leq': 'is less than or equal to ',\r\n    '!': 'factorial ',\r\n    '\\\\sin': 'sine ',\r\n    '\\\\cos': 'cosine ',\r\n    '\\u200b': '',\r\n    '\\u2212': 'minus ',\r\n    ':': '<break time=\"150ms\"/> such that <break time=\"200ms\"/> ',\r\n    '\\\\colon': '<break time=\"150ms\"/> such that <break time=\"200ms\"/> ',\r\n    '\\\\hbar': 'etch bar ',\r\n    '\\\\iff': '<break time=\"200ms\"/>if, and only if, <break time=\"200ms\"/>',\r\n    '\\\\Longleftrightarrow':\r\n        '<break time=\"200ms\"/>if, and only if, <break time=\"200ms\"/>',\r\n    '\\\\land': 'and ',\r\n    '\\\\lor': 'or ',\r\n    '\\\\neg': 'not ',\r\n    '\\\\div': 'divided by ',\r\n\r\n    '\\\\forall': 'for all ',\r\n    '\\\\exists': 'there exists ',\r\n    '\\\\nexists': 'there does not exists ',\r\n\r\n    '\\\\in': 'element of ',\r\n\r\n    '\\\\N':\r\n        'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">n</say-as>',\r\n    '\\\\C':\r\n        'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">c</say-as>',\r\n    '\\\\Z':\r\n        'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">z</say-as>',\r\n    '\\\\Q':\r\n        'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">q</say-as>',\r\n\r\n    '\\\\infty': 'infinity ',\r\n\r\n    '\\\\nabla': 'nabla ',\r\n\r\n    '\\\\partial': 'partial derivative of ',\r\n\r\n    '\\\\cdots': 'dot dot dot ',\r\n\r\n    '\\\\Rightarrow': 'implies ',\r\n\r\n    '\\\\lbrace': '<break time=\"150ms\"/>open brace<break time=\"150ms\"/>',\r\n    '\\\\{': '<break time=\"150ms\"/>open brace<break time=\"150ms\"/>',\r\n    '\\\\rbrace': '<break time=\"150ms\"/>close brace<break time=\"150ms\"/>',\r\n    '\\\\}': '<break time=\"150ms\"/>close brace<break time=\"150ms\"/>',\r\n    '\\\\langle': '<break time=\"150ms\"/>left angle bracket<break time=\"150ms\"/>',\r\n    '\\\\rangle': '<break time=\"150ms\"/>right angle bracket<break time=\"150ms\"/>',\r\n    '\\\\lfloor': '<break time=\"150ms\"/>open floor<break time=\"150ms\"/>',\r\n    '\\\\rfloor': '<break time=\"150ms\"/>close floor<break time=\"150ms\"/>',\r\n    '\\\\lceil': '<break time=\"150ms\"/>open ceiling<break time=\"150ms\"/>',\r\n    '\\\\rceil': '<break time=\"150ms\"/>close ceiling<break time=\"150ms\"/>',\r\n    '\\\\vert': '<break time=\"150ms\"/>vertical bar<break time=\"150ms\"/>',\r\n    '\\\\mvert': '<break time=\"150ms\"/>divides<break time=\"150ms\"/>',\r\n    '\\\\lvert': '<break time=\"150ms\"/>left vertical bar<break time=\"150ms\"/>',\r\n    '\\\\rvert': '<break time=\"150ms\"/>right vertical bar<break time=\"150ms\"/>',\r\n    // '\\\\lbrack':\t\t'left bracket',\r\n    // '\\\\rbrack':\t\t'right bracket',\r\n    '\\\\lbrack':\r\n        '<break time=\"150ms\"/> open square bracket <break time=\"150ms\"/>',\r\n    '\\\\rbrack':\r\n        '<break time=\"150ms\"/> close square bracket <break time=\"150ms\"/>',\r\n\r\n    // need to add code to detect singluar/plural. Until then spoken as plural since that is vastly more common\r\n    // note: need to worry about intervening &InvisibleTimes;.\r\n    // note: need to also do this when in numerator of fraction and number preceeds fraction\r\n    // note: need to do this for <msup>\r\n    mm: 'millimeters',\r\n    cm: 'centimeters',\r\n    km: 'kilometers',\r\n    kg: 'kilograms',\r\n};\r\n\r\nfunction getSpokenName(latex: string): string {\r\n    let result = '';\r\n    if (latex.charAt(0) === '\\\\') {\r\n        result = ' ' + latex.replace('\\\\', '') + ' ';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction platform(p: string): string {\r\n    let result = 'other';\r\n    if (navigator?.platform && navigator.userAgent) {\r\n        if (/^(mac)/i.test(navigator.platform)) {\r\n            result = 'mac';\r\n        } else if (/^(win)/i.test(navigator.platform)) {\r\n            result = 'win';\r\n        } else if (/(android)/i.test(navigator.userAgent)) {\r\n            result = 'android';\r\n        } else if (\r\n            /(iphone)/i.test(navigator.userAgent) ||\r\n            /(ipod)/i.test(navigator.userAgent) ||\r\n            /(ipad)/i.test(navigator.userAgent)\r\n        ) {\r\n            result = 'ios';\r\n        } else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\r\n            result = 'chromeos';\r\n        }\r\n    }\r\n\r\n    return result === p ? p : '!' + p;\r\n}\r\n\r\nfunction isAtomic(atoms: Atom[]): boolean {\r\n    let count = 0;\r\n    if (isAtomArray(atoms)) {\r\n        for (const atom of atoms) {\r\n            if (atom.type !== 'first') {\r\n                count += 1;\r\n            }\r\n        }\r\n    }\r\n    return count === 1;\r\n}\r\n\r\nfunction atomicID(atoms: Atom[]): string {\r\n    if (isAtomArray(atoms)) {\r\n        for (const atom of atoms) {\r\n            if (atom.type !== 'first' && atom.id) {\r\n                return atom.id.toString();\r\n            }\r\n        }\r\n    }\r\n    return '';\r\n}\r\n\r\nfunction atomicValue(atoms: Atom[]): string {\r\n    let result = '';\r\n    if (isAtomArray(atoms)) {\r\n        for (const atom of atoms) {\r\n            if (atom.type !== 'first' && typeof atom.body === 'string') {\r\n                result += atom.body;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction atomToSpeakableFragment(\r\n    mode: 'text' | 'math',\r\n    atom: Atom | Atom[],\r\n    options: TextToSpeechOptions\r\n): string {\r\n    function letter(c: string): string {\r\n        let result = '';\r\n        if (!options.textToSpeechMarkup) {\r\n            if (/[a-z]/.test(c)) {\r\n                result += \" '\" + c.toUpperCase() + \"'\";\r\n            } else if (/[A-Z]/.test(c)) {\r\n                result += \" 'capital \" + c.toUpperCase() + \"'\";\r\n            } else {\r\n                result += c;\r\n            }\r\n        } else {\r\n            if (/[a-z]/.test(c)) {\r\n                result +=\r\n                    ' <say-as interpret-as=\"character\">' + c + '</say-as>';\r\n            } else if (/[A-Z]/.test(c)) {\r\n                result += 'capital ' + c.toLowerCase() + '';\r\n            } else {\r\n                result += c;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function emph(s: string): string {\r\n        return '<emphasis>' + s + '</emphasis>';\r\n    }\r\n\r\n    if (!atom) return '';\r\n\r\n    let result = '';\r\n\r\n    if (isAtomArray(atom)) {\r\n        let isInDigitRun = false; // need to group sequence of digits\r\n        let isInTextRun = false; // need to group text\r\n        for (let i = 0; i < atom.length; i++) {\r\n            if (atom[i].mode !== 'text') {\r\n                isInTextRun = false;\r\n            }\r\n            if (\r\n                i < atom.length - 2 &&\r\n                atom[i].type === 'mopen' &&\r\n                atom[i + 2].type === 'mclose' &&\r\n                atom[i + 1].type === 'mord'\r\n            ) {\r\n                result += ' of ';\r\n                result += emph(\r\n                    atomToSpeakableFragment(mode, atom[i + 1], options)\r\n                );\r\n                i += 2;\r\n            } else if (atom[i].mode === 'text') {\r\n                if (isInTextRun) {\r\n                    result += atom[i].body ? atom[i].body : ' ';\r\n                } else {\r\n                    isInTextRun = true;\r\n                    result += atomToSpeakableFragment('text', atom[i], options);\r\n                }\r\n                // '.' and ',' should only be allowed if prev/next entry is a digit\r\n                // However, if that isn't the case, this still works because 'toSpeakableFragment' is called in either case.\r\n                // Note: the first char in a digit/text run potentially needs to have a 'mark', hence the call to 'toSpeakableFragment'\r\n            } else if (\r\n                atom[i].type === 'mord' &&\r\n                /[0123456789,.]/.test(atom[i].body as string)\r\n            ) {\r\n                if (isInDigitRun) {\r\n                    result += atom[i].body;\r\n                } else {\r\n                    isInDigitRun = true;\r\n                    result += atomToSpeakableFragment(mode, atom[i], options);\r\n                }\r\n            } else {\r\n                isInDigitRun = false;\r\n                result += atomToSpeakableFragment(mode, atom[i], options);\r\n            }\r\n        }\r\n    } else if (atom.mode === 'text') {\r\n        if (atom.id && mode === 'math') {\r\n            result += '<mark name=\"' + atom.id.toString() + '\"/>';\r\n        }\r\n        result += atom.body as string;\r\n    } else {\r\n        if (atom.id && mode === 'math') {\r\n            result += '<mark name=\"' + atom.id.toString() + '\"/>';\r\n        }\r\n        let numer = '';\r\n        let denom = '';\r\n        let body = '';\r\n        let supsubHandled = false;\r\n        switch (atom.type) {\r\n            case 'group':\r\n            case 'root':\r\n                result += atomToSpeakableFragment(\r\n                    'math',\r\n                    atom.body as Atom[],\r\n                    options\r\n                );\r\n                break;\r\n\r\n            case 'genfrac':\r\n                numer = atomToSpeakableFragment('math', atom.numer, options);\r\n                denom = atomToSpeakableFragment('math', atom.denom, options);\r\n                if (isAtomic(atom.numer) && isAtomic(atom.denom)) {\r\n                    const COMMON_FRACTIONS = {\r\n                        '1/2': ' half ',\r\n                        '1/3': ' one third ',\r\n                        '2/3': ' two third',\r\n                        '1/4': ' one quarter ',\r\n                        '3/4': ' three quarter ',\r\n                        '1/5': ' one fifth ',\r\n                        '2/5': ' two fifths ',\r\n                        '3/5': ' three fifths ',\r\n                        '4/5': ' four fifths ',\r\n                        '1/6': ' one sixth ',\r\n                        '5/6': ' five sixths ',\r\n                        '1/8': ' one eight ',\r\n                        '3/8': ' three eights ',\r\n                        '5/8': ' five eights ',\r\n                        '7/8': ' seven eights ',\r\n                        '1/9': ' one ninth ',\r\n                        '2/9': ' two ninths ',\r\n                        '4/9': ' four ninths ',\r\n                        '5/9': ' five ninths ',\r\n                        '7/9': ' seven ninths ',\r\n                        '8/9': ' eight ninths ',\r\n                        // '1/10':     ' one tenth ',\r\n                        // '1/12':     ' one twelfth ',\r\n                        // 'x/2':     ' <say-as interpret-as=\"character\">X</say-as> over 2',\r\n                    };\r\n                    const commonFraction =\r\n                        COMMON_FRACTIONS[\r\n                            atomicValue(atom.numer) +\r\n                                '/' +\r\n                                atomicValue(atom.denom)\r\n                        ];\r\n                    if (commonFraction) {\r\n                        result = commonFraction;\r\n                    } else {\r\n                        result += numer + ' over ' + denom;\r\n                    }\r\n                } else {\r\n                    result +=\r\n                        ' the fraction <break time=\"150ms\"/>' +\r\n                        numer +\r\n                        ', over <break time=\"150ms\"/>' +\r\n                        denom +\r\n                        '.<break time=\"150ms\"/> End fraction.<break time=\"150ms\"/>';\r\n                }\r\n\r\n                break;\r\n            case 'surd':\r\n                body = atomToSpeakableFragment(\r\n                    'math',\r\n                    atom.body as Atom[],\r\n                    options\r\n                );\r\n\r\n                if (!atom.index) {\r\n                    if (isAtomic(atom.body as Atom[])) {\r\n                        result += ' the square root of ' + body + ' , ';\r\n                    } else {\r\n                        result +=\r\n                            ' the square root of <break time=\"200ms\"/>' +\r\n                            body +\r\n                            '. <break time=\"200ms\"/> End square root';\r\n                    }\r\n                } else {\r\n                    let index = atomToSpeakableFragment(\r\n                        'math',\r\n                        atom.index,\r\n                        options\r\n                    );\r\n                    index = index.trim();\r\n                    const index2 = index.replace(/<mark([^/]*)\\/>/g, '');\r\n                    if (index2 === '3') {\r\n                        result +=\r\n                            ' the cube root of <break time=\"200ms\"/>' +\r\n                            body +\r\n                            '. <break time=\"200ms\"/> End cube root';\r\n                    } else if (index2 === 'n') {\r\n                        result +=\r\n                            ' the nth root of <break time=\"200ms\"/>' +\r\n                            body +\r\n                            '. <break time=\"200ms\"/> End root';\r\n                    } else {\r\n                        result +=\r\n                            ' the root with index: <break time=\"200ms\"/>' +\r\n                            index +\r\n                            ', of <break time=\"200ms\"/>' +\r\n                            body +\r\n                            '. <break time=\"200ms\"/> End root';\r\n                    }\r\n                }\r\n                break;\r\n            case 'leftright':\r\n                result += PRONUNCIATION[atom.leftDelim] || atom.leftDelim;\r\n                result += atomToSpeakableFragment(\r\n                    'math',\r\n                    atom.body as Atom[],\r\n                    options\r\n                );\r\n                result += PRONUNCIATION[atom.rightDelim] || atom.rightDelim;\r\n                break;\r\n            case 'rule':\r\n                // @todo\r\n                break;\r\n            case 'overunder':\r\n                // @todo\r\n                break;\r\n            case 'overlap':\r\n                // @todo\r\n                break;\r\n            case 'placeholder':\r\n                result += 'placeholder ' + atom.body;\r\n                break;\r\n            case 'delim':\r\n            case 'sizeddelim':\r\n            case 'mord':\r\n            case 'minner':\r\n            case 'mbin':\r\n            case 'mrel':\r\n            case 'mpunct':\r\n            case 'mopen':\r\n            case 'mclose':\r\n            case 'textord': {\r\n                const command = atom.symbol;\r\n                if (\r\n                    command === '\\\\mathbin' ||\r\n                    command === '\\\\mathrel' ||\r\n                    command === '\\\\mathopen' ||\r\n                    command === '\\\\mathclose' ||\r\n                    command === '\\\\mathpunct' ||\r\n                    command === '\\\\mathord' ||\r\n                    command === '\\\\mathinner'\r\n                ) {\r\n                    result = atomToSpeakableFragment(\r\n                        mode,\r\n                        atom.body as Atom[],\r\n                        options\r\n                    );\r\n                    break;\r\n                }\r\n\r\n                let atomValue = atom.body as string;\r\n                let latexValue = atom.symbol;\r\n                if (atom.type === 'delim' || atom.type === 'sizeddelim') {\r\n                    atomValue = latexValue = atom.delim;\r\n                }\r\n                if (mode === 'text') {\r\n                    result += atomValue;\r\n                } else {\r\n                    if (atom.type === 'mbin') {\r\n                        result += '<break time=\"150ms\"/>';\r\n                    }\r\n\r\n                    if (atomValue) {\r\n                        const value =\r\n                            PRONUNCIATION[atomValue] ||\r\n                            (latexValue\r\n                                ? PRONUNCIATION[latexValue.trim()]\r\n                                : '');\r\n                        if (value) {\r\n                            result += ' ' + value;\r\n                        } else {\r\n                            const spokenName = latexValue\r\n                                ? getSpokenName(latexValue.trim())\r\n                                : '';\r\n\r\n                            result += spokenName\r\n                                ? spokenName\r\n                                : letter(atomValue);\r\n                        }\r\n                    } else {\r\n                        result += atomToSpeakableFragment(\r\n                            'math',\r\n                            atom.body as Atom[],\r\n                            options\r\n                        );\r\n                    }\r\n                    if (atom.type === 'mbin') {\r\n                        result += '<break time=\"150ms\"/>';\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'mop':\r\n                // @todo\r\n                if (atom.body !== '\\u200b') {\r\n                    // Not ZERO-WIDTH\r\n                    const trimLatex = atom.symbol;\r\n                    if (trimLatex === '\\\\sum') {\r\n                        if (atom.superscript && atom.subscript) {\r\n                            let sup = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.superscript,\r\n                                options\r\n                            );\r\n                            sup = sup.trim();\r\n                            let sub = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.subscript,\r\n                                options\r\n                            );\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the summation from <break time=\"200ms\"/>' +\r\n                                sub +\r\n                                '<break time=\"200ms\"/> to  <break time=\"200ms\"/>' +\r\n                                sup +\r\n                                '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        } else if (atom.subscript) {\r\n                            let sub = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.subscript,\r\n                                options\r\n                            );\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the summation from <break time=\"200ms\"/>' +\r\n                                sub +\r\n                                '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        } else {\r\n                            result += ' the summation of';\r\n                        }\r\n                    } else if (trimLatex === '\\\\prod') {\r\n                        if (atom.superscript && atom.subscript) {\r\n                            let sup = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.superscript,\r\n                                options\r\n                            );\r\n                            sup = sup.trim();\r\n                            let sub = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.subscript,\r\n                                options\r\n                            );\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the product from <break time=\"200ms\"/>' +\r\n                                sub +\r\n                                '<break time=\"200ms\"/> to <break time=\"200ms\"/>' +\r\n                                sup +\r\n                                '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        } else if (atom.subscript) {\r\n                            let sub = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.subscript,\r\n                                options\r\n                            );\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the product from <break time=\"200ms\"/>' +\r\n                                sub +\r\n                                '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        } else {\r\n                            result += ' the product  of ';\r\n                        }\r\n                    } else if (trimLatex === '\\\\int') {\r\n                        if (atom.superscript && atom.subscript) {\r\n                            let sup = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.superscript,\r\n                                options\r\n                            );\r\n                            sup = sup.trim();\r\n                            let sub = atomToSpeakableFragment(\r\n                                'math',\r\n                                atom.subscript,\r\n                                options\r\n                            );\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the integral from <break time=\"200ms\"/>' +\r\n                                emph(sub) +\r\n                                '<break time=\"200ms\"/> to <break time=\"200ms\"/>' +\r\n                                emph(sup) +\r\n                                ' <break time=\"200ms\"/> of ';\r\n                            supsubHandled = true;\r\n                        } else {\r\n                            result += ' the integral of <break time=\"200ms\"/> ';\r\n                        }\r\n                    } else if (typeof atom.body === 'string') {\r\n                        const value =\r\n                            PRONUNCIATION[atom.body] ||\r\n                            PRONUNCIATION[atom.symbol];\r\n                        if (value) {\r\n                            result += value;\r\n                        } else {\r\n                            result += ' ' + atom.body;\r\n                        }\r\n                    } else if (atom.symbol) {\r\n                        if (atom.symbol[0] === '\\\\') {\r\n                            result += ' ' + atom.symbol.substr(1);\r\n                        } else {\r\n                            result += ' ' + atom.symbol;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'enclose':\r\n                body = atomToSpeakableFragment(\r\n                    'math',\r\n                    atom.body as Atom[],\r\n                    options\r\n                );\r\n\r\n                if (isAtomic(atom.body as Atom[])) {\r\n                    result += ' crossed out ' + body + ' , ';\r\n                } else {\r\n                    result += ' crossed out ' + body + '. End cross out';\r\n                }\r\n                break;\r\n\r\n            case 'space':\r\n            case 'spacing':\r\n            case 'mathstyle':\r\n                // @todo\r\n                break;\r\n        }\r\n        if (!supsubHandled && atom.superscript) {\r\n            let sup = atomToSpeakableFragment(mode, atom.superscript, options);\r\n            sup = sup.trim();\r\n            const sup2 = sup.replace(/<[^>]*>/g, '');\r\n            if (isAtomic(atom.superscript)) {\r\n                if (mode === 'math') {\r\n                    const id = atomicID(atom.superscript);\r\n                    if (id) {\r\n                        result += '<mark name=\"' + id + '\"/>';\r\n                    }\r\n                }\r\n                if (sup2 === '\\u2032') {\r\n                    result += ' prime ';\r\n                } else if (sup2 === '2') {\r\n                    result += ' squared ';\r\n                } else if (sup2 === '3') {\r\n                    result += ' cubed ';\r\n                } else if (isNaN(parseInt(sup2))) {\r\n                    result += ' to the ' + sup + '; ';\r\n                } else {\r\n                    result +=\r\n                        ' to the <say-as interpret-as=\"ordinal\">' +\r\n                        sup2 +\r\n                        '</say-as> power; ';\r\n                }\r\n            } else {\r\n                if (isNaN(parseInt(sup2))) {\r\n                    result += ' raised to the ' + sup + '; ';\r\n                } else {\r\n                    result +=\r\n                        ' raised to the <say-as interpret-as=\"ordinal\">' +\r\n                        sup2 +\r\n                        '</say-as> power; ';\r\n                }\r\n            }\r\n        }\r\n        if (!supsubHandled && atom.subscript) {\r\n            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n            sub = sub.trim();\r\n            if (isAtomic(atom.subscript)) {\r\n                result += ' sub ' + sub;\r\n            } else {\r\n                result += ' subscript ' + sub + '. End subscript. ';\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param  atoms The atoms to represent as speakable text.\r\n */\r\nexport function atomToSpeakableText(\r\n    atoms: Atom | Atom[],\r\n    speechOptions: TextToSpeechOptions\r\n): string {\r\n    const options = {\r\n        ...speechOptions,\r\n        textToSpeechRulesOptions: { ...speechOptions.textToSpeechRulesOptions },\r\n    };\r\n\r\n    if (window['sre'] && options.textToSpeechRules === 'sre') {\r\n        const mathML = atomsToMathML(atoms, options);\r\n        if (mathML) {\r\n            if (options.textToSpeechMarkup) {\r\n                options.textToSpeechRulesOptions =\r\n                    options.textToSpeechRulesOptions || {};\r\n                options.textToSpeechRulesOptions.markup =\r\n                    options.textToSpeechMarkup;\r\n                if (options.textToSpeechRulesOptions.markup === 'ssml') {\r\n                    options.textToSpeechRulesOptions.markup = 'ssml_step';\r\n                }\r\n                options.textToSpeechRulesOptions.rate =\r\n                    options.speechEngineRate;\r\n            }\r\n            if (options.textToSpeechRulesOptions) {\r\n                window['sre'].System.getInstance().setupEngine(\r\n                    options.textToSpeechRulesOptions\r\n                );\r\n            }\r\n            return window['sre'].System.getInstance().toSpeech(mathML);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    let result = atomToSpeakableFragment('math', atoms, options);\r\n\r\n    if (options.textToSpeechMarkup === 'ssml') {\r\n        let prosody = '';\r\n        if (options.speechEngineRate) {\r\n            prosody = '<prosody rate=\"' + options.speechEngineRate + '\">';\r\n        }\r\n        result =\r\n            `<?xml version=\"1.0\"?><speak version=\"1.1\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xml:lang=\"en-US\">` +\r\n            '<amazon:auto-breaths>' +\r\n            prosody +\r\n            '<p><s>' +\r\n            result +\r\n            '</s></p>' +\r\n            (prosody ? '</prosody>' : '') +\r\n            '</amazon:auto-breaths>' +\r\n            '</speak>';\r\n    } else if (\r\n        options.textToSpeechMarkup === 'mac' &&\r\n        platform('mac') === 'mac'\r\n    ) {\r\n        // Convert SSML to Mac markup\r\n        result = result\r\n            .replace(/<mark([^/]*)\\/>/g, '')\r\n            .replace(/<emphasis>/g, '[[emph+]]')\r\n            .replace(/<\\/emphasis>/g, '')\r\n            .replace(/<break time=\"([0-9]*)ms\"\\/>/g, '[[slc $1]]')\r\n            .replace(/<say-as[^>]*>/g, '')\r\n            .replace(/<\\/say-as>/g, '');\r\n    } else {\r\n        // If no markup was requested, or 'mac' markup, but we're not on a mac,\r\n        // remove any that we may have\r\n        // Strip out the SSML markup\r\n        result = result.replace(/<[^>]*>/g, '').replace(/\\s{2,}/g, ' ');\r\n    }\r\n    return result;\r\n}\r\n","import { TextToSpeechOptions } from '../public/config';\r\nimport { SpeechScope } from '../public/commands';\r\n\r\nimport { Atom } from '../core/atom';\r\n\r\nimport { atomToSpeakableText } from './atom-to-speakable-text';\r\nimport { register as registerCommand } from './commands';\r\nimport { getSelectedAtoms, selectionIsCollapsed } from './model-selection';\r\nimport { Mathfield } from './mathfield-utils';\r\nimport { render } from './mathfield-render';\r\n\r\nexport function speakableText(\r\n    speechOptions: Required<TextToSpeechOptions>,\r\n    prefix: string,\r\n    atoms: Atom | Atom[]\r\n) {\r\n    const options = {\r\n        ...speechOptions,\r\n        textToSpeechMarkup: '' as '', // @revisit: ts weirdness\r\n        textToSpeechRulesOptions: {\r\n            ...speechOptions.textToSpeechRulesOptions,\r\n            markup: 'none',\r\n        },\r\n    };\r\n    return prefix + atomToSpeakableText(atoms, options);\r\n}\r\n\r\n/**\r\n *\r\n * Speak some part of the expression, either with or without synchronized highlighting.\r\n *\r\n * @param speakOptions.withHighlighting - If true, synchronized\r\n * highlighting of speech will happen (if possible). Default is false.\r\n */\r\n\r\n// @revisit: register 'speak' command with mathfield (to get access to SpeechOptions, which need to be passed down)\r\nregisterCommand(\r\n    {\r\n        speak: (\r\n            mathfield: Mathfield,\r\n            scope: SpeechScope,\r\n            options: { withHighlighting: boolean }\r\n        ): boolean => {\r\n            return speak(mathfield, scope, options);\r\n        },\r\n    },\r\n    { target: 'mathfield', category: 'speech' }\r\n);\r\n\r\nfunction speak(\r\n    mathfield: Mathfield,\r\n    scope: SpeechScope,\r\n    speakOptions: { withHighlighting: boolean }\r\n) {\r\n    speakOptions = speakOptions ?? { withHighlighting: false };\r\n    function getAtoms(mathfield: Mathfield, scope: SpeechScope) {\r\n        let result = null;\r\n        switch (scope) {\r\n            case 'all':\r\n                result = mathfield.model.root;\r\n                break;\r\n            case 'selection':\r\n                if (!selectionIsCollapsed(mathfield.model)) {\r\n                    result = getSelectedAtoms(mathfield.model);\r\n                }\r\n                break;\r\n            case 'left': {\r\n                const siblings = mathfield.model.siblings();\r\n                const last = mathfield.model.startOffset();\r\n                if (last >= 1) {\r\n                    result = [];\r\n                    for (let i = 1; i <= last; i++) {\r\n                        result.push(siblings[i]);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'right': {\r\n                const siblings = mathfield.model.siblings();\r\n                const first = mathfield.model.endOffset() + 1;\r\n                if (first <= siblings.length - 1) {\r\n                    result = [];\r\n                    for (let i = first; i <= siblings.length - 1; i++) {\r\n                        result.push(siblings[i]);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'group':\r\n                result = mathfield.model.siblings();\r\n                break;\r\n            case 'parent': {\r\n                const parent = mathfield.model.parent();\r\n                if (parent && parent.type !== 'root') {\r\n                    result = mathfield.model.parent();\r\n                }\r\n                break;\r\n            }\r\n            // case 'start':\r\n            // case 'end':\r\n            // not yet implemented\r\n            // break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    function getFailedSpeech(scope: string): string {\r\n        let result = '';\r\n        switch (scope) {\r\n            case 'all':\r\n                console.log('Internal failure: speak all failed');\r\n                break;\r\n            case 'selection':\r\n                result = 'no selection';\r\n                break;\r\n            case 'left':\r\n                result = 'at start';\r\n                break;\r\n            case 'right':\r\n                result = 'at end';\r\n                break;\r\n            case 'group':\r\n                console.log('Internal failure: speak group failed');\r\n                break;\r\n            case 'parent':\r\n                result = 'no parent';\r\n                break;\r\n            default:\r\n                console.log('unknown speak_ param value: \"' + scope + '\"');\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    const atoms = getAtoms(mathfield, scope);\r\n    if (atoms === null) {\r\n        mathfield.config.speakHook(getFailedSpeech(scope), mathfield.config);\r\n        return false;\r\n    }\r\n    const options = { ...mathfield.config };\r\n    if (speakOptions.withHighlighting || options.speechEngine === 'amazon') {\r\n        options.textToSpeechMarkup =\r\n            window['sre'] && options.textToSpeechRules === 'sre'\r\n                ? 'ssml_step'\r\n                : 'ssml';\r\n    }\r\n    const text = atomToSpeakableText(atoms, options);\r\n    if (speakOptions.withHighlighting) {\r\n        window['mathlive'].readAloudMathField = mathfield;\r\n        render(mathfield, { forHighlighting: true });\r\n        if (mathfield.config.readAloudHook) {\r\n            mathfield.config.readAloudHook(\r\n                mathfield.field,\r\n                text,\r\n                mathfield.config\r\n            );\r\n        }\r\n    } else {\r\n        if (mathfield.config.speakHook) {\r\n            mathfield.config.speakHook(text, options);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function defaultSpeakHook(text, config) {\r\n    if (!config && window && window['mathlive']) {\r\n        config = window['mathlive'].config;\r\n    }\r\n    config = config || {};\r\n\r\n    if (!config.speechEngine || config.speechEngine === 'local') {\r\n        // On ChromeOS: chrome.accessibilityFeatures.spokenFeedback\r\n        // See also https://developer.chrome.com/apps/tts\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        if (window) {\r\n            window.speechSynthesis.speak(utterance);\r\n        } else {\r\n            console.log('Speak: ', text);\r\n        }\r\n    } else if (config.speechEngine === 'amazon') {\r\n        if (!window || !window['AWS']) {\r\n            console.warn(\r\n                'AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk'\r\n            );\r\n        } else {\r\n            const polly = new window['AWS'].Polly({ apiVersion: '2016-06-10' });\r\n            const params = {\r\n                OutputFormat: 'mp3',\r\n                VoiceId: config.speechEngineVoice,\r\n                Engine: [\r\n                    'Amy',\r\n                    'Emma',\r\n                    'Brian',\r\n                    'Ivy',\r\n                    'Joanna',\r\n                    'Kendra',\r\n                    'Kimberly',\r\n                    'Salli',\r\n                    'Joey',\r\n                    'Justin',\r\n                    'Matthew',\r\n                ].includes(config.speechEngineVoice)\r\n                    ? 'neural'\r\n                    : 'standard',\r\n                // SampleRate: '24000',\r\n                Text: text,\r\n                TextType: 'ssml',\r\n                // SpeechMarkTypes: ['ssml]'\r\n            };\r\n            // https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Polly.html#synthesizeSpeech-property\r\n            polly.synthesizeSpeech(params, function (err, data) {\r\n                if (err) {\r\n                    console.warn(\r\n                        'polly.synthesizeSpeech() error:',\r\n                        err,\r\n                        err.stack\r\n                    );\r\n                    // announce('plonk');\r\n                } else if (data?.AudioStream) {\r\n                    const uInt8Array = new Uint8Array(data.AudioStream);\r\n                    const blob = new Blob([uInt8Array.buffer], {\r\n                        type: 'audio/mpeg',\r\n                    });\r\n                    const url = URL.createObjectURL(blob);\r\n\r\n                    const audioElement = new Audio(url);\r\n                    audioElement.play().catch((err) => console.log(err));\r\n                } else {\r\n                    console.log('polly.synthesizeSpeech():' + data);\r\n                }\r\n            });\r\n\r\n            // Can call AWS.Request() on the result of synthesizeSpeech()\r\n        }\r\n    } else if (config.speechEngine === 'google') {\r\n        console.warn(\r\n            'The Google speech engine is not supported yet. Please come again.'\r\n        );\r\n        // @todo: implement support for Google Text-to-Speech API,\r\n        // using config.speechEngineToken, config.speechEngineVoice and\r\n        // config.speechEngineAudioConfig\r\n\r\n        // curl -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) \\\r\n        //   -H \"Content-Type: application/json; charset=utf-8\" \\\r\n        //   --data \"{\r\n        //     'input':{\r\n        //       'text':'Android is a mobile operating system developed by Google,\r\n        //          based on the Linux kernel and designed primarily for\r\n        //          touchscreen mobile devices such as smartphones and tablets.'\r\n        //     },\r\n        //     'voice':{\r\n        //       'languageCode':'en-gb',\r\n        //       'name':'en-GB-Standard-A',\r\n        //       'ssmlGender':'FEMALE'\r\n        //     },\r\n        //     'audioConfig':{\r\n        //       'audioEncoding':'MP3'\r\n        //     }\r\n        //   }\" \"https://texttospeech.googleapis.com/v1beta1/text:synthesize\" > synthesize-text.txt\r\n    }\r\n}\r\n","import type { TextToSpeechOptions } from '../public/config';\r\n\r\nimport type { Atom } from '../core/atom';\r\n\r\nimport { atomsToMathML } from '../addons/math-ml';\r\nimport { speakableText } from './speech';\r\nimport { selectionIsCollapsed, getSelectedAtoms } from './model-selection';\r\nimport type { ModelInterface } from './model-utils';\r\nimport type { Mathfield } from './mathfield-utils';\r\nimport type { PathSegment } from './path';\r\n\r\n/**\r\n * Announce a change in selection or content via the aria-live region.\r\n *\r\n * @param action The action that invoked the change.\r\n * @param oldModel The previous value of the model before the change.\r\n */\r\nexport function defaultAnnounceHook(\r\n    mathfield: Mathfield,\r\n    action: string,\r\n    oldModel: ModelInterface,\r\n    atoms: Atom[]\r\n): void {\r\n    //** Fix: the focus is the end of the selection, so it is before where we want it\r\n    let liveText = '';\r\n    // const action = moveAmount > 0 ? \"right\" : \"left\";\r\n\r\n    if (action === 'plonk') {\r\n        // Use this sound to indicate (minor) errors, for\r\n        // example when a action has no effect.\r\n        if (mathfield.plonkSound) {\r\n            mathfield.plonkSound.load();\r\n            mathfield.plonkSound.play().catch((err) => console.warn(err));\r\n        }\r\n        // As a side effect, reset the keystroke buffer\r\n        mathfield.resetKeystrokeBuffer();\r\n    } else if (action === 'delete') {\r\n        liveText = speakableText(mathfield.config, 'deleted: ', atoms);\r\n        //*** FIX: could also be moveUp or moveDown -- do something different like provide context???\r\n    } else if (action === 'focus' || /move/.test(action)) {\r\n        //*** FIX -- should be xxx selected/unselected */\r\n        liveText =\r\n            (selectionIsCollapsed(mathfield.model) ? '' : 'selected: ') +\r\n            nextAtomSpeechText(mathfield, oldModel);\r\n    } else if (action === 'replacement') {\r\n        // announce the contents\r\n        liveText = speakableText(\r\n            mathfield.config,\r\n            '',\r\n            mathfield.model.sibling(0)\r\n        );\r\n    } else if (action === 'line') {\r\n        // announce the current line -- currently that's everything\r\n        liveText = speakableText(mathfield.config, '', mathfield.model.root);\r\n        mathfield.accessibleNode.innerHTML =\r\n            '<math xmlns=\"http://www.w3.org/1998/Math/MathML\">' +\r\n            atomsToMathML(mathfield.model.root, mathfield.config) +\r\n            '</math>';\r\n\r\n        mathfield.textarea.setAttribute('aria-label', 'after: ' + liveText);\r\n\r\n        /*** FIX -- testing hack for setting braille ***/\r\n        // mathfield.accessibleNode.focus();\r\n        // console.log(\"before sleep\");\r\n        // sleep(1000).then(() => {\r\n        //     mathfield.textarea.focus();\r\n        //     console.log(\"after sleep\");\r\n        // });\r\n    } else {\r\n        liveText = atoms\r\n            ? speakableText(mathfield.config, action + ' ', atoms)\r\n            : action;\r\n    }\r\n    // aria-live regions are only spoken when it changes; force a change by\r\n    // alternately using nonbreaking space or narrow nonbreaking space\r\n    const ariaLiveChangeHack = /\\u00a0/.test(mathfield.ariaLiveText.textContent)\r\n        ? ' \\u202f '\r\n        : ' \\u00a0 ';\r\n    mathfield.ariaLiveText.textContent = liveText + ariaLiveChangeHack;\r\n    // this.textarea.setAttribute('aria-label', liveText + ariaLiveChangeHack);\r\n}\r\n\r\n/* Returns the speech text of the next atom after the selection or\r\n *   an 'end of' phrasing based on what structure we are at the end of\r\n */\r\n// @revisit. Currently this = Mathfield, but it looks like model is enough\r\nfunction nextAtomSpeechText(\r\n    mathfield: Mathfield,\r\n    oldModel: ModelInterface\r\n): string {\r\n    function relation(parent: Atom, leaf: PathSegment): string {\r\n        const EXPR_NAME = {\r\n            //    'array': 'should not happen',\r\n            numer: 'numerator',\r\n            denom: 'denominator',\r\n            index: 'index',\r\n            body: 'parent',\r\n            subscript: 'subscript',\r\n            superscript: 'superscript',\r\n        };\r\n        const PARENT_NAME = {\r\n            enclose: 'cross out',\r\n            leftright: 'fence',\r\n            surd: 'square root',\r\n            root: 'math field',\r\n        };\r\n        return leaf.relation === 'body'\r\n            ? PARENT_NAME[parent.type]\r\n            : EXPR_NAME[leaf.relation];\r\n    }\r\n    const oldPath = oldModel ? oldModel.path : [];\r\n    const path = mathfield.model.path;\r\n    const leaf = path[path.length - 1];\r\n    let result = '';\r\n    while (oldPath.length > path.length) {\r\n        result +=\r\n            'out of ' +\r\n            relation(oldModel.parent(), oldPath[oldPath.length - 1]) +\r\n            '; ';\r\n        oldPath.pop();\r\n    }\r\n    if (!selectionIsCollapsed(mathfield.model)) {\r\n        return speakableText(\r\n            mathfield.config as Required<TextToSpeechOptions>,\r\n            '',\r\n            getSelectedAtoms(mathfield.model)\r\n        );\r\n    }\r\n    // announce start of denominator, etc\r\n    const relationName = relation(mathfield.model.parent(), leaf);\r\n    if (leaf.offset === 0) {\r\n        result +=\r\n            (relationName ? 'start of ' + relationName : 'unknown') + ': ';\r\n    }\r\n    const atom = mathfield.model.sibling(Math.max(1, mathfield.model.extent));\r\n    if (atom) {\r\n        result += speakableText(\r\n            mathfield.config as Required<TextToSpeechOptions>,\r\n            '',\r\n            atom\r\n        );\r\n    } else if (leaf.offset !== 0) {\r\n        // don't say both start and end\r\n        result += relationName ? 'end of ' + relationName : 'unknown';\r\n    }\r\n    return result;\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport { Atom } from '../core/atom';\r\nimport { MACROS } from '../core/definitions';\r\nimport { l10n } from './l10n';\r\nimport { defaultAnnounceHook } from './a11y';\r\nimport { INLINE_SHORTCUTS } from './shortcuts-definitions-inline';\r\nimport { MathfieldConfig } from '../public/config';\r\nexport { InlineShortcutDefinition } from '../public/shortcuts';\r\n\r\nconst AUDIO_FEEDBACK_VOLUME = 0.5; // from 0.0 to 1.0\r\n\r\ndeclare class Model {}\r\ndeclare class Mathfield {}\r\n\r\nconst NO_OP_LISTENER = (): void => {\r\n    return;\r\n};\r\n\r\nexport type MathfieldConfigPrivate = MathfieldConfig & {\r\n    onAnnounce?: (\r\n        target: Mathfield,\r\n        command: string, // verb\r\n        modelBefore: Model,\r\n        atoms: Atom[] // object of the command\r\n    ) => void; // @revisit 1.0: rename announceHook\r\n};\r\n\r\nfunction loadSound(sound: string | HTMLAudioElement): HTMLAudioElement {\r\n    if (typeof sound === 'string') {\r\n        const result: HTMLAudioElement = new Audio();\r\n        result.preload = 'none';\r\n        result.src = sound;\r\n        result.volume = AUDIO_FEEDBACK_VOLUME;\r\n\r\n        return result;\r\n    }\r\n    return sound;\r\n}\r\n\r\nfunction unloadSound(sound: string | HTMLAudioElement | object): void {\r\n    if (sound instanceof HTMLAudioElement) {\r\n        sound.pause();\r\n        sound.removeAttribute('src');\r\n        sound.load();\r\n    }\r\n}\r\n\r\nexport function update(\r\n    current: Required<MathfieldConfigPrivate>,\r\n    updates: MathfieldConfigPrivate\r\n): Required<MathfieldConfigPrivate> {\r\n    const result: Required<MathfieldConfigPrivate> = get(\r\n        current,\r\n        Object.keys(current)\r\n    ) as Required<MathfieldConfigPrivate>;\r\n    Object.keys(updates).forEach((key) => {\r\n        switch (key) {\r\n            case 'scriptDepth':\r\n                if (isArray(updates.scriptDepth)) {\r\n                    result.scriptDepth = [\r\n                        updates.scriptDepth[0],\r\n                        updates.scriptDepth[1],\r\n                    ];\r\n                } else if (typeof updates.scriptDepth === 'number') {\r\n                    result.scriptDepth = [\r\n                        updates.scriptDepth,\r\n                        updates.scriptDepth,\r\n                    ];\r\n                } else {\r\n                    throw Error('Unexpected value for scriptDepth');\r\n                }\r\n                break;\r\n            case 'namespace':\r\n                // Validate the namespace (used for `data-` attributes)\r\n                if (!/^[a-z]*[-]?$/.test(updates.namespace)) {\r\n                    throw Error(\r\n                        'namespace must be a string of lowercase characters only'\r\n                    );\r\n                }\r\n                if (!/-$/.test(updates.namespace)) {\r\n                    result.namespace = updates.namespace + '-';\r\n                } else {\r\n                    result.namespace = updates.namespace;\r\n                }\r\n                break;\r\n            case 'locale':\r\n                result.locale =\r\n                    updates.locale === 'auto' ? l10n.locale : updates.locale;\r\n                break;\r\n            case 'strings':\r\n                l10n.merge(updates.strings);\r\n                break;\r\n            case 'virtualKeyboardLayout':\r\n                if (updates.virtualKeyboardLayout === 'auto') {\r\n                    result.virtualKeyboardLayout =\r\n                        {\r\n                            fr: 'azerty',\r\n                            be: 'azerty',\r\n                            al: 'qwertz',\r\n                            ba: 'qwertz',\r\n                            cz: 'qwertz',\r\n                            de: 'qwertz',\r\n                            hu: 'qwertz',\r\n                            sk: 'qwertz',\r\n                            ch: 'qwertz',\r\n                        }[l10n.locale.substring(0, 2)] || 'qwerty';\r\n                } else {\r\n                    result.virtualKeyboardLayout =\r\n                        updates.virtualKeyboardLayout;\r\n                }\r\n                break;\r\n            case 'virtualKeyboardMode':\r\n                {\r\n                    const isTouchDevice = window.matchMedia?.(\r\n                        '(any-pointer: coarse)'\r\n                    ).matches;\r\n                    if (updates.virtualKeyboardMode === 'auto') {\r\n                        result.virtualKeyboardMode = isTouchDevice\r\n                            ? 'onfocus'\r\n                            : 'off';\r\n                    } else {\r\n                        result.virtualKeyboardMode =\r\n                            updates.virtualKeyboardMode;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'letterShapeStyle':\r\n                if (updates.letterShapeStyle === 'auto') {\r\n                    // Letter shape style (locale dependent)\r\n                    if (l10n.locale.substring(0, 2) === 'fr') {\r\n                        result.letterShapeStyle = 'french';\r\n                    } else {\r\n                        result.letterShapeStyle = 'tex';\r\n                    }\r\n                } else {\r\n                    result.letterShapeStyle = updates.letterShapeStyle;\r\n                }\r\n                break;\r\n            case 'plonkSound':\r\n                unloadSound(result.plonkSound);\r\n                result.plonkSound = loadSound(updates.plonkSound);\r\n                break;\r\n            case 'keypressSound':\r\n                unloadSound(result.keypressSound);\r\n                if (typeof updates.keypressSound === 'string') {\r\n                    const sound = loadSound(updates.keypressSound);\r\n                    result.keypressSound = {\r\n                        delete: sound,\r\n                        return: sound,\r\n                        spacebar: sound,\r\n                        default: sound,\r\n                    };\r\n                } else if (updates.keypressSound instanceof HTMLAudioElement) {\r\n                    result.keypressSound = {\r\n                        delete: updates.keypressSound,\r\n                        return: updates.keypressSound,\r\n                        spacebar: updates.keypressSound,\r\n                        default: updates.keypressSound,\r\n                    };\r\n                } else {\r\n                    if (!updates.keypressSound.default) {\r\n                        throw Error('Missing keypressSound.default');\r\n                    }\r\n                    result.keypressSound = { ...updates.keypressSound };\r\n                    if (!result.keypressSound.return) {\r\n                        result.keypressSound.return =\r\n                            updates.keypressSound.default;\r\n                    }\r\n                    if (!result.keypressSound.spacebar) {\r\n                        result.keypressSound.spacebar =\r\n                            updates.keypressSound.default;\r\n                    }\r\n                    if (!result.keypressSound.delete) {\r\n                        result.keypressSound.delete =\r\n                            updates.keypressSound.default;\r\n                    }\r\n                }\r\n                break;\r\n            case 'onBlur':\r\n            case 'onFocus':\r\n            case 'onContentWillChange':\r\n            case 'onContentDidChange':\r\n            case 'onSelectionWillChange':\r\n            case 'onSelectionDidChange':\r\n            case 'onUndoStateWillChange':\r\n            case 'onUndoStateDidChange':\r\n            case 'onModeChange':\r\n            case 'onVirtualKeyboardToggle':\r\n            case 'onReadAloudStatus':\r\n            case 'onError':\r\n                if (updates[key] === null) {\r\n                    result[key] = NO_OP_LISTENER;\r\n                } else if (typeof updates[key] !== 'function') {\r\n                    throw Error(key + ' must be a function or null');\r\n                }\r\n                result[key] = updates[key] as any;\r\n                break;\r\n            default:\r\n                if (isArray(updates[key])) {\r\n                    result[key] = [...updates[key]];\r\n                } else if (typeof updates[key] === 'object') {\r\n                    result[key] = { ...updates[key] };\r\n                } else {\r\n                    result[key] = updates[key];\r\n                }\r\n        }\r\n    });\r\n\r\n    // @revisit 1.0: for backward compatibility, interprets the overrideDefaultInlineShortcuts\r\n    // property\r\n    if (typeof updates.overrideDefaultInlineShortcuts !== 'undefined') {\r\n        if (updates.overrideDefaultInlineShortcuts) {\r\n            result.inlineShortcuts = updates.inlineShortcuts;\r\n        } else {\r\n            result.inlineShortcuts = {\r\n                ...INLINE_SHORTCUTS,\r\n                ...updates.inlineShortcuts,\r\n            };\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function get(\r\n    config: Required<MathfieldConfigPrivate>,\r\n    keys?: keyof MathfieldConfigPrivate | string[]\r\n): any | MathfieldConfigPrivate {\r\n    let resolvedKeys: string[];\r\n    if (typeof keys === 'string') {\r\n        resolvedKeys = [keys];\r\n    } else if (typeof keys === 'undefined') {\r\n        resolvedKeys = Object.keys(config);\r\n    } else {\r\n        resolvedKeys = keys;\r\n    }\r\n    const result: MathfieldConfigPrivate = {};\r\n    resolvedKeys.forEach((x) => {\r\n        if (isArray(result[x])) {\r\n            result[x] = [...result[x]];\r\n        } else if (typeof result[x] === 'object') {\r\n            result[x] = { ...result[x] };\r\n        } else {\r\n            result[x] = config[x];\r\n        }\r\n    });\r\n    // If requested a single key, return its value\r\n    if (typeof keys === 'string') {\r\n        return result[keys];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getDefault(): Required<MathfieldConfigPrivate> {\r\n    return {\r\n        namespace: '',\r\n        substituteTextArea: undefined,\r\n        readOnly: false,\r\n\r\n        defaultMode: 'math',\r\n        macros: MACROS,\r\n        horizontalSpacingScale: 1.0,\r\n        letterShapeStyle: 'auto',\r\n\r\n        smartMode: false,\r\n        smartFence: true,\r\n        smartSuperscript: true,\r\n        scriptDepth: [Infinity, Infinity],\r\n        removeExtraneousParentheses: true,\r\n        ignoreSpacebarInMathMode: true,\r\n\r\n        locale: 'auto',\r\n        strings: {},\r\n\r\n        overrideDefaultInlineShortcuts: false, // @revisit: don't need this if we return the actual shortcuts\r\n        inlineShortcuts: {}, // @revisit: return the actual shortcuts\r\n        inlineShortcutTimeout: 0,\r\n\r\n        virtualKeyboardToggleGlyph: `<span style=\"width: 21px; margin-top: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"/></svg></span>`,\r\n        virtualKeyboardMode: 'auto',\r\n        virtualKeyboards: 'all',\r\n        virtualKeyboardLayout: 'auto',\r\n        customVirtualKeyboardLayers: {},\r\n        customVirtualKeyboards: {},\r\n        virtualKeyboardTheme: /android|cros/i.test(navigator?.userAgent)\r\n            ? 'material'\r\n            : 'apple',\r\n        keypressVibration: true,\r\n        keypressSound: null,\r\n        plonkSound: null,\r\n\r\n        textToSpeechRules: 'mathlive',\r\n        textToSpeechMarkup: '', // no markup\r\n        textToSpeechRulesOptions: {},\r\n        speechEngine: 'local',\r\n        speechEngineVoice: 'Joanna',\r\n        speechEngineRate: '100%',\r\n        speakHook: NO_OP_LISTENER,\r\n        readAloudHook: NO_OP_LISTENER,\r\n\r\n        onAnnounce: defaultAnnounceHook,\r\n        onKeystroke: (): boolean => true,\r\n        onMoveOutOf: (): boolean => true,\r\n        onTabOutOf: (): boolean => true,\r\n\r\n        onBlur: NO_OP_LISTENER,\r\n        onFocus: NO_OP_LISTENER,\r\n        onContentWillChange: NO_OP_LISTENER,\r\n        onContentDidChange: NO_OP_LISTENER,\r\n        onSelectionWillChange: NO_OP_LISTENER,\r\n        onSelectionDidChange: NO_OP_LISTENER,\r\n        onUndoStateWillChange: NO_OP_LISTENER,\r\n        onUndoStateDidChange: NO_OP_LISTENER,\r\n        onModeChange: NO_OP_LISTENER,\r\n        onVirtualKeyboardToggle: NO_OP_LISTENER,\r\n        onReadAloudStatus: NO_OP_LISTENER,\r\n\r\n        onError: (_) => {\r\n            return;\r\n        },\r\n    };\r\n}\r\n","import Keyboard from './editor-keyboard';\r\nimport { selectionIsCollapsed, setSelection } from './model-selection';\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\nimport { Mathfield } from './mathfield-utils';\r\n/**\r\n * Convert the atoms before the anchor to 'text' mode\r\n * @param count - how many atoms back to look at\r\n * @param {function} until - callback to indicate when to stop\r\n * @private\r\n */\r\nfunction convertLastAtomsToText(\r\n    mathfield: Mathfield,\r\n    count: number,\r\n    until?\r\n): void {\r\n    if (typeof count === 'function') {\r\n        until = count;\r\n        count = Infinity;\r\n    }\r\n    if (typeof count === 'undefined') {\r\n        count = Infinity;\r\n    }\r\n    let i = 0;\r\n    let done = false;\r\n    contentWillChange(mathfield.model);\r\n    while (!done) {\r\n        const atom = mathfield.model.sibling(i);\r\n        done =\r\n            count === 0 ||\r\n            !atom ||\r\n            atom.mode !== 'math' ||\r\n            !(\r\n                /mord|textord|mpunct/.test(atom.type) ||\r\n                (atom.type === 'mop' && /[a-zA-Z]+/.test(atom.body as string))\r\n            ) ||\r\n            !!atom.superscript ||\r\n            !!atom.subscript ||\r\n            (until && !until(atom));\r\n        if (!done) {\r\n            atom.applyStyle({ mode: 'text' });\r\n            atom.symbol = atom.body as string;\r\n            atom.latex = '';\r\n        }\r\n        i -= 1;\r\n        count -= 1;\r\n    }\r\n    contentDidChange(mathfield.model);\r\n}\r\n/**\r\n * Convert the atoms before the anchor to 'math' mode 'mord'\r\n * @param {number} count - how many atoms back to look at\r\n * @param {function} until - callback to indicate when to stop\r\n * @private\r\n */\r\nfunction convertLastAtomsToMath(\r\n    mathfield: Mathfield,\r\n    count?: number,\r\n    until?\r\n): void {\r\n    if (typeof count === 'function') {\r\n        until = count;\r\n        count = Infinity;\r\n    }\r\n    if (typeof count === 'undefined') {\r\n        count = Infinity;\r\n    }\r\n    contentWillChange(mathfield.model);\r\n    let i = 0;\r\n    let done = false;\r\n    while (!done) {\r\n        const atom = mathfield.model.sibling(i);\r\n        done =\r\n            count === 0 ||\r\n            !atom ||\r\n            atom.mode !== 'text' ||\r\n            atom.body === ' ' ||\r\n            (until && !until(atom));\r\n        if (!done) {\r\n            atom.applyStyle({ mode: 'math' });\r\n        }\r\n        i -= 1;\r\n        count -= 1;\r\n    }\r\n    removeIsolatedSpace(mathfield);\r\n    contentDidChange(mathfield.model);\r\n}\r\n/**\r\n * Going backwards from the anchor, if a text zone consisting of a single\r\n * space character is found (i.e. it is surrounded by math zone),\r\n * remove it.\r\n */\r\nexport function removeIsolatedSpace(mathfield: Mathfield): void {\r\n    let i = 0;\r\n    while (\r\n        mathfield.model.sibling(i) &&\r\n        mathfield.model.sibling(i).mode === 'math'\r\n    ) {\r\n        i -= 1;\r\n    }\r\n    // If the atom before the last one converted is a\r\n    // text mode space, preceded by a math mode atom,\r\n    // remove the space\r\n    if (\r\n        mathfield.model.sibling(i) &&\r\n        mathfield.model.sibling(i).mode === 'text' &&\r\n        mathfield.model.sibling(i).body === ' ' &&\r\n        (!mathfield.model.sibling(i - 1) ||\r\n            mathfield.model.sibling(i - 1).mode === 'math')\r\n    ) {\r\n        contentWillChange(mathfield.model);\r\n        mathfield.model.siblings().splice(i - 1, 1);\r\n        contentDidChange(mathfield.model);\r\n        // We need to adjust the selection after doing some surgery on the atoms list\r\n        // But we don't want to receive selection notification changes\r\n        // which could have a side effect of changing the mode :(\r\n        const save = mathfield.model.suppressChangeNotifications;\r\n        mathfield.model.suppressChangeNotifications = true;\r\n        setSelection(mathfield.model, mathfield.model.anchorOffset() - 1);\r\n        mathfield.model.suppressChangeNotifications = save;\r\n    }\r\n}\r\n/**\r\n * Return the characters before anchor that could potentially be turned\r\n * into text mode.\r\n * This excludes things like 'mop' (e.g. \\sin)\r\n */\r\nfunction getTextBeforeAnchor(mathfield: Mathfield): string {\r\n    // Going backwards, accumulate\r\n    let result = '';\r\n    let i = 0;\r\n    let done = false;\r\n    while (!done) {\r\n        const atom = mathfield.model.sibling(i);\r\n        done = !(\r\n            atom &&\r\n            ((atom.mode === 'text' && !atom.type) ||\r\n                (atom.mode === 'math' && /mord|textord|mpunct/.test(atom.type)))\r\n        );\r\n        if (!done) {\r\n            result = atom.body + result;\r\n        }\r\n        i -= 1;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Consider whether to switch mode give the content before the anchor\r\n * and the character being input\r\n *\r\n * @param {string} keystroke\r\n * @param {Event} evt - a Event corresponding to the keystroke\r\n * @return true if the mode should change\r\n */\r\n\r\nexport function smartMode_(\r\n    mathfield: Mathfield,\r\n    keystroke: string,\r\n    evt\r\n): boolean {\r\n    if (mathfield.smartModeSuppressed) {\r\n        return false;\r\n    }\r\n    if (mathfield.model.endOffset() < mathfield.model.siblings().length - 1) {\r\n        return false;\r\n    }\r\n    if (!evt || evt.ctrlKey || evt.metaKey) {\r\n        return false;\r\n    }\r\n    const c = Keyboard.eventToChar(evt);\r\n    if (c.length > 1) {\r\n        return false;\r\n    } // Backspace, Left, etc...\r\n    if (!selectionIsCollapsed(mathfield.model)) {\r\n        // There is a selection\r\n        if (mathfield.mode === 'text') {\r\n            if (/[/_^]/.test(c)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    const context = getTextBeforeAnchor(mathfield) + c;\r\n    if (mathfield.mode === 'text') {\r\n        // We're in text mode. Should we switch to math?\r\n        if (keystroke === 'Esc' || /[/\\\\]/.test(c)) {\r\n            // If this is a command for a fraction,\r\n            // or the '\\' command mode key\r\n            // switch to 'math'\r\n            return true;\r\n        }\r\n        if (/[\\^_]/.test(c)) {\r\n            // If this is a superscript or subscript\r\n            // switch to 'math'\r\n            if (/(^|\\s)[a-zA-Z][^_]$/.test(context)) {\r\n                // If left hand context is a single letter,\r\n                // convert it to math\r\n                convertLastAtomsToMath(mathfield, 1);\r\n            }\r\n            return true;\r\n        }\r\n        // If this is a closing matching fence\r\n        // switch to 'math' mode\r\n        const lFence = { ')': '(', '}': '{', ']': '[' }[c];\r\n        if (\r\n            lFence &&\r\n            mathfield.model.parent() &&\r\n            mathfield.model.parent().type === 'leftright' &&\r\n            mathfield.model.parent().leftDelim === lFence\r\n        ) {\r\n            return true;\r\n        }\r\n        if (/(^|[^a-zA-Z])(a|I)[ ]$/.test(context)) {\r\n            // Single letters that are valid words in the current language\r\n            // Do nothing. @todo: localization\r\n            return false;\r\n        }\r\n        if (/[$€£₤₺¥¤฿¢₡₧₨₹₩₱]/u.test(c)) {\r\n            // A currency symbol.\r\n            // Switch to math mode\r\n            return true;\r\n        }\r\n        if (/(^|[^a-zA-Z'’])[a-zA-Z][ ]$/.test(context)) {\r\n            // An isolated letter, followed by a space:\r\n            // Convert the letter to math, stay in text mode.\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return false;\r\n        }\r\n        if (/[^0-9]\\.[^0-9\\s]$/.test(context)) {\r\n            // A period followed by something other than space or a digit\r\n            // and not preceded by a digit.\r\n            // We thought this was a text period, but turns out it's not\r\n            // Turn it into a \\cdot\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            const atom = mathfield.model.sibling(0);\r\n            atom.body = '⋅'; // centered dot\r\n            atom.variant = 'normal'; // @revisit. Was 'auto'. Check for proper conversion.\r\n            atom.symbol = '\\\\cdot';\r\n            atom.latex = '';\r\n            return true;\r\n        }\r\n        if (/(^|\\s)[a-zA-Z][^a-zA-Z]$/.test(context)) {\r\n            // Single letter (x), followed by a non-letter (>, =...)\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/\\.[0-9]$/.test(context)) {\r\n            // If the new character is a digit,\r\n            // and it was preceded by a dot (which may have been converted\r\n            // to text)\r\n            // turn the dot back into 'math'\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/[(][0-9+\\-.]$/.test(context)) {\r\n            // An open paren followed by a number\r\n            // Turn the paren back to math and switch.\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/[(][a-z][,;]$/.test(context)) {\r\n            // An open paren followed by a single letter, then a \",\" or \";\"\r\n            // Turn the paren back and letter to math and switch.\r\n            convertLastAtomsToMath(mathfield, 2);\r\n            return true;\r\n        }\r\n        // The tests above can look behind and change what had previously\r\n        // been entered. Now, let's just look at the typed character.\r\n        if (/[0-9+\\-=><*|]$/.test(c)) {\r\n            // If this new character looks like a number,\r\n            // or a relational operator (=, <, >)\r\n            // or a \"*\" or \"|\"\r\n            // (note that <=, >=, etc... are handled separately as shortcuts)\r\n            // switch to 'math'\r\n            removeIsolatedSpace(mathfield);\r\n            return true;\r\n        }\r\n    } else {\r\n        // We're in math mode. Should we switch to text?\r\n        if (keystroke === 'Spacebar') {\r\n            convertLastAtomsToText(mathfield, undefined, (a) =>\r\n                /[a-z][:,;.]$/.test(a.body)\r\n            );\r\n            return true;\r\n        }\r\n        if (\r\n            /[a-zA-Z]{3,}$/.test(context) &&\r\n            !/(dxd|abc|xyz|uvw)$/.test(context)\r\n        ) {\r\n            // A sequence of three characters\r\n            // (except for some exceptions)\r\n            // Convert them to text.\r\n            convertLastAtomsToText(mathfield, undefined, (a) =>\r\n                /[a-zA-Z:,;.]/.test(a.body)\r\n            );\r\n            return true;\r\n        }\r\n        if (/(^|\\W)(if|If)$/i.test(context)) {\r\n            // @todo localization\r\n            convertLastAtomsToText(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (\r\n            /(\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9|[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5){3,}$/u.test(\r\n                context\r\n            ) &&\r\n            !/(αβγ)$/.test(context)\r\n        ) {\r\n            // A sequence of three *greek* characters\r\n            // (except for one exception)\r\n            // Convert them to text.\r\n            convertLastAtomsToText(mathfield, undefined, (a) =>\r\n                /(:|,|;|.|\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9|[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5)/u.test(\r\n                    a.body\r\n                )\r\n            );\r\n            return true;\r\n        }\r\n        if (/\\?|\\./.test(c)) {\r\n            // If the last character is a period or question mark,\r\n            // turn it to 'text'\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import { suggest } from '../core/definitions';\r\nimport { makeRoot } from '../core/atom';\r\nimport { parseString } from '../core/parser';\r\nimport { ModelPrivate, removeSuggestion } from './model';\r\nimport { moveAfterParent } from './model-selection';\r\nimport Keyboard from './editor-keyboard';\r\nimport {\r\n    getInlineShortcutsStartingWith,\r\n    getKeyboardShortcut,\r\n    getInlineShortcut,\r\n    getShortcutMarkup,\r\n} from './shortcuts';\r\nimport { hidePopover, showPopoverWithLatex } from './popover';\r\nimport { splitGraphemes } from '../core/grapheme-splitter';\r\nimport { HAPTIC_FEEDBACK_DURATION } from './commands';\r\nimport { getAnchorStyle, setPath } from './model-selection';\r\nimport { insertSuggestion } from './autocomplete';\r\nimport {\r\n    decorateCommandStringAroundInsertionPoint,\r\n    extractCommandStringAroundInsertionPoint,\r\n} from './model-command-mode';\r\nimport { insertSmartFence } from './model-smartfence';\r\n\r\nimport { contentDidChange, contentWillChange } from './model-listeners';\r\n\r\nimport { insert } from './model-insert';\r\nimport { requestUpdate } from './mathfield-render';\r\n\r\nimport { Mathfield } from './mathfield-utils';\r\n\r\nimport { removeIsolatedSpace } from './mathfield-smartmode';\r\nimport { smartMode_ } from './mathfield-smartmode';\r\n\r\nexport function showKeystroke(mathfield: Mathfield, keystroke: string) {\r\n    const vb = mathfield.keystrokeCaption;\r\n    if (vb && mathfield.keystrokeCaptionVisible) {\r\n        const bounds = mathfield.element.getBoundingClientRect();\r\n        vb.style.left = bounds.left + 'px';\r\n        vb.style.top = bounds.top - 64 + 'px';\r\n        vb.innerHTML =\r\n            '<span>' +\r\n            (getShortcutMarkup(keystroke) || keystroke) +\r\n            '</span>' +\r\n            vb.innerHTML;\r\n        vb.style.visibility = 'visible';\r\n        setTimeout(function () {\r\n            if (vb.childNodes.length > 0) {\r\n                vb.removeChild(vb.childNodes[vb.childNodes.length - 1]);\r\n            }\r\n            if (vb.childNodes.length === 0) {\r\n                vb.style.visibility = 'hidden';\r\n            }\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n/**\r\n * @param [evt] - An Event corresponding to the keystroke.\r\n */\r\nexport function onKeystroke(\r\n    mathfield: Mathfield,\r\n    keystroke: string,\r\n    evt: KeyboardEvent\r\n) {\r\n    // 1. Display the keystroke in the keystroke panel (if visible)\r\n    showKeystroke(mathfield, keystroke);\r\n    // 2. Reset the timer for the keystroke buffer reset\r\n    clearTimeout(mathfield.keystrokeBufferResetTimer);\r\n    // 3. Give a chance to the custom keystroke handler to intercept the event\r\n    if (\r\n        mathfield.config.onKeystroke &&\r\n        !mathfield.config.onKeystroke(mathfield, keystroke, evt)\r\n    ) {\r\n        if (evt?.preventDefault) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n        return false;\r\n    }\r\n    // 4. Let's try to find a matching shortcut or command\r\n    let shortcut;\r\n    let stateIndex;\r\n    let selector;\r\n    let resetKeystrokeBuffer = false;\r\n    // 4.1 Check if the keystroke, prefixed with the previously typed keystrokes,\r\n    // would match a long shortcut (i.e. '~~')\r\n    // Ignore the key if command or control is pressed (it may be a shortcut,\r\n    // see 4.3)\r\n    if (\r\n        mathfield.mode !== 'command' &&\r\n        (!evt || (!evt.ctrlKey && !evt.metaKey))\r\n    ) {\r\n        const c = Keyboard.eventToChar(evt);\r\n        // The Backspace key will be handled as a delete command later (5.4)\r\n        // const c = Keyboard.eventToChar(evt);\r\n        if (c !== 'Backspace') {\r\n            if (!c || c.length > 1) {\r\n                // It was a non-alpha character (PageUp, End, etc...)\r\n                mathfield.resetKeystrokeBuffer();\r\n            } else {\r\n                // Find the longest substring that matches a shortcut\r\n                const candidate = mathfield.keystrokeBuffer + c;\r\n                let i = 0;\r\n                while (!shortcut && i < candidate.length) {\r\n                    let siblings;\r\n                    if (mathfield.keystrokeBufferStates[i]) {\r\n                        const mathlist = new ModelPrivate();\r\n                        mathlist.root = makeRoot(\r\n                            'math',\r\n                            parseString(\r\n                                mathfield.keystrokeBufferStates[i].latex,\r\n                                mathfield.config.defaultMode,\r\n                                null,\r\n                                mathfield.config.macros\r\n                            )\r\n                        );\r\n                        setPath(\r\n                            mathlist,\r\n                            mathfield.keystrokeBufferStates[i].selection\r\n                        );\r\n                        siblings = mathlist.siblings();\r\n                    } else {\r\n                        siblings = mathfield.model.siblings();\r\n                    }\r\n                    shortcut = getInlineShortcut(\r\n                        mathfield.mode,\r\n                        siblings,\r\n                        candidate.slice(i),\r\n                        mathfield.config.inlineShortcuts\r\n                    );\r\n                    i += 1;\r\n                }\r\n                stateIndex = i - 1;\r\n                mathfield.keystrokeBuffer += c;\r\n                mathfield.keystrokeBufferStates.push(\r\n                    mathfield.undoManager.save()\r\n                );\r\n                if (\r\n                    getInlineShortcutsStartingWith(candidate, mathfield.config)\r\n                        .length <= 1\r\n                ) {\r\n                    resetKeystrokeBuffer = true;\r\n                } else {\r\n                    if (mathfield.config.inlineShortcutTimeout) {\r\n                        // Set a timer to reset the shortcut buffer\r\n                        mathfield.keystrokeBufferResetTimer = setTimeout(() => {\r\n                            mathfield.resetKeystrokeBuffer();\r\n                        }, mathfield.config.inlineShortcutTimeout);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 4.2. Should we switch mode?\r\n    // Need to check this before determing if there's a valid shortcut\r\n    // since if we switch to math mode, we may want to apply the shortcut\r\n    // e.g. \"slope = rise/run\"\r\n    if (mathfield.config.smartMode) {\r\n        const previousMode = mathfield.mode;\r\n        if (shortcut) {\r\n            // If we found a shortcut (e.g. \"alpha\"),\r\n            // switch to math mode and insert it\r\n            mathfield.mode = 'math';\r\n        } else if (smartMode_(mathfield, keystroke, evt)) {\r\n            mathfield.mode = { math: 'text', text: 'math' }[mathfield.mode];\r\n            selector = '';\r\n        }\r\n        // Notify of mode change\r\n        if (\r\n            mathfield.mode !== previousMode &&\r\n            typeof mathfield.config.onModeChange === 'function'\r\n        ) {\r\n            mathfield.config.onModeChange(mathfield, mathfield.mode);\r\n        }\r\n    }\r\n    // 4.3 Check if this matches a keystroke shortcut\r\n    // Need to check this **after** checking for inline shortcuts because\r\n    // shift+backquote is a keystroke that inserts \"\\~\"\", but \"~~\" is a\r\n    // shortcut for \"\\approx\" and needs to have priority over shift+backquote\r\n    if (!shortcut && !selector) {\r\n        selector = getKeyboardShortcut(mathfield.mode, keystroke);\r\n    }\r\n    // No shortcut :( We're done.\r\n    if (!shortcut && !selector) {\r\n        return true;\r\n    }\r\n    if (mathfield.config.readOnly && selector[0] === 'insert') {\r\n        return true;\r\n    }\r\n    // 5. Perform the action matching this shortcut\r\n    // 5.1 Remove any error indicator (wavy underline) on the current command\r\n    // sequence (if there are any)\r\n    decorateCommandStringAroundInsertionPoint(mathfield.model, false);\r\n    // 5.2 If we have a `moveAfterParent` selector (usually triggered with\r\n    // `spacebar), and we're at the end of a smart fence, close the fence with\r\n    // an empty (.) right delimiter\r\n    const parent = mathfield.model.parent();\r\n    if (\r\n        selector === 'moveAfterParent' &&\r\n        parent &&\r\n        parent.type === 'leftright' &&\r\n        mathfield.model.endOffset() === mathfield.model.siblings().length - 1 &&\r\n        mathfield.config.smartFence &&\r\n        insertSmartFence(mathfield.model, '.', mathfield.style)\r\n    ) {\r\n        // Pressing the space bar (moveAfterParent selector) when at the end\r\n        // of a potential smartFence will close it as a semi-open fence\r\n        selector = '';\r\n        requestUpdate(mathfield); // Re-render the closed smartFence\r\n    }\r\n    // 5.3 If this is the Spacebar and we're just before or right after\r\n    // a text zone, insert the space inside the text zone\r\n    if (mathfield.mode === 'math' && keystroke === 'Spacebar' && !shortcut) {\r\n        const nextSibling = mathfield.model.sibling(1);\r\n        const previousSibling = mathfield.model.sibling(-1);\r\n        if (\r\n            (nextSibling && nextSibling.mode === 'text') ||\r\n            (previousSibling && previousSibling.mode === 'text')\r\n        ) {\r\n            insert(mathfield.model, ' ', { mode: 'text' });\r\n        }\r\n    }\r\n    // 5.4 If there's a selector, perform it.\r\n    if (selector) {\r\n        mathfield.$perform(selector);\r\n    } else if (shortcut) {\r\n        // 5.5 Insert the shortcut\r\n        // If the shortcut is a mandatory escape sequence (\\}, etc...)\r\n        // don't make it undoable, this would result in syntactically incorrect\r\n        // formulas\r\n        if (\r\n            !/^(\\\\{|\\\\}|\\\\[|\\\\]|\\\\@|\\\\#|\\\\$|\\\\%|\\\\^|\\\\_|\\\\backslash)$/.test(\r\n                shortcut\r\n            )\r\n        ) {\r\n            // To enable the substitution to be undoable,\r\n            // insert the character before applying the substitution\r\n            const style = {\r\n                ...getAnchorStyle(mathfield.model),\r\n                ...mathfield.style,\r\n            };\r\n            insert(mathfield.model, Keyboard.eventToChar(evt), {\r\n                suppressChangeNotifications: true,\r\n                mode: mathfield.mode,\r\n                style: style,\r\n            });\r\n            const saveMode = mathfield.mode;\r\n            // Create a snapshot with the inserted character\r\n            mathfield.undoManager.snapshotAndCoalesce(mathfield.config);\r\n            // Revert to the state before the beginning of the shortcut\r\n            // (restore doesn't change the undo stack)\r\n            mathfield.undoManager.restore(\r\n                mathfield.keystrokeBufferStates[stateIndex],\r\n                { ...mathfield.config, suppressChangeNotifications: true }\r\n            );\r\n            mathfield.mode = saveMode;\r\n        }\r\n        contentWillChange(mathfield.model);\r\n        const save = mathfield.model.suppressChangeNotifications;\r\n        mathfield.model.suppressChangeNotifications = true;\r\n        // Insert the substitute, possibly as a smart fence\r\n        const style = {\r\n            ...getAnchorStyle(mathfield.model),\r\n            ...mathfield.style,\r\n        };\r\n        insert(mathfield.model, shortcut, {\r\n            format: 'latex',\r\n            mode: mathfield.mode,\r\n            style: style,\r\n            smartFence: true,\r\n        });\r\n        // Check if as a result of the substitution there is now an isolated\r\n        // (text mode) space (surrounded by math). In which case, remove it.\r\n        removeIsolatedSpace(mathfield);\r\n        // Switch (back) to text mode if the shortcut ended with a space\r\n        if (shortcut.endsWith(' ')) {\r\n            mathfield.mode = 'text';\r\n            insert(mathfield.model, ' ', { mode: 'text', style: style });\r\n        }\r\n        mathfield.model.suppressChangeNotifications = save;\r\n        contentDidChange(mathfield.model);\r\n        mathfield.undoManager.snapshot(mathfield.config);\r\n        requestUpdate(mathfield);\r\n        mathfield.model.announce('replacement');\r\n        // If we're done with the shortcuts (found a unique one), reset it.\r\n        if (resetKeystrokeBuffer) {\r\n            mathfield.resetKeystrokeBuffer();\r\n        }\r\n    }\r\n    // 6. Make sure the insertion point is scrolled into view\r\n    mathfield.scrollIntoView();\r\n    // 7. Keystroke has been handled, if it wasn't caught in the default\r\n    // case, so prevent propagation\r\n    if (evt?.preventDefault) {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * This handler is invoked when text has been typed, pasted in or input with\r\n * an input method. As a result, `text` can be a sequence of characters to\r\n * be inserted.\r\n * @param {string} text\r\n * @param {object} options\r\n * @param {boolean} options.focus - If true, the mathfield will be focused\r\n * @param {boolean} options.feedback - If true, provide audio and haptic feedback\r\n * @param {boolean} options.simulateKeystroke - If true, generate some synthetic\r\n * keystrokes (useful to trigger inline shortcuts, for example)\r\n * @param {boolean} options.commandMode - If true, switch to command mode if\r\n * necessary, then insert text\r\n * @private\r\n */\r\nexport function onTypedText(mathfield: Mathfield, text: string, options?) {\r\n    if (mathfield.config.readOnly) {\r\n        mathfield.model.announce('plonk');\r\n        return;\r\n    }\r\n    options = options || {};\r\n    // Focus, then provide audio and haptic feedback\r\n    if (options.focus) {\r\n        mathfield.$focus();\r\n    }\r\n    if (options.feedback) {\r\n        if (mathfield.config.keypressVibration && navigator.vibrate) {\r\n            navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\r\n        }\r\n        if (mathfield.keypressSound) {\r\n            mathfield.keypressSound.load();\r\n            mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n        }\r\n    }\r\n    if (options.commandMode && mathfield.mode !== 'command') {\r\n        mathfield.switchMode('command');\r\n    }\r\n    // Remove any error indicator on the current command sequence\r\n    // (if there is one)\r\n    decorateCommandStringAroundInsertionPoint(mathfield.model, false);\r\n    if (options.simulateKeystroke) {\r\n        // for (const c of text) {\r\n        const c = text.charAt(0);\r\n        const ev: KeyboardEvent = Keyboard.charToEvent(c) as KeyboardEvent;\r\n        if (!onKeystroke(mathfield, Keyboard.keyboardEventToString(ev), ev)) {\r\n            return;\r\n        }\r\n        // }\r\n    }\r\n    // Insert the specified text at the current insertion point.\r\n    // If the selection is not collapsed, the content will be deleted first.\r\n    let popoverText = '';\r\n    let displayArrows = false;\r\n    if (mathfield.pasteInProgress) {\r\n        mathfield.pasteInProgress = false;\r\n        // This call was made in response to a paste event.\r\n        // Interpret `text` as a 'smart' expression (could be LaTeX, could be\r\n        // UnicodeMath)\r\n        insert(mathfield.model, text, {\r\n            smartFence: mathfield.config.smartFence,\r\n            mode: 'math',\r\n        });\r\n    } else {\r\n        const style = {\r\n            ...getAnchorStyle(mathfield.model),\r\n            ...mathfield.style,\r\n        };\r\n        // Decompose the string into an array of graphemes.\r\n        // This is necessary to correctly process what is displayed as a single\r\n        // glyph (a grapheme) but which is composed of multiple Unicode\r\n        // codepoints. This is the case in particular for some emojis, such as\r\n        // those with a skin tone modifier, the country flags emojis or\r\n        // compound emojis such as the professional emojis, including the\r\n        // David Bowie emoji: 👨🏻‍🎤\r\n        const graphemes = splitGraphemes(text);\r\n        for (const c of graphemes) {\r\n            if (mathfield.mode === 'command') {\r\n                removeSuggestion(mathfield.model);\r\n                mathfield.suggestionIndex = 0;\r\n                const command = extractCommandStringAroundInsertionPoint(\r\n                    mathfield.model\r\n                );\r\n                const suggestions = suggest(command + c);\r\n                displayArrows = suggestions.length > 1;\r\n                if (suggestions.length === 0) {\r\n                    insert(mathfield.model, c, { mode: 'command' });\r\n                    if (/^\\\\[a-zA-Z\\\\*]+$/.test(command + c)) {\r\n                        // This looks like a command name, but not a known one\r\n                        decorateCommandStringAroundInsertionPoint(\r\n                            mathfield.model,\r\n                            true\r\n                        );\r\n                    }\r\n                    hidePopover(mathfield);\r\n                } else {\r\n                    insert(mathfield.model, c, { mode: 'command' });\r\n                    if (suggestions[0].match !== command + c) {\r\n                        insertSuggestion(\r\n                            mathfield.model,\r\n                            suggestions[0].match,\r\n                            -suggestions[0].match.length + command.length + 1\r\n                        );\r\n                    }\r\n                    popoverText = suggestions[0].match;\r\n                }\r\n            } else if (mathfield.mode === 'math') {\r\n                // Some characters are mapped to commands. Handle them here.\r\n                // This is important to handle synthetic text input and\r\n                // non-US keyboards, on which, fop example, the '^' key is\r\n                // not mapped to  'Shift-Digit6'.\r\n                const selector = {\r\n                    '^': 'moveToSuperscript',\r\n                    _: 'moveToSubscript',\r\n                    ' ': 'moveAfterParent',\r\n                }[c];\r\n                if (selector) {\r\n                    if (selector === 'moveToSuperscript') {\r\n                        if (\r\n                            superscriptDepth(mathfield) >=\r\n                            mathfield.config.scriptDepth[1]\r\n                        ) {\r\n                            mathfield.model.announce('plonk');\r\n                            return;\r\n                        }\r\n                    } else if (selector === 'moveToSubscript') {\r\n                        if (\r\n                            subscriptDepth(mathfield) >=\r\n                            mathfield.config.scriptDepth[0]\r\n                        ) {\r\n                            mathfield.model.announce('plonk');\r\n                            return;\r\n                        }\r\n                    }\r\n                    mathfield.$perform(selector);\r\n                } else {\r\n                    if (\r\n                        mathfield.config.smartSuperscript &&\r\n                        mathfield.model.relation() === 'superscript' &&\r\n                        /[0-9]/.test(c) &&\r\n                        mathfield.model\r\n                            .siblings()\r\n                            .filter((x) => x.type !== 'first').length === 0\r\n                    ) {\r\n                        // We are inserting a digit into an empty superscript\r\n                        // If smartSuperscript is on, insert the digit, and\r\n                        // exit the superscript.\r\n                        insert(mathfield.model, c, {\r\n                            mode: 'math',\r\n                            style: style,\r\n                        });\r\n                        moveAfterParent(mathfield.model);\r\n                    } else {\r\n                        insert(mathfield.model, c, {\r\n                            mode: 'math',\r\n                            style: style,\r\n                            smartFence: mathfield.config.smartFence,\r\n                        });\r\n                    }\r\n                }\r\n            } else if (mathfield.mode === 'text') {\r\n                insert(mathfield.model, c, { mode: 'text', style: style });\r\n            }\r\n        }\r\n    }\r\n    if (mathfield.mode !== 'command') {\r\n        mathfield.undoManager.snapshotAndCoalesce(mathfield.config);\r\n    }\r\n    // Render the mathlist\r\n    requestUpdate(mathfield);\r\n    // Make sure the insertion point is visible\r\n    mathfield.scrollIntoView();\r\n    // Since the location of the popover depends on the position of the caret\r\n    // only show the popover after the formula has been rendered and the\r\n    // position of the caret calculated\r\n    showPopoverWithLatex(mathfield, popoverText, displayArrows);\r\n}\r\n\r\nfunction superscriptDepth(mathfield: Mathfield) {\r\n    let result = 0;\r\n    let i = 0;\r\n    let atom = mathfield.model.ancestor(i);\r\n    let wasSuperscript = false;\r\n    while (atom) {\r\n        if (atom.superscript || atom.subscript) {\r\n            result += 1;\r\n        }\r\n        if (atom.superscript) {\r\n            wasSuperscript = true;\r\n        } else if (atom.subscript) {\r\n            wasSuperscript = false;\r\n        }\r\n        i += 1;\r\n        atom = mathfield.model.ancestor(i);\r\n    }\r\n    return wasSuperscript ? result : 0;\r\n}\r\nfunction subscriptDepth(mathfield: Mathfield) {\r\n    let result = 0;\r\n    let i = 0;\r\n    let atom = mathfield.model.ancestor(i);\r\n    let wasSubscript = false;\r\n    while (atom) {\r\n        if (atom.superscript || atom.subscript) {\r\n            result += 1;\r\n        }\r\n        if (atom.superscript) {\r\n            wasSubscript = false;\r\n        } else if (atom.subscript) {\r\n            wasSubscript = true;\r\n        }\r\n        i += 1;\r\n        atom = mathfield.model.ancestor(i);\r\n    }\r\n    return wasSubscript ? result : 0;\r\n}\r\n","import { ParseMode } from '../public/core';\r\nimport { register as registerCommand } from './commands';\r\nimport { complete } from './autocomplete';\r\nimport { Mathfield } from './mathfield-utils';\r\nimport { onTypedText } from './mathfield-keyboard-input';\r\n\r\nregisterCommand({\r\n    undo: (mathfield: Mathfield) => {\r\n        complete(mathfield);\r\n        // Undo to the previous state\r\n        mathfield.undoManager.undo(mathfield.config);\r\n        return true;\r\n    },\r\n    redo: (mathfield: Mathfield) => {\r\n        complete(mathfield);\r\n        mathfield.undoManager.redo(mathfield.config);\r\n        return true;\r\n    },\r\n    scrollIntoView: (mathfield: Mathfield) => {\r\n        mathfield.scrollIntoView();\r\n        return true;\r\n    },\r\n    scrollToStart: (mathfield: Mathfield) => {\r\n        mathfield.field.scroll(0, 0);\r\n        return true;\r\n    },\r\n    scrollToEnd: (mathfield: Mathfield) => {\r\n        const fieldBounds = mathfield.field.getBoundingClientRect();\r\n        mathfield.field.scroll(fieldBounds.left - window.scrollX, 0);\r\n        return true;\r\n    },\r\n    enterCommandMode: (mathfield: Mathfield) => {\r\n        mathfield.switchMode('command');\r\n        return true;\r\n    },\r\n    toggleKeystrokeCaption: (mathfield: Mathfield) => {\r\n        mathfield.keystrokeCaptionVisible = !mathfield.keystrokeCaptionVisible;\r\n        mathfield.keystrokeCaption.innerHTML = '';\r\n        if (!mathfield.keystrokeCaptionVisible) {\r\n            mathfield.keystrokeCaption.style.visibility = 'hidden';\r\n        }\r\n        return false;\r\n    },\r\n    switchMode: (mathfield: Mathfield, mode: ParseMode) => {\r\n        mathfield.switchMode(mode);\r\n        return true;\r\n    },\r\n    insert: (mathfield: Mathfield, s: string, options) =>\r\n        mathfield.$insert(s, options),\r\n    typedText: (mathfield: Mathfield, text: string) => {\r\n        onTypedText(mathfield, text);\r\n        return true;\r\n    },\r\n});\r\n","import { register as registerCommand } from './commands';\r\nimport { selectionIsCollapsed } from './model-selection';\r\nimport { Mathfield } from './mathfield-utils';\r\nimport { requestUpdate } from './mathfield-render';\r\n\r\nexport function onPaste(mathfield: Mathfield): boolean {\r\n    // Make note we're in the process of pasting. The subsequent call to\r\n    // onTypedText() will take care of interpreting the clipboard content\r\n    mathfield.pasteInProgress = true;\r\n    return true;\r\n}\r\nexport function onCut(mathfield: Mathfield): boolean {\r\n    // Clearing the selection will have the side effect of clearing the\r\n    // content of the textarea. However, the textarea value is what will\r\n    // be copied to the clipboard, so defer the clearing of the selection\r\n    // to later, after the cut operation has been handled.\r\n    setTimeout(\r\n        function () {\r\n            mathfield.$clearSelection();\r\n            requestUpdate(mathfield);\r\n        }.bind(mathfield),\r\n        0\r\n    );\r\n    return true;\r\n}\r\nexport function onCopy(mathfield: Mathfield, e: ClipboardEvent): void {\r\n    if (selectionIsCollapsed(mathfield.model)) {\r\n        e.clipboardData.setData(\r\n            'text/plain',\r\n            '$$' + mathfield.$text('latex-expanded') + '$$'\r\n        );\r\n        e.clipboardData.setData('application/json', mathfield.$text('json'));\r\n        e.clipboardData.setData('application/xml', mathfield.$text('mathML'));\r\n    } else {\r\n        e.clipboardData.setData(\r\n            'text/plain',\r\n            '$$' + mathfield.$selectedText('latex-expanded') + '$$'\r\n        );\r\n        e.clipboardData.setData(\r\n            'application/json',\r\n            mathfield.$selectedText('json')\r\n        );\r\n        e.clipboardData.setData(\r\n            'application/xml',\r\n            mathfield.$selectedText('mathML')\r\n        );\r\n    }\r\n    // Prevent the current document selection from being written to the clipboard.\r\n    e.preventDefault();\r\n}\r\n\r\nregisterCommand(\r\n    {\r\n        copyToClipboard: (mathfield: Mathfield) => {\r\n            mathfield.$focus();\r\n            // If the selection is empty, select the entire field before\r\n            // copying it.\r\n            if (selectionIsCollapsed(mathfield.model)) {\r\n                mathfield.$select();\r\n            }\r\n            document.execCommand('copy');\r\n            return false;\r\n        },\r\n\r\n        cutToClipboard: (mathfield: Mathfield) => {\r\n            mathfield.$focus();\r\n            document.execCommand('cut');\r\n            return true;\r\n        },\r\n\r\n        pasteFromClipboard: (mathfield: Mathfield) => {\r\n            mathfield.$focus();\r\n            document.execCommand('paste');\r\n            return true;\r\n        },\r\n    },\r\n    { target: 'mathfield', category: 'clipboard' }\r\n);\r\n","import { pathFromString, clone as clonePath } from './path';\r\nimport {\r\n    setPath,\r\n    selectGroup,\r\n    setRange,\r\n    selectAll,\r\n    filter,\r\n} from './model-selection';\r\nimport { Mathfield, on, off } from './mathfield-utils';\r\nimport { requestUpdate } from './mathfield-render';\r\n\r\nlet gLastTap;\r\nlet gTapCount = 0;\r\n\r\nexport function onPointerDown(mathfield: Mathfield, evt) {\r\n    const that = mathfield;\r\n    let anchor;\r\n    let trackingPointer = false;\r\n    let trackingWords = false;\r\n    let dirty = false;\r\n    // If a mouse button other than the main one was pressed, return\r\n    if (evt.buttons !== 1) {\r\n        return;\r\n    }\r\n    let scrollLeft = false;\r\n    let scrollRight = false;\r\n    const anchorX = evt.touches ? evt.touches[0].clientX : evt.clientX;\r\n    const anchorY = evt.touches ? evt.touches[0].clientY : evt.clientY;\r\n    const anchorTime = Date.now();\r\n    const scrollInterval = setInterval(() => {\r\n        if (scrollLeft) {\r\n            that.field.scroll({ top: 0, left: that.field.scrollLeft - 16 });\r\n        } else if (scrollRight) {\r\n            that.field.scroll({ top: 0, left: that.field.scrollLeft + 16 });\r\n        }\r\n    }, 32);\r\n    function endPointerTracking(evt) {\r\n        if (window.PointerEvent) {\r\n            off(that.field, 'pointermove', onPointerMove);\r\n            off(\r\n                that.field,\r\n                'pointerend pointerleave pointercancel',\r\n                endPointerTracking\r\n            );\r\n            // off(window, 'pointermove', onPointerMove);\r\n            // off(window, 'pointerup blur', endPointerTracking);\r\n            that.field.releasePointerCapture(evt.pointerId);\r\n        } else {\r\n            off(that.field, 'touchmove', onPointerMove);\r\n            off(that.field, 'touchend touchleave', endPointerTracking);\r\n            off(window, 'mousemove', onPointerMove);\r\n            off(window, 'mouseup blur', endPointerTracking);\r\n        }\r\n        trackingPointer = false;\r\n        clearInterval(scrollInterval);\r\n        that.element\r\n            .querySelectorAll('.ML__scroller')\r\n            .forEach((x) => x.parentNode.removeChild(x));\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n\r\n    function onPointerMove(evt) {\r\n        const x = evt.touches ? evt.touches[0].clientX : evt.clientX;\r\n        const y = evt.touches ? evt.touches[0].clientY : evt.clientY;\r\n        // Ignore events that are within small spatial and temporal bounds\r\n        // of the pointer down\r\n        const hysteresis = evt.pointerType === 'touch' ? 20 : 5;\r\n        if (\r\n            Date.now() < anchorTime + 500 &&\r\n            Math.abs(anchorX - x) < hysteresis &&\r\n            Math.abs(anchorY - y) < hysteresis\r\n        ) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n            return;\r\n        }\r\n        const fieldBounds = that.field.getBoundingClientRect();\r\n        scrollRight = x > fieldBounds.right;\r\n        scrollLeft = x < fieldBounds.left;\r\n        let actualAnchor = anchor;\r\n        if (window.PointerEvent) {\r\n            if (!evt.isPrimary) {\r\n                actualAnchor = pathFromPoint(that, evt.clientX, evt.clientY, {\r\n                    bias: 0,\r\n                });\r\n            }\r\n        } else {\r\n            if (evt.touches && evt.touches.length === 2) {\r\n                actualAnchor = pathFromPoint(\r\n                    that,\r\n                    evt.touches[1].clientX,\r\n                    evt.touches[1].clientY,\r\n                    { bias: 0 }\r\n                );\r\n            }\r\n        }\r\n        const focus = pathFromPoint(that, x, y, {\r\n            bias: x <= anchorX ? (x === anchorX ? 0 : -1) : +1,\r\n        });\r\n        if (\r\n            focus &&\r\n            setRange(that.model, actualAnchor, focus, {\r\n                extendToWordBoundary: trackingWords,\r\n            })\r\n        ) {\r\n            // Re-render if the range has actually changed\r\n            requestUpdate(mathfield);\r\n        }\r\n        // Prevent synthetic mouseMove event when this is a touch event\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n\r\n    // Calculate the tap count\r\n    if (\r\n        gLastTap &&\r\n        Math.abs(gLastTap.x - anchorX) < 5 &&\r\n        Math.abs(gLastTap.y - anchorY) < 5 &&\r\n        Date.now() < gLastTap.time + 500\r\n    ) {\r\n        gTapCount += 1;\r\n        gLastTap.time = anchorTime;\r\n    } else {\r\n        gLastTap = {\r\n            x: anchorX,\r\n            y: anchorY,\r\n            time: anchorTime,\r\n        };\r\n        gTapCount = 1;\r\n    }\r\n    const bounds = mathfield.field.getBoundingClientRect();\r\n    if (\r\n        anchorX >= bounds.left &&\r\n        anchorX <= bounds.right &&\r\n        anchorY >= bounds.top &&\r\n        anchorY <= bounds.bottom\r\n    ) {\r\n        // Focus the mathfield\r\n        if (!mathfield.$hasFocus()) {\r\n            dirty = true;\r\n            if (mathfield.textarea.focus) {\r\n                mathfield.textarea.focus();\r\n            }\r\n        }\r\n\r\n        // Clicking or tapping the field resets the keystroke buffer and\r\n        // smart mode\r\n        mathfield.resetKeystrokeBuffer();\r\n        mathfield.smartModeSuppressed = false;\r\n\r\n        const wrapperBounds = mathfield.field\r\n            .querySelector('.ML__mathlive')\r\n            .getBoundingClientRect();\r\n        if (anchorX > wrapperBounds.right) {\r\n            // If outside the bounds of the rendered formula,\r\n            // set the anchor to the last element of the root\r\n            anchor = [\r\n                {\r\n                    relation: 'body',\r\n                    offset: mathfield.model.root.body.length - 1,\r\n                },\r\n            ];\r\n        } else {\r\n            anchor = pathFromPoint(mathfield, anchorX, anchorY, { bias: 0 });\r\n        }\r\n        if (anchor) {\r\n            // Create divs to block out pointer tracking to the left and right of\r\n            // the mathfield (to avoid triggering the hover of the virtual\r\n            // keyboard toggle, for example)\r\n            let div = document.createElement('div');\r\n            div.className = 'ML__scroller';\r\n            mathfield.element.appendChild(div);\r\n            div.style.left = bounds.left - 200 + 'px';\r\n            div = document.createElement('div');\r\n            div.className = 'ML__scroller';\r\n            mathfield.element.appendChild(div);\r\n            div.style.left = bounds.right + 'px';\r\n\r\n            if (evt.shiftKey) {\r\n                // Extend the selection if the shift-key is down\r\n                setRange(mathfield.model, mathfield.model.path, anchor);\r\n                anchor = clonePath(mathfield.model.path);\r\n                anchor[anchor.length - 1].offset -= 1;\r\n            } else {\r\n                setPath(mathfield.model, anchor, 0);\r\n            }\r\n\r\n            // The selection has changed, so we'll need to re-render\r\n            dirty = true;\r\n\r\n            // Reset any user-specified style\r\n            mathfield.style = {};\r\n            // evt.detail contains the number of consecutive clicks\r\n            // for double-click, triple-click, etc...\r\n            // (note that evt.detail is not set when using pointerEvent)\r\n            if (evt.detail === 3 || gTapCount > 2) {\r\n                endPointerTracking(evt);\r\n                if (evt.detail === 3 || gTapCount === 3) {\r\n                    // This is a triple-click\r\n                    selectAll(mathfield.model);\r\n                }\r\n            } else if (!trackingPointer) {\r\n                trackingPointer = true;\r\n                if (window.PointerEvent) {\r\n                    on(that.field, 'pointermove', onPointerMove);\r\n                    on(\r\n                        that.field,\r\n                        'pointerend pointercancel pointerup',\r\n                        endPointerTracking\r\n                    );\r\n                    that.field.setPointerCapture(evt.pointerId);\r\n                } else {\r\n                    on(window, 'blur', endPointerTracking);\r\n                    if (evt.touches) {\r\n                        // To receive the subsequent touchmove/touch, need to\r\n                        // listen to this evt.target.\r\n                        // This was a touch event\r\n                        on(evt.target, 'touchmove', onPointerMove);\r\n                        on(evt.target, 'touchend', endPointerTracking);\r\n                    } else {\r\n                        on(window, 'mousemove', onPointerMove);\r\n                        on(window, 'mouseup', endPointerTracking);\r\n                    }\r\n                }\r\n                if (evt.detail === 2 || gTapCount === 2) {\r\n                    // This is a double-click\r\n                    trackingWords = true;\r\n                    selectGroup(mathfield.model);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        gLastTap = null;\r\n    }\r\n    if (dirty) {\r\n        requestUpdate(mathfield);\r\n    }\r\n    // Prevent the browser from handling, in particular when this is a\r\n    // touch event prevent the synthetic mouseDown event from being generated\r\n    evt.preventDefault();\r\n}\r\n\r\n/**\r\n * Return a tuple of an element and a distance from point (x, y)\r\n */\r\nfunction nearestElementFromPoint(\r\n    el: HTMLElement,\r\n    x: number,\r\n    y: number\r\n): { distance: number; element: HTMLElement } {\r\n    let result = { element: null, distance: Number.POSITIVE_INFINITY };\r\n\r\n    // This element may not have a matching atom, but its children might\r\n    let considerChildren = true;\r\n\r\n    if (el.getAttribute('data-atom-id')) {\r\n        result.element = el;\r\n\r\n        // Calculate the (square of the) distance to the rectangle\r\n        const r = el.getBoundingClientRect();\r\n        const dx = x - (r.left + r.right) / 2;\r\n        const dy = y - (r.top + r.bottom) / 2;\r\n        result.distance = dx * dx + dy * dy;\r\n\r\n        // Only consider children if the target is inside the (horizontal)\r\n        // bounds of the element.\r\n        // This avoid searching the numerator/denominator when a fraction\r\n        // is the last element in the formula.\r\n        considerChildren = x >= r.left && x <= r.right;\r\n    }\r\n\r\n    if (considerChildren && el.children) {\r\n        for (const child of el.children) {\r\n            const nearest = nearestElementFromPoint(child as HTMLElement, x, y);\r\n            if (nearest.element && nearest.distance <= result.distance) {\r\n                result = nearest;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param options.bias  if 0, the midpoint of the bounding box\r\n * is considered to return the sibling. If <0, the left sibling is\r\n * favored, if >0, the right sibling\r\n */\r\nexport function pathFromPoint(\r\n    mathfield: Mathfield,\r\n    x: number,\r\n    y: number,\r\n    options?: { bias?: number }\r\n) {\r\n    options = options ?? {};\r\n    options.bias = options.bias ?? 0;\r\n    let result;\r\n    // Try to find the deepest element that is near the point that was\r\n    // clicked on (the point could be outside of the element)\r\n    const nearest = nearestElementFromPoint(mathfield.field, x, y);\r\n    const el = nearest.element;\r\n    const id = el ? el.getAttribute('data-atom-id') : null;\r\n    if (id) {\r\n        // Let's find the atom that has a matching ID with the element that\r\n        // was clicked on (or near)\r\n        const paths = filter(mathfield.model, (_path, atom) => {\r\n            // If the atom allows children to be selected, match only if\r\n            // the ID of  the atom matches the one we're looking for.\r\n            if (!atom.captureSelection) {\r\n                return atom.id === id;\r\n            }\r\n            // If the atom does not allow children to be selected\r\n            // (captureSelection === true), the element matches if any of\r\n            // its children has an ID that matches.\r\n            return atom.filter((childAtom) => childAtom.id === id).length > 0;\r\n        });\r\n        if (paths && paths.length > 0) {\r\n            // (There should be exactly one atom that matches this ID...)\r\n            // Set the result to the path to this atom\r\n            result = pathFromString(paths[0]).path;\r\n            if (options.bias === 0) {\r\n                // If the point clicked is to the left of the vertical midline,\r\n                // adjust the path to *before* the atom (i.e. after the\r\n                // preceding atom)\r\n                const bounds = el.getBoundingClientRect();\r\n                if (\r\n                    x < bounds.left + bounds.width / 2 &&\r\n                    !el.classList.contains('ML__placeholder')\r\n                ) {\r\n                    result[result.length - 1].offset = Math.max(\r\n                        0,\r\n                        result[result.length - 1].offset - 1\r\n                    );\r\n                }\r\n            } else if (options.bias < 0) {\r\n                result[result.length - 1].offset = Math.min(\r\n                    mathfield.model.siblings().length - 1,\r\n                    Math.max(0, result[result.length - 1].offset + options.bias)\r\n                );\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import { decompose } from '../core/atom-utils';\r\nimport { makeSpan, makeStruts } from '../core/span';\r\nimport { parseString } from '../core/parser';\r\nimport { LINE_COLORS, AREA_COLORS } from '../core/color';\r\nimport { localize as l10n } from './l10n';\r\nimport { MATHSTYLES } from '../core/mathstyle';\r\nimport { attachButtonHandlers } from './mathfield-buttons';\r\nimport { releaseSharedElement } from './mathfield-utils';\r\n\r\nimport { Mathfield } from './mathfield-utils';\r\n\r\nconst KEYBOARDS = {\r\n    numeric: {\r\n        tooltip: 'keyboard.tooltip.numeric',\r\n        layer: 'math',\r\n        label: '123',\r\n        layers: ['math'],\r\n    },\r\n    roman: {\r\n        tooltip: 'keyboard.tooltip.roman',\r\n        layer: 'lower-roman',\r\n        label: 'ABC',\r\n        layers: ['lower-roman', 'upper-roman', 'symbols'],\r\n    },\r\n    greek: {\r\n        tooltip: 'keyboard.tooltip.greek',\r\n        layer: 'lower-greek',\r\n        label: '&alpha;&beta;&gamma;',\r\n        classes: 'tex-math',\r\n        layers: ['lower-greek', 'upper-greek'],\r\n    },\r\n    functions: {\r\n        tooltip: 'keyboard.tooltip.functions',\r\n        layer: 'functions',\r\n        label: '<i>f</i>&thinsp;()',\r\n        classes: 'tex',\r\n        layers: ['functions'],\r\n    },\r\n    command: {\r\n        tooltip: 'keyboard.tooltip.command',\r\n        // For the command keyboard, perform a command rather than\r\n        // doing a simple layer switch, as we want to enter command mode\r\n        // when the keyboard is activated\r\n        command: 'enterCommandMode',\r\n        label: `<svg><use xlink:href='#svg-command' /></svg>`,\r\n        layers: ['lower-command', 'upper-command', 'symbols-command'],\r\n    },\r\n    style: {\r\n        tooltip: 'keyboard.tooltip.style',\r\n        layer: 'style',\r\n        label: '<b>b</b><i>i</i>𝔹',\r\n    },\r\n};\r\n\r\nconst SHIFTED_KEYS = {\r\n    '\\\\varphi ': { label: '&Phi;', insert: '\\\\Phi ' },\r\n    '\\\\varsigma ': { label: '&Sigma;', insert: '\\\\Sigma ' },\r\n    '\\\\epsilon ': { label: '&#x0190;', insert: '{\\\\char\"0190}' },\r\n    '\\\\rho ': { label: '&#x3A1', insert: '{\\\\char\"3A1}' },\r\n    '\\\\tau ': { label: '&#x3A4;', insert: '{\\\\char\"3A4}' },\r\n    '\\\\upsilon ': { label: '&Upsilon;', insert: '\\\\Upsilon ' },\r\n    '\\\\theta ': { label: '&Theta;', insert: '\\\\Theta ' },\r\n    '\\\\iota ': { label: '&Iota;', insert: '{\\\\char\"399}' },\r\n    '\\\\omicron ': { label: '&#x039F;', insert: '{\\\\char\"39F}' },\r\n    '\\\\pi ': { label: '&Pi;', insert: '\\\\Pi ' },\r\n    '\\\\alpha ': { label: '&Alpha;', insert: '{\\\\char\"391}' },\r\n    '\\\\sigma ': { label: '&Sigma;', insert: '\\\\Sigma ' },\r\n    '\\\\delta ': { label: '&Delta;', insert: '\\\\Delta ' },\r\n    '\\\\phi ': { label: '&#x03a6;', insert: '\\\\Phi ' },\r\n    '\\\\gamma ': { label: '&Gamma;', insert: '\\\\Gamma ' },\r\n    '\\\\eta ': { label: '&Eta;', insert: '{\\\\char\"397}' },\r\n    '\\\\xi ': { label: '&Xi;', insert: '\\\\Xi ' },\r\n    '\\\\kappa ': { label: '&Kappa;', insert: '{\\\\char\"39A}' },\r\n    '\\\\lambda ': { label: '&Lambda;', insert: '\\\\Lambda ' },\r\n    '\\\\zeta ': { label: '&Zeta;', insert: '{\\\\char\"396}' },\r\n    '\\\\chi ': { label: '&Chi;', insert: '{\\\\char\"3A7}' },\r\n    '\\\\psi ': { label: '&Psi;', insert: '\\\\Psi ' },\r\n    '\\\\omega ': { label: '&Omega;', insert: '\\\\Omega ' },\r\n    '\\\\beta ': { label: '&Beta;', insert: '{\\\\char\"392}' },\r\n    '\\\\nu ': { label: '&Nu;', insert: '{\\\\char\"39D}' },\r\n    '\\\\mu ': { label: '&Mu;', insert: '{\\\\char\"39C}' },\r\n};\r\n\r\n// const FUNCTIONS = [\r\n//     'Basic',\r\n//         ['\\\\sin', '\\\\cos', '\\\\tan', '\\\\min', '\\\\max', '\\\\gcd', '\\\\lcm', '\\\\repeat', 'encapsulate', 'recognize'],\r\n//     'Operators',\r\n//         ['\\\\sum', '\\\\prod', '\\\\bigcup_x']\r\n// ]\r\nconst ALT_KEYS_BASE = {\r\n    '0': [\r\n        '\\\\emptyset',\r\n        '\\\\varnothing',\r\n        '\\\\infty',\r\n        { latex: '#?_0', insert: '#@_0' },\r\n        '\\\\circ',\r\n        '\\\\bigcirc',\r\n        '\\\\bullet',\r\n    ],\r\n    '2': ['\\\\frac{1}{2}', { latex: '#?^2', insert: '#@^2' }],\r\n    '3': ['\\\\frac{1}{3}', { latex: '#?^3', insert: '#@^3' }],\r\n    '.': [\r\n        ',',\r\n        ';',\r\n        '\\\\colon',\r\n        { latex: ':', aside: 'ratio' },\r\n        { latex: '\\\\cdotp', aside: 'center dot', classes: 'box' },\r\n        { latex: '\\\\cdots', aside: 'center ellipsis', classes: 'box' },\r\n        { latex: '\\\\ldotp', aside: 'low dot', classes: 'box' },\r\n        { latex: '\\\\ldots', aside: 'low ellipsis', classes: 'box' },\r\n        { latex: '\\\\vdots', aside: '', classes: 'box' },\r\n        { latex: '\\\\ddots', aside: '', classes: 'box' },\r\n        '\\\\odot',\r\n        '\\\\oslash',\r\n        '\\\\circledcirc',\r\n    ],\r\n\r\n    '*': [\r\n        '\\\\cdot',\r\n        '\\\\ast',\r\n        '\\\\star',\r\n        '\\\\bigstar',\r\n        '\\\\ltimes',\r\n        '\\\\rtimes',\r\n        '\\\\rightthreetimes',\r\n        '\\\\leftthreetimes',\r\n        '\\\\intercal',\r\n        '\\\\prod',\r\n        { latex: '\\\\prod_{n\\\\mathop=0}^{\\\\infty}', classes: 'small' },\r\n    ],\r\n\r\n    '+': [\r\n        '\\\\pm',\r\n        '\\\\mp',\r\n        '\\\\sum',\r\n        { latex: '\\\\sum_{n\\\\mathop=0}^{\\\\infty}', classes: 'small' },\r\n        '\\\\dotplus',\r\n        '\\\\oplus',\r\n    ],\r\n    '-': ['\\\\pm', '\\\\mp', '\\\\ominus', '\\\\vert #0  \\\\vert'],\r\n\r\n    '/': ['\\\\divideontimes', '/', '\\\\div'],\r\n\r\n    '(': [\r\n        '\\\\left( #0\\\\right)',\r\n        '\\\\left[ #0\\\\right]',\r\n        '\\\\left\\\\{ #0\\\\right\\\\}',\r\n        '\\\\left\\\\langle #0\\\\right\\\\rangle',\r\n        '\\\\lfloor',\r\n        '\\\\llcorner',\r\n        '(',\r\n        '\\\\lbrack',\r\n        '\\\\lvert',\r\n        '\\\\lVert',\r\n        '\\\\lgroup',\r\n        '\\\\langle',\r\n        '\\\\lceil',\r\n        '\\\\ulcorner',\r\n        '\\\\lmoustache',\r\n        '\\\\lbrace',\r\n    ],\r\n\r\n    ')': [\r\n        '\\\\rfloor',\r\n        '\\\\lrcorner',\r\n        ')',\r\n        '\\\\rbrack',\r\n        '\\\\rvert',\r\n        '\\\\rVert',\r\n        '\\\\rgroup',\r\n        '\\\\rangle',\r\n        '\\\\rceil',\r\n        '\\\\urcorner',\r\n        '\\\\rmoustache',\r\n        '\\\\rbrace',\r\n    ],\r\n\r\n    '=': [\r\n        '\\\\cong',\r\n        '\\\\asymp',\r\n        '\\\\equiv',\r\n        '\\\\differencedelta',\r\n        '\\\\varpropto',\r\n        '\\\\thickapprox',\r\n        '\\\\approxeq',\r\n        '\\\\thicksim',\r\n        '\\\\backsim',\r\n        '\\\\eqsim',\r\n        '\\\\simeq',\r\n        '\\\\Bumpeq',\r\n        '\\\\bumpeq',\r\n        '\\\\doteq',\r\n        '\\\\Doteq',\r\n        '\\\\fallingdotseq',\r\n        '\\\\risingdotseq',\r\n        '\\\\coloneq',\r\n        '\\\\eqcirc',\r\n        '\\\\circeq',\r\n        '\\\\triangleq',\r\n        '\\\\between',\r\n    ],\r\n\r\n    '!=': ['\\\\neq', '\\\\ncong', '', '\\\\nsim'],\r\n\r\n    '<': [\r\n        '\\\\leq',\r\n        '\\\\leqq',\r\n        '\\\\lneqq',\r\n        '\\\\ll',\r\n        '\\\\nless',\r\n        '\\\\nleq',\r\n        '\\\\precsim',\r\n        '\\\\lesssim',\r\n        '\\\\lessgtr',\r\n        '\\\\prec',\r\n        '\\\\preccurlyeq',\r\n        '\\\\lessdot',\r\n        '\\\\nprec',\r\n    ],\r\n\r\n    '>': [\r\n        '\\\\geq',\r\n        '\\\\geqq',\r\n        '\\\\gneqq',\r\n        '\\\\gg',\r\n        '\\\\ngtr',\r\n        '\\\\ngeq',\r\n        '\\\\succsim',\r\n        '\\\\gtrsim',\r\n        '\\\\gtrless',\r\n        '\\\\succ',\r\n        '\\\\succcurlyeq',\r\n        '\\\\gtrdot',\r\n        '\\\\nsucc',\r\n    ],\r\n\r\n    set: ['\\\\in', '\\\\owns', '\\\\subset', '\\\\nsubset', '\\\\supset', '\\\\nsupset'],\r\n\r\n    '!set': ['\\\\notin', '\\\\backepsilon'],\r\n\r\n    subset: [],\r\n    supset: [],\r\n\r\n    infinity: ['\\\\aleph_0', '\\\\aleph_1', '\\\\omega', '\\\\mathfrak{m}'],\r\n\r\n    'numeric-pi': ['\\\\prod', '\\\\theta', '\\\\rho', '\\\\sin', '\\\\cos', '\\\\tan'],\r\n\r\n    ee: ['\\\\times 10^{#?}', '\\\\ln', '\\\\ln_{10}', '\\\\log'],\r\n\r\n    '^': ['_{#?}'],\r\n\r\n    // Integrals\r\n    int: [\r\n        { latex: '\\\\int_{#?}^{#?}', classes: 'small' },\r\n        { latex: '\\\\int', classes: 'small' },\r\n        { latex: '\\\\smallint', classes: 'small' },\r\n        { latex: '\\\\iint', classes: 'small' },\r\n        { latex: '\\\\iiint', classes: 'small' },\r\n        { latex: '\\\\oint', classes: 'small' },\r\n        { latex: '\\\\dfrac{\\\\rd}{\\\\rd x}', classes: 'small' },\r\n        { latex: '\\\\frac{\\\\partial}{\\\\partial x}', classes: 'small' },\r\n\r\n        '\\\\capitalDifferentialD',\r\n        '\\\\rd',\r\n        '\\\\partial',\r\n    ],\r\n\r\n    nabla: ['\\\\nabla\\\\times', '\\\\nabla\\\\cdot', '\\\\nabla^{2}'],\r\n\r\n    '!': ['!!', '\\\\Gamma', '\\\\Pi'],\r\n    accents: [\r\n        '\\\\bar{#@}',\r\n        '\\\\vec{#@}',\r\n        '\\\\hat{#@}',\r\n        '\\\\check{#@}',\r\n        '\\\\dot{#@}',\r\n        '\\\\ddot{#@}',\r\n        '\\\\mathring{#@}',\r\n        '\\\\breve{#@}',\r\n        '\\\\acute{#@}',\r\n        '\\\\tilde{#@}',\r\n        '\\\\grave{#@}',\r\n    ],\r\n    // 'absnorm': [{latex:'\\\\lVert #@ \\\\rVert', aside:'norm'},\r\n    //     {latex:'\\\\lvert #@ \\\\rvert', aside:'determinant'},\r\n    //     {latex:'\\\\begin{cardinality} #@ \\\\end{cardinality}', aside:'cardinality'},\r\n    //     {latex:'\\\\lvert #@ \\\\rvert', aside:'length'},\r\n    //     {latex:'\\\\lvert #@ \\\\rvert', aside:'order'},\r\n\r\n    // ],\r\n    A: [\r\n        { latex: '\\\\aleph', aside: 'aleph' },\r\n        { latex: '\\\\forall', aside: 'for all' },\r\n    ],\r\n    a: [\r\n        { latex: '\\\\aleph', aside: 'aleph' },\r\n        { latex: '\\\\forall', aside: 'for all' },\r\n    ],\r\n    b: [{ latex: '\\\\beth', aside: 'beth' }],\r\n    B: [{ latex: '\\\\beth', aside: 'beth' }],\r\n    c: [{ latex: '\\\\C', aside: 'set of complex numbers' }],\r\n    d: [{ latex: '\\\\daleth', aside: 'daleth' }],\r\n    D: [{ latex: '\\\\daleth', aside: 'daleth' }],\r\n    e: [\r\n        { latex: '\\\\exponentialE', aside: 'exponential e' },\r\n        { latex: '\\\\exists', aside: 'there is' },\r\n        { latex: '\\\\nexists', aside: 'there isn’t' },\r\n    ],\r\n    g: [{ latex: '\\\\gimel', aside: 'gimel' }],\r\n    G: [{ latex: '\\\\gimel', aside: 'gimel' }],\r\n    h: [\r\n        { latex: '\\\\hbar', aside: 'h bar' },\r\n        { latex: '\\\\hslash', aside: 'h slash' },\r\n    ],\r\n    i: [{ latex: '\\\\imaginaryI', aside: 'imaginary i' }],\r\n    j: [{ latex: '\\\\imaginaryJ', aside: 'imaginary j' }],\r\n    l: [{ latex: '\\\\ell', aside: 'ell' }],\r\n    n: [{ latex: '\\\\N', aside: 'set of natural numbers' }],\r\n    p: [{ latex: '\\\\P', aside: 'set of primes' }],\r\n    q: [{ latex: '\\\\Q', aside: 'set of rational numbers' }],\r\n    r: [{ latex: '\\\\R', aside: 'set of real numbers' }],\r\n    z: [{ latex: '\\\\Z', aside: 'set of integers' }],\r\n\r\n    'x-var': [\r\n        'y',\r\n        'z',\r\n        't',\r\n        'r',\r\n        { latex: 'f(#?)', classes: 'small' },\r\n        { latex: 'g(#?)', classes: 'small' },\r\n        'x^2',\r\n        'x^n',\r\n        'x_n',\r\n        'x_{n+1}',\r\n        'x_i',\r\n        'x_{i+1}',\r\n    ],\r\n    'n-var': ['i', 'j', 'p', 'k', 'a', 'u'],\r\n    ii: ['\\\\Re', '\\\\Im', '\\\\imaginaryJ', '\\\\Vert #0 \\\\Vert'],\r\n\r\n    logic: [\r\n        { latex: '\\\\exists', aside: 'there is' },\r\n        { latex: '\\\\nexists', aside: 'there isn’t' },\r\n\r\n        { latex: '\\\\ni', aside: 'such that' },\r\n        { latex: '\\\\Colon', aside: 'such that' },\r\n\r\n        { latex: '\\\\implies', aside: 'implies' },\r\n        { latex: '\\\\impliedby', aside: 'implied by' },\r\n\r\n        { latex: '\\\\iff', aside: 'if and only if' },\r\n\r\n        { latex: '\\\\land', aside: 'and' },\r\n        { latex: '\\\\lor', aside: 'or' },\r\n        { latex: '\\\\oplus', aside: 'xor' },\r\n        { latex: '\\\\lnot', aside: 'not' },\r\n\r\n        { latex: '\\\\downarrow', aside: 'nor' },\r\n        { latex: '\\\\uparrow', aside: 'nand' },\r\n\r\n        { latex: '\\\\curlywedge', aside: 'nor' },\r\n        { latex: '\\\\bar\\\\curlywedge', aside: 'nand' },\r\n\r\n        // {latex:'\\\\barwedge', aside:'bar wedge'},\r\n        // {latex:'\\\\curlyvee', aside:'curly vee'},\r\n        // {latex:'\\\\veebar', aside:'vee bar'},\r\n\r\n        { latex: '\\\\therefore', aside: 'therefore' },\r\n        { latex: '\\\\because', aside: 'because' },\r\n\r\n        { latex: '^\\\\biconditional', aside: 'biconditional' },\r\n\r\n        '\\\\leftrightarrow',\r\n        '\\\\Leftrightarrow',\r\n        '\\\\to',\r\n        '\\\\models',\r\n        '\\\\vdash',\r\n        '\\\\gets',\r\n        '\\\\dashv',\r\n        '\\\\roundimplies',\r\n    ],\r\n\r\n    'set-operators': [\r\n        '\\\\cap',\r\n        '\\\\cup',\r\n        '\\\\setminus',\r\n        '\\\\smallsetminus',\r\n        '\\\\complement',\r\n    ],\r\n\r\n    'set-relations': [\r\n        '\\\\in',\r\n        '\\\\notin',\r\n        '\\\\ni',\r\n        '\\\\owns',\r\n        '\\\\subset',\r\n        '\\\\supset',\r\n        '\\\\subseteq',\r\n        '\\\\supseteq',\r\n        '\\\\subsetneq',\r\n        '\\\\supsetneq',\r\n        '\\\\varsubsetneq',\r\n        '\\\\subsetneqq',\r\n        '\\\\nsubset',\r\n        '\\\\nsupset',\r\n        '\\\\nsubseteq',\r\n        '\\\\nsupseteq',\r\n    ],\r\n\r\n    space: [\r\n        {\r\n            latex: '\\\\char\"203A\\\\!\\\\char\"2039',\r\n            insert: '\\\\!',\r\n            aside: 'negative thin space<br>⁻³⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\,\\\\unicode{\"2039}',\r\n            insert: '\\\\,',\r\n            aside: 'thin space<br>³⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\:\\\\unicode{\"2039}',\r\n            insert: '\\\\:',\r\n            aside: 'medium space<br>⁴⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\;\\\\unicode{\"2039}',\r\n            insert: '\\\\;',\r\n            aside: 'thick space<br>⁵⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\ \\\\unicode{\"2039}',\r\n            insert: '\\\\ ',\r\n            aside: '⅓ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\enspace\\\\unicode{\"2039}',\r\n            insert: '\\\\enspace',\r\n            aside: '½ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\quad\\\\unicode{\"2039}',\r\n            insert: '\\\\quad',\r\n            aside: '1 em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\qquad\\\\unicode{\"2039}',\r\n            insert: '\\\\qquad',\r\n            aside: '2 em',\r\n        },\r\n    ],\r\n\r\n    // @todo could also delete to end\r\n    delete: [\r\n        {\r\n            label:\r\n                '<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>',\r\n            command: '\"deleteAll\"',\r\n        },\r\n    ],\r\n\r\n    // @todo Tab: could turn on speech, visible keyboard...\r\n    '->|': [],\r\n};\r\nlet ALT_KEYS = {};\r\n\r\nconst LAYERS = {\r\n    math: `\r\n        <div class='rows'>\r\n            <ul>\r\n                <li class='keycap tex' data-alt-keys='x-var'><i>x</i></li>\r\n                <li class='keycap tex' data-alt-keys='n-var'><i>n</i></li>\r\n                <li class='separator w5'></li>\r\n                <row name='numpad-1'/>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap tex' data-insert='$$\\\\exponentialE$$' data-alt-keys='ee'>e</li>\r\n                <li class='keycap tex' data-insert='$$\\\\imaginaryI$$' data-alt-keys='ii'>i</li>\r\n                <li class='keycap tex' data-latex='\\\\pi' data-alt-keys='numeric-pi'></li>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap tex' data-key='<' data-alt-keys='<'>&lt;</li>\r\n                <li class='keycap tex' data-key='>' data-alt-keys='>'>&gt;</li>\r\n                <li class='separator w5'></li>\r\n                <row name='numpad-2'/>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap tex' data-alt-keys='x2' data-insert='$$#@^{2}$$'><span><i>x</i>&thinsp;²</span></li>\r\n                <li class='keycap tex' data-alt-keys='^' data-insert='$$#@^{#?}$$'><span><i>x</i><sup>&thinsp;<small>&#x2b1a;</small></sup></span></li>\r\n                <li class='keycap tex' data-alt-keys='sqrt' data-insert='$$\\\\sqrt{#0}$$' data-latex='\\\\sqrt{#0}'></li>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap tex' data-alt-keys='(' >(</li>\r\n                <li class='keycap tex' data-alt-keys=')' >)</li>\r\n                <li class='separator w5'></li>\r\n                <row name='numpad-3'/>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap tex small' data-alt-keys='int' data-latex='\\\\int_0^\\\\infty'><span></span></li>\r\n                <li class='keycap tex' data-latex='\\\\forall' data-alt-keys='logic' ></li>\r\n                <li class='action font-glyph bottom right' data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'>&#x232b;</li></ul>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap' data-alt-keys='foreground-color' data-command='[\"applyStyle\",{\"color\":\"#cc2428\"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428; box-sizing: border-box'></span></li>\r\n                <li class='keycap' data-alt-keys='background-color' data-command='[\"applyStyle\",{\"backgroundColor\":\"#fff590\"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590; box-sizing: border-box'></span></li>\r\n                <li class='separator w5'></li>\r\n                <row name='numpad-4'/>\r\n                <li class='separator w5'></li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    'lower-roman': `\r\n        <div class='rows'>\r\n            <ul>\r\n                <row name='numpad-1' class='if-wide'/>\r\n                <row name='lower-1' shift-layer='upper-roman'/>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-2' class='if-wide'/>\r\n                <row name='lower-2'  shift-layer='upper-roman''/>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-3' class='if-wide'/>\r\n                <row name='lower-3'  shift-layer='upper-roman''/>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-4' class='if-wide'/>\r\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols'>&infin;≠</li>\r\n                <li class='keycap' data-alt-keys=','>,</li>\r\n                <li class='keycap w50' data-key=' ' data-alt-keys='space'>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    'upper-roman': `\r\n        <div class='rows'>\r\n            <ul>\r\n                <row name='numpad-1' class='if-wide'/>\r\n                <row name='upper-1'  shift-layer='lower-roman'/>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-2' class='if-wide'/>\r\n                <row name='upper-2' shift-layer='lower-roman'/>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-3' class='if-wide'/>\r\n                <row name='upper-3' shift-layer='lower-roman'/>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-4' class='if-wide'/>\r\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols'>&infin;≠</li>\r\n                <li class='keycap' data-alt-keys='.'>;</li>\r\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    symbols: `\r\n        <div class='rows'>\r\n            <ul>\r\n                <row name='numpad-1' class='if-wide'/>\r\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\lbrace '>{</li>\r\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rbrace '>}</li>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap tex' data-alt-keys='set' data-insert='\\\\in '>&#x2208;</li>\r\n                <li class='keycap tex' data-alt-keys='!set' data-insert='\\\\notin '>&#x2209;</li>\r\n                <li class='keycap tex' data-insert='\\\\Re '>&#x211c;<aside>Real</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Im '>&#x2111;<aside>Imaginary</aside></li>\r\n                <li class='keycap w15' data-insert='\\\\ulcorner#0\\\\urcorner '><span><sup>&#x250c;</sup><span><span style='color:#ddd'>o</span><sup>&#x2510;</sup></span><aside>ceil</aside></li>\r\n                <li class='keycap tex' data-alt-keys='nabla' data-insert='\\\\nabla '>&#x2207;<aside>nabla</aside></li>\r\n                <li class='keycap tex' data-alt-keys='infinity' data-insert='\\\\infty '>&#x221e;</li>\r\n\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-2' class='if-wide'/>\r\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\lbrack '>[</li>\r\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rbrack '>]</li>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap tex' data-alt-keys='subset' data-insert='\\\\subset '>&#x2282;</li>\r\n                <li class='keycap tex' data-alt-keys='supset' data-insert='\\\\supset '>&#x2283;</li>\r\n                <li class='keycap tex' data-key='!' data-alt-keys='!'>!<aside>factorial</aside></li>\r\n                <li class='keycap' data-insert='$$^{\\\\prime} $$'><span><sup><span><span style='color:#ddd'>o</span>&#x2032</sup></span><aside>prime</aside></li>\r\n                <li class='keycap w15' data-insert='\\\\llcorner#0\\\\lrcorner '><span><sub>&#x2514;</sub><span style='color:#ddd'>o</span><sub>&#x2518;</sub></span><aside>floor</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\partial '>&#x2202;<aside>partial<br>derivative</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\emptyset '>&#x2205;<aside>empty set</aside></li>\r\n\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-3' class='if-wide'/>\r\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\langle '>&#x27e8;</li>\r\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rangle '>&#x27e9;</li>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap tex' data-insert='\\\\subseteq '>&#x2286;</li>\r\n                <li class='keycap tex' data-insert='\\\\supseteq '>&#x2287;</li>\r\n                <li class='keycap tex' data-alt-keys='accents' data-insert='$$\\\\vec{#@}$$' data-latex='\\\\vec{#?}' data-aside='vector'></li>\r\n                <li class='keycap tex' data-alt-keys='accents' data-insert='$$\\\\bar{#@}$$' data-latex='\\\\bar{#?}' data-aside='bar'></li>\r\n                <li class='keycap tex' data-alt-keys='absnorm' data-insert='$$\\\\lvert #@ \\\\rvert $$' data-latex='\\\\lvert #? \\\\rvert' data-aside='abs'></li>\r\n                <li class='keycap tex' data-insert='\\\\ast '>&#x2217;<aside>asterisk</aside></li>\r\n\r\n                <li class='action font-glyph bottom right w15'\r\n                    data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\r\n                    data-shifted-command='\"deleteAll\"'\r\n                    data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\r\n                >&#x232b;</li>\r\n            </ul>\r\n            <ul>\r\n                <row name='numpad-4' class='if-wide'/>\r\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='lower-roman'>abc</li>\r\n                <li class='keycap tex' data-insert='\\\\cdot '>&#x22c5;<aside>centered dot</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\colon '>:<aside>colon</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\circ '>&#x2218;<aside>circle</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\approx '>&#x2248;<aside>approx.</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\ne '>&#x2260;</li>\r\n                <li class='keycap tex' data-insert='\\\\pm '>&#x00b1;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    'lower-greek': `\r\n        <div class='rows'>\r\n            <ul><li class='keycap tex' data-insert='\\\\varphi '><i>&#x03c6;</i><aside>phi var.</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\varsigma '><i>&#x03c2;</i><aside>sigma var.</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\epsilon '><i>&#x03f5;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\rho '><i>&rho;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\tau '><i>&tau;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\upsilon '><i>&upsilon;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\theta '><i>&theta;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\iota '><i>&iota;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\omicron '>&omicron;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\pi '><i>&pi;</i></li>\r\n            </ul>\r\n            <ul><li class='keycap tex' data-insert='\\\\alpha ' data-shifted='&Alpha;' data-shifted-command='[\"insert\",\"{\\\\\\\\char\\\\\"391}\"]'><i>&alpha;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\sigma '><i>&sigma;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\delta '><i>&delta;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\phi '><i>&#x03d5;</i></i></li>\r\n                <li class='keycap tex' data-insert='\\\\gamma '><i>&gamma;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\eta '><i>&eta;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\xi '><i>&xi;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\kappa '><i>&kappa;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\lambda '><i>&lambda;</i></li>\r\n            </ul>\r\n            <ul><li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='upper-greek'>&#x21e7;</li>\r\n                <li class='keycap tex' data-insert='\\\\zeta '><i>&zeta;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\chi '><i>&chi;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\psi '><i>&psi;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\omega '><i>&omega;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\beta '><i>&beta;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\nu '><i>&nu;</i></li>\r\n                <li class='keycap tex' data-insert='\\\\mu '><i>&mu;</i></li>\r\n                <li class='action font-glyph bottom right w15'\r\n                    data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\r\n                    data-shifted-command='\"deleteAll\"'\r\n                    data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\r\n                >&#x232b;</li>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap ' data-key=' '>&nbsp;</li>\r\n                <li class='keycap'>,</li>\r\n                <li class='keycap tex' data-insert='\\\\varepsilon '><i>&#x03b5;</i><aside>epsilon var.</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\vartheta '><i>&#x03d1;</i><aside>theta var.</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\varkappa '><i>&#x3f0;</i><aside>kappa var.</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\varpi '><i>&#x03d6;<aside>pi var.</aside></i></li>\r\n                <li class='keycap tex' data-insert='\\\\varrho '><i>&#x03f1;</i><aside>rho var.</aside></li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    'upper-greek': `\r\n        <div class='rows'>\r\n            <ul><li class='keycap tex' data-insert='\\\\Phi '>&Phi;<aside>phi</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Sigma '>&Sigma;<aside>sigma</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"0190}'>&#x0190;<aside>epsilon</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"3A1}'>&#x3A1;<aside>rho</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"3A4}'>&#x3A4;<aside>tau</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Upsilon '>&Upsilon;<aside>upsilon</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Theta '>&Theta;<aside>theta</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"399}'>&Iota;<aside>iota</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"39F}'>&#x039F;<aside>omicron</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Pi '>&Pi;<aside>pi</aside></li></ul>\r\n            <ul><li class='keycap tex' data-insert='{\\\\char\"391}'>&#x391;<aside>alpha</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Sigma '>&Sigma;<aside>sigma</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Delta '>&Delta;<aside>delta</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Phi '>&#x03a6;<aside>phi</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Gamma '>&Gamma;<aside>gamma</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"397}'>&Eta;<aside>eta</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Xi '>&Xi;<aside>xi</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"39A}'>&Kappa;<aside>kappa</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Lambda '>&Lambda;<aside>lambda</aside></li></ul>\r\n            <ul><li class='shift modifier font-glyph bottom left selected w15 layer-switch' data-layer='lower-greek'>&#x21e7;</li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"396}'>&Zeta;<aside>zeta</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"3A7}'>&Chi;<aside>chi</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Psi '>&Psi;<aside>psi</aside></li>\r\n                <li class='keycap tex' data-insert='\\\\Omega '>&Omega;<aside>omega</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"392}'>&Beta;<aside>beta</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"39D}'>&Nu;<aside>nu</aside></li>\r\n                <li class='keycap tex' data-insert='{\\\\char\"39C}'>&Mu;<aside>mu</aside></li>\r\n                <li class='action font-glyph bottom right w15' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'>&#x232b;</li></ul>\r\n            <ul>\r\n                <li class='separator w10'>&nbsp;</li>\r\n                <li class='keycap'>.</li>\r\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    'lower-command': `\r\n        <div class='rows'>\r\n            <ul><row name='lower-1' class='tt' shift-layer='upper-command'/></ul>\r\n            <ul><row name='lower-2' class='tt' shift-layer='upper-command'/></ul>\r\n            <ul><row name='lower-3' class='tt' shift-layer='upper-command'/></ul>\r\n            <ul>\r\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'>01#</li>\r\n                <li class='keycap tt' data-shifted='[' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \"[\"]'>{</li>\r\n                <li class='keycap tt' data-shifted=']' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \"]\"]'>}</li>\r\n                <li class='keycap tt' data-shifted='(' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \"(\"]'>^</li>\r\n                <li class='keycap tt' data-shifted=')' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \")\"]'>_</li>\r\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    'upper-command': `\r\n        <div class='rows'>\r\n            <ul><row name='upper-1' class='tt' shift-layer='lower-command'/></ul>\r\n            <ul><row name='upper-2' class='tt' shift-layer='lower-command'/></ul>\r\n            <ul><row name='upper-3' class='tt' shift-layer='lower-command'/></ul>\r\n            <ul>\r\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'01#</li>\r\n                <li class='keycap tt'>[</li>\r\n                <li class='keycap tt'>]</li>\r\n                <li class='keycap tt'>(</li>\r\n                <li class='keycap tt'>)</li>\r\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    'symbols-command': `\r\n        <div class='rows'>\r\n            <ul><li class='keycap tt'>1</li><li class='keycap tt'>2</li><li class='keycap tt'>3</li><li class='keycap tt'>4</li><li class='keycap tt'>5</li><li class='keycap tt'>6</li><li class='keycap tt'>7</li><li class='keycap tt'>8</li><li class='keycap tt'>9</li><li class='keycap tt'>0</li></ul>\r\n            <ul><li class='keycap tt'>!</li><li class='keycap tt'>@</li><li class='keycap tt'>#</li><li class='keycap tt'>$</li><li class='keycap tt'>%</li><li class='keycap tt'>^</li><li class='keycap tt'>&</li><li class='keycap tt'>*</li><li class='keycap tt'>+</li><li class='keycap tt'>=</li></ul>\r\n            <ul>\r\n                <li class='keycap tt'>\\\\</li>\r\n                <li class='keycap tt'>|</li>\r\n                <li class='keycap tt'>/</li>\r\n                <li class='keycap tt'>\\`</li>\r\n                <li class='keycap tt'>;</li>\r\n                <li class='keycap tt'>:</li>\r\n                <li class='keycap tt'>?</li>\r\n                <li class='keycap tt'>'</li>\r\n                <li class='keycap tt'>\"</li>\r\n                <li class='action font-glyph bottom right'\r\n                    data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\r\n                    data-shifted-command='\"deleteAll\"'\r\n                    data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\r\n                >&#x232b;</li>\r\n            </ul>\r\n            <ul>\r\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='lower-command'>abc</li>\r\n                <li class='keycap tt'>&lt;</li>\r\n                <li class='keycap tt'>&gt;</li>\r\n                <li class='keycap tt'>~</li>\r\n                <li class='keycap tt'>,</li>\r\n                <li class='keycap tt'>.</li>\r\n                <li class='keycap' data-key=' '>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    functions: `\r\n        <div class='rows'>\r\n            <ul><li class='separator'></li>\r\n                <li class='fnbutton' data-insert='\\\\sin'></li>\r\n                <li class='fnbutton' data-insert='\\\\sin^{-1}'></li>\r\n                <li class='fnbutton' data-insert='\\\\ln'></li>\r\n                <li class='fnbutton' data-insert='\\\\exponentialE^{#?}'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{lcm}(#?)$$' data-latex='\\\\operatorname{lcm}()'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{ceil}(#?)$$' data-latex='\\\\operatorname{ceil}()'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\lim_{n\\\\to\\\\infty}$$'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\int$$'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{abs}(#?)$$' data-latex='\\\\operatorname{abs}()'></li>\r\n            </ul>\r\n            <ul><li class='separator'></li>\r\n                <li class='fnbutton' data-insert='\\\\cos'></li>\r\n                <li class='fnbutton' data-insert='\\\\cos^{-1}'></li>\r\n                <li class='fnbutton' data-insert='\\\\ln_{10}'></li>\r\n                <li class='fnbutton' data-insert='$$10^{#?}$$'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{gcd}(#?)$$' data-latex='\\\\operatorname{gcd}()'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{floor}(#?)$$' data-latex='\\\\operatorname{floor}()'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\sum_{n\\\\mathop=0}^{\\\\infty}$$'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\int_{0}^{\\\\infty}$$'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{sign}(#?)$$' data-latex='\\\\operatorname{sign}()'></li>\r\n            </ul>\r\n            <ul><li class='separator'></li>\r\n                <li class='fnbutton' data-insert='\\\\tan'></li>\r\n                <li class='fnbutton' data-insert='\\\\tan^{-1}'></li>\r\n                <li class='fnbutton' data-insert='$$\\\\log_{#?}$$'></li>\r\n                <li class='fnbutton' data-insert='$$\\\\sqrt[#?]{#0}$$'></li>\r\n                <li class='bigfnbutton' data-insert='$$#0 \\\\mod$$' data-latex='\\\\mod'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{round}(#?) $$' data-latex='\\\\operatorname{round}()'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\prod_{n\\\\mathop=0}^{\\\\infty}$$' data-latex='{\\\\tiny \\\\prod_{n=0}^{\\\\infty}}'></li>\r\n                <li class='bigfnbutton' data-insert='$$\\\\frac{\\\\differentialD #0}{\\\\differentialD x}$$'></li>\r\n                <li class='action font-glyph bottom right' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'>&#x232b;</li></ul>\r\n            <ul><li class='separator'></li>\r\n                <li class='fnbutton'>(</li>\r\n                <li class='fnbutton'>)</li>\r\n                <li class='fnbutton' data-insert='$$^{#?} $$' data-latex='x^{#?} '></li>\r\n                <li class='fnbutton' data-insert='$$_{#?} $$' data-latex='x_{#?} '></li>\r\n                <li class='keycap w20 ' data-key=' '>&nbsp;</li>\r\n                <arrows/>\r\n            </ul>\r\n        </div>`,\r\n    style: `\r\n        <div class='rows'>\r\n            <ul>\r\n                <li class='keycap' data-alt-keys='foreground-color' data-command='[\"applyStyle\",{\"color\":\"#cc2428\"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428'></span></li>\r\n                <li class='keycap' data-alt-keys='background-color' data-command='[\"applyStyle\",{\"backgroundColor\":\"#fff590\"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590'></span></li>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"size\":\"size3\"}]' data-latex='\\\\scriptsize\\\\text{small}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"size\":\"size5\"}]' data-latex='\\\\scriptsize\\\\text{normal}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"size\":\"size9\"}]' data-latex='\\\\huge\\\\text{big}'></li>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap' data-latex='\\\\langle' data-command='[\"insert\", \"\\\\\\\\langle\", {\"smartFence\":true}]'></li>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"l\"}]' data-latex='\\\\fontseries{l}\\\\text{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"m\"}]' data-latex='\\\\fontseries{m}\\\\text{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"b\"}]' data-latex='\\\\fontseries{b}\\\\text{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"bx\"}]' data-latex='\\\\fontseries{bx}\\\\text{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"sb\"}]' data-latex='\\\\fontseries{sb}\\\\text{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"c\"}]' data-latex='\\\\fontseries{c}\\\\text{Ab}'></li>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"up\"}]' data-latex='\\\\textup{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"it\"}]' data-latex='\\\\textit{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"sl\"}]' data-latex='\\\\textsl{Ab}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"sc\"}]' data-latex='\\\\textsc{Ab}'></li>\r\n                <li class='separator w5'></li>\r\n                <li class='keycap' data-insert='$$\\\\emph{#?} $$' data-latex='\\\\text{\\\\emph{emph}}'></li>\r\n            </ul>\r\n            <ul>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cmr\"}]' data-latex='\\\\textrm{Az}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cmtt\"}]' data-latex='\\\\texttt{Az}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cmss\"}]' data-latex='\\\\textsf{Az}'></li>\r\n\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"bb\"}]'  data-latex='\\\\mathbb{AZ}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"scr\"}]'  data-latex='\\\\mathscr{AZ}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cal\"}]' data-latex='\\\\mathcal{A1}'></li>\r\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"frak\"}]' data-latex='\\\\mathfrak{Az}'></li>\r\n            </ul>\r\n        </div>`,\r\n};\r\n\r\nfunction latexToMarkup(latex: string, arg, mf: Mathfield): string {\r\n    // Since we don't have preceding atoms, we'll interpret #@ as a placeholder\r\n    latex = latex.replace(/(^|[^\\\\])#@/g, '$1#?');\r\n\r\n    return makeStruts(\r\n        makeSpan(\r\n            decompose(\r\n                {\r\n                    mathstyle: MATHSTYLES.displaystyle,\r\n                    macros: mf.config.macros,\r\n                },\r\n                parseString(latex, 'math', arg, mf.config.macros)\r\n            ),\r\n            'ML__base'\r\n        ),\r\n        'ML__mathlive'\r\n    ).toMarkup();\r\n}\r\n\r\n/**\r\n * Return a markup string for the keyboard toolbar for the specified layer.\r\n */\r\nfunction makeKeyboardToolbar(\r\n    mf: Mathfield,\r\n    keyboardIDs,\r\n    currentKeyboard\r\n): string {\r\n    // The left hand side of the toolbar has a list of all the available keyboards\r\n    let result = \"<div class='left'>\";\r\n    const keyboardList = keyboardIDs.replace(/\\s+/g, ' ').split(' ');\r\n    if (keyboardList.length > 1) {\r\n        const keyboards = {\r\n            ...KEYBOARDS,\r\n            ...(mf.config.customVirtualKeyboards ?? {}),\r\n        };\r\n        for (const keyboard of keyboardList) {\r\n            if (!keyboards[keyboard]) {\r\n                console.error('Unknown virtual keyboard \"' + keyboard + '\"');\r\n                break;\r\n            }\r\n            result += \"<div class='\";\r\n            if (keyboard === currentKeyboard) {\r\n                result += 'selected ';\r\n            } else {\r\n                if (keyboards[keyboard].command) {\r\n                    result += 'action ';\r\n                } else {\r\n                    result += 'layer-switch ';\r\n                }\r\n            }\r\n\r\n            result += (keyboards[keyboard].classes || '') + \"'\";\r\n\r\n            if (keyboards[keyboard].tooltip) {\r\n                result +=\r\n                    \"data-tooltip='\" + l10n(keyboards[keyboard].tooltip) + \"' \";\r\n                result += \"data-placement='top' data-delay='1s'\";\r\n            }\r\n\r\n            if (keyboard !== currentKeyboard) {\r\n                if (keyboards[keyboard].command) {\r\n                    result +=\r\n                        'data-command=\\'\"' +\r\n                        keyboards[keyboard].command +\r\n                        '\"\\'';\r\n                }\r\n\r\n                if (keyboards[keyboard].layer) {\r\n                    result += \"data-layer='\" + keyboards[keyboard].layer + \"'\";\r\n                }\r\n            }\r\n            result += '>' + keyboards[keyboard].label + '</div>';\r\n        }\r\n    }\r\n    result += '</div>';\r\n\r\n    // The right hand side of the toolbar, with the copy/undo/redo commands\r\n    result += `\r\n        <div class='right'>\r\n            <div class='action'\r\n                data-command='\"copyToClipboard\"'\r\n                data-tooltip='${l10n(\r\n                    'tooltip.copy to clipboard'\r\n                )}' data-placement='top' data-delay='1s'>\r\n                <svg><use xlink:href='#svg-copy' /></svg>\r\n            </div>\r\n            <div class='action disabled'\r\n                data-command='\"undo\"'\r\n                data-tooltip='${l10n(\r\n                    'tooltip.undo'\r\n                )}' data-placement='top' data-delay='1s'>\r\n                <svg><use xlink:href='#svg-undo' /></svg>\r\n            </div>\r\n            <div class='action disabled'\r\n                data-command='\"redo\"'\r\n                data-tooltip='${l10n(\r\n                    'tooltip.redo'\r\n                )}' data-placement='top' data-delay='1s'>\r\n                <svg><use xlink:href='#svg-redo' /></svg>\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    return \"<div class='keyboard-toolbar' role='toolbar'>\" + result + '</div>';\r\n}\r\n\r\nexport function makeKeycap(\r\n    mf: Mathfield,\r\n    elList,\r\n    chainedCommand?: string | any[]\r\n): void {\r\n    for (let i = 0; i < elList.length; ++i) {\r\n        const el = elList[i];\r\n        // Display\r\n        if (el.getAttribute('data-latex')) {\r\n            el.innerHTML = latexToMarkup(\r\n                el.getAttribute('data-latex').replace(/&quot;/g, '\"'),\r\n                { '?': '{\\\\color{#555}{\\\\tiny \\\\char\"2B1A}}' },\r\n                mf\r\n            );\r\n        } else if (el.innerHTML === '' && el.getAttribute('data-insert')) {\r\n            el.innerHTML = latexToMarkup(\r\n                el.getAttribute('data-insert').replace(/&quot;/g, '\"'),\r\n                { '?': '{\\\\color{#555}{\\\\tiny \\\\char\"2B1A}}' },\r\n                mf\r\n            );\r\n        } else if (el.getAttribute('data-content')) {\r\n            el.innerHTML = el\r\n                .getAttribute('data-content')\r\n                .replace(/&quot;/g, '\"');\r\n        }\r\n        if (el.getAttribute('data-aside')) {\r\n            el.innerHTML +=\r\n                '<aside>' +\r\n                el.getAttribute('data-aside').replace(/&quot;/g, '\"') +\r\n                '</aside>';\r\n        }\r\n        if (el.getAttribute('data-classes')) {\r\n            el.classList.add(el.getAttribute('data-classes'));\r\n        }\r\n\r\n        let key = el.getAttribute('data-insert');\r\n        if (key) key = key.replace(/&quot;/g, '\"');\r\n        if (key && SHIFTED_KEYS[key]) {\r\n            el.setAttribute('data-shifted', SHIFTED_KEYS[key].label);\r\n            el.setAttribute(\r\n                'data-shifted-command',\r\n                JSON.stringify([\r\n                    'insertAndUnshiftKeyboardLayer',\r\n                    SHIFTED_KEYS[key].insert,\r\n                ])\r\n            );\r\n        }\r\n\r\n        // Commands\r\n        let handlers;\r\n        if (el.getAttribute('data-command')) {\r\n            handlers = JSON.parse(el.getAttribute('data-command'));\r\n        } else if (el.getAttribute('data-insert')) {\r\n            handlers = [\r\n                'insert',\r\n                el.getAttribute('data-insert'),\r\n                {\r\n                    focus: true,\r\n                    feedback: true,\r\n                    mode: 'math',\r\n                    format: 'latex',\r\n                    resetStyle: true,\r\n                },\r\n            ];\r\n        } else if (el.getAttribute('data-latex')) {\r\n            handlers = [\r\n                'insert',\r\n                el.getAttribute('data-latex'),\r\n                {\r\n                    focus: true,\r\n                    feedback: true,\r\n                    mode: 'math',\r\n                    format: 'latex',\r\n                    resetStyle: true,\r\n                },\r\n            ];\r\n        } else {\r\n            handlers = [\r\n                'typedText',\r\n                el.getAttribute('data-key') || el.textContent,\r\n                { focus: true, feedback: true, simulateKeystroke: true },\r\n            ];\r\n        }\r\n        if (chainedCommand) {\r\n            handlers = [chainedCommand, handlers];\r\n        }\r\n        if (el.getAttribute('data-alt-keys')) {\r\n            const altKeys = ALT_KEYS[el.getAttribute('data-alt-keys')];\r\n            if (altKeys) {\r\n                handlers = {\r\n                    default: handlers,\r\n                    pressAndHoldStart: [\r\n                        'showAlternateKeys',\r\n                        el.getAttribute('data-alt-keys'),\r\n                        altKeys,\r\n                    ],\r\n                    pressAndHoldEnd: 'hideAlternateKeys',\r\n                };\r\n            } else {\r\n                console.warn(\r\n                    'Unknown alt key set: \"' + el.getAttribute('data-alt-keys')\r\n                );\r\n            }\r\n        }\r\n\r\n        attachButtonHandlers(mf, el, handlers);\r\n    }\r\n}\r\n\r\n/**\r\n * Expand the shortcut tags (e.g. <row>) inside a layer.\r\n */\r\nfunction expandLayerMarkup(mf: Mathfield, layer): string {\r\n    const ROWS = {\r\n        // First row should be 10 key wide\r\n        // Second row should be 10 key wide\r\n        // Third row should be 8.5 key wide\r\n        // One row should have ^ (shift key) which is 1.5 key wide\r\n        // One row should have ~ (delete key) which is .5 or 1.5 key wide\r\n        qwerty: {\r\n            'lower-1': 'qwertyuiop',\r\n            'lower-2': ' asdfghjkl ',\r\n            'lower-3': '^zxcvbnm~',\r\n            'upper-1': 'QWERTYUIOP',\r\n            'upper-2': ' ASDFGHJKL ',\r\n            'upper-3': '^ZXCVBNM~',\r\n            'numpad-1': '789/',\r\n            'numpad-2': '456*',\r\n            'numpad-3': '123-',\r\n            'numpad-4': '0.=+',\r\n        },\r\n        azerty: {\r\n            'lower-1': 'azertyuiop',\r\n            'lower-2': 'qsdfghjklm',\r\n            'lower-3': '^ wxcvbn ~',\r\n            'upper-1': 'AZERTYUIOP',\r\n            'upper-2': 'QSDFGHJKLM',\r\n            'upper-3': '^ WXCVBN ~',\r\n        },\r\n        qwertz: {\r\n            'lower-1': 'qwertzuiop',\r\n            'lower-2': ' asdfghjkl ',\r\n            'lower-3': '^yxcvbnm~',\r\n            'upper-1': 'QWERTZUIOP',\r\n            'upper-2': ' ASDFGHJKL',\r\n            'upper-3': '^YXCVBNM~',\r\n        },\r\n        dvorak: {\r\n            'lower-1': '^  pyfgcrl ',\r\n            'lower-2': 'aoeuidhtns',\r\n            'lower-3': 'qjkxbmwvz~',\r\n            'upper-1': '^  PYFGCRL ',\r\n            'upper-2': 'AOEUIDHTNS',\r\n            'upper-3': 'QJKXBMWVZ~',\r\n        },\r\n        colemak: {\r\n            'lower-1': ' qwfpgjluy ',\r\n            'lower-2': 'arstdhneio',\r\n            'lower-3': '^zxcvbkm~',\r\n            'upper-1': ' QWFPGNLUY ',\r\n            'upper-2': 'ARSTDHNEIO',\r\n            'upper-3': '^ZXCVBKM~',\r\n        },\r\n    };\r\n    const layout = ROWS[mf.config.virtualKeyboardLayout]\r\n        ? ROWS[mf.config.virtualKeyboardLayout]\r\n        : ROWS['qwerty'];\r\n\r\n    let result = layer;\r\n    let row;\r\n\r\n    result = result.replace(\r\n        /<arrows\\/>/g,\r\n        `\r\n        <li class='action' data-command='[\"performWithFeedback\",\"moveToPreviousChar\"]'\r\n            data-shifted='<svg><use xlink:href=\"#svg-angle-double-left\" /></svg>'\r\n            data-shifted-command='[\"performWithFeedback\",\"extendToPreviousChar\"]'>\r\n            <svg><use xlink:href='#svg-arrow-left' /></svg>\r\n        </li>\r\n        <li class='action' data-command='[\"performWithFeedback\",\"moveToNextChar\"]'\r\n            data-shifted='<svg><use xlink:href=\"#svg-angle-double-right\" /></svg>'\r\n            data-shifted-command='[\"performWithFeedback\",\"extendToNextChar\"]'>\r\n            <svg><use xlink:href='#svg-arrow-right' /></svg>\r\n        </li>\r\n        <li class='action' data-command='[\"performWithFeedback\",\"moveToNextPlaceholder\"]'>\r\n        <svg><use xlink:href='#svg-tab' /></svg></li>`\r\n    );\r\n\r\n    let m = result.match(/(<row\\s+)(.*)((?:<\\/row|\\/)>)/);\r\n    while (m) {\r\n        row = '';\r\n        const attributesArray = m[2].match(\r\n            /[a-zA-Z][a-zA-Z0-9-]*=(['\"])(.*?)\\1/g\r\n        );\r\n        const attributes = {};\r\n        for (const attribute of attributesArray) {\r\n            const m2 = attribute.match(/([a-zA-Z][a-zA-Z0-9-]*)=(['\"])(.*?)\\2/);\r\n            attributes[m2[1]] = m2[3];\r\n        }\r\n\r\n        let keys = layout[attributes['name']];\r\n        if (!keys) keys = ROWS['qwerty'][attributes['name']];\r\n        if (!keys) {\r\n            console.warn('Unknown roman keyboard row: ' + attributes['name']);\r\n        } else {\r\n            for (const c of keys) {\r\n                let cls = attributes['class'] || '';\r\n                if (cls) cls = ' ' + cls;\r\n                if (c === '~') {\r\n                    row += `<li class='action font-glyph bottom right `;\r\n                    row +=\r\n                        keys.length - (keys.match(/ /g) || []).length / 2 === 10\r\n                            ? 'w10'\r\n                            : 'w15';\r\n                    row += `' data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\r\n                        data-shifted-command='\"deleteAll\"'\r\n                        data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\r\n                        >&#x232b;</li>`;\r\n                } else if (c === ' ') {\r\n                    // Separator\r\n                    row += \"<li class='separator w5'></li>\";\r\n                } else if (c === '^') {\r\n                    // Shift key\r\n                    row +=\r\n                        `<li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='` +\r\n                        attributes['shift-layer'] +\r\n                        `'>&#x21e7;</li>`;\r\n                } else if (c === '/') {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                        cls +\r\n                        \"' data-alt-keys='/' data-insert='\\\\frac{#0}{#?}'>&divide;</li>\";\r\n                } else if (c === '*') {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                        cls +\r\n                        \"' data-alt-keys='*' data-insert='\\\\times '>&times;</li>\";\r\n                } else if (c === '-') {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                        cls +\r\n                        \"' data-alt-keys='-' data-key='-' data-alt-keys='-'>&#x2212;</li>\";\r\n                } else if (/tt/.test(cls)) {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                        cls +\r\n                        \"' data-alt-keys='\" +\r\n                        c +\r\n                        \"'\" +\r\n                        ` data-command='[\"typedText\",\"` +\r\n                        c +\r\n                        `\",{\"commandMode\":true, \"focus\":true, \"feedback\":true}]'` +\r\n                        '>' +\r\n                        c +\r\n                        '</li>';\r\n                } else {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                        cls +\r\n                        \"' data-alt-keys='\" +\r\n                        c +\r\n                        \"'>\" +\r\n                        c +\r\n                        '</li>';\r\n                }\r\n            }\r\n        }\r\n        result = result.replace(new RegExp(m[1] + m[2] + m[3]), row);\r\n\r\n        m = result.match(/(<row\\s+)(.*)((?:<\\/row|\\/)>)/);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Construct a virtual keyboard element based on the config options in the\r\n * mathfield and an optional theme.\r\n */\r\nexport function makeKeyboard(\r\n    mf: Mathfield,\r\n    theme: 'apple' | 'material' | ''\r\n): HTMLElement {\r\n    const svgIcons = `<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\r\n\r\n            <symbol id=\"svg-command\" viewBox=\"0 0 640 512\">\r\n                <path d=\"M34.495 36.465l211.051 211.05c4.686 4.686 4.686 12.284 0 16.971L34.495 475.535c-4.686 4.686-12.284 4.686-16.97 0l-7.071-7.07c-4.686-4.686-4.686-12.284 0-16.971L205.947 256 10.454 60.506c-4.686-4.686-4.686-12.284 0-16.971l7.071-7.07c4.686-4.687 12.284-4.687 16.97 0zM640 468v-10c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h328c6.627 0 12-5.373 12-12z\"/>\r\n            </symbol>\r\n\r\n            <symbol id=\"svg-undo\" viewBox=\"0 0 512 512\">\r\n                <path d=\"M20 8h10c6.627 0 12 5.373 12 12v110.625C85.196 57.047 165.239 7.715 256.793 8.001 393.18 8.428 504.213 120.009 504 256.396 503.786 393.181 392.834 504 256 504c-63.926 0-122.202-24.187-166.178-63.908-5.113-4.618-5.354-12.561-.482-17.433l7.069-7.069c4.503-4.503 11.749-4.714 16.482-.454C150.782 449.238 200.935 470 256 470c117.744 0 214-95.331 214-214 0-117.744-95.331-214-214-214-82.862 0-154.737 47.077-190.289 116H180c6.627 0 12 5.373 12 12v10c0 6.627-5.373 12-12 12H20c-6.627 0-12-5.373-12-12V20c0-6.627 5.373-12 12-12z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-redo\" viewBox=\"0 0 512 512\">\r\n                <path d=\"M492 8h-10c-6.627 0-12 5.373-12 12v110.625C426.804 57.047 346.761 7.715 255.207 8.001 118.82 8.428 7.787 120.009 8 256.396 8.214 393.181 119.166 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-7.069-7.069c-4.503-4.503-11.749-4.714-16.482-.454C361.218 449.238 311.065 470 256 470c-117.744 0-214-95.331-214-214 0-117.744 95.331-214 214-214 82.862 0 154.737 47.077 190.289 116H332c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h160c6.627 0 12-5.373 12-12V20c0-6.627-5.373-12-12-12z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-arrow-left\" viewBox=\"0 0 192 512\">\r\n                <path d=\"M25.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L64.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L25 264.5c-4.6-4.7-4.6-12.3.1-17z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-arrow-right\" viewBox=\"0 0 192 512\">\r\n                    <path d=\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-tab\" viewBox=\"0 0 448 512\">\r\n                    <path d=\"M32 217.1c0-8.8 7.2-16 16-16h144v-93.9c0-7.1 8.6-10.7 13.6-5.7l143.5 143.1c6.3 6.3 6.3 16.4 0 22.7L205.6 410.4c-5 5-13.6 1.5-13.6-5.7v-93.9H48c-8.8 0-16-7.2-16-16v-77.7m-32 0v77.7c0 26.5 21.5 48 48 48h112v61.9c0 35.5 43 53.5 68.2 28.3l143.6-143c18.8-18.8 18.8-49.2 0-68L228.2 78.9c-25.1-25.1-68.2-7.3-68.2 28.3v61.9H48c-26.5 0-48 21.6-48 48zM436 64h-8c-6.6 0-12 5.4-12 12v360c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-copy\" viewBox=\"0 0 448 512\">\r\n                <path d=\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM352 32.491a15.88 15.88 0 0 1 7.431 4.195l51.882 51.883A15.885 15.885 0 0 1 415.508 96H352V32.491zM288 464c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V144c0-8.822 7.178-16 16-16h80v240c0 26.51 21.49 48 48 48h112v48zm128-96c0 8.822-7.178 16-16 16H176c-8.822 0-16-7.178-16-16V48c0-8.822 7.178-16 16-16h144v72c0 13.2 10.8 24 24 24h72v240z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-angle-double-right\" viewBox=\"0 0 320 512\">\r\n                <path d=\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17zm128-17l-117.8-116c-4.7-4.7-12.3-4.7-17 0l-7.1 7.1c-4.7 4.7-4.7 12.3 0 17L255.3 256 153.1 356.4c-4.7 4.7-4.7 12.3 0 17l7.1 7.1c4.7 4.7 12.3 4.7 17 0l117.8-116c4.6-4.7 4.6-12.3-.1-17z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-angle-double-left\" viewBox=\"0 0 320 512\">\r\n                <path d=\"M153.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L192.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L153 264.5c-4.6-4.7-4.6-12.3.1-17zm-128 17l117.8 116c4.7 4.7 12.3 4.7 17 0l7.1-7.1c4.7-4.7 4.7-12.3 0-17L64.7 256l102.2-100.4c4.7-4.7 4.7-12.3 0-17l-7.1-7.1c-4.7-4.7-12.3-4.7-17 0L25 247.5c-4.6 4.7-4.6 12.3.1 17z\"/>\r\n            </symbol>\r\n            <symbol id=\"svg-trash\" viewBox=\"0 0 448 512\">\r\n                <path d=\"M336 64l-33.6-44.8C293.3 7.1 279.1 0 264 0h-80c-15.1 0-29.3 7.1-38.4 19.2L112 64H24C10.7 64 0 74.7 0 88v2c0 3.3 2.7 6 6 6h26v368c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V96h26c3.3 0 6-2.7 6-6v-2c0-13.3-10.7-24-24-24h-88zM184 32h80c5 0 9.8 2.4 12.8 6.4L296 64H152l19.2-25.6c3-4 7.8-6.4 12.8-6.4zm200 432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V96h320v368zm-176-44V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm-80 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm160 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12z\"/>\r\n            </symbol>\r\n        </svg>\r\n        `;\r\n    // <symbol id=\"svg-wikipedia\" viewBox=\"0 0 640 512\">\r\n    //         <path d=\"M640 51.2l-.3 12.2c-28.1.8-45 15.8-55.8 40.3-25 57.8-103.3 240-155.3 358.6H415l-81.9-193.1c-32.5 63.6-68.3 130-99.2 193.1-.3.3-15 0-15-.3C172 352.3 122.8 243.4 75.8 133.4 64.4 106.7 26.4 63.4.2 63.7c0-3.1-.3-10-.3-14.2h161.9v13.9c-19.2 1.1-52.8 13.3-43.3 34.2 21.9 49.7 103.6 240.3 125.6 288.6 15-29.7 57.8-109.2 75.3-142.8-13.9-28.3-58.6-133.9-72.8-160-9.7-17.8-36.1-19.4-55.8-19.7V49.8l142.5.3v13.1c-19.4.6-38.1 7.8-29.4 26.1 18.9 40 30.6 68.1 48.1 104.7 5.6-10.8 34.7-69.4 48.1-100.8 8.9-20.6-3.9-28.6-38.6-29.4.3-3.6 0-10.3.3-13.6 44.4-.3 111.1-.3 123.1-.6v13.6c-22.5.8-45.8 12.8-58.1 31.7l-59.2 122.8c6.4 16.1 63.3 142.8 69.2 156.7L559.2 91.8c-8.6-23.1-36.4-28.1-47.2-28.3V49.6l127.8 1.1.2.5z\"/>\r\n    // </symbol>\r\n    // <symbol id=\"svg-link\" viewBox=\"0 0 512 512\">\r\n    //         <path d=\"M301.148 394.702l-79.2 79.19c-50.778 50.799-133.037 50.824-183.84 0-50.799-50.778-50.824-133.037 0-183.84l79.19-79.2a132.833 132.833 0 0 1 3.532-3.403c7.55-7.005 19.795-2.004 20.208 8.286.193 4.807.598 9.607 1.216 14.384.481 3.717-.746 7.447-3.397 10.096-16.48 16.469-75.142 75.128-75.3 75.286-36.738 36.759-36.731 96.188 0 132.94 36.759 36.738 96.188 36.731 132.94 0l79.2-79.2.36-.36c36.301-36.672 36.14-96.07-.37-132.58-8.214-8.214-17.577-14.58-27.585-19.109-4.566-2.066-7.426-6.667-7.134-11.67a62.197 62.197 0 0 1 2.826-15.259c2.103-6.601 9.531-9.961 15.919-7.28 15.073 6.324 29.187 15.62 41.435 27.868 50.688 50.689 50.679 133.17 0 183.851zm-90.296-93.554c12.248 12.248 26.362 21.544 41.435 27.868 6.388 2.68 13.816-.68 15.919-7.28a62.197 62.197 0 0 0 2.826-15.259c.292-5.003-2.569-9.604-7.134-11.67-10.008-4.528-19.371-10.894-27.585-19.109-36.51-36.51-36.671-95.908-.37-132.58l.36-.36 79.2-79.2c36.752-36.731 96.181-36.738 132.94 0 36.731 36.752 36.738 96.181 0 132.94-.157.157-58.819 58.817-75.3 75.286-2.651 2.65-3.878 6.379-3.397 10.096a163.156 163.156 0 0 1 1.216 14.384c.413 10.291 12.659 15.291 20.208 8.286a131.324 131.324 0 0 0 3.532-3.403l79.19-79.2c50.824-50.803 50.799-133.062 0-183.84-50.802-50.824-133.062-50.799-183.84 0l-79.2 79.19c-50.679 50.682-50.688 133.163 0 183.851z\"/>\r\n    // </symbol>\r\n    //     <symbol id=\"svg-external-link\" viewBox=\"0 0 448 512\">\r\n    //     <path d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm16 400c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V80c0-8.822 7.178-16 16-16h352c8.822 0 16 7.178 16 16v352zM99.515 374.828c-4.686-4.686-4.686-12.284 0-16.971l195.15-195.15-.707-.707-89.958.342c-6.627 0-12-5.373-12-12v-9.999c0-6.628 5.372-12 12-12L340 128c6.627 0 12 5.372 12 12l-.343 136c0 6.627-5.373 12-12 12h-9.999c-6.627 0-12-5.373-12-12l.342-89.958-.707-.707-195.15 195.15c-4.686 4.686-12.284 4.686-16.971 0l-5.657-5.657z\"/>\r\n    // </symbol>\r\n    // <symbol id=\"svg-external-link\" viewBox=\"0 0 512 512\">\r\n    //     <path d=\"M256 40c118.621 0 216 96.075 216 216 0 119.291-96.61 216-216 216-119.244 0-216-96.562-216-216 0-119.203 96.602-216 216-216m0-32C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm-36 344h12V232h-12c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h48c6.627 0 12 5.373 12 12v140h12c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12h-72c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12zm36-240c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"/>\r\n    // </symbol>\r\n\r\n    let markup = svgIcons;\r\n\r\n    // Auto-populate the ALT_KEYS table\r\n    ALT_KEYS_BASE['foreground-color'] = [];\r\n    for (const color of LINE_COLORS) {\r\n        ALT_KEYS_BASE['foreground-color'].push({\r\n            classes: 'small-button',\r\n            content:\r\n                '<span style=\"border-radius:50%;width:32px;height:32px; box-sizing: border-box; border: 3px solid ' +\r\n                color +\r\n                '\"></span>',\r\n            command: '[\"applyStyle\",{\"color\":\"' + color + '\"}]',\r\n        });\r\n    }\r\n    ALT_KEYS_BASE['background-color'] = [];\r\n    for (const color of AREA_COLORS) {\r\n        ALT_KEYS_BASE['background-color'].push({\r\n            classes: 'small-button',\r\n            content:\r\n                '<span style=\"border-radius:50%;width:32px;height:32px; background:' +\r\n                color +\r\n                '\"></span>',\r\n            command: '[\"applyStyle\",{\"backgroundColor\":\"' + color + '\"}]',\r\n        });\r\n    }\r\n\r\n    ALT_KEYS = { ...ALT_KEYS_BASE };\r\n    Object.keys(ALT_KEYS).forEach((key) => {\r\n        ALT_KEYS[key] = ALT_KEYS[key].slice();\r\n    });\r\n\r\n    const upperAlpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const lowerAlpha = 'abcdefghijklmnopqrstuvwxyz';\r\n    const digits = '0123456789';\r\n    for (let i = 0; i < 26; i++) {\r\n        const key = upperAlpha[i];\r\n        if (!ALT_KEYS[key]) ALT_KEYS[key] = [];\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbb{' + key + '}',\r\n            aside: 'blackboard',\r\n            insert: '\\\\mathbb{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + key + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + key + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathtt{' + key + '}',\r\n            aside: 'monospace',\r\n            insert: '\\\\mathtt{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathcal{' + key + '}',\r\n            aside: 'calligraphy',\r\n            insert: '\\\\mathcal{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + key + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + key + '}',\r\n        });\r\n\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbb{' + lowerAlpha[i] + '}',\r\n            aside: 'blackboard',\r\n            insert: '\\\\mathbb{' + lowerAlpha[i] + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + lowerAlpha[i] + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + lowerAlpha[i] + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + lowerAlpha[i] + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + lowerAlpha[i] + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathcal{' + lowerAlpha[i] + '}',\r\n            aside: 'calligraphy',\r\n            insert: '\\\\mathcal{' + lowerAlpha[i] + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + lowerAlpha[i] + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + lowerAlpha[i] + '}',\r\n        });\r\n    }\r\n    for (let i = 0; i <= 26; i++) {\r\n        const key = lowerAlpha[i];\r\n        if (!ALT_KEYS[key]) ALT_KEYS[key] = [];\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + key + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + key + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathtt{' + key + '}',\r\n            aside: 'monospace',\r\n            insert: '\\\\mathtt{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + key + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + key + '}',\r\n        });\r\n    }\r\n    for (let i = 0; i < 10; i++) {\r\n        const key = digits[i];\r\n        if (!ALT_KEYS[key]) ALT_KEYS[key] = [];\r\n        // The mathbb font does not appear to include digits,\r\n        // although it's supposed to.\r\n        // ALT_KEYS[key].push({\r\n        //         latex: '\\\\underset{\\\\textsf{\\\\footnotesize blackboard}}{\\\\mathbb{' + key + '}}',\r\n        //         insert: '\\\\mathbb{' + key + '}}'});\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + key + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + key + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathtt{' + key + '}',\r\n            aside: 'monospace',\r\n            insert: '\\\\mathtt{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathcal{' + key + '}',\r\n            aside: 'script',\r\n            insert: '\\\\mathcal{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + key + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + key + '}',\r\n        });\r\n    }\r\n\r\n    let keyboardIDs = mf.config.virtualKeyboards;\r\n    if (!keyboardIDs) {\r\n        keyboardIDs = 'all';\r\n    }\r\n    keyboardIDs = keyboardIDs.replace(\r\n        /\\ball\\b/i,\r\n        'numeric roman greek functions'\r\n    );\r\n\r\n    const layers = {\r\n        ...LAYERS,\r\n        ...(mf.config.customVirtualKeyboardLayers ?? {}),\r\n    };\r\n    const keyboards = {\r\n        ...KEYBOARDS,\r\n        ...(mf.config.customVirtualKeyboards ?? {}),\r\n    };\r\n\r\n    const keyboardList = keyboardIDs.replace(/\\s+/g, ' ').split(' ');\r\n    for (const keyboard of keyboardList) {\r\n        if (!keyboards[keyboard]) {\r\n            console.error('Unknown virtual keyboard \"' + keyboard + '\"');\r\n            break;\r\n        }\r\n        // Add the default layer to the list of layers,\r\n        // and make sure the list of layers is uniquified.\r\n        let keyboardLayers = keyboards[keyboard].layers || [];\r\n        if (keyboards[keyboard].layer) {\r\n            keyboardLayers.push(keyboards[keyboard].layer);\r\n        }\r\n        keyboardLayers = Array.from(new Set(keyboardLayers));\r\n\r\n        for (const layer of keyboardLayers) {\r\n            if (!layers[layer]) {\r\n                console.error(\r\n                    'Unknown virtual keyboard layer: \"' + layer + '\"'\r\n                );\r\n                break;\r\n            }\r\n\r\n            if (typeof layers[layer] === 'object') {\r\n                // Process JSON layer to web element based layer.\r\n\r\n                let tempLayer = ``;\r\n                if (layers[layer].styles) {\r\n                    tempLayer += `<style>${layers[layer].styles}</style>`;\r\n                }\r\n\r\n                if (layers[layer].backdrop) {\r\n                    tempLayer += `<div class='${layers[layer].backdrop}'>`;\r\n                }\r\n\r\n                if (layers[layer].container) {\r\n                    tempLayer += `<div class='${layers[layer].container}'>`;\r\n                }\r\n\r\n                if (layers[layer].rows) {\r\n                    tempLayer += `<div class='rows'>`;\r\n                    for (const row of layers[layer].rows) {\r\n                        tempLayer += `<ul>`;\r\n                        for (const col of row) {\r\n                            tempLayer += `<li`;\r\n                            if (col.class) {\r\n                                tempLayer += ` class=\"${col.class}\"`;\r\n                            }\r\n                            if (col.key) {\r\n                                tempLayer += ` data-key=\"${col.key}\"`;\r\n                            }\r\n\r\n                            if (col.command) {\r\n                                if (typeof col.command === 'string') {\r\n                                    tempLayer += ` data-command='\"${col.command}\"'`;\r\n                                } else {\r\n                                    tempLayer += ` data-command='`;\r\n                                    tempLayer += JSON.stringify(col.command);\r\n                                    tempLayer += `'`;\r\n                                }\r\n                            }\r\n                            if (col.insert) {\r\n                                tempLayer += ` data-insert=\"${col.insert}\"`;\r\n                            }\r\n\r\n                            if (col.latex) {\r\n                                tempLayer += ` data-latex=\"${col.latex}\"`;\r\n                            }\r\n\r\n                            if (col.aside) {\r\n                                tempLayer += ` data-aside=\"${col.aside}\"`;\r\n                            }\r\n\r\n                            if (col.altKeys) {\r\n                                tempLayer += ` data-alt-keys=\"${col.altKeys}\"`;\r\n                            }\r\n\r\n                            if (col.shifted) {\r\n                                tempLayer += ` data-shifted=\"${col.shifted}\"`;\r\n                            }\r\n\r\n                            if (col.shiftedCommand) {\r\n                                tempLayer += ` data-shifted-command=\"${col.shiftedCommand}\"`;\r\n                            }\r\n\r\n                            tempLayer += `>${col.label ? col.label : ''}</li>`;\r\n                        }\r\n                        tempLayer += `</ul>`;\r\n                    }\r\n                    tempLayer += `</div>`;\r\n                }\r\n\r\n                if (layers[layer].container) {\r\n                    tempLayer += '</div>';\r\n                }\r\n\r\n                if (layers[layer].backdrop) {\r\n                    tempLayer += '</div>';\r\n                }\r\n\r\n                layers[layer] = tempLayer;\r\n            }\r\n\r\n            markup +=\r\n                `<div tabindex=\"-1\" class='keyboard-layer' data-layer='` +\r\n                layer +\r\n                `'>`;\r\n            markup += makeKeyboardToolbar(mf, keyboardIDs, keyboard);\r\n            const layerMarkup =\r\n                typeof layers[layer] === 'function'\r\n                    ? layers[layer]()\r\n                    : layers[layer];\r\n            // A layer can contain 'shortcuts' (i.e. <row> tags) that need to\r\n            // be expanded\r\n            markup += expandLayerMarkup(mf, layerMarkup);\r\n            markup += '</div>';\r\n        }\r\n    }\r\n\r\n    const result = document.createElement('div');\r\n    result.className = 'ML__keyboard';\r\n    if (theme) {\r\n        result.classList.add(theme);\r\n    } else if (mf.config.virtualKeyboardTheme) {\r\n        result.classList.add(mf.config.virtualKeyboardTheme);\r\n    }\r\n    result.innerHTML = markup;\r\n\r\n    // Attach the element handlers\r\n    makeKeycap(\r\n        mf,\r\n        result.querySelectorAll<HTMLElement>(\r\n            '.keycap, .action, .fnbutton, .bigfnbutton'\r\n        )\r\n    );\r\n\r\n    const elList = result.getElementsByClassName('layer-switch');\r\n    for (let i = 0; i < elList.length; ++i) {\r\n        if (elList[i].classList.contains('shift')) {\r\n            // This is a potential press-and-hold layer switch\r\n            attachButtonHandlers(mf, elList[i], {\r\n                // When the modifier is initially pressed, we will shift the labels\r\n                // (if available)\r\n                pressed: ['shiftKeyboardLayer', 'shift'],\r\n\r\n                // If the key is released before a delay, we switch to the target layer\r\n                default: [\r\n                    'switchKeyboardLayer',\r\n                    elList[i].getAttribute('data-layer'),\r\n                ],\r\n\r\n                // If the key is released after a longer delay, we restore the\r\n                // shifted labels\r\n                pressAndHoldEnd: 'unshiftKeyboardLayer',\r\n            });\r\n        } else {\r\n            // This is a simple layer switch\r\n            attachButtonHandlers(mf, elList[i], {\r\n                default: [\r\n                    'switchKeyboardLayer',\r\n                    elList[i].getAttribute('data-layer'),\r\n                ],\r\n            });\r\n        }\r\n    }\r\n\r\n    // Select the first keyboard as the initial one.\r\n    const layerElements = result.getElementsByClassName('keyboard-layer');\r\n    Array.from(layerElements).forEach((x) => {\r\n        x.addEventListener('mousedown', (evt) => {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        });\r\n        x.addEventListener('touchstart', (evt) => {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        });\r\n    });\r\n    layerElements[0].classList.add('is-visible');\r\n\r\n    // Listen to know when the mouse has been released without being\r\n    // captured to remove the alternate keys panel and the shifted state of the\r\n    // keyboard.\r\n    window.addEventListener('mouseup', function () {\r\n        hideAlternateKeys(mf);\r\n        unshiftKeyboardLayer(mf);\r\n    });\r\n    window.addEventListener('blur', function () {\r\n        hideAlternateKeys(mf);\r\n        unshiftKeyboardLayer(mf);\r\n    });\r\n    window.addEventListener('touchend', function () {\r\n        hideAlternateKeys(mf);\r\n        unshiftKeyboardLayer(mf);\r\n    });\r\n    window.addEventListener('touchcancel', function () {\r\n        hideAlternateKeys(mf);\r\n        unshiftKeyboardLayer(mf);\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function hideAlternateKeys(_mathfield: Mathfield): boolean {\r\n    const altContainer = document.getElementById(\r\n        'mathlive-alternate-keys-panel'\r\n    );\r\n    if (altContainer) {\r\n        altContainer.classList.remove('is-visible');\r\n        altContainer.innerHTML = '';\r\n        releaseSharedElement(altContainer);\r\n    }\r\n    return false;\r\n}\r\n/*\r\n * Restore the key labels and commands to the state before a modifier key\r\n * was pressed.\r\n *\r\n */\r\nexport function unshiftKeyboardLayer(mathfield: Mathfield): boolean {\r\n    const keycaps = mathfield.virtualKeyboard.querySelectorAll(\r\n        'div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action'\r\n    );\r\n    if (keycaps) {\r\n        for (let i = 0; i < keycaps.length; i++) {\r\n            const keycap = keycaps[i];\r\n            const content = keycap.getAttribute('data-unshifted-content');\r\n            if (content) {\r\n                keycap.innerHTML = content;\r\n            }\r\n            const command = keycap.getAttribute('data-unshifted-command');\r\n            if (command) {\r\n                keycap.setAttribute(\r\n                    'data-' + mathfield.config.namespace + 'command',\r\n                    command\r\n                );\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import { isArray } from '../common/types';\r\n\r\nimport {\r\n    makeKeycap,\r\n    makeKeyboard,\r\n    hideAlternateKeys,\r\n    unshiftKeyboardLayer,\r\n} from './virtual-keyboard-utils';\r\nimport { complete } from './autocomplete';\r\nimport { getSharedElement } from './mathfield-utils';\r\nimport { register as registerCommand } from './commands';\r\nimport { Mathfield, on } from './mathfield-utils';\r\n\r\n/*\r\n * Alternate options are displayed when a key on the virtual keyboard is pressed\r\n * and held.\r\n *\r\n */\r\nregisterCommand(\r\n    {\r\n        showAlternateKeys: (mathfield: Mathfield, keycap, altKeys) => {\r\n            const altContainer = getSharedElement(\r\n                'mathlive-alternate-keys-panel',\r\n                'ML__keyboard alternate-keys'\r\n            );\r\n            if (mathfield.virtualKeyboard.classList.contains('material')) {\r\n                altContainer.classList.add('material');\r\n            }\r\n            if (altKeys.length >= 7) {\r\n                // Width 4\r\n                altContainer.style.width = '286px';\r\n            } else if (altKeys.length === 4 || altKeys.length === 2) {\r\n                // Width 2\r\n                altContainer.style.width = '146px';\r\n            } else if (altKeys.length === 1) {\r\n                // Width 1\r\n                altContainer.style.width = '86px';\r\n            } else {\r\n                // Width 3\r\n                altContainer.style.width = '146px';\r\n            }\r\n            // Reset container height\r\n            altContainer.style.height = 'auto';\r\n            let markup = '';\r\n            for (const altKey of altKeys) {\r\n                markup += '<li';\r\n                if (typeof altKey === 'string') {\r\n                    markup +=\r\n                        ' data-latex=\"' + altKey.replace(/\"/g, '&quot;') + '\"';\r\n                } else {\r\n                    if (altKey.latex) {\r\n                        markup +=\r\n                            ' data-latex=\"' +\r\n                            altKey.latex.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                    }\r\n                    if (altKey.content) {\r\n                        markup +=\r\n                            ' data-content=\"' +\r\n                            altKey.content.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                    }\r\n                    if (altKey.insert) {\r\n                        markup +=\r\n                            ' data-insert=\"' +\r\n                            altKey.insert.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                    }\r\n                    if (altKey.command) {\r\n                        markup +=\r\n                            \" data-command='\" +\r\n                            altKey.command.replace(/\"/g, '&quot;') +\r\n                            \"'\";\r\n                    }\r\n                    if (altKey.aside) {\r\n                        markup +=\r\n                            ' data-aside=\"' +\r\n                            altKey.aside.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                    }\r\n                    if (altKey.classes) {\r\n                        markup += ' data-classes=\"' + altKey.classes + '\"';\r\n                    }\r\n                }\r\n                markup += '>';\r\n                markup += altKey.label || '';\r\n                markup += '</li>';\r\n            }\r\n            markup = '<ul>' + markup + '</ul>';\r\n            altContainer.innerHTML = markup;\r\n            makeKeycap(\r\n                mathfield,\r\n                altContainer.getElementsByTagName('li'),\r\n                'performAlternateKeys'\r\n            );\r\n            const keycapEl = mathfield.virtualKeyboard.querySelector(\r\n                'div.keyboard-layer.is-visible div.rows ul li[data-alt-keys=\"' +\r\n                    keycap +\r\n                    '\"]'\r\n            );\r\n            const position = keycapEl.getBoundingClientRect();\r\n            if (position) {\r\n                if (position.top - altContainer.clientHeight < 0) {\r\n                    // altContainer.style.maxWidth = '320px';  // Up to six columns\r\n                    altContainer.style.width = 'auto';\r\n                    if (altKeys.length <= 6) {\r\n                        altContainer.style.height = '56px'; // 1 row\r\n                    } else if (altKeys.length <= 12) {\r\n                        altContainer.style.height = '108px'; // 2 rows\r\n                    } else {\r\n                        altContainer.style.height = '205px'; // 3 rows\r\n                    }\r\n                }\r\n                const top =\r\n                    (position.top - altContainer.clientHeight + 5).toString() +\r\n                    'px';\r\n                const left =\r\n                    Math.max(\r\n                        0,\r\n                        Math.min(\r\n                            window.innerWidth - altContainer.offsetWidth,\r\n                            (position.left +\r\n                                position.right -\r\n                                altContainer.offsetWidth) /\r\n                                2\r\n                        )\r\n                    ) + 'px';\r\n                altContainer.style.transform =\r\n                    'translate(' + left + ',' + top + ')';\r\n                altContainer.classList.add('is-visible');\r\n            }\r\n            return false;\r\n        },\r\n    },\r\n    { target: 'virtual-keyboard' }\r\n);\r\n\r\nexport function switchKeyboardLayer(\r\n    mathfield: Mathfield,\r\n    layer: string\r\n): boolean {\r\n    if (mathfield.config.virtualKeyboardMode !== 'off') {\r\n        if (\r\n            layer !== 'lower-command' &&\r\n            layer !== 'upper-command' &&\r\n            layer !== 'symbols-command'\r\n        ) {\r\n            // If we switch to a non-command keyboard layer, first exit command mode.\r\n            complete(mathfield);\r\n        }\r\n        showVirtualKeyboard(mathfield);\r\n        // If the alternate keys panel was visible, hide it\r\n        hideAlternateKeys(mathfield);\r\n        // If we were in a temporarily shifted state (shift-key held down)\r\n        // restore our state before switching to a new layer.\r\n        unshiftKeyboardLayer(mathfield);\r\n        const layers = mathfield.virtualKeyboard.getElementsByClassName(\r\n            'keyboard-layer'\r\n        );\r\n        // Search for the requested layer\r\n        let found = false;\r\n        for (let i = 0; i < layers.length; i++) {\r\n            if ((layers[i] as HTMLElement).dataset.layer === layer) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        // We did find the layer, switch to it.\r\n        // If we didn't find it, do nothing and keep the current layer\r\n        if (found) {\r\n            for (let i = 0; i < layers.length; i++) {\r\n                if ((layers[i] as HTMLElement).dataset.layer === layer) {\r\n                    layers[i].classList.add('is-visible');\r\n                } else {\r\n                    layers[i].classList.remove('is-visible');\r\n                }\r\n            }\r\n        }\r\n        mathfield.$focus();\r\n    }\r\n    return true;\r\n}\r\n\r\n/*\r\n * Temporarily change the labels and the command of the keys\r\n * (for example when a modifier key is held down.)\r\n */\r\nregisterCommand(\r\n    {\r\n        shiftKeyboardLayer: (mathfield: Mathfield) => {\r\n            const keycaps = mathfield.virtualKeyboard.querySelectorAll(\r\n                'div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action'\r\n            );\r\n            if (keycaps) {\r\n                for (let i = 0; i < keycaps.length; i++) {\r\n                    const keycap = keycaps[i];\r\n                    let shiftedContent = keycap.getAttribute('data-shifted');\r\n                    if (shiftedContent || /^[a-z]$/.test(keycap.innerHTML)) {\r\n                        keycap.setAttribute(\r\n                            'data-unshifted-content',\r\n                            keycap.innerHTML\r\n                        );\r\n                        if (!shiftedContent) {\r\n                            shiftedContent = keycap.innerHTML.toUpperCase();\r\n                        }\r\n                        keycap.innerHTML = shiftedContent;\r\n                        const command = keycap.getAttribute(\r\n                            'data-' + mathfield.config.namespace + 'command'\r\n                        );\r\n                        if (command) {\r\n                            keycap.setAttribute(\r\n                                'data-unshifted-command',\r\n                                command\r\n                            );\r\n                            const shifteCommand = keycap.getAttribute(\r\n                                'data-shifted-command'\r\n                            );\r\n                            if (shifteCommand) {\r\n                                keycap.setAttribute(\r\n                                    'data-' +\r\n                                        mathfield.config.namespace +\r\n                                        'command',\r\n                                    shifteCommand\r\n                                );\r\n                            } else {\r\n                                const commandObj = JSON.parse(command);\r\n                                if (isArray(commandObj)) {\r\n                                    commandObj[1] = commandObj[1].toUpperCase();\r\n                                }\r\n                                keycap.setAttribute(\r\n                                    'data-' +\r\n                                        mathfield.config.namespace +\r\n                                        'command',\r\n                                    JSON.stringify(commandObj)\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n    },\r\n    { target: 'virtual-keyboard' }\r\n);\r\n\r\nregisterCommand(\r\n    {\r\n        hideAlternateKeys: (mathfield: Mathfield) =>\r\n            hideAlternateKeys(mathfield),\r\n\r\n        /*\r\n         * The command invoked when an alternate key is pressed.\r\n         * We need to hide the Alternate Keys panel, then perform the\r\n         * command.\r\n         */\r\n        performAlternateKeys: (mathfield: Mathfield, command) => {\r\n            hideAlternateKeys(mathfield);\r\n            return mathfield.$perform(command);\r\n        },\r\n        switchKeyboardLayer: (mathfield: Mathfield, layer) =>\r\n            switchKeyboardLayer(mathfield, layer),\r\n        unshiftKeyboardLayer: (mathfield: Mathfield) =>\r\n            unshiftKeyboardLayer(mathfield),\r\n\r\n        insertAndUnshiftKeyboardLayer: (mathfield: Mathfield, c) => {\r\n            mathfield.$insert(c);\r\n            unshiftKeyboardLayer(mathfield);\r\n            return true;\r\n        },\r\n    },\r\n    { target: 'virtual-keyboard' }\r\n);\r\n\r\nregisterCommand(\r\n    {\r\n        /* Toggle the virtual keyboard, but switch to the alternate theme if available */\r\n        toggleVirtualKeyboardAlt: (mathfield: Mathfield) => {\r\n            let hadAltTheme = false;\r\n            if (mathfield.virtualKeyboard) {\r\n                hadAltTheme = mathfield.virtualKeyboard.classList.contains(\r\n                    'material'\r\n                );\r\n                mathfield.virtualKeyboard.remove();\r\n                delete mathfield.virtualKeyboard;\r\n                mathfield.virtualKeyboard = null;\r\n            }\r\n            showVirtualKeyboard(mathfield, hadAltTheme ? '' : 'material');\r\n            return false;\r\n        },\r\n        /** Toggle the virtual keyboard, but switch another keyboard layout */\r\n        toggleVirtualKeyboardShift: (mathfield: Mathfield) => {\r\n            mathfield.config.virtualKeyboardLayout = {\r\n                qwerty: 'azerty',\r\n\r\n                azerty: 'qwertz',\r\n                qwertz: 'dvorak',\r\n                dvorak: 'colemak',\r\n                colemak: 'qwerty',\r\n            }[mathfield.config.virtualKeyboardLayout];\r\n            const layer =\r\n                mathfield.virtualKeyboard?.querySelector(\r\n                    'div.keyboard-layer.is-visible'\r\n                ).id ?? '';\r\n            if (mathfield.virtualKeyboard) {\r\n                mathfield.virtualKeyboard.remove();\r\n                delete mathfield.virtualKeyboard;\r\n                mathfield.virtualKeyboard = null;\r\n            }\r\n            showVirtualKeyboard(mathfield);\r\n            if (layer) {\r\n                switchKeyboardLayer(mathfield, layer);\r\n            }\r\n            return false;\r\n        },\r\n    },\r\n    { target: 'virtual-keyboard' }\r\n);\r\n\r\nexport function showVirtualKeyboard(mathfield: Mathfield, theme = ''): boolean {\r\n    mathfield.virtualKeyboardVisible = false;\r\n    toggleVirtualKeyboard(mathfield, theme);\r\n    return false;\r\n}\r\n\r\nexport function hideVirtualKeyboard(mathfield: Mathfield): boolean {\r\n    mathfield.virtualKeyboardVisible = true;\r\n    toggleVirtualKeyboard(mathfield);\r\n    return false;\r\n}\r\n\r\nfunction toggleVirtualKeyboard(mathfield: Mathfield, theme?): boolean {\r\n    mathfield.virtualKeyboardVisible = !mathfield.virtualKeyboardVisible;\r\n    if (mathfield.virtualKeyboardVisible) {\r\n        if (mathfield.virtualKeyboard) {\r\n            mathfield.virtualKeyboard.classList.add('is-visible');\r\n        } else {\r\n            // Construct the virtual keyboard\r\n            mathfield.virtualKeyboard = makeKeyboard(mathfield, theme);\r\n            // Let's make sure that tapping on the keyboard focuses the field\r\n            on(\r\n                mathfield.virtualKeyboard,\r\n                'touchstart:passive mousedown',\r\n                () => {\r\n                    mathfield.$focus();\r\n                }\r\n            );\r\n            document.body.appendChild(mathfield.virtualKeyboard);\r\n        }\r\n        // For the transition effect to work, the property has to be changed\r\n        // after the insertion in the DOM. Use setTimeout\r\n        window.setTimeout(() => {\r\n            mathfield.virtualKeyboard.classList.add('is-visible');\r\n        }, 1);\r\n    } else if (mathfield.virtualKeyboard) {\r\n        mathfield.virtualKeyboard.classList.remove('is-visible');\r\n    }\r\n    if (typeof mathfield.config.onVirtualKeyboardToggle === 'function') {\r\n        mathfield.config.onVirtualKeyboardToggle(\r\n            mathfield,\r\n            mathfield.virtualKeyboardVisible,\r\n            mathfield.virtualKeyboard\r\n        );\r\n    }\r\n    return false;\r\n}\r\n\r\nregisterCommand(\r\n    {\r\n        toggleVirtualKeyboard: (mathfield: Mathfield, theme) =>\r\n            toggleVirtualKeyboard(mathfield, theme),\r\n        hideVirtualKeyboard: (mathfield: Mathfield) =>\r\n            hideVirtualKeyboard(mathfield),\r\n        showVirtualKeyboard: (mathfield: Mathfield, theme): boolean =>\r\n            showVirtualKeyboard(mathfield, theme),\r\n    },\r\n    { target: 'virtual-keyboard' }\r\n);\r\n","/**\r\n * This module parses and outputs an Abstract Syntax Tree representing the\r\n * formula using the {@tutorial math-json | MathJSON } format.\r\n *\r\n * To use it, use the {@linkcode atomtoAST | atomtoAST()}  method.\r\n */\r\nimport { isArray } from '../common/types';\r\n\r\nimport { Atom, AtomType } from '../core/atom';\r\nimport { parseString } from '../core/parser';\r\nimport {\r\n    unicodeStringToLatex,\r\n    getInfo,\r\n    mathVariantToUnicode,\r\n    RIGHT_DELIM,\r\n} from '../core/definitions';\r\n\r\ntype MathJsonLatexOptions = {\r\n    precision?: number;\r\n    decimalMarker?: string;\r\n    groupSeparator?: string;\r\n    product?: string;\r\n    exponentProduct?: string;\r\n    exponentMarker?: string;\r\n    arcSeparator?: string;\r\n    scientificNotation?: 'engineering' | 'auto' | 'on';\r\n    beginRepeatingDigits?: string;\r\n    endRepeatingDigits?: string;\r\n};\r\n\r\ntype MathJson = any;\r\ntype ComplexNumber = { re?: string; im?: string };\r\ntype WrappedNumber = { num: string | ComplexNumber };\r\ntype MathJsonNumber = WrappedNumber & MathJsonOptionalAttributes;\r\ntype MathJsonExpression = {\r\n    fn?: string;\r\n    variant?: string;\r\n    [property: string]: MathJson;\r\n};\r\ntype MathJsonFunction = { fn: string; arg?: MathJson[] };\r\ntype MathJsonOptionalAttributes = {\r\n    latex?: string;\r\n};\r\n\r\ntype ParseState = {\r\n    atoms: Atom[];\r\n    index?: number;\r\n    ast?: MathJson;\r\n    minPrec?: number;\r\n};\r\n\r\n// type MathJson =\r\n//     | string\r\n//     | number\r\n//     | boolean\r\n//     | null\r\n//     | { [property: string]: MathJson }\r\n//     | MathJson[];\r\n\r\nconst CANONICAL_NAMES = {\r\n    // CONSTANTS\r\n    '\\\\imaginaryI': '\\u2148',\r\n    '\\\\imaginaryJ': '\\u2149',\r\n    '\\\\pi': 'π',\r\n    '\\\\exponentialE': '\\u212f',\r\n\r\n    // ARITHMETIC\r\n    '﹢': '+', // SMALL PLUS SIGN\r\n    '＋': '+', // FULL WIDTH PLUS SIGN\r\n    '−': '-', // MINUS SIGN\r\n    '-': '-', // HYPHEN-MINUS\r\n    '﹣': '-', // SMALL HYPHEN-MINUS\r\n    '－': '-', // FULLWIDTH HYPHEN-MINUS\r\n    '\\\\times': '*',\r\n    '\\\\cdot': '*',\r\n    '⨉': '*', // N-ARY TIMES OPERATOR U+\r\n    '️✖': '*', // MULTIPLICATION SYMBOL\r\n    '️×': '*', // MULTIPLICATION SIGN\r\n    '.': '*',\r\n    '÷': '/', // DIVISION SIGN\r\n    // '/':             '/',        // SOLIDUS\r\n    '⁄': '/', // FRACTION SLASH\r\n    '／': '/', // FULLWIDTH SOLIDUS\r\n    '!': 'factorial',\r\n    '\\\\mp': 'minusplus', // MINUS-PLUS SIGN\r\n    '\\\\ne': '!=',\r\n    '\\\\coloneq': ':=',\r\n    '\\\\questeq': '?=',\r\n    '\\\\approx': 'approx',\r\n    '\\\\cong': 'congruent',\r\n    '\\\\sim': 'similar',\r\n    '\\\\equiv': 'equiv',\r\n    '\\\\pm': 'plusminus', // PLUS-MINUS SIGN\r\n\r\n    '\\\\land': 'and',\r\n    '\\\\wedge': 'and',\r\n    '\\\\lor': 'or',\r\n    '\\\\vee': 'or',\r\n    '\\\\oplus': 'xor',\r\n    '\\\\veebar': 'xor',\r\n    '\\\\lnot': 'not',\r\n    '\\\\neg': 'not',\r\n\r\n    '\\\\exists': 'exists',\r\n    '\\\\nexists': '!exists',\r\n    '\\\\forall': 'forAll',\r\n    '\\\\backepsilon': 'suchThat',\r\n    '\\\\therefore': 'therefore',\r\n    '\\\\because': 'because',\r\n\r\n    '\\\\nabla': 'nabla',\r\n    '\\\\circ': 'circle',\r\n    // '\\\\oplus':       'oplus',\r\n    '\\\\ominus': 'ominus',\r\n    '\\\\odot': 'odot',\r\n    '\\\\otimes': 'otimes',\r\n\r\n    '\\\\zeta': 'Zeta',\r\n    '\\\\Gamma': 'Gamma',\r\n    '\\\\min': 'min',\r\n    '\\\\max': 'max',\r\n    '\\\\mod': 'mod',\r\n    '\\\\lim': 'lim', // BIG OP\r\n    '\\\\sum': 'sum',\r\n    '\\\\prod': 'prod',\r\n    '\\\\int': 'integral',\r\n    '\\\\iint': 'integral2',\r\n    '\\\\iiint': 'integral3',\r\n\r\n    '\\\\Re': 'Re',\r\n    '\\\\gothicCapitalR': 'Re',\r\n    '\\\\Im': 'Im',\r\n    '\\\\gothicCapitalI': 'Im',\r\n\r\n    '\\\\binom': 'nCr',\r\n\r\n    '\\\\partial': 'partial',\r\n    '\\\\differentialD': 'differentialD',\r\n    '\\\\capitalDifferentialD': 'capitalDifferentialD',\r\n    '\\\\Finv': 'Finv',\r\n    '\\\\Game': 'Game',\r\n    '\\\\wp': 'wp',\r\n    '\\\\ast': 'ast',\r\n    '\\\\star': 'star',\r\n    '\\\\asymp': 'asymp',\r\n\r\n    // Function domain, limits\r\n    '\\\\to': 'to', // Looks like \\rightarrow\r\n    '\\\\gets': 'gets', // Looks like \\leftarrow\r\n\r\n    // Sets\r\n    '\\\\in': 'elementof',\r\n    '\\\\notin': '!elementof',\r\n    '\\\\ni': 'ownedby',\r\n    '\\\\owns': 'ownedby',\r\n    '\\\\subset': 'subset',\r\n    '\\\\supset': 'superset',\r\n    '\\\\complement': 'complement',\r\n\r\n    // Logic\r\n    '\\\\rightarrow': 'shortLogicalImplies',\r\n    '\\\\leftarrow': 'shortLogicalImpliedBy',\r\n    '\\\\leftrightarrow': 'shortLogicalEquivalent',\r\n    '\\\\longrightarrow': 'logicalImplies',\r\n    '\\\\longleftarrow': 'logicalImpliedBy',\r\n    '\\\\longleftrightarrow': 'logicalEquivalent',\r\n\r\n    // Metalogic\r\n    '\\\\Rightarrow': 'shortImplies',\r\n    '\\\\Leftarrow': 'shortImpliedBy',\r\n    '\\\\Leftrightarrow': 'shortEquivalent',\r\n\r\n    '\\\\implies': 'implies',\r\n    '\\\\Longrightarrow': 'implies',\r\n    '\\\\impliedby': 'impliedBy',\r\n    '\\\\Longleftarrow': 'impliedBy',\r\n    '\\\\iff': 'equivalent',\r\n    '\\\\Longleftrightarrow': 'equivalent',\r\n};\r\n\r\n// The OP_NAME table maps a canonical name to a function name\r\nconst OP_NAME = {\r\n    '+': 'add',\r\n    '*': 'multiply',\r\n    '-': 'subtract',\r\n    '/': 'divide',\r\n    '=': 'equal',\r\n    ':=': 'assign',\r\n    '!=': 'ne',\r\n    '?=': 'questeq',\r\n    approx: 'approx',\r\n    congruent: 'congruent',\r\n    similar: 'similar',\r\n    equiv: 'equiv',\r\n    '<': 'lt',\r\n    '>': 'gt',\r\n    '<=': 'le',\r\n    '>=': 'ge',\r\n    '≤': 'le',\r\n    '≥': 'ge',\r\n    '>>': 'gg',\r\n    '<<': 'll',\r\n    '**': 'pow',\r\n    '++': 'increment',\r\n    '--': 'decrement',\r\n};\r\n\r\n// The FUNCTION_TEMPLATE table maps a canonical name to a LaTeX template\r\nconst FUNCTION_TEMPLATE = {\r\n    equal: '%0 = %1',\r\n    ne: '%0 \\\\ne %1',\r\n    questeq: '%0 \\\\questeq %1',\r\n    approx: '%0 \\\\approx %1',\r\n    congruent: '%0 \\\\cong %1',\r\n    similar: '%0 \\\\sim %1',\r\n    equiv: '%0 \\\\equiv %1',\r\n    assign: '%0 := %1',\r\n    lt: '%0 < %1',\r\n    gt: '%0 > %1',\r\n    le: '%0 \\\\le %1',\r\n    ge: '%0 \\\\ge %1',\r\n\r\n    // TRIGONOMETRY\r\n    sin: '\\\\sin%_%^ %0',\r\n    cos: '\\\\cos%_%^ %0',\r\n    tan: '\\\\tan%_%^ %0',\r\n    cot: '\\\\cot%_%^ %0',\r\n    sec: '\\\\sec%_%^ %0',\r\n    csc: '\\\\csc%_%^ %0',\r\n\r\n    sinh: '\\\\sinh %0',\r\n    cosh: '\\\\cosh %0',\r\n    tanh: '\\\\tanh %0',\r\n    csch: '\\\\csch %0',\r\n    sech: '\\\\sech %0',\r\n    coth: '\\\\coth %0',\r\n\r\n    arcsin: '\\\\arcsin %0',\r\n    arccos: '\\\\arccos %0',\r\n    arctan: '\\\\arctan %0',\r\n    arccot: '\\\\arcctg %0', // Check\r\n    arcsec: '\\\\arcsec %0',\r\n    arccsc: '\\\\arccsc %0',\r\n\r\n    arsinh: '\\\\arsinh %0',\r\n    arcosh: '\\\\arcosh %0',\r\n    artanh: '\\\\artanh %0',\r\n    arcsch: '\\\\arcsch %0',\r\n    arsech: '\\\\arsech %0',\r\n    arcoth: '\\\\arcoth %0',\r\n\r\n    // LOGARITHMS\r\n    ln: '\\\\ln%_%^ %', // Natural logarithm\r\n    log: '\\\\log%_%^ %', // General logarithm, e.g. log_10\r\n    lg: '\\\\lg %', // Common, base-10, logarithm\r\n    lb: '\\\\lb %', // Binary, base-2, logarithm\r\n\r\n    // Big operator\r\n    sum: '\\\\sum%_%^ %0',\r\n    prod: '\\\\prod%_%^ %0',\r\n\r\n    // OTHER\r\n    Zeta: '\\\\zeta%_%^ %', // Riemann Zeta function\r\n    Gamma: '\\\\Gamma %', // Gamma function, such that Gamma(n) = (n - 1)!\r\n    min: '\\\\min%_%^ %',\r\n    max: '\\\\max%_%^ %',\r\n    mod: '\\\\mod%_%^ %',\r\n    lim: '\\\\lim%_%^ %', // BIG OP\r\n    binom: '\\\\binom %',\r\n    nabla: '\\\\nabla %',\r\n    curl: '\\\\nabla\\\\times %0',\r\n    div: '\\\\nabla\\\\cdot %0',\r\n    floor: '\\\\lfloor %0 \\\\rfloor%_%^',\r\n    ceil: '\\\\lceil %0 \\\\rceil%_%^',\r\n    abs: '\\\\left| %0 \\\\right|%_%^',\r\n    norm: '\\\\lVert %0 \\\\rVert%_%^',\r\n    ucorner: '\\\\ulcorner %0 \\\\urcorner%_%^',\r\n    lcorner: '\\\\llcorner %0 \\\\lrcorner%_%^',\r\n    angle: '\\\\langle %0 \\\\rangle%_%^',\r\n    group: '\\\\lgroup %0 \\\\rgroup%_%^',\r\n    moustache: '\\\\lmoustache %0 \\\\rmoustache%_%^',\r\n    brace: '\\\\lbrace %0 \\\\rbrace%_%^',\r\n    'sqrt[]': '\\\\sqrt[%^]{%0}', // Template used when there's an index\r\n    sqrt: '\\\\sqrt{%0}',\r\n    lcm: '\\\\operatorname{lcm}%',\r\n    gcd: '\\\\operatorname{gcd}%',\r\n    erf: '\\\\operatorname{erf}%',\r\n    erfc: '\\\\operatorname{erfc}%',\r\n    randomReal: '\\\\operatorname{randomReal}%',\r\n    randomInteger: '\\\\operatorname{randomInteger}%',\r\n\r\n    // Logic operators\r\n    and: '%0 \\\\land %1',\r\n    or: '%0 \\\\lor %1',\r\n    xor: '%0 \\\\oplus %1',\r\n    not: '%0 \\\\lnot %1',\r\n\r\n    // Other operators\r\n    circle: '%0 \\\\circ %1',\r\n    ast: '%0 \\\\ast %1',\r\n    star: '%0 \\\\star %1',\r\n    asymp: '%0 \\\\asymp %1',\r\n    '/': '\\\\frac{%0}{%1}',\r\n    Re: '\\\\Re{%0}',\r\n    Im: '\\\\Im{%0}',\r\n    factorial: '%0!',\r\n    factorial2: '%0!!',\r\n};\r\n\r\n// From www.w3.org/TR/MathML3/appendixc.html\r\n// The keys of OP_PRECEDENCE are \"canonical names\"\r\n// (the values of the CANONICAL_NAMES table above, e.g. \"?=\")\r\n// Those are different from the latex names (e.g. \\\\questeq)\r\n// and from the function names (e.g. \"questeq\")\r\nconst OP_PRECEDENCE = {\r\n    degree: 880,\r\n    nabla: 740,\r\n    curl: 740, // not in MathML\r\n    partial: 740,\r\n    differentialD: 740, // not in MathML\r\n    capitalDifferentialD: 740, // not in MathML\r\n\r\n    '**': 720, // not in MathML\r\n\r\n    odot: 710,\r\n\r\n    // Logical not\r\n    not: 680,\r\n\r\n    // Division\r\n    div: 660, // division sign\r\n    solidus: 660,\r\n    '/': 660,\r\n\r\n    setminus: 650, // \\setminus, \\smallsetminus\r\n\r\n    '%': 640,\r\n\r\n    otimes: 410,\r\n\r\n    // Set operators\r\n    union: 350, // \\cup\r\n    intersection: 350, // \\cap\r\n\r\n    // Multiplication, division and modulo\r\n    '*': 390,\r\n    ast: 390,\r\n    '.': 390,\r\n\r\n    oplus: 300, // also logical XOR... @todo\r\n    ominus: 300,\r\n\r\n    // Addition\r\n    '+': 275,\r\n    '-': 275,\r\n    '+-': 275, // \\pm\r\n    '-+': 275, // \\mp\r\n\r\n    // Most circled-ops are 265\r\n    circle: 265,\r\n    circledast: 265,\r\n    circledcirc: 265,\r\n    star: 265, // Different from ast\r\n\r\n    // Range\r\n    '..': 263, // Not in MathML\r\n\r\n    // Unit conversion\r\n    to: 262, // Not in MathML\r\n    in: 262, // Not in MathML\r\n\r\n    '|': 261, // Not in MathML    (bind is the |_ operator)\r\n\r\n    // Relational\r\n    congruent: 265,\r\n    equiv: 260, // MathML: \"identical to\"\r\n    '=': 260,\r\n    '!=': 255,\r\n    '?=': 255,\r\n    similar: 250, // tilde operator in MathML\r\n\r\n    approx: 247,\r\n    '<': 245,\r\n    '>': 243,\r\n    '>=': 242,\r\n    '≥': 242,\r\n    '<=': 241,\r\n\r\n    // Set operator\r\n    complement: 240,\r\n    subset: 240, // \\subset\r\n    superset: 240, // \\supset\r\n    // @todo and equality and neg operators\r\n    elementof: 240, // \\in\r\n    '!elementof': 240, // \\notin\r\n    //\r\n    exists: 230,\r\n    '!exists': 230,\r\n    forall: 230,\r\n\r\n    // Logical operators\r\n    and: 200,\r\n    xor: 195, // MathML had 190\r\n    or: 190,\r\n    // Note: 'not' is 680\r\n\r\n    // center, low, diag, vert ellipsis         150\r\n\r\n    // Composition/sequence\r\n    suchThat: 110, // \\backepsilon\r\n    ':': 100,\r\n    // '..':               100,\r\n    // '...':               100,\r\n\r\n    // Conditional (?:)\r\n\r\n    // Assignment\r\n    assign: 80,\r\n    ':=': 80, // MathML had 260 (same with U+2254 COLON EQUALS)\r\n\r\n    therefore: 70,\r\n    because: 70,\r\n\r\n    // Arrows\r\n    // Note: MathML had 270 for the arrows, but this\r\n    // would not work for (a = b => b = a)\r\n    // See also https://en.wikipedia.org/wiki/Logical_connective#Order_of_precedence\r\n    // for a suggested precedence (note that in this page lower precedence\r\n    // has the opposite meaning as what we use)\r\n    shortLogicalImplies: 52, // ->\r\n    shortImplies: 51, // =>\r\n    logicalImplies: 50, // -->\r\n    implies: 49, // ==>\r\n\r\n    shortLogicalImpliedBy: 48, // <-\r\n    shortImpliedBy: 47, // <=\r\n    logicalImpliedBy: 46, // <--\r\n    impliedBy: 45, // <==\r\n\r\n    shortLogicalEquivalent: 44, // <->\r\n    shortEquivalent: 43, // <=>\r\n    logicalEquivalent: 42, // <-->\r\n    equivalent: 41, // <==>\r\n\r\n    ',': 40,\r\n    ';': 30,\r\n};\r\n\r\nfunction getArg(ast, index) {\r\n    return isArray(ast.arg) ? ast.arg[index] : undefined;\r\n}\r\n\r\n/**\r\n * Given a canonical name, return its precedence\r\n * @param canonicalName, for example \"and\"\r\n */\r\nfunction getPrecedence(canonicalName: string): number {\r\n    return canonicalName ? OP_PRECEDENCE[canonicalName] || -1 : -1;\r\n}\r\n\r\nfunction getAssociativity(canonicalName: string): 'left' | 'right' {\r\n    if (/=|=>/.test(canonicalName)) {\r\n        return 'right';\r\n    }\r\n    return 'left';\r\n}\r\n\r\n/**\r\n *\r\n * @param name - function canonical name\r\n */\r\nfunction getLatexTemplateForFunction(name: string): string {\r\n    let result = FUNCTION_TEMPLATE[name];\r\n    if (!result) {\r\n        result =\r\n            name.length > 1\r\n                ? '\\\\operatorname{' + name + '}%^%_ %'\r\n                : name + '%^%_ %';\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param name symbol name, e.g. \"alpha\"\r\n */\r\nfunction getLatexForSymbol(name: string): string {\r\n    let result = FUNCTION_TEMPLATE[name];\r\n    if (result) {\r\n        return result.replace('%1', '').replace('%0', '').replace('%', '');\r\n    }\r\n    if (name.length > 1) {\r\n        result = '\\\\' + name;\r\n    }\r\n    if (!result) {\r\n        result = unicodeStringToLatex('math', name);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction isFunction(canonicalName: string): boolean {\r\n    if (canonicalName === 'f' || canonicalName === 'g') return true;\r\n\r\n    const t = FUNCTION_TEMPLATE[canonicalName];\r\n    if (!t) return false;\r\n\r\n    // A plain \"%\" is a placeholder for an argument list, indicating a function\r\n    if (/%[^01_^]?/.test(t)) return true;\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n *\r\n * @param latex, for example '\\\\times'\r\n * @retur the canonical name for the input, for example '*'\r\n */\r\nfunction getCanonicalName(latex: string): string {\r\n    latex = (latex || '').trim();\r\n    let result = CANONICAL_NAMES[latex];\r\n    if (!result) {\r\n        if (/^\\\\[^{}]+$/.test(latex)) {\r\n            const info = getInfo(latex, 'math', {});\r\n            if (info) {\r\n                result = info.value || latex.slice(1);\r\n            } else {\r\n                result = latex.slice(1);\r\n            }\r\n        } else {\r\n            result = latex;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return the operator precedence of the atom\r\n * or null if not an operator\r\n */\r\nfunction opPrec(atom: Atom): [number, 'left' | 'right'] {\r\n    if (!atom) return null;\r\n    const name = getCanonicalName(getString(atom));\r\n    const result: [number, 'left' | 'right'] = [\r\n        getPrecedence(name),\r\n        getAssociativity(name),\r\n    ];\r\n    if (result[0] <= 0) return null;\r\n    return result;\r\n}\r\n\r\nfunction isOperator(atom) {\r\n    return opPrec(atom) !== null;\r\n}\r\n\r\nconst DELIM_FUNCTION = {\r\n    '\\\\lfloor\\\\rfloor': 'floor',\r\n    '\\\\lceil\\\\rceil': 'ceil',\r\n    '\\\\vert\\\\vert': 'abs',\r\n    '\\\\lvert\\\\rvert': 'abs',\r\n    '||': 'abs',\r\n    '\\\\Vert\\\\Vert': 'norm',\r\n    '\\\\lVert\\\\rVert': 'norm',\r\n    '\\\\ulcorner\\\\urcorner': 'ucorner',\r\n    '\\\\llcorner\\\\lrcorner': 'lcorner',\r\n    '\\\\langle\\\\rangle': 'angle',\r\n    '\\\\lgroup\\\\rgroup': 'group',\r\n    '\\\\lmoustache\\\\rmoustache': 'moustache',\r\n    '\\\\lbrace\\\\rbrace': 'brace',\r\n};\r\n\r\nconst POSTFIX_FUNCTION = {\r\n    '!': 'factorial',\r\n    '\\\\dag': 'dagger',\r\n    '\\\\dagger': 'dagger',\r\n    '\\\\ddagger': 'dagger2',\r\n    '\\\\maltese': 'maltese',\r\n    '\\\\backprime': 'backprime',\r\n    '\\\\backdoubleprime': 'backprime2',\r\n    '\\\\prime': 'prime',\r\n    '\\\\doubleprime': 'prime2',\r\n    '\\\\$': '$',\r\n    '\\\\%': '%',\r\n    '\\\\_': '_',\r\n    '\\\\degree': 'degree',\r\n};\r\n\r\nconst ASSOCIATIVE_FUNCTION = {\r\n    '+': 'add',\r\n    '-': 'add', // Subtraction is add(), but it's\r\n    // handled specifically so that the\r\n    // argument is negated\r\n    '*': 'multiply',\r\n\r\n    '=': 'equal',\r\n\r\n    ',': 'list',\r\n    ';': 'list2',\r\n\r\n    and: 'and',\r\n    or: 'or',\r\n    xor: 'xor',\r\n    union: 'union',\r\n    // shortLogicalEquivalent and logicalEquivalent map to the same function\r\n    // they mean the same thing, but have a difference precedence.\r\n    shortLogicalEquivalent: 'logicalEquivalent', // logical equivalent, iff, biconditional logical connective\r\n    logicalEquivalent: 'logicalEquivalent', // same\r\n    // shortEquivalent and equivalent map to the same function\r\n    // they mean the same thing, but have a difference precedence.\r\n    shortEquivalent: 'equivalent', // metalogic equivalent\r\n    equivalent: 'equivalent', // same\r\n};\r\n\r\nconst SUPER_ASSOCIATIVE_FUNCTION = {\r\n    ',': 'list',\r\n    ';': 'list2',\r\n};\r\n\r\nfunction getString(atom) {\r\n    if (typeof atom === 'string') return atom;\r\n    if (isArray(atom)) {\r\n        let result = '';\r\n        for (const subAtom of atom) {\r\n            result += getString(subAtom);\r\n        }\r\n        return result;\r\n    }\r\n    if (\r\n        atom.symbol &&\r\n        !/^\\\\math(op|bin|rel|open|punct|ord|inner)/.test(atom.symbol)\r\n    ) {\r\n        return atom.symbol;\r\n    }\r\n    if (atom.type === 'leftright') {\r\n        return '';\r\n    }\r\n    if (typeof atom.body === 'string') {\r\n        return atom.body;\r\n    }\r\n    if (isArray(atom.body)) {\r\n        let result = '';\r\n        for (const subAtom of atom.body) {\r\n            result += getString(subAtom);\r\n        }\r\n        return result;\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} expr - Abstract Syntax Tree object\r\n * @return A string, the symbol, or undefined\r\n */\r\nfunction asSymbol(node): string {\r\n    return typeof node.sym === 'string'\r\n        ? getLatexForSymbol(node.sym) || node.sym\r\n        : '';\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} node - Abstract Syntax Tree node\r\n * @return A JavaScript number, the value of the AST or NaN\r\n */\r\nfunction asMachineNumber(node): number {\r\n    return parseFloat(node.num);\r\n}\r\n\r\nfunction isNumber(node): boolean {\r\n    return typeof node === 'object' && typeof node.num !== 'undefined';\r\n}\r\n\r\nfunction numberRe(node): number {\r\n    let result = 0;\r\n    if (isNumber(node)) {\r\n        if (typeof node.num === 'object') {\r\n            result =\r\n                typeof node.num.re !== 'undefined'\r\n                    ? parseFloatToPrecision(node.num.re)\r\n                    : 0;\r\n        } else {\r\n            result = parseFloat(node.num);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction numberIm(node): number {\r\n    let result = 0;\r\n    if (isNumber(node)) {\r\n        if (typeof node.num === 'object') {\r\n            result =\r\n                typeof node.num.im !== 'undefined'\r\n                    ? parseFloatToPrecision(node.num.im)\r\n                    : 0;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction isComplexWithRealAndImaginary(node) {\r\n    return numberRe(node) !== 0 && numberIm(node) !== 0;\r\n}\r\n\r\nfunction hasSup(node) {\r\n    return node && typeof node.sup !== 'undefined';\r\n}\r\n\r\nfunction hasSub(node) {\r\n    return node && typeof node.sub !== 'undefined';\r\n}\r\n\r\n/**\r\n * Return true if the current atom is of the specified type and value.\r\n */\r\nfunction isAtom(expr: ParseState, type: AtomType, value?): boolean {\r\n    let result = false;\r\n    const atom = expr.atoms[expr.index];\r\n    if (atom && atom.type === type) {\r\n        if (typeof value === 'undefined') {\r\n            result = true;\r\n        } else {\r\n            result = getString(atom) === value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction wrapFn(functionName: string, ...params: any[]): MathJsonFunction {\r\n    const result = { fn: functionName, arg: undefined };\r\n    if (params) {\r\n        const args = [];\r\n        for (const arg of params) {\r\n            if (arg) args.push(arg);\r\n        }\r\n        if (args.length > 0) result.arg = args;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction wrapNum(num: number | string | ComplexNumber): MathJsonNumber {\r\n    if (typeof num === 'number') {\r\n        return { num: num.toString() };\r\n    } else if (typeof num === 'string') {\r\n        return { num: num };\r\n    } else if (typeof num === 'object') {\r\n        // This is a complex number\r\n        console.assert(\r\n            typeof num['re'] === 'string' || typeof num['im'] === 'string'\r\n        );\r\n        return { num: num };\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * Return the negative of the expression. Usually { fn:'negate', arg }\r\n * but for numbers, the negated number\r\n * @param {object} node\r\n * @private\r\n */\r\nfunction negate(node) {\r\n    if (isNumber(node)) {\r\n        const re = numberRe(node);\r\n        const im = numberIm(node);\r\n        if (im !== 0) {\r\n            if (re !== 0) {\r\n                node.num.re = (-re).toString();\r\n            }\r\n            node.num.im = (-im).toString();\r\n        } else {\r\n            node.num = (-re).toString();\r\n        }\r\n        return node;\r\n    }\r\n    return wrapFn('negate', node);\r\n}\r\n\r\nfunction nextIsSupsub(expr) {\r\n    const atom = expr.atoms[expr.index + 1];\r\n    return atom && atom.type === 'msubsup';\r\n}\r\n\r\n/**\r\n * Parse for a possible sup/sub attached directly to the current atom\r\n * or to a following 'msubsup' atom.\r\n * After the call, the index points to the next atom to process.\r\n * @param {object} expr\r\n * @private\r\n */\r\nfunction parseSupsub(expr, options) {\r\n    let atom = expr.atoms[expr.index];\r\n\r\n    // Is there a supsub directly on this atom?\r\n    if (\r\n        atom &&\r\n        (typeof atom.superscript !== 'undefined' ||\r\n            typeof atom.subscript !== 'undefined')\r\n    ) {\r\n        // Move to the following atom\r\n        expr.index += 1;\r\n    } else {\r\n        atom = null;\r\n    }\r\n\r\n    // If this atom didn't have a sup/sub,\r\n    // is the following atom a subsup atom?\r\n    if (!atom) {\r\n        atom = expr.atoms[expr.index + 1];\r\n        if (\r\n            !atom ||\r\n            atom.type !== 'msubsup' ||\r\n            !(atom.superscript || atom.subscript)\r\n        ) {\r\n            atom = null;\r\n        } else {\r\n            // Yes. Skip the current atom and the supsub\r\n            expr.index += 2;\r\n        }\r\n    }\r\n\r\n    if (atom) {\r\n        if (typeof atom.subscript !== 'undefined') {\r\n            expr.ast.sub = parse(atom.subscript, options);\r\n        }\r\n        if (typeof atom.superscript !== 'undefined') {\r\n            if (atom.type === 'msubsup') {\r\n                if (/['\\u2032]|\\\\prime/.test(getString(atom.superscript))) {\r\n                    expr.index += 1;\r\n                    atom = expr.atoms[expr.index + 1];\r\n                    if (\r\n                        atom &&\r\n                        atom.type === 'msubsup' &&\r\n                        /['\\u2032]|\\\\prime/.test(getString(atom.superscript))\r\n                    ) {\r\n                        expr.ast.sup = { sym: '\\u2033' }; // DOUBLE-PRIME\r\n                    } else {\r\n                        expr.ast.sup = { sym: '\\u2032' }; // PRIME\r\n                        expr.index -= 1;\r\n                    }\r\n                } else if (\r\n                    /['\\u2033]|\\\\doubleprime/.test(getString(atom.superscript))\r\n                ) {\r\n                    expr.ast.sup = { sym: '\\u2033' }; // DOUBLE-PRIME\r\n                } else if (expr.ast) {\r\n                    expr.ast.sup = parse(atom.superscript, options);\r\n                }\r\n            } else {\r\n                expr.ast.sup = parse(atom.superscript, options);\r\n            }\r\n        }\r\n    } else {\r\n        // Didn't find a supsup either on this atom and there was no 'msubsup'\r\n        // Time to move on to the next atom.\r\n        expr.index += 1;\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n/**\r\n * Parse postfix operators, such as \"!\" (factorial)\r\n * @private\r\n */\r\nfunction parsePostfix(expr, options) {\r\n    const lhs = expr.ast;\r\n    if (nextIsDigraph(expr, '!!')) {\r\n        expr.index += 1;\r\n        expr.ast = wrapFn('factorial2', lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n        return expr;\r\n    }\r\n    if (nextIsDigraph(expr, '++')) {\r\n        expr.index += 1;\r\n        expr.ast = wrapFn('increment', lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n        return expr;\r\n    }\r\n    if (nextIsDigraph(expr, '--')) {\r\n        expr.index += 1;\r\n        expr.ast = wrapFn('decrement', lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n        return expr;\r\n    }\r\n    const atom = expr.atoms[expr.index];\r\n    if (atom?.symbol && POSTFIX_FUNCTION[atom.symbol]) {\r\n        expr.ast = wrapFn(POSTFIX_FUNCTION[atom.symbol], lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n    }\r\n    return expr;\r\n}\r\n\r\n/**\r\n * Delimiters can be expressed:\r\n * - as a matching pair of regular characters: '(a)'\r\n * - a as 'leftright' expression: '\\left(a\\right)'\r\n * - as a matching pair of 'sizeddelim': '\\Bigl(a\\Bigr)\r\n *\r\n * Note that the '\\delim' command is only used for delimiters in the middle\r\n * of a \\left\\right pair and not to represent pair-matched delimiters.\r\n *\r\n * This function handles all three cases\r\n */\r\nfunction parseDelim(\r\n    expr: ParseState,\r\n    ldelim,\r\n    rdelim,\r\n    options: MathJsonLatexOptions\r\n) {\r\n    expr.index = expr.index || 0;\r\n\r\n    if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) {\r\n        expr.ast = undefined;\r\n        return expr;\r\n    }\r\n\r\n    const savedPrec = expr.minPrec;\r\n    expr.minPrec = 0;\r\n    let atom = expr.atoms[expr.index];\r\n\r\n    if (!ldelim) {\r\n        // If we didn't expect a specific delimiter, parse any delimiter\r\n        // and return it as a function application\r\n        let pairedDelim = true;\r\n        if (atom.type === 'mopen') {\r\n            ldelim = atom.symbol;\r\n            rdelim = RIGHT_DELIM[ldelim];\r\n        } else if (atom.type === 'sizeddelim') {\r\n            ldelim = atom.delim;\r\n            rdelim = RIGHT_DELIM[ldelim];\r\n        } else if (atom.type === 'leftright') {\r\n            pairedDelim = false;\r\n            ldelim = atom.leftDelim;\r\n            rdelim = atom.rightDelim;\r\n            // If we have an unclosed smart fence, assume the right delim is\r\n            // matching the left delim\r\n            if (rdelim === '?') rdelim = RIGHT_DELIM[ldelim];\r\n        } else if (atom.type === 'textord') {\r\n            ldelim = atom.symbol;\r\n            rdelim = RIGHT_DELIM[ldelim];\r\n        }\r\n        if (ldelim && rdelim) {\r\n            if (ldelim === '|' && rdelim === '|') {\r\n                // Check if this could be a ||x|| instead of |x|\r\n                const atom = expr.atoms[expr.index + 1];\r\n                if (atom && atom.type === 'textord' && atom.symbol === '|') {\r\n                    // Yes, it's a ||x||\r\n                    ldelim = '\\\\lVert';\r\n                    rdelim = '\\\\rVert';\r\n                }\r\n            }\r\n            expr = parseDelim(expr, ldelim, rdelim, options);\r\n            if (expr) {\r\n                if (pairedDelim) expr.index += 1;\r\n                expr.ast = {\r\n                    fn: DELIM_FUNCTION[ldelim + rdelim] || ldelim + rdelim,\r\n                    arg: [expr.ast],\r\n                };\r\n                expr.minPrec = savedPrec;\r\n                return expr;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    if (atom.type === 'mopen' && getString(atom) === ldelim) {\r\n        expr.index += 1; // Skip the open delim\r\n        expr = parseExpression(expr, options);\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'mclose' && getString(atom) === rdelim) {\r\n            if (nextIsSupsub(expr)) {\r\n                // Wrap in a group if we have an upcoming superscript or subscript\r\n                expr.ast = { group: expr.ast };\r\n            }\r\n            expr = parseSupsub(expr, options);\r\n            expr = parsePostfix(expr, options);\r\n        } // TODO: else, syntax error?\r\n    } else if (atom.type === 'textord' && getString(atom) === ldelim) {\r\n        expr.index += 1; // Skip the open delim\r\n        expr = parseExpression(expr, options);\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'textord' && getString(atom) === rdelim) {\r\n            expr.index += 1;\r\n            expr = parseSupsub(expr, options);\r\n            expr = parsePostfix(expr, options);\r\n        } // TODO: else, syntax error?\r\n    } else if (\r\n        ldelim === '\\\\lVert' &&\r\n        atom.type === 'textord' &&\r\n        atom.symbol === '|'\r\n    ) {\r\n        atom = expr.atoms[expr.index + 1];\r\n        if (atom && atom.type === 'textord' && atom.symbol === '|') {\r\n            // This is an opening ||\r\n            expr.index += 2; // Skip the open delim\r\n            expr = parseExpression(expr, options);\r\n            atom = expr.atoms[expr.index];\r\n            const atom2 = expr.atoms[expr.index + 1];\r\n            if (\r\n                atom &&\r\n                atom.type === 'textord' &&\r\n                atom.symbol === '|' &&\r\n                atom2 &&\r\n                atom2.type === 'textord' &&\r\n                atom2.symbol === '|'\r\n            ) {\r\n                // This was a closing ||\r\n                expr.index += 2;\r\n                expr = parseSupsub(expr, options);\r\n                expr = parsePostfix(expr, options);\r\n            }\r\n        }\r\n    } else if (atom.type === 'sizeddelim' && atom.delim === ldelim) {\r\n        expr.index += 1; // Skip the open delim\r\n        expr = parseExpression(expr, options);\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'sizeddelim' && atom.delim === rdelim) {\r\n            expr.index += 1;\r\n            expr = parseSupsub(expr, options);\r\n            expr = parsePostfix(expr, options);\r\n        } // TODO: else, syntax error?\r\n    } else if (\r\n        atom.type === 'leftright' &&\r\n        atom.leftDelim === ldelim &&\r\n        (atom.rightDelim === '?' || atom.rightDelim === rdelim)\r\n    ) {\r\n        // This atom type includes the content of the parenthetical expression\r\n        // in its body\r\n        expr.ast = parse(atom.body as Atom[], options);\r\n        if (nextIsSupsub(expr)) {\r\n            // Wrap in a group if we have an upcoming superscript or subscript\r\n            expr.ast = { group: expr.ast };\r\n        }\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n    } else {\r\n        return undefined;\r\n    }\r\n\r\n    expr.minPrec = savedPrec;\r\n    return expr;\r\n}\r\n\r\nfunction nextIsDigraph(expr, digraph) {\r\n    expr.index = expr.index || 0;\r\n\r\n    if (expr.atoms.length <= 1 || expr.index >= expr.atoms.length - 1) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        digraph ===\r\n        getString(expr.atoms[expr.index]) +\r\n            getString(expr.atoms[expr.index + 1])\r\n    );\r\n}\r\n\r\n/**\r\n * Some symbols are made up of two consecutive characters.\r\n * Handle them here. Return undefined if not a digraph.\r\n * TODO: other digraphs:\r\n * :=\r\n * ++\r\n * **\r\n * =:\r\n * °C U+2103\r\n * °F U+2109\r\n * @private\r\n *\r\n */\r\nfunction parseDigraph(expr) {\r\n    expr.index = expr.index || 0;\r\n\r\n    if (expr.atoms.length <= 1 || expr.index >= expr.atoms.length - 1) {\r\n        return undefined;\r\n    }\r\n\r\n    if (isAtom(expr, 'textord', '\\\\nabla')) {\r\n        expr.index += 1;\r\n        if (isAtom(expr, 'mbin', '\\\\times')) {\r\n            expr.index += 1;\r\n            expr.ast = 'curl'; // divergence\r\n            return expr;\r\n        } else if (isAtom(expr, 'mbin', '\\\\cdot')) {\r\n            expr.index += 1;\r\n            expr.ast = 'div';\r\n            return expr;\r\n        }\r\n        expr.index -= 1;\r\n    } else {\r\n        const digraph =\r\n            expr.atoms[expr.index].symbol + expr.atoms[expr.index + 1].symbol;\r\n        const result = /^(>=|<=|>>|<<|:=|!=)$/.test(digraph) ? digraph : '';\r\n        if (result) {\r\n            expr.index += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nfunction parsePrimary(expr: ParseState, options: MathJsonLatexOptions) {\r\n    // <primary> := ('-'|'+) <primary> | <number> |\r\n    //              '(' <expression> ')' | <symbol> | <text> (<expression>)\r\n\r\n    expr.index = expr.index || 0;\r\n    expr.ast = undefined;\r\n\r\n    if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) {\r\n        return expr;\r\n    }\r\n\r\n    let atom = expr.atoms[expr.index];\r\n    if (atom.mode === 'text') {\r\n        let text = '';\r\n        while (\r\n            expr.atoms[expr.index] &&\r\n            expr.atoms[expr.index].mode === 'text'\r\n        ) {\r\n            text += expr.atoms[expr.index].body;\r\n            expr.index += 1;\r\n        }\r\n        expr.ast = { text: text };\r\n        return expr;\r\n    }\r\n\r\n    const val = getCanonicalName(getString(atom));\r\n\r\n    const digraph = parseDigraph(expr);\r\n    if (digraph) {\r\n        expr.ast = wrapFn(expr.ast, parsePrimary(expr, options).ast);\r\n    } else if (atom.type === 'root') {\r\n        expr.index = 0;\r\n        expr.atoms = atom.body as Atom[];\r\n        return parsePrimary(expr, options);\r\n    } else if (atom.type === 'mbin' && val === '-') {\r\n        // Prefix - sign\r\n        expr.index += 1; // Skip the '-' symbol\r\n        expr = parsePrimary(expr, options);\r\n        expr.ast = negate(expr.ast);\r\n    } else if (atom.type === 'mbin' && val === '+') {\r\n        // Prefix + sign\r\n        expr.index += 1; // Skip the '+' symbol\r\n        expr = parsePrimary(expr, options);\r\n        expr.ast = wrapFn('add', expr.ast);\r\n    } else if (atom.type === 'mord' && /^[0-9.]$/.test(atom.symbol)) {\r\n        // Looks like a number\r\n        let num = '';\r\n        let done = false;\r\n        let pat = /^[0-9.eEdD]$/;\r\n        while (\r\n            expr.index < expr.atoms.length &&\r\n            !done &&\r\n            (isAtom(expr, 'spacing') ||\r\n                ((isAtom(expr, 'mord') ||\r\n                    isAtom(expr, 'mpunct', ',') ||\r\n                    isAtom(expr, 'mbin')) &&\r\n                    pat.test(expr.atoms[expr.index].symbol)))\r\n        ) {\r\n            if (expr.atoms[expr.index].type === 'spacing') {\r\n                expr.index += 1;\r\n            } else if (\r\n                typeof expr.atoms[expr.index].superscript !== 'undefined' ||\r\n                typeof expr.atoms[expr.index].subscript !== 'undefined'\r\n            ) {\r\n                done = true;\r\n            } else {\r\n                let digit = expr.atoms[expr.index].symbol;\r\n                if (digit === 'd' || digit === 'D') {\r\n                    digit = 'e';\r\n                    pat = /^[0-9+-.]$/;\r\n                } else if (digit === 'e' || digit === 'E') {\r\n                    if (nextIsSupsub(expr)) {\r\n                        digit = '';\r\n                        expr.index -= 1;\r\n                        done = true;\r\n                    } else {\r\n                        digit = 'E';\r\n                        pat = /^[0-9+-.]$/;\r\n                    }\r\n                } else if (pat === /^[0-9+-.]$/) {\r\n                    pat = /^[0-9]$/;\r\n                }\r\n                num += digit === ',' ? '' : digit;\r\n                expr.index += 1;\r\n            }\r\n        }\r\n        expr.ast = num ? wrapNum(num) : undefined;\r\n\r\n        // This was a number. Is it followed by a fraction, e.g. 2 1/2\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'genfrac' && !isNaN(expr.ast.num)) {\r\n            // Add an invisible plus, i.e. 2 1/2 = 2 + 1/2\r\n            const lhs = expr.ast;\r\n            expr = parsePrimary(expr, options);\r\n            expr.ast = wrapFn('add', lhs, expr.ast);\r\n        }\r\n        if (\r\n            atom &&\r\n            atom.type === 'group' &&\r\n            atom.symbol &&\r\n            atom.symbol.startsWith('\\\\nicefrac')\r\n        ) {\r\n            // \\nicefrac macro, add an invisible plus\r\n            const lhs = expr.ast;\r\n            expr = parsePrimary(expr, options);\r\n            expr.ast = wrapFn('add', lhs, expr.ast);\r\n        }\r\n        if (atom && atom.type === 'msubsup') {\r\n            expr = parseSupsub(expr, options);\r\n        }\r\n        expr = parsePostfix(expr, options);\r\n    } else if (atom.type === 'genfrac' || atom.type === 'surd') {\r\n        // A fraction or a square/cube root\r\n        expr.ast = atomToMathJson(atom, options);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n    } else if (atom.type === 'mord' || atom.type === 'mbin') {\r\n        // A 'mord' but not a number: either an identifier ('x') or\r\n        // a function ('\\\\Zeta')\r\n        if (isFunction(val) && !isOperator(atom)) {\r\n            // A function\r\n            expr.ast = { fn: val };\r\n            expr = parseSupsub(expr, options);\r\n\r\n            const fn = expr.ast;\r\n            const arg = parsePrimary(expr, options).ast;\r\n            if (arg && /^(list0|list|list2)$/.test(arg.fn)) {\r\n                fn.arg = arg.arg;\r\n            } else if (arg) {\r\n                fn.arg = [arg];\r\n            }\r\n            expr.ast = fn;\r\n        } else {\r\n            // An identifier\r\n            expr.ast = atomToMathJson(atom, options);\r\n            if (expr.ast.sym === 'ⅈ') {\r\n                // It's 'i', the imaginary unit\r\n                expr.ast = wrapNum({ im: '1' });\r\n            }\r\n            expr = parseSupsub(expr, options);\r\n        }\r\n        expr = parsePostfix(expr, options);\r\n    } else if (atom.type === 'textord') {\r\n        // Note that 'textord' can also be operators, and are handled as such\r\n        // in parseExpression()\r\n        if (!isOperator(atom)) {\r\n            // This doesn't look like a textord operator\r\n            if (!RIGHT_DELIM[atom.symbol || (atom.body as string)]) {\r\n                // Not an operator, not a fence, it's a symbol or a function\r\n                if (isFunction(val)) {\r\n                    // It's a function\r\n                    expr.ast = { fn: val };\r\n                    expr = parseSupsub(expr, options);\r\n\r\n                    const fn = expr.ast;\r\n                    expr.index += 1; // Skip the function name\r\n                    fn.arg = [parsePrimary(expr, options).ast];\r\n                    expr.ast = fn;\r\n\r\n                    expr = parsePostfix(expr, options);\r\n                } else {\r\n                    // It was a symbol...\r\n                    expr.ast = atomToMathJson(atom, options);\r\n                    if (typeof atom.superscript === 'undefined') {\r\n                        expr.index += 1;\r\n                    }\r\n                    expr = parseSupsub(expr, options);\r\n                    expr = parsePostfix(expr, options);\r\n                }\r\n            }\r\n        }\r\n    } else if (atom.type === 'mop') {\r\n        // Could be a function or an operator.\r\n        if (\r\n            (/^\\\\(mathop|operatorname|operatorname\\*)/.test(atom.symbol) ||\r\n                isFunction(val)) &&\r\n            !isOperator(atom)\r\n        ) {\r\n            expr.ast = {\r\n                fn: /^\\\\(mathop|operatorname|operatorname\\*)/.test(atom.symbol)\r\n                    ? getString(atom.body)\r\n                    : val,\r\n            };\r\n            expr = parseSupsub(expr, options);\r\n\r\n            if (hasSup(expr.ast)) {\r\n                // There was an exponent with the function.\r\n                // This may be an inverse function\r\n                const INVERSE_FUNCTION = {\r\n                    sin: 'arcsin',\r\n                    cos: 'arccos',\r\n                    tan: 'arctan',\r\n                    cot: 'arccot',\r\n                    sec: 'arcsec',\r\n                    csc: 'arccsc',\r\n                    sinh: 'arsinh',\r\n                    cosh: 'arcosh',\r\n                    tanh: 'artanh',\r\n                    csch: 'arcsch',\r\n                    sech: 'arsech',\r\n                    coth: 'arcoth',\r\n                };\r\n                if (\r\n                    asMachineNumber(expr.ast.sup) === -1 &&\r\n                    INVERSE_FUNCTION[val]\r\n                ) {\r\n                    expr.ast = wrapFn(\r\n                        INVERSE_FUNCTION[val],\r\n                        parsePrimary(expr, options).ast\r\n                    );\r\n                } else {\r\n                    // Keep the exponent, add the argument\r\n                    const fn = expr.ast;\r\n                    fn.arg = [parsePrimary(expr, options).ast];\r\n                    expr.ast = fn;\r\n                }\r\n            } else {\r\n                const fn = expr.ast;\r\n                const arg = parsePrimary(expr, options).ast;\r\n                if (arg && /^(list0|list|list2)$/.test(arg.fn)) {\r\n                    fn.arg = arg.arg;\r\n                } else if (arg) {\r\n                    fn.arg = [arg];\r\n                }\r\n\r\n                expr.ast = fn;\r\n            }\r\n        }\r\n    } else if (atom.type === 'array') {\r\n        expr.index += 1;\r\n        expr.ast = atomToMathJson(atom, options);\r\n    } else if (atom.type === 'group') {\r\n        expr.index += 1;\r\n        expr.ast = atomToMathJson(atom, options);\r\n    } else if (atom.type === 'mclose') {\r\n        return expr;\r\n    } else if (atom.type === 'error') {\r\n        expr.index += 1;\r\n        expr.ast = { error: atom.symbol };\r\n        return expr;\r\n    }\r\n\r\n    if (expr.ast === undefined) {\r\n        // Parse either a group of paren, and return their content as the result\r\n        // or a pair of delimiters, and return them as a function applied\r\n        // to their content, i.e. \"|x|\" -> {fn: \"||\", arg: \"x\"}\r\n        const delim =\r\n            parseDelim(expr, '(', ')', options) ||\r\n            parseDelim(expr, null, null, options);\r\n        if (delim) {\r\n            expr = delim;\r\n        } else if (!isOperator(atom)) {\r\n            // This is not an operator (if it is, it may be an operator\r\n            // dealing with an empty lhs. It's possible.\r\n            // Couldn't interpret the expression. Output an error.\r\n            if (atom.type === 'placeholder') {\r\n                // Default value for a placeholder is 0\r\n                // (except for the denominator of a 'genfrac')\r\n                expr.ast = wrapNum(0);\r\n            } else {\r\n                expr.ast = { text: '?' };\r\n                expr.ast.error = 'Unexpected token ' + \"'\" + atom.type + \"'\";\r\n                if (atom.latex) {\r\n                    expr.ast.latex = atom.latex;\r\n                } else if (atom.body && atom.toLatex) {\r\n                    expr.ast.latex = atom.toLatex();\r\n                }\r\n            }\r\n            expr.index += 1; // Skip the unexpected token, and attempt to continue\r\n        }\r\n    }\r\n\r\n    atom = expr.atoms[expr.index];\r\n    if (\r\n        atom &&\r\n        (atom.type === 'mord' ||\r\n            atom.type === 'surd' ||\r\n            atom.type === 'mop' ||\r\n            atom.type === 'mopen' ||\r\n            atom.type === 'sizeddelim' ||\r\n            atom.type === 'leftright')\r\n    ) {\r\n        if (atom.type === 'sizeddelim') {\r\n            for (const d in RIGHT_DELIM) {\r\n                if (atom.delim === RIGHT_DELIM[d]) {\r\n                    // This is (most likely) a closing delim, exit.\r\n                    // There are ambiguous cases, for example |x|y|z|.\r\n                    expr.index += 1;\r\n                    return expr;\r\n                }\r\n            }\r\n        }\r\n        if ((atom.type === 'mord' || atom.type === 'mop') && isOperator(atom)) {\r\n            // It's actually an operator\r\n            return expr;\r\n        }\r\n        const lhs = expr.ast;\r\n        expr.ast = {};\r\n        expr = parsePrimary(expr, options);\r\n        if (expr?.ast && lhs) {\r\n            if (\r\n                (isFunction(lhs.fn) && typeof lhs.arg === 'undefined') ||\r\n                (isArray(lhs.arg) && lhs.arg.length === 0)\r\n            ) {\r\n                // A function with no arguments followed by a list ->\r\n                // the list becomes the argument to the function\r\n                if (expr.ast.fn === 'list2' || expr.ast.fn === 'list') {\r\n                    expr.ast = wrapFn(lhs.fn, expr.ast.arg);\r\n                } else {\r\n                    // A function \"f(x)\" or \"√x\" followed by something else:\r\n                    // implicit multiply\r\n                    expr.ast = wrapFn('multiply', lhs, expr.ast);\r\n                }\r\n            } else {\r\n                // Invisible times, e.g. '2x'\r\n                if (expr.ast.fn === 'multiply') {\r\n                    expr.ast.arg.unshift(lhs);\r\n                } else if (\r\n                    numberIm(lhs) === 0 &&\r\n                    numberRe(lhs) !== 0 &&\r\n                    numberIm(expr.ast) === 1 &&\r\n                    numberRe(expr.ast) === 0\r\n                ) {\r\n                    // Imaginary number, i.e. \"3i\"\r\n                    expr.ast = wrapNum({ im: numberRe(lhs).toString() });\r\n                } else {\r\n                    expr.ast = wrapFn('multiply', lhs, expr.ast);\r\n                }\r\n            }\r\n        } else {\r\n            expr.ast = lhs;\r\n        }\r\n    }\r\n\r\n    return expr;\r\n}\r\n\r\n/**\r\n * Given an atom or an array of atoms, return their AST representation as\r\n * an object.\r\n * @param {object} expr An expressions, including expr.atoms, expr.index,\r\n * expr.minPrec the minimum precedence that this parser should parse\r\n * before returning; expr.lhs (optional); expr.ast, the resulting AST.\r\n * @return {object} the expr object, updated\r\n * @private\r\n */\r\nfunction parseExpression(expr, options) {\r\n    expr.index = expr.index || 0;\r\n    expr.ast = undefined;\r\n    if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) return expr;\r\n    expr.minPrec = expr.minPrec || 0;\r\n\r\n    let lhs = parsePrimary(expr, options).ast;\r\n\r\n    let done = false;\r\n    const minPrec = expr.minPrec;\r\n    while (!done) {\r\n        const atom = expr.atoms[expr.index];\r\n        const digraph = parseDigraph(expr);\r\n        done = !atom || atom.mode === 'text' || (!digraph && !isOperator(atom));\r\n        let prec, assoc;\r\n        if (!done) {\r\n            [prec, assoc] = digraph\r\n                ? [getPrecedence(digraph), getAssociativity(digraph)]\r\n                : opPrec(atom);\r\n            done = prec < minPrec;\r\n        }\r\n        if (!done) {\r\n            const opName = digraph || getCanonicalName(getString(atom));\r\n            if (assoc === 'left') {\r\n                expr.minPrec = prec + 1;\r\n            } else {\r\n                expr.minPrec = prec;\r\n            }\r\n            expr.index += 1;\r\n            if (opName === '|') {\r\n                if (\r\n                    typeof atom.subscript !== 'undefined' ||\r\n                    (expr.atoms[expr.index] &&\r\n                        typeof expr.atoms[expr.index].subscript !==\r\n                            'undefined' &&\r\n                        expr.atoms[expr.index].type === 'msubsup')\r\n                ) {\r\n                    // Bind is a special function. It doesn't have a rhs, and\r\n                    // its argument is a subscript.\r\n                    expr.ast = {};\r\n                    const subArg = parseSupsub(expr, options).ast.sub;\r\n                    lhs = wrapFn('bind', lhs);\r\n                    if (subArg && subArg.fn === 'equal' && lhs.arg) {\r\n                        // This is a subscript of the form \"x=...\"\r\n                        lhs.arg.push(getArg(subArg, 0));\r\n                        lhs.arg.push(getArg(subArg, 1));\r\n                    } else if (\r\n                        subArg &&\r\n                        lhs.arg &&\r\n                        (subArg.fn === 'list' || subArg.fn === 'list2')\r\n                    ) {\r\n                        // Form: \"x=0;n=3;z=5\"\r\n                        let currentSym = { sym: 'x' };\r\n                        for (let i = 0; i < subArg.arg.length; i++) {\r\n                            if (subArg.arg[i].fn === 'equal') {\r\n                                currentSym = getArg(subArg.arg[i], 0);\r\n                                lhs.arg.push(currentSym);\r\n                                lhs.arg.push(getArg(subArg.arg[i], 1));\r\n                            } else {\r\n                                lhs.arg.push(currentSym);\r\n                                lhs.arg.push(subArg.arg[i]);\r\n                            }\r\n                        }\r\n                    } else if (subArg) {\r\n                        // Default identifier if none provided\r\n                        lhs.arg.push({ sym: 'x' });\r\n                        lhs.arg.push(subArg);\r\n                    }\r\n                } else {\r\n                    // That was a \"|\", but not with a subscript after, so\r\n                    // it's the end of the expression, might be a right fence.\r\n                    done = true;\r\n                }\r\n            } else {\r\n                const rhs = parseExpression(expr, options).ast;\r\n\r\n                // Some operators (',' and ';' for example) convert into a function\r\n                // even if there's only two arguments. They're super associative...\r\n                let fn = SUPER_ASSOCIATIVE_FUNCTION[opName];\r\n                if (fn && lhs && lhs.fn !== fn) {\r\n                    // Only promote them if the lhs is not already the same function.\r\n                    // If it is, we'll combine it below.\r\n                    lhs = wrapFn(fn, lhs);\r\n                }\r\n\r\n                // Promote subtraction to an addition\r\n                if (opName === '-') {\r\n                    if (lhs?.arg && lhs.fn === 'add') {\r\n                        // add(x,y) - z -> add(x, y, -z)\r\n                        if (rhs !== undefined) lhs.arg.push(negate(rhs));\r\n                    } else if (lhs && lhs.fn === 'subtract') {\r\n                        // x-y - z      -> add(x, -y, -z)\r\n                        lhs = wrapFn(\r\n                            'add',\r\n                            getArg(lhs, 0),\r\n                            negate(getArg(lhs, 1)),\r\n                            negate(rhs)\r\n                        );\r\n                    } else if (\r\n                        isNumber(lhs) &&\r\n                        !hasSup(lhs) &&\r\n                        isNumber(rhs) &&\r\n                        !hasSup(rhs) &&\r\n                        (typeof rhs.num.re === 'undefined' ||\r\n                            rhs.num.re === '0') &&\r\n                        typeof rhs.num.im !== 'undefined'\r\n                    ) {\r\n                        lhs = {\r\n                            num: {\r\n                                re: lhs.num,\r\n                                im: (-parseFloat(rhs.num.im)).toString(),\r\n                            },\r\n                        };\r\n                    } else {\r\n                        lhs = wrapFn('subtract', lhs, rhs);\r\n                    }\r\n                } else {\r\n                    // Is there a function (e.g. 'add') implementing the\r\n                    // associative version of this operator (e.g. '+')?\r\n                    fn = ASSOCIATIVE_FUNCTION[opName];\r\n                    if (fn === 'add' && lhs && lhs.fn === 'subtract') {\r\n                        // subtract(x, y) + z -> add(x, -y, z)\r\n                        lhs = wrapFn(\r\n                            'add',\r\n                            getArg(lhs, 0),\r\n                            negate(getArg(lhs, 1)),\r\n                            rhs\r\n                        );\r\n                    } else if (fn && lhs && lhs.fn === fn && !hasSup(lhs)) {\r\n                        // add(x,y) + z -> add(x, y, z)\r\n                        if (typeof rhs !== 'undefined') {\r\n                            if (rhs.fn === fn && !hasSup(rhs) && rhs.arg) {\r\n                                // add(x, y) = add (a, b)\r\n                                lhs.arg = [...lhs.arg, ...rhs.arg];\r\n                            } else if (lhs.arg) {\r\n                                lhs.arg.push(rhs);\r\n                            }\r\n                        }\r\n                    } else if (fn && rhs && rhs.arg && rhs.fn === fn) {\r\n                        // x =    y = z -> equal(x, y, z)\r\n                        rhs.arg.unshift(lhs);\r\n                        lhs = rhs;\r\n                    } else if (\r\n                        fn === 'multiply' &&\r\n                        isNumber(lhs) &&\r\n                        !hasSup(lhs) &&\r\n                        rhs &&\r\n                        asMachineNumber(rhs) === 10 &&\r\n                        isNumber(rhs.sup)\r\n                    ) {\r\n                        // n * 10^m\r\n                        lhs = wrapNum(\r\n                            asMachineNumber(lhs) *\r\n                                Math.pow(10, asMachineNumber(rhs.sup))\r\n                        );\r\n                    } else if (\r\n                        fn === 'add' &&\r\n                        isNumber(lhs) &&\r\n                        !hasSup(lhs) &&\r\n                        rhs &&\r\n                        numberIm(rhs) !== 0 &&\r\n                        !hasSup(rhs)\r\n                    ) {\r\n                        lhs = {\r\n                            num: {\r\n                                re: lhs.num,\r\n                                im: rhs.num.im,\r\n                            },\r\n                        };\r\n                    } else {\r\n                        lhs = wrapFn(fn || OP_NAME[opName] || opName, lhs, rhs);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    expr.ast = lhs;\r\n    return expr;\r\n}\r\n\r\n/**\r\n * Return a string escaped as necessary to comply with the JSON format\r\n * @param {string} s\r\n * @return {string}\r\n * @private\r\n */\r\nfunction escapeText(s) {\r\n    return s\r\n        .replace(/[\\\\]/g, '\\\\\\\\')\r\n        .replace(/[\"]/g, '\\\\\"')\r\n        .replace(/[\\b]/g, '\\\\b')\r\n        .replace(/[\\f]/g, '\\\\f')\r\n        .replace(/[\\n]/g, '\\\\n')\r\n        .replace(/[\\r]/g, '\\\\r')\r\n        .replace(/[\\t]/g, '\\\\t');\r\n}\r\n\r\n/**\r\n * Return an AST representation of a single atom\r\n *\r\n */\r\nexport function atomToMathJson(atom: Atom, options): MathJson {\r\n    const MATH_VARIANTS = {\r\n        'double-struck': 'double-struck',\r\n        calligraphic: 'script',\r\n        script: 'script',\r\n        fraktur: 'fraktur',\r\n        'sans-serif': 'sans-serif',\r\n        monospace: 'monospace',\r\n    };\r\n    // TODO: See https://www.w3.org/TR/MathML2/chapter6.html#chars.letter-like-tables\r\n\r\n    let result: MathJsonExpression = {};\r\n    let sym = '';\r\n    let m;\r\n    let lhs, rhs;\r\n    let variant =\r\n        MATH_VARIANTS[\r\n            atom.variant +\r\n                (!atom.variantStyle || atom.variantStyle === 'up'\r\n                    ? ''\r\n                    : '-' + atom.variantStyle)\r\n        ];\r\n    let variantSym;\r\n\r\n    let style = '';\r\n    if (atom.fontSeries === 'b') style += 'bold';\r\n    if (atom.fontShape === 'it') style += 'italic';\r\n\r\n    const command = atom.symbol;\r\n    switch (atom.type) {\r\n        case 'root':\r\n        case 'group':\r\n            // Macros appear as group as well. Handle some of them.\r\n            if (atom.symbol && atom.symbol.startsWith('\\\\nicefrac')) {\r\n                m = atom.symbol.slice(9).match(/({.*}|[^}])({.*}|[^}])/);\r\n                if (m) {\r\n                    if (m[1].length === 1) {\r\n                        lhs = m[1];\r\n                    } else {\r\n                        lhs = m[1].substr(1, m[1].length - 2);\r\n                    }\r\n                    lhs = parseString(lhs, 'math', null, options.macros);\r\n\r\n                    if (m[2].length === 1) {\r\n                        rhs = m[2];\r\n                    } else {\r\n                        rhs = m[2].substr(1, m[2].length - 2);\r\n                    }\r\n                    rhs = parseString(rhs, 'math', null, options.macros);\r\n\r\n                    result = wrapFn(\r\n                        'divide',\r\n                        parse(lhs, options),\r\n                        parse(rhs, options)\r\n                    );\r\n                } else {\r\n                    result = { fn: 'divide' };\r\n                }\r\n            } else {\r\n                result = { group: parse(atom.body as Atom[], options) };\r\n            }\r\n            break;\r\n\r\n        case 'genfrac':\r\n            // If there's no denominator, or a placeholder, use \"1\" as the value\r\n            result = wrapFn(\r\n                'divide',\r\n                parse(atom.numer, options),\r\n                atom.denom &&\r\n                    atom.denom[0] &&\r\n                    atom.denom[0].type === 'placeholder'\r\n                    ? wrapNum(1)\r\n                    : parse(atom.denom, options)\r\n            );\r\n            break;\r\n\r\n        case 'surd':\r\n            if (atom.index) {\r\n                result = wrapFn(\r\n                    'pow',\r\n                    parse(atom.body as Atom[], options),\r\n                    wrapFn('divide', wrapNum(1), parse(atom.index, options))\r\n                );\r\n            } else {\r\n                result = wrapFn('sqrt', parse(atom.body as Atom[], options));\r\n            }\r\n            break;\r\n\r\n        case 'rule':\r\n            break;\r\n\r\n        // case 'line':\r\n        case 'overlap':\r\n            // case 'accent':\r\n            break;\r\n\r\n        case 'overunder':\r\n            break;\r\n\r\n        case 'mord':\r\n        case 'textord':\r\n        case 'mbin':\r\n            // Check to see if it's a \\char command\r\n            m = !command\r\n                ? undefined\r\n                : command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/);\r\n            if (m) {\r\n                sym = String.fromCodePoint(parseInt(m[1], 16));\r\n            } else {\r\n                sym = getCanonicalName(getString(atom));\r\n                if (sym.length > 0 && sym.charAt(0) === '\\\\') {\r\n                    // This is an identifier with no special handling.\r\n                    // Use the Unicode value if outside ASCII range\r\n                    if (typeof atom.body === 'string') {\r\n                        // TODO: consider making this an option?\r\n                        // if (atom.body.charCodeAt(0) > 255) {\r\n                        //     sym = '&#x' + ('000000' +\r\n                        //         atom.body.charCodeAt(0).toString(16)).substr(-4) + ';';\r\n                        // } else {\r\n                        sym = atom.body;\r\n                        // }\r\n                    }\r\n                }\r\n            }\r\n            variantSym = escapeText(mathVariantToUnicode(sym, variant, style));\r\n            if (variantSym !== sym) {\r\n                // If there's a specific Unicode character matching this one\r\n                // no need to record a variant.\r\n                result = { sym: variantSym };\r\n                variant = 'normal';\r\n            } else {\r\n                result = { sym: sym };\r\n            }\r\n            break;\r\n\r\n        // case 'mpunct':\r\n        //     result = '<mo separator=\"true\">' + command + '</mo>';\r\n        //     break;\r\n\r\n        case 'minner':\r\n            break;\r\n\r\n        case 'mop':\r\n            break;\r\n\r\n        case 'box':\r\n            result = parse(atom.body as Atom[], options);\r\n            break;\r\n\r\n        case 'enclose':\r\n            // result = '<menclose notation=\"';\r\n            // for (const notation in atom.notation) {\r\n            //     if (Object.prototype.hasOwnProperty.call(atom.notation, notation) &&\r\n            //         atom.notation[notation]) {\r\n            //         result += sep + notation;\r\n            //         sep = ' ';\r\n            //     }\r\n            // }\r\n            // result += '\">' + toAST(atom.body).mathML + '</menclose>';\r\n            break;\r\n\r\n        case 'array':\r\n            if (atom.env.name === 'cardinality') {\r\n                // @revisit... It's an environment, but not an array...?\r\n                result = wrapFn(\r\n                    'card',\r\n                    parse((atom.array as unknown) as Atom[], options)\r\n                );\r\n            } else if (/array|matrix|pmatrix|bmatrix/.test(atom.env.name)) {\r\n                result = { fn: 'array', args: [] };\r\n                for (const row of atom.array) {\r\n                    result.args.push(row.map((cell) => parse(cell, options)));\r\n                }\r\n            } else if (atom.env.name === 'cases') {\r\n                result = { fn: 'cases', args: [] };\r\n                for (const row of atom.array) {\r\n                    if (row[0]) {\r\n                        const statement = [];\r\n                        statement.push(parse(row[0], options));\r\n                        let condition = parse(row[1], options);\r\n                        if (condition) {\r\n                            if (condition.fn === 'text' && condition.arg) {\r\n                                if (\r\n                                    /^(if|when|for)$/i.test(\r\n                                        condition.arg[0].trim()\r\n                                    )\r\n                                ) {\r\n                                    condition = condition.arg.filter(\r\n                                        (x) => typeof x !== 'string'\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        statement.push(condition || {});\r\n                        result.args.push(statement);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        case 'spacing':\r\n        case 'space':\r\n        case 'mathstyle':\r\n            break;\r\n        default:\r\n            result = undefined;\r\n            console.warn(\r\n                'Unhandled atom \"' +\r\n                    atom.type +\r\n                    '\" in \"' +\r\n                    (atom.symbol || atom.body) +\r\n                    '\"'\r\n            );\r\n    }\r\n\r\n    if (result && variant && variant !== 'normal') {\r\n        result.variant = variant;\r\n    }\r\n\r\n    if (result && typeof atom.cssClass === 'string') {\r\n        result.class = atom.cssClass;\r\n    }\r\n    if (result && typeof atom.cssId === 'string') {\r\n        result.id = atom.cssId;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction filterPresentationAtoms(\r\n    atoms: Atom | Atom[] | Atom[][] | Atom[][][]\r\n): Atom[] {\r\n    if (!atoms) return [];\r\n    let result;\r\n    if (isArray(atoms)) {\r\n        result = [];\r\n        for (const atom of atoms) {\r\n            const filter = filterPresentationAtoms(atom);\r\n            result = result.concat(filter);\r\n        }\r\n    } else {\r\n        if (atoms.type === 'spacing' || atoms.type === 'first') {\r\n            return [];\r\n        } else if (atoms.type === 'box') {\r\n            result = filterPresentationAtoms(atoms.body as Atom[]);\r\n        } else {\r\n            if (atoms.body && isArray(atoms.body)) {\r\n                atoms.body = filterPresentationAtoms(atoms.body);\r\n            }\r\n            if (atoms.superscript && isArray(atoms.superscript)) {\r\n                atoms.superscript = filterPresentationAtoms(atoms.superscript);\r\n            }\r\n            if (atoms.subscript && isArray(atoms.subscript)) {\r\n                atoms.subscript = filterPresentationAtoms(atoms.subscript);\r\n            }\r\n            if (atoms.index && isArray(atoms.index)) {\r\n                atoms.index = filterPresentationAtoms(atoms.index);\r\n            }\r\n            if (atoms.denom && isArray(atoms.denom)) {\r\n                atoms.denom = filterPresentationAtoms(atoms.denom);\r\n            }\r\n            if (atoms.numer && isArray(atoms.numer)) {\r\n                atoms.numer = filterPresentationAtoms(atoms.numer);\r\n            }\r\n            if (atoms.array && isArray(atoms.array)) {\r\n                atoms.array = atoms.array.map((row) =>\r\n                    row.map((cell) => filterPresentationAtoms(cell))\r\n                );\r\n            }\r\n            result = [atoms];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Parse a sequence of text zone and math zones:\r\n * <sentence> := ((<text>) <expression>)+\r\n */\r\nfunction parseSentence(\r\n    expr: ParseState,\r\n    options: MathJsonLatexOptions\r\n): MathJson {\r\n    expr.index = expr.index || 0;\r\n    expr.ast = undefined;\r\n\r\n    const zones = [];\r\n    // Iterate while we have atoms to look at\r\n    while (expr.atoms[expr.index]) {\r\n        if (expr.atoms[expr.index].mode === 'text') {\r\n            // Text mode atom...\r\n            let text = '';\r\n            while (\r\n                expr.atoms[expr.index] &&\r\n                expr.atoms[expr.index].mode === 'text'\r\n            ) {\r\n                text += expr.atoms[expr.index].body;\r\n                expr.index += 1;\r\n            }\r\n            zones.push(wrapFn('text', text));\r\n        } else {\r\n            const z = parseExpression(expr, options).ast;\r\n            // Something went wrong in parsing the expression...\r\n            if (!z) return undefined;\r\n            zones.push(z);\r\n        }\r\n    }\r\n\r\n    if (zones.length > 1) {\r\n        return wrapFn('sequence', ...zones);\r\n    }\r\n\r\n    return zones[0] || undefined;\r\n}\r\n\r\nfunction parse(atoms: Atom | Atom[], options: MathJsonLatexOptions) {\r\n    return parseSentence({ atoms: filterPresentationAtoms(atoms) }, options);\r\n}\r\n\r\nexport function atomtoMathJson(atoms: Atom | Atom[], options) {\r\n    return parse(atoms, options);\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} fence - The fence to wrap around the arguments\r\n * @return {string} - A string wrapped in the fence\r\n */\r\nfunction wrapFence(fence: string, ...args): string {\r\n    fence = fence || '.. ';\r\n    let result = '';\r\n    if (args.length > 0) {\r\n        if (fence[0] !== '.') result += fence[0];\r\n        let sep = '';\r\n        for (const arg of args) {\r\n            result += sep + arg;\r\n            sep = fence[2];\r\n        }\r\n        if (fence[1] !== '.') result += fence[1];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return a formatted mantissa:\r\n * 1234567 -> 123 456 7...\r\n * 1233333 -> 12(3)\r\n * @param {string} m\r\n * @param {Object.<string, any>} config\r\n * @private\r\n */\r\nfunction formatMantissa(m, config) {\r\n    const originalLength = m.length;\r\n    // The last digit may have been rounded, if it exceeds the precison,\r\n    // which could throw off the\r\n    // repeating pattern detection. Ignore   it.\r\n    m = m.substr(0, config.precision - 2);\r\n\r\n    for (let i = 0; i < m.length - 16; i++) {\r\n        // Offset is the part of the mantissa that is not repeating\r\n        const offset = m.substr(0, i);\r\n        // Try to find a repeating pattern of length j\r\n        for (let j = 0; j < 17; j++) {\r\n            const cycle = m.substr(i, j + 1);\r\n            const times = Math.floor((m.length - offset.length) / cycle.length);\r\n            if (times > 1) {\r\n                if ((offset + cycle.repeat(times + 1)).startsWith(m)) {\r\n                    // We've found a repeating pattern!\r\n                    if (cycle === '0') {\r\n                        return offset.replace(\r\n                            /(\\d{3})/g,\r\n                            '$1' + config.groupSeparator\r\n                        );\r\n                    }\r\n                    return (\r\n                        offset.replace(\r\n                            /(\\d{3})/g,\r\n                            '$1' + config.groupSeparator\r\n                        ) +\r\n                        config.beginRepeatingDigits +\r\n                        cycle.replace(\r\n                            /(\\d{3})/g,\r\n                            '$1' + config.groupSeparator\r\n                        ) +\r\n                        config.endRepeatingDigits\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (originalLength !== m.length) {\r\n        m += '\\\\ldots';\r\n    }\r\n    return m.replace(/(\\d{3})/g, '$1' + config.groupSeparator);\r\n}\r\n\r\nfunction parseFloatToPrecision(num) {\r\n    return parseFloat(parseFloat(num).toPrecision(15));\r\n}\r\n\r\n/**\r\n *\r\n * @param num - A number, represented as a string (e.g. \"-12.45\"\r\n *  particularly useful for arbitrary precision numbers) or a number (-12.45)\r\n * @return A LaTeX representation of the AST\r\n */\r\nfunction numberAsLatex(\r\n    num: string | number,\r\n    config: MathJsonLatexOptions\r\n): string {\r\n    let result = '';\r\n    let value: number;\r\n\r\n    if (typeof config.precision === 'number') {\r\n        if (typeof num === 'number') {\r\n            value = parseFloatToPrecision(num);\r\n        } else {\r\n            let sign = '';\r\n            let exponent = '';\r\n            if (num[0] === '-') {\r\n                sign = '-';\r\n                num = num.substr(1);\r\n            } else if (num[0] === '+') {\r\n                num = num.substr(1);\r\n            }\r\n            if (num.indexOf('.') >= 0) {\r\n                const m = num.match(/(\\d*).(\\d*)([e|E]([-+]?[0-9]*))?/);\r\n                const base = m[1];\r\n                const mantissa = m[2].substring(\r\n                    0,\r\n                    Math.min(config.precision - base.length, m[2].length)\r\n                );\r\n                exponent = m[4] || '';\r\n\r\n                if (base === '0') {\r\n                    let p = 0; // Index of the first non-zero digit after the decimal\r\n                    while (mantissa[p] === '0' && p < mantissa.length) {\r\n                        p += 1;\r\n                    }\r\n                    let r = '';\r\n                    if (p <= 4) {\r\n                        r = '0' + config.decimalMarker;\r\n                        r += mantissa.substr(0, p);\r\n                        r += formatMantissa(num.substr(r.length), config);\r\n                    } else if (p + 1 >= config.precision) {\r\n                        r = '0';\r\n                        sign = '';\r\n                    } else {\r\n                        r = num[p];\r\n                        const f = formatMantissa(num.substr(p + 1), config);\r\n                        if (f) {\r\n                            r += config.decimalMarker + f;\r\n                        }\r\n                    }\r\n                    if (r !== '0') {\r\n                        if (\r\n                            num.length - 1 > config.precision &&\r\n                            !r.endsWith('}') &&\r\n                            !r.endsWith('\\\\ldots')\r\n                        ) {\r\n                            r += '\\\\ldots';\r\n                        }\r\n                        if (p > 4) {\r\n                            r += config.exponentProduct;\r\n                            if (config.exponentMarker) {\r\n                                r += config.exponentMarker + (1 - p).toString();\r\n                            } else {\r\n                                r += '10^{' + (1 - p).toString() + '}';\r\n                            }\r\n                        }\r\n                    }\r\n                    num = r;\r\n                } else {\r\n                    num = base.replace(\r\n                        /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                        config.groupSeparator\r\n                    );\r\n                    const f = formatMantissa(mantissa, config);\r\n                    if (f) {\r\n                        num += config.decimalMarker + f;\r\n                        // if (num.length - 1 > config.precision && !num.endsWith('}') && !num.endsWith('\\\\ldots')) {\r\n                        //     num += '\\\\ldots';\r\n                        // }\r\n                    }\r\n                }\r\n            } else if (num.length > config.precision) {\r\n                const len = num.length;\r\n                let r = num[0];\r\n                const f = formatMantissa(num.substr(2), config);\r\n                if (f) {\r\n                    r += config.decimalMarker + f;\r\n                    if (r[r.length - 1] !== '}') {\r\n                        r += '\\\\ldots';\r\n                    }\r\n                }\r\n                if (r !== '1') {\r\n                    r += config.exponentProduct;\r\n                } else {\r\n                    r = '';\r\n                }\r\n                if (config.exponentMarker) {\r\n                    r += config.exponentMarker + (len - 2).toString();\r\n                } else {\r\n                    r += '10^{' + (len - 2).toString() + '}';\r\n                }\r\n                num = r;\r\n            } else {\r\n                num = num.replace(\r\n                    /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                    config.groupSeparator\r\n                );\r\n            }\r\n\r\n            if (exponent) {\r\n                // There is an exponent...\r\n                if (config.exponentMarker) {\r\n                    exponent = config.exponentMarker + exponent;\r\n                } else {\r\n                    exponent =\r\n                        config.exponentProduct + ' 10^{' + exponent + '}';\r\n                }\r\n            }\r\n\r\n            return sign + num + exponent;\r\n        }\r\n    }\r\n    if (config.scientificNotation === 'engineering') {\r\n        // Ensure the exponent is a multiple of 3\r\n        if (value === 0) {\r\n            result = '0';\r\n        } else {\r\n            const y = Math.abs(value);\r\n            let exponent: number = Math.round(Math.log10(y));\r\n            exponent = exponent - (exponent % 3);\r\n            if (y < 1000) exponent = 0;\r\n            const mantissa = y / Math.pow(10, exponent);\r\n            let mantissaString = '';\r\n            const m = mantissa.toString().match(/^(.*)\\.(.*)$/);\r\n            if (m?.[1] && m[2]) {\r\n                mantissaString = m[1] + config.decimalMarker + m[2];\r\n            }\r\n            if (config.groupSeparator) {\r\n                mantissaString = formatMantissa(\r\n                    mantissa.toExponential(),\r\n                    config\r\n                );\r\n            }\r\n            let exponentString = '';\r\n            if (exponent === 0) {\r\n                exponentString = '';\r\n            } else if (config.exponentMarker) {\r\n                exponentString = config.exponentMarker + exponent;\r\n            } else {\r\n                exponentString =\r\n                    config.exponentProduct + ' 10^{' + exponent + '}';\r\n            }\r\n            result = (value < 0 ? '-' : '') + mantissaString + exponentString;\r\n        }\r\n    } else {\r\n        const valString = typeof num === 'string' ? num : num.toString();\r\n        let m = valString.match(/^(.*)[e|E]([-+]?[0-9]*)$/i);\r\n        let base, exponent, mantissa;\r\n        base = valString;\r\n        mantissa = '';\r\n        if (m?.[1] && m[2]) {\r\n            // There is an exponent...\r\n            base = m[1];\r\n            if (config.exponentMarker) {\r\n                exponent = config.exponentMarker + m[2];\r\n            } else {\r\n                exponent = config.exponentProduct + ' 10^{' + m[2] + '}';\r\n            }\r\n        }\r\n        m = base.match(/^(.*)\\.(.*)$/);\r\n        if (m?.[1] && m[2]) {\r\n            base = m[1];\r\n            mantissa = m[2];\r\n        }\r\n        if (config.groupSeparator) {\r\n            base = base.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\r\n            mantissa = formatMantissa(mantissa, config);\r\n        }\r\n        if (mantissa) mantissa = config.decimalMarker + mantissa;\r\n        result = base + mantissa + (exponent || '');\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} ast - Abstract Syntax Tree object (in canonical form)\r\n * @return {string} A LaTeX representation of the AST\r\n */\r\nexport function jsonToLatex(\r\n    ast: MathJson,\r\n    options?: MathJsonLatexOptions\r\n): string {\r\n    const config = Object.assign(\r\n        {\r\n            precision: 14,\r\n            decimalMarker: '.',\r\n            groupSeparator: '\\\\, ',\r\n            product: '\\\\cdot ', // \\\\times, \\\\,\r\n            exponentProduct: '\\\\cdot ',\r\n            exponentMarker: '',\r\n            arcSeparator: '\\\\,',\r\n            scientificNotation: 'auto', // 'engineering', 'auto', 'on'\r\n            beginRepeatingDigits: '\\\\overline{',\r\n            endRepeatingDigits: '}',\r\n        },\r\n        options\r\n    );\r\n\r\n    let result = '';\r\n\r\n    if (ast === undefined) return '';\r\n    if (typeof ast === 'string') {\r\n        result = ast;\r\n    } else if (ast.latex) {\r\n        // If ast.latex key is present, use it to render the element\r\n        result = ast.latex;\r\n    } else if (isNumber(ast)) {\r\n        const val = asMachineNumber(ast);\r\n        if (val === -Infinity) {\r\n            result = '-\\\\infty ';\r\n        } else if (val === Infinity) {\r\n            result = '\\\\infty ';\r\n        } else if (\r\n            typeof ast.num === 'object' &&\r\n            (typeof ast.num.re === 'string' || typeof ast.num.im === 'string')\r\n        ) {\r\n            const re = numberRe(ast);\r\n            const im = numberIm(ast);\r\n            if (isNaN(re) || isNaN(im)) {\r\n                result = '\\\\text{NaN}';\r\n            } else if (\r\n                Math.abs(im) <= Number.EPSILON &&\r\n                Math.abs(re) <= Number.EPSILON\r\n            ) {\r\n                result = '0';\r\n            } else {\r\n                if (Math.abs(re) > Number.EPSILON) {\r\n                    result = numberAsLatex(re, config);\r\n                }\r\n                if (Math.abs(im) > Number.EPSILON) {\r\n                    if (Math.abs(re) > Number.EPSILON) {\r\n                        result += im > 0 ? '+' : '';\r\n                    }\r\n                    result +=\r\n                        (Math.abs(im) !== 1 ? numberAsLatex(im, config) : '') +\r\n                        '\\\\imaginaryI ';\r\n                }\r\n            }\r\n        } else if (isNaN(val)) {\r\n            result = '\\\\text{NaN}';\r\n        } else {\r\n            result = numberAsLatex(ast.num, config);\r\n        }\r\n        if (hasSup(ast)) result += '^{' + jsonToLatex(ast.sup, config) + '}';\r\n        if (hasSub(ast)) result += '_{' + jsonToLatex(ast.sub, config) + '}';\r\n    } else if (ast.group) {\r\n        result = jsonToLatex(ast.group, config);\r\n        if (!isNumber(ast.group) && !asSymbol(ast.group)) {\r\n            result = wrapFence(ast.fence || '(),', result);\r\n        } else if (numberIm(ast.group) !== 0) {\r\n            result = wrapFence(ast.fence || '(),', result);\r\n        }\r\n        if (hasSup(ast)) result += '^{' + jsonToLatex(ast.sup, config) + '}';\r\n        if (hasSub(ast)) result += '_{' + jsonToLatex(ast.sub, config) + '}';\r\n    } else if (ast.fn) {\r\n        if (ast.fn === 'bind') {\r\n            result = jsonToLatex(getArg(ast, 0), config) + '|_{';\r\n            if (ast.arg && ast.arg.length === 2) {\r\n                result += jsonToLatex(getArg(ast, 1));\r\n            } else {\r\n                let sep = '';\r\n                for (let i = 1; i < ast.arg.length; i += 2) {\r\n                    result +=\r\n                        sep +\r\n                        jsonToLatex(getArg(ast, i)) +\r\n                        ' = ' +\r\n                        jsonToLatex(getArg(ast, i + 1));\r\n                    sep = ', ';\r\n                }\r\n            }\r\n            result += '}';\r\n        } else if (ast.fn === 'divide') {\r\n            result =\r\n                '\\\\frac{' +\r\n                jsonToLatex(getArg(ast, 0), config) +\r\n                '}{' +\r\n                jsonToLatex(getArg(ast, 1), config) +\r\n                '}';\r\n        } else if (ast.fn === 'negate') {\r\n            result = '-' + jsonToLatex(getArg(ast, 0), config);\r\n        } else if (ast.fn === 'subtract') {\r\n            result =\r\n                jsonToLatex(getArg(ast, 0), config) +\r\n                ' - ' +\r\n                jsonToLatex(getArg(ast, 1), config);\r\n        } else if (\r\n            (ast.fn === 'add' || ast.fn === 'multiply') &&\r\n            isArray(ast.arg)\r\n        ) {\r\n            const a = [];\r\n            for (const exp of ast.arg) {\r\n                if (exp.fn === 'add' || exp.fn === 'subtract') {\r\n                    a.push(wrapFence('() ', jsonToLatex(exp, config)));\r\n                } else if (isComplexWithRealAndImaginary(exp)) {\r\n                    // Complex numbers that have both a real and imaginary part\r\n                    // should be wrapped in parentheses\r\n                    a.push(wrapFence('() ', jsonToLatex(exp, config)));\r\n                } else if (\r\n                    hasSup(ast) &&\r\n                    !(numberIm(exp) === 0 || numberIm(exp) === 1)\r\n                ) {\r\n                    // Wrap with parentheses if there's an exponent\r\n                    // and the imaginary part is neither 0 nor 1\r\n                    a.push(wrapFence('() ', jsonToLatex(exp, config)));\r\n                } else {\r\n                    a.push(jsonToLatex(exp, config));\r\n                }\r\n            }\r\n            if (ast.fn === 'multiply') {\r\n                if (\r\n                    ast.arg &&\r\n                    ast.arg.length === 2 &&\r\n                    (isNumber(ast.arg[0]) || ast.arg[0].fn === 'divide') &&\r\n                    (!isNumber(ast.arg[1]) ||\r\n                        (numberRe(ast.arg[1]) === 0 &&\r\n                            numberIm(ast.arg[1]) === 1))\r\n                ) {\r\n                    // Invisible times:\r\n                    // (number or fraction) * not a number\r\n                    // or (number or fraction) * imaginary unit\r\n                    result = a[0] + a[1];\r\n                } else {\r\n                    result = a.join(' \\\\times ');\r\n                }\r\n            } else {\r\n                // Addition (and subtraction)\r\n                if (ast.arg && ast.arg.length === 1) {\r\n                    if (\r\n                        ast.arg[0].fn === 'negate' ||\r\n                        (isNumber(ast.arg[0]) &&\r\n                            asMachineNumber(ast.arg[0]) < 0)\r\n                    ) {\r\n                        // a[0] has a negative sign\r\n                        result = a[0];\r\n                    } else {\r\n                        // Single non-negative element, add a '+' in front\r\n                        result = '+' + a[0];\r\n                    }\r\n                } else {\r\n                    result = a[0];\r\n                    for (let i = 1; i < ast.arg.length; i++) {\r\n                        if (\r\n                            ast.arg[i].fn === 'negate' ||\r\n                            (isNumber(ast.arg[i]) &&\r\n                                asMachineNumber(ast.arg[i]) < 0)\r\n                        ) {\r\n                            // a[i] already has a negative sign, so we can do an\r\n                            // implicit add\r\n                            result += a[i];\r\n                        } else {\r\n                            result += ' + ' + a[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (ast.fn === 'list' || ast.fn === 'list2') {\r\n            const a = [];\r\n            for (const exp of ast.arg) {\r\n                a.push(jsonToLatex(exp, config));\r\n            }\r\n\r\n            result = a.join(ast.fn === 'list2' ? '; ' : ', ');\r\n        } else if (ast.fn === 'sequence') {\r\n            result = ast.arg.map((x) => jsonToLatex(x, config)).join('');\r\n        } else if (ast.fn === 'text') {\r\n            result = '\\\\text{' + (ast.arg[0] || '') + '}';\r\n        } else if (\r\n            ast.fn === 'pow' &&\r\n            isArray(ast.arg) &&\r\n            ast.arg.length >= 2\r\n        ) {\r\n            result = jsonToLatex(getArg(ast, 0), config);\r\n            if (!isNumber(getArg(ast, 0)) && !asSymbol(getArg(ast, 0))) {\r\n                result = wrapFence(ast.fence || '(),', result);\r\n            }\r\n\r\n            result += '^{' + jsonToLatex(getArg(ast, 1), config) + '}';\r\n        } else if (ast.fn === 'equal' && ast.arg && ast.arg.length > 2) {\r\n            result = ast.arg.map((x) => jsonToLatex(x, config)).join(' = ');\r\n        } else {\r\n            const fn = getLatexTemplateForFunction(ast.fn);\r\n            result = fn;\r\n            let argstring = '';\r\n            const parenRequired =\r\n                /%(?![01_^])/.test(fn) &&\r\n                isArray(ast.arg) &&\r\n                ast.arg.length > 1;\r\n            if (parenRequired) {\r\n                // Parenthesis are required if argument list is longer than 1\r\n                result += wrapFence(\r\n                    ast.fence || '(),',\r\n                    ...ast.arg.map((x) => jsonToLatex(x, config))\r\n                );\r\n            } else if (isArray(ast.arg) && ast.arg.length > 0) {\r\n                // The parenthesis may be optional...\r\n                const arg0 = jsonToLatex(getArg(ast, 0), config);\r\n                const arg1 = jsonToLatex(getArg(ast, 1), config);\r\n                const argsn = [...ast.arg];\r\n                if (/%0/.test(fn)) {\r\n                    result = result.replace('%0', arg0);\r\n                    argsn.shift();\r\n                }\r\n                if (/%1/.test(fn)) {\r\n                    result = result.replace('%1', arg1);\r\n                    argsn.shift();\r\n                }\r\n\r\n                if (argsn.length > 0) {\r\n                    argstring = wrapFence(\r\n                        ast.fence || '(),',\r\n                        ...argsn.map((x) => jsonToLatex(x, config))\r\n                    );\r\n                }\r\n            } else {\r\n                // Empty argument list\r\n                argstring = wrapFence(ast.fence || '(),', '');\r\n            }\r\n\r\n            if (hasSup(ast)) {\r\n                result = result.replace(\r\n                    '%^',\r\n                    '^{' + jsonToLatex(ast.sup, config) + '}'\r\n                );\r\n            } else {\r\n                result = result.replace('%^', '');\r\n            }\r\n            if (hasSub(ast)) {\r\n                result = result.replace(\r\n                    '%_',\r\n                    '_{' + jsonToLatex(ast.sub, config) + '}'\r\n                );\r\n            } else {\r\n                result = result.replace('%_', '');\r\n            }\r\n\r\n            // Insert the arguments in the function template (%)\r\n            result = result.replace(/%(?![01_^])/, argstring);\r\n            // If there are any placeholders left, remove them\r\n            result = result.replace('%0', '').replace('%1', '');\r\n        }\r\n    } else if (typeof ast.sym === 'string') {\r\n        result = asSymbol(ast);\r\n        // Is it a Unicode value?\r\n        let m = result.match(/^&#x([0-9a-f]+);$/i);\r\n        if (m?.[1]) {\r\n            result = String.fromCodePoint(parseInt(m[1], 16));\r\n        } else {\r\n            m = result.match(/^&#([0-9]+);$/i);\r\n            if (m?.[1]) {\r\n                result = String.fromCodePoint(parseInt(m[1]));\r\n            }\r\n        }\r\n\r\n        // Is there a variant info attached to it?\r\n        if (typeof ast.variant === 'string') {\r\n            const MATH_VARIANTS = {\r\n                normal: 'mathrm',\r\n                'double-struck': 'mathbb',\r\n                bold: 'mathbf',\r\n                // 'script': 'mathcal',\r\n                fraktur: 'mathfrak',\r\n                script: 'mathscr',\r\n                'sans-serif': 'mathsf',\r\n                monospace: 'mathtt',\r\n            };\r\n            result = '\\\\' + MATH_VARIANTS[ast.variant] + '{' + result + '}';\r\n        }\r\n        if (hasSup(ast)) result += '^{' + jsonToLatex(ast.sup, config) + '}';\r\n        if (hasSub(ast)) result += '_{' + jsonToLatex(ast.sub, config) + '}';\r\n    } else if (typeof ast.text === 'string') {\r\n        result = '\\\\text{' + ast.text + '}';\r\n    }\r\n\r\n    // If there was an error attached to this node,\r\n    // display it on a red background\r\n    if (typeof ast.error === 'string') {\r\n        result = '\\\\bbox[#F56165]{' + result + '}';\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { ParseMode, Style } from '../public/core';\r\nimport { Mathfield, OutputFormat, InsertOptions } from '../public/mathfield';\r\n\r\nimport { Atom, makeRoot } from '../core/atom';\r\n\r\nimport { ModelPrivate } from './model';\r\nimport { applyStyle } from './model-styling';\r\nimport Keyboard from './editor-keyboard';\r\nimport { UndoManager } from './undo';\r\nimport { hidePopover, updatePopoverPosition } from './popover';\r\nimport { atomToAsciiMath } from './atom-to-ascii-math';\r\nimport { localize as l10n } from './l10n';\r\nimport { HAPTIC_FEEDBACK_DURATION, SelectorPrivate, perform } from './commands';\r\nimport {\r\n    selectionIsCollapsed,\r\n    getAnchorStyle,\r\n    getSelectedAtoms,\r\n    getAnchorMode,\r\n} from './model-selection';\r\nimport { removeSuggestion } from './model-utils';\r\nimport {\r\n    commitCommandStringBeforeInsertionPoint,\r\n    removeCommandString,\r\n    decorateCommandStringAroundInsertionPoint,\r\n} from './model-command-mode';\r\nimport { selectAll } from './model-selection';\r\nimport { complete } from './autocomplete';\r\nimport { requestUpdate } from './mathfield-render';\r\nimport {\r\n    MathfieldConfigPrivate,\r\n    update as updateConfig,\r\n    getDefault as getDefaultConfig,\r\n    get as getConfig,\r\n} from './config';\r\nimport { insert } from './model-insert';\r\nimport { deleteChar } from './model-delete';\r\nimport { addRowAfter, addColumnAfter } from './model-array';\r\nimport { onTypedText, onKeystroke } from './mathfield-keyboard-input';\r\nimport { render } from './mathfield-render';\r\n\r\nimport './mathfield-commands';\r\n\r\nimport {\r\n    getCaretPosition,\r\n    getSelectionBounds,\r\n    getSharedElement,\r\n    releaseSharedElement,\r\n    isValidMathfield,\r\n    on,\r\n    off,\r\n} from './mathfield-utils';\r\n\r\nimport { onCut, onCopy, onPaste } from './mathfield-clipboard';\r\nimport { attachButtonHandlers } from './mathfield-buttons';\r\nimport { onPointerDown } from './mathfield-pointer-input';\r\nimport {\r\n    showVirtualKeyboard,\r\n    hideVirtualKeyboard,\r\n    switchKeyboardLayer,\r\n} from './virtual-keyboard-commands';\r\n\r\nimport { atomToSpeakableText } from './atom-to-speakable-text';\r\nimport { atomtoMathJson } from '../addons/math-json';\r\nimport { atomsToMathML } from '../addons/math-ml';\r\n\r\nexport class MathfieldPrivate implements Mathfield {\r\n    model: ModelPrivate;\r\n    config: Required<MathfieldConfigPrivate>;\r\n\r\n    undoManager: UndoManager;\r\n\r\n    readOnly: boolean;\r\n\r\n    dirty: boolean; // If true, need to be redrawn\r\n    pasteInProgress: boolean;\r\n    smartModeSuppressed: boolean;\r\n    _resizeTimer: number; // Timer handle\r\n\r\n    element: HTMLElement;\r\n    originalContent: string;\r\n\r\n    textarea: HTMLElement;\r\n    field: HTMLElement;\r\n    virtualKeyboardToggleDOMNode: HTMLElement;\r\n    ariaLiveText: HTMLElement;\r\n    accessibleNode: HTMLElement;\r\n    popover: HTMLElement;\r\n    keystrokeCaption: HTMLElement;\r\n    virtualKeyboard: HTMLElement;\r\n\r\n    keystrokeCaptionVisible: boolean;\r\n    virtualKeyboardVisible: boolean;\r\n    blurred: boolean;\r\n\r\n    keystrokeBuffer: string;\r\n    keystrokeBufferStates: any[]; // @revisit\r\n    keystrokeBufferResetTimer: any; // @revisit\r\n\r\n    suggestionIndex: number;\r\n\r\n    mode: ParseMode;\r\n    style: Style;\r\n\r\n    keypressSound: HTMLAudioElement; // @revisit. Is this used? The sounds are in config, no?\r\n    spacebarKeypressSound: HTMLAudioElement;\r\n    returnKeypressSound: HTMLAudioElement;\r\n    deleteKeypressSound: HTMLAudioElement;\r\n    plonkSound: HTMLAudioElement;\r\n    /**\r\n     * To create a mathfield, you would typically use {@linkcode makeMathField | MathLive.makeMathField()}\r\n     * instead of invoking directly this constructor.\r\n     *\r\n     *\r\n     * @param element - The DOM element that this mathfield is attached to.\r\n     * Note that `element.mathfield` is this object.\r\n     */\r\n    constructor(element: HTMLElement, config: MathfieldConfigPrivate) {\r\n        // Setup default config options\r\n        this.config = updateConfig(getDefaultConfig(), config);\r\n        this.element = element;\r\n        element['mathfield'] = this;\r\n\r\n        // Save existing content\r\n        this.originalContent = element.innerHTML;\r\n        let elementText = this.element.textContent;\r\n        if (elementText) {\r\n            elementText = elementText.trim();\r\n        }\r\n\r\n        // Additional elements used for UI.\r\n        // They are retrieved in order a bit later, so they need to be kept in sync\r\n        // 1.0/ The field, where the math equation will be displayed\r\n        // 1.1/ The virtual keyboard toggle\r\n        // 2/ The popover panel which displays info in command mode\r\n        // 3/ The keystroke caption panel (option+shift+K)\r\n        // 4/ The virtual keyboard\r\n        // 5.0/ The area to stick MathML for screen reading larger exprs (not used right now)\r\n        //      The for the area is that focus would bounce their and then back triggering the\r\n        //         screen reader to read it\r\n        // 5.1/ The aria-live region for announcements\r\n        let markup = '';\r\n        if (!this.config.substituteTextArea) {\r\n            if (/android|ipad|ipod|iphone/i.test(navigator.userAgent)) {\r\n                // On Android or iOS, don't use a textarea, which has the side effect of\r\n                // bringing up the OS virtual keyboard\r\n                markup += `<span class='ML__textarea'>\r\n                <span class='ML__textarea__textarea'\r\n                    tabindex=\"0\" role=\"textbox\"\r\n                    style='display:inline-block;height:1px;width:1px' >\r\n                </span>\r\n            </span>`;\r\n            } else {\r\n                markup +=\r\n                    '<span class=\"ML__textarea\">' +\r\n                    '<textarea class=\"ML__textarea__textarea\" autocapitalize=\"off\" autocomplete=\"off\" ' +\r\n                    'autocorrect=\"off\" spellcheck=\"false\" aria-hidden=\"true\" tabindex=\"0\">' +\r\n                    '</textarea>' +\r\n                    '</span>';\r\n            }\r\n        } else {\r\n            if (typeof this.config.substituteTextArea === 'string') {\r\n                markup += this.config.substituteTextArea;\r\n            } else {\r\n                // We don't really need this one, but we keep it here so that the\r\n                // indexes below remain the same whether a substituteTextArea is\r\n                // provided or not.\r\n                markup += '<span></span>';\r\n            }\r\n        }\r\n        markup +=\r\n            '<span class=\"ML__fieldcontainer\">' +\r\n            '<span class=\"ML__fieldcontainer__field\"></span>';\r\n\r\n        // Only display the virtual keyboard toggle if the virtual keyboard mode is\r\n        // 'manual'\r\n        if (this.config.virtualKeyboardMode === 'manual') {\r\n            markup += `<button class=\"ML__virtual-keyboard-toggle\" data-tooltip=\"${l10n(\r\n                'tooltip.toggle virtual keyboard'\r\n            )}\">`;\r\n            // data-tooltip='Toggle Virtual Keyboard'\r\n            if (this.config.virtualKeyboardToggleGlyph) {\r\n                markup += this.config.virtualKeyboardToggleGlyph;\r\n            } else {\r\n                markup += `<span style=\"width: 21px; margin-top: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"/></svg></span>`;\r\n            }\r\n            markup += '</button>';\r\n        } else {\r\n            markup += '<span ></span>';\r\n        }\r\n        markup += '</span>';\r\n        markup += `\r\n        <div class=\"sr-only\">\r\n            <span aria-live=\"assertive\" aria-atomic=\"true\"></span>\r\n            <span></span>\r\n        </div>\r\n    `;\r\n\r\n        this.element.innerHTML = markup;\r\n\r\n        let iChild = 0; // index of child -- used to make changes below easier\r\n        if (typeof this.config.substituteTextArea === 'function') {\r\n            this.textarea = this.config.substituteTextArea();\r\n        } else {\r\n            this.textarea = this.element.children[iChild++]\r\n                .firstElementChild as HTMLElement;\r\n        }\r\n        this.field = this.element.children[iChild].children[0] as HTMLElement;\r\n\r\n        // Listen to 'wheel' events to scroll (horizontally) the field when it overflows\r\n        this.field.addEventListener(\r\n            'wheel',\r\n            (ev) => {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                const wheelDelta =\r\n                    typeof ev.deltaX === 'undefined' ? ev.detail : -ev.deltaX;\r\n                if (isFinite(wheelDelta)) {\r\n                    this.field.scroll({\r\n                        top: 0,\r\n                        left: this.field.scrollLeft - wheelDelta * 5,\r\n                    });\r\n                }\r\n            },\r\n            { passive: false }\r\n        );\r\n        this.virtualKeyboardToggleDOMNode = this.element.children[iChild++]\r\n            .children[1] as HTMLElement;\r\n        attachButtonHandlers(this, this.virtualKeyboardToggleDOMNode, {\r\n            default: 'toggleVirtualKeyboard',\r\n            alt: 'toggleVirtualKeyboardAlt',\r\n            shift: 'toggleVirtualKeyboardShift',\r\n        });\r\n        this.ariaLiveText = this.element.children[iChild]\r\n            .children[0] as HTMLElement;\r\n        this.accessibleNode = this.element.children[iChild++]\r\n            .children[1] as HTMLElement;\r\n        // Some panels are shared amongst instances of mathfield\r\n        // (there's a single instance in the document)\r\n        this.popover = getSharedElement(\r\n            'mathlive-popover-panel',\r\n            'ML__popover'\r\n        );\r\n        this.keystrokeCaption = getSharedElement(\r\n            'mathlive-keystroke-caption-panel',\r\n            'ML__keystroke-caption'\r\n        );\r\n        // The keystroke caption panel and the command bar are\r\n        // initially hidden\r\n        this.keystrokeCaptionVisible = false;\r\n        this.virtualKeyboardVisible = false;\r\n        this.keystrokeBuffer = '';\r\n        this.keystrokeBufferStates = [];\r\n        this.keystrokeBufferResetTimer = null;\r\n        // This index indicates which of the suggestions available to\r\n        // display in the popover panel\r\n        this.suggestionIndex = 0;\r\n        // The input mode (text, math, command)\r\n        // While getAnchorMode() represent the mode of the current selection,\r\n        // this.mode is the mode chosen by the user. It indicates the mode the\r\n        // next character typed will be interpreted in.\r\n        // It is often identical to getAnchorMode() since changing the selection\r\n        // changes the mode, but sometimes it is not, for example when a user\r\n        // enters a mode changing command.\r\n        this.mode = this.config.defaultMode;\r\n        this.smartModeSuppressed = false;\r\n        // Current style (color, weight, italic, etc...)\r\n        // Reflects the style to be applied on next insertion, if any\r\n        this.style = {};\r\n        // Focus/blur state\r\n        this.blurred = true;\r\n        on(this.element, 'focus', this);\r\n        on(this.element, 'blur', this);\r\n        // Capture clipboard events\r\n        on(this.textarea, 'cut', this);\r\n        on(this.textarea, 'copy', this);\r\n        on(this.textarea, 'paste', this);\r\n        // Delegate keyboard events\r\n        Keyboard.delegateKeyboardEvents(this.textarea, {\r\n            container: this.element,\r\n            allowDeadKey: () => this.mode === 'text',\r\n            typedText: (text: string, options) =>\r\n                onTypedText(this, text, options),\r\n            paste: () => onPaste(this),\r\n            keystroke: (keystroke, e) => onKeystroke(this, keystroke, e),\r\n            focus: this._onFocus.bind(this),\r\n            blur: this._onBlur.bind(this),\r\n        });\r\n\r\n        // Delegate mouse and touch events\r\n        if (window.PointerEvent) {\r\n            // Use modern pointer events if available\r\n            on(this.field, 'pointerdown', this);\r\n        } else {\r\n            on(this.field, 'touchstart:active mousedown', this);\r\n        }\r\n\r\n        // Request notification for when the window is resized (\r\n        // or the device switched from portrait to landscape) to adjust\r\n        // the UI (popover, etc...)\r\n        on(window, 'resize', this);\r\n\r\n        // Setup the model\r\n        this.model = new ModelPrivate(\r\n            {\r\n                mode: this.config.defaultMode,\r\n                macros: this.config.macros,\r\n                removeExtraneousParentheses: this.config\r\n                    .removeExtraneousParentheses,\r\n            },\r\n            {\r\n                onContentDidChange: (_sender: ModelPrivate) =>\r\n                    this._onContentDidChange(),\r\n                onSelectionDidChange: (_sender: ModelPrivate) =>\r\n                    this._onSelectionDidChange(),\r\n                onContentWillChange: () =>\r\n                    this.config.onContentWillChange(this),\r\n                onSelectionWillChange: () =>\r\n                    this.config.onSelectionWillChange(this),\r\n                onError: this.config.onError,\r\n            },\r\n            {\r\n                announce: (_sender: Mathfield, command, modelBefore, atoms) =>\r\n                    this.config.onAnnounce?.(this, command, modelBefore, atoms),\r\n                moveOut: (_sender, direction) =>\r\n                    this.config.onMoveOutOf(this, direction),\r\n                tabOut: (_sender, direction) =>\r\n                    this.config.onTabOutOf(this, direction),\r\n            },\r\n            this\r\n        );\r\n\r\n        // Prepare to manage undo/redo\r\n        this.undoManager = new UndoManager(this.model);\r\n\r\n        // Use the content of the element for the initial value of the mathfield\r\n        insert(this.model, elementText, {\r\n            insertionMode: 'replaceAll',\r\n            selectionMode: 'after',\r\n            format: 'latex',\r\n            mode: 'math',\r\n            suppressChangeNotifications: true,\r\n            macros: this.config.macros,\r\n        });\r\n\r\n        // Now start recording potentially undoable actions\r\n        this.undoManager.startRecording();\r\n        this.undoManager.snapshot(this.config);\r\n\r\n        requestUpdate(this);\r\n    }\r\n\r\n    $setConfig(config: MathfieldConfigPrivate): void {\r\n        this.config = updateConfig(this.config, config);\r\n        this.model.setListeners({\r\n            onContentDidChange: (_sender: ModelPrivate) =>\r\n                this._onContentDidChange(),\r\n            onSelectionDidChange: (_sender: ModelPrivate) =>\r\n                this._onSelectionDidChange(),\r\n            onContentWillChange: () => this.config.onContentWillChange(this),\r\n            onSelectionWillChange: () =>\r\n                this.config.onSelectionWillChange(this),\r\n            onError: this.config.onError,\r\n        });\r\n        this.model.setHooks({\r\n            announce: (_sender: Mathfield, command, modelBefore, atoms) =>\r\n                this.config.onAnnounce?.(this, command, modelBefore, atoms),\r\n            moveOut: (_sender, direction) =>\r\n                this.config.onMoveOutOf(this, direction),\r\n            tabOut: (_sender, direction) =>\r\n                this.config.onTabOutOf(this, direction),\r\n        });\r\n\r\n        if (!this.config.readOnly) {\r\n            this._onBlur();\r\n        }\r\n        requestUpdate(this);\r\n    }\r\n\r\n    getConfig(keys: keyof MathfieldConfigPrivate): boolean | number | string;\r\n    getConfig(keys: string[]): MathfieldConfigPrivate;\r\n    getConfig(\r\n        keys: keyof MathfieldConfigPrivate | string[]\r\n    ): boolean | number | string | MathfieldConfigPrivate {\r\n        return getConfig(this.config, keys);\r\n    }\r\n\r\n    /*\r\n     * handleEvent is a function invoked when an event is registered with an\r\n     * object instead ( see `addEventListener()` in `on()`)\r\n     * The name is defined by addEventListener() and cannot be changed.\r\n     * This pattern is used to be able to release bound event handlers,\r\n     * (event handlers that need access to `this`) as the bind() function\r\n     * would create a new function that would have to be kept track off\r\n     * to be able to properly remove the event handler later.\r\n     */\r\n    handleEvent(evt: Event): void {\r\n        switch (evt.type) {\r\n            case 'focus':\r\n                this._onFocus();\r\n                break;\r\n            case 'blur':\r\n                this._onBlur();\r\n                break;\r\n            case 'touchstart':\r\n            case 'mousedown':\r\n            case 'pointerdown':\r\n                onPointerDown(this, evt);\r\n                break;\r\n            case 'resize': {\r\n                if (this._resizeTimer) {\r\n                    window.cancelAnimationFrame(this._resizeTimer);\r\n                }\r\n                this._resizeTimer = window.requestAnimationFrame(\r\n                    () => isValidMathfield(this) && this._onResize()\r\n                );\r\n                break;\r\n            }\r\n            case 'cut':\r\n                onCut(this);\r\n                break;\r\n            case 'copy':\r\n                onCopy(this, evt as ClipboardEvent);\r\n                break;\r\n            case 'paste':\r\n                onPaste(this);\r\n                break;\r\n            default:\r\n                console.warn('Unexpected event type', evt.type);\r\n        }\r\n    }\r\n    $revertToOriginalContent(): void {\r\n        this.element.innerHTML = this.originalContent;\r\n        delete this.element['mathfield'];\r\n        delete this.accessibleNode;\r\n        delete this.ariaLiveText;\r\n        delete this.field;\r\n        off(this.textarea, 'cut', this);\r\n        off(this.textarea, 'copy', this);\r\n        off(this.textarea, 'paste', this);\r\n        this.textarea.remove();\r\n        delete this.textarea;\r\n        this.virtualKeyboardToggleDOMNode.remove();\r\n        delete this.virtualKeyboardToggleDOMNode;\r\n        releaseSharedElement(this.popover);\r\n        delete this.popover;\r\n        releaseSharedElement(this.keystrokeCaption);\r\n        delete this.keystrokeCaption;\r\n        releaseSharedElement(this.virtualKeyboard);\r\n        delete this.virtualKeyboard;\r\n        releaseSharedElement(\r\n            document.getElementById('mathlive-alternate-keys-panel')\r\n        );\r\n        off(this.element, 'pointerdown', this);\r\n        off(this.element, 'touchstart:active mousedown', this);\r\n        off(this.element, 'focus', this);\r\n        off(this.element, 'blur', this);\r\n        off(window, 'resize', this);\r\n        delete this.element;\r\n    }\r\n    resetKeystrokeBuffer(): void {\r\n        this.keystrokeBuffer = '';\r\n        this.keystrokeBufferStates = [];\r\n        clearTimeout(this.keystrokeBufferResetTimer);\r\n    }\r\n\r\n    private _onSelectionDidChange(): void {\r\n        // Every atom before the new caret position is now committed\r\n        commitCommandStringBeforeInsertionPoint(this.model);\r\n        // Keep the content of the textarea in sync wiht the selection.\r\n        // This will allow cut/copy to work.\r\n        const result = makeRoot('math', getSelectedAtoms(this.model)).toLatex(\r\n            false\r\n        );\r\n        const textarea = this.textarea as HTMLInputElement;\r\n        if (result) {\r\n            textarea.value = result;\r\n            // The textarea may be a span (on mobile, for example), so check that\r\n            // it has a select() before calling it.\r\n            if (this.$hasFocus() && textarea.select) {\r\n                textarea.select();\r\n            }\r\n        } else {\r\n            textarea.value = '';\r\n            textarea.setAttribute('aria-label', '');\r\n        }\r\n        // Update the mode\r\n        {\r\n            const previousMode = this.mode;\r\n            this.mode = getAnchorMode(this.model) || this.config.defaultMode;\r\n            if (\r\n                this.mode !== previousMode &&\r\n                typeof this.config.onModeChange === 'function'\r\n            ) {\r\n                this.config.onModeChange(this, this.mode);\r\n            }\r\n            if (previousMode === 'command' && this.mode !== 'command') {\r\n                hidePopover(this);\r\n                removeCommandString(this.model);\r\n            }\r\n        }\r\n        // Defer the updating of the popover position: we'll need the tree to be\r\n        // re-rendered first to get an updated caret position\r\n        updatePopoverPosition(this, { deferred: true });\r\n        // Invoke client handlers, if provided.\r\n        if (typeof this.config.onSelectionDidChange === 'function') {\r\n            this.config.onSelectionDidChange(this);\r\n        }\r\n    }\r\n    private _onContentDidChange(): void {\r\n        if (this.undoManager.canRedo()) {\r\n            this.element.classList.add('can-redo');\r\n        } else {\r\n            this.element.classList.remove('can-redo');\r\n        }\r\n        if (this.undoManager.canUndo()) {\r\n            this.element.classList.add('can-undo');\r\n        } else {\r\n            this.element.classList.remove('can-undo');\r\n        }\r\n        if (typeof this.config.onContentDidChange === 'function') {\r\n            this.config.onContentDidChange(this);\r\n        }\r\n    }\r\n\r\n    private _onFocus(): void {\r\n        if (this.config.readOnly) return;\r\n        if (this.blurred) {\r\n            this.blurred = false;\r\n            // The textarea may be a span (on mobile, for example), so check that\r\n            // it has a focus() before calling it.\r\n            if (this.textarea.focus) {\r\n                this.textarea.focus();\r\n            }\r\n            if (this.config.virtualKeyboardMode === 'onfocus') {\r\n                showVirtualKeyboard(this);\r\n            }\r\n            updatePopoverPosition(this);\r\n            if (this.config.onFocus) {\r\n                this.config.onFocus(this);\r\n            }\r\n            requestUpdate(this);\r\n        }\r\n    }\r\n    private _onBlur(): void {\r\n        if (!this.blurred) {\r\n            this.blurred = true;\r\n            this.ariaLiveText.textContent = '';\r\n            if (this.config.virtualKeyboardMode === 'onfocus') {\r\n                hideVirtualKeyboard(this);\r\n            }\r\n            complete(this, { discard: true });\r\n            requestUpdate(this);\r\n            if (this.config.onBlur) {\r\n                this.config.onBlur(this);\r\n            }\r\n        }\r\n    }\r\n    private _onResize(): void {\r\n        this.element.classList.remove(\r\n            'ML__isNarrowWidth',\r\n            'ML__isWideWidth',\r\n            'ML__isExtendedWidth'\r\n        );\r\n        if (window.innerWidth >= 1024) {\r\n            this.element.classList.add('ML__isExtendedWidth');\r\n        } else if (window.innerWidth >= 768) {\r\n            this.element.classList.add('ML__isWideWidth');\r\n        } else {\r\n            this.element.classList.add('ML__isNarrowWidth');\r\n        }\r\n        updatePopoverPosition(this);\r\n    }\r\n\r\n    $perform(command: SelectorPrivate | any[]): boolean {\r\n        return perform(this, command);\r\n    }\r\n\r\n    private formatMathlist(root: Atom, format: OutputFormat): string {\r\n        format = format || 'latex';\r\n        let result = '';\r\n        if (format === 'latex' || format === 'latex-expanded') {\r\n            result = root.toLatex(format === 'latex-expanded');\r\n        } else if (format === 'mathML') {\r\n            result = atomsToMathML(root, this.config);\r\n        } else if (format === 'spoken') {\r\n            result = atomToSpeakableText(root, this.config);\r\n        } else if (format === 'spoken-text') {\r\n            const saveTextToSpeechMarkup = this.config.textToSpeechMarkup;\r\n            this.config.textToSpeechMarkup = '';\r\n            result = atomToSpeakableText(root, this.config);\r\n            this.config.textToSpeechMarkup = saveTextToSpeechMarkup;\r\n        } else if (\r\n            format === 'spoken-ssml' ||\r\n            format === 'spoken-ssml-withHighlighting'\r\n        ) {\r\n            const saveTextToSpeechMarkup = this.config.textToSpeechMarkup;\r\n            // const savedAtomIdsSettings = this.config.atomIdsSettings;    // @revisit\r\n            this.config.textToSpeechMarkup = 'ssml';\r\n            // if (format === 'spoken-ssml-withHighlighting') {     // @revisit\r\n            //     this.config.atomIdsSettings = { seed: 'random' };\r\n            // }\r\n            result = atomToSpeakableText(root, this.config);\r\n            this.config.textToSpeechMarkup = saveTextToSpeechMarkup;\r\n            // this.config.atomIdsSettings = savedAtomIdsSettings;      // @revisit\r\n        } else if (format === 'json') {\r\n            const json = atomtoMathJson(root, this.config);\r\n            result = JSON.stringify(json);\r\n        } else if (format === 'json-2') {\r\n            const json = atomtoMathJson(root, this.config);\r\n            result = JSON.stringify(json, null, 2);\r\n        } else if (format === 'ASCIIMath') {\r\n            result = atomToAsciiMath(root, this.config);\r\n        } else {\r\n            console.warn('Unknown format :', format);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    $text(format: OutputFormat): string {\r\n        return this.formatMathlist(this.model.root, format);\r\n    }\r\n\r\n    $selectedText(format: OutputFormat): string {\r\n        const atoms = getSelectedAtoms(this.model);\r\n        if (!atoms) {\r\n            return '';\r\n        }\r\n        const root = makeRoot('math', atoms);\r\n        return this.formatMathlist(root, format);\r\n    }\r\n    $selectionIsCollapsed(): boolean {\r\n        return selectionIsCollapsed(this.model);\r\n    }\r\n    $selectionDepth(): number {\r\n        return this.model.path.length;\r\n    }\r\n\r\n    /**\r\n     * Checks if the selection starts at the beginning of the selection group.\r\n     */\r\n    $selectionAtStart(): boolean {\r\n        return this.model.startOffset() === 0;\r\n    }\r\n    $selectionAtEnd(): boolean {\r\n        return this.model.endOffset() >= this.model.siblings().length - 1;\r\n    }\r\n    /**\r\n     *  True if the entire group is selected\r\n     */\r\n    groupIsSelected(): boolean {\r\n        return (\r\n            this.model.startOffset() === 0 &&\r\n            this.model.endOffset() >= this.model.siblings().length - 1\r\n        );\r\n    }\r\n    $latex(text?: string, options?: InsertOptions): string {\r\n        if (text) {\r\n            const oldValue = this.model.root.toLatex();\r\n            if (text !== oldValue) {\r\n                options = options ?? { mode: 'math' };\r\n                insert(this.model, text, {\r\n                    insertionMode: 'replaceAll',\r\n                    selectionMode: 'after',\r\n                    format: 'latex',\r\n                    mode: 'math',\r\n                    suppressChangeNotifications:\r\n                        options.suppressChangeNotifications,\r\n                    macros: this.config.macros,\r\n                });\r\n                this.undoManager.snapshot(this.config);\r\n                requestUpdate(this);\r\n            }\r\n            return text;\r\n        }\r\n        // Return the content as LaTeX\r\n        return this.model.root.toLatex();\r\n    }\r\n    $el(): HTMLElement {\r\n        return this.element;\r\n    }\r\n    scrollIntoView(): void {\r\n        // If a render is pending, do it now to make sure we have correct layout\r\n        // and caret position\r\n        if (this.dirty) {\r\n            render(this);\r\n        }\r\n        let pos: number = getCaretPosition(this.field)?.x;\r\n        const fieldBounds = this.field.getBoundingClientRect();\r\n        if (typeof pos === 'undefined') {\r\n            const selectionBounds = getSelectionBounds(this.field);\r\n            if (selectionBounds) {\r\n                pos =\r\n                    selectionBounds.right +\r\n                    fieldBounds.left -\r\n                    this.field.scrollLeft;\r\n            }\r\n        }\r\n        if (typeof pos !== 'undefined') {\r\n            const x = pos - window.scrollX;\r\n            if (x < fieldBounds.left) {\r\n                this.field.scroll({\r\n                    top: 0,\r\n                    left: x - fieldBounds.left + this.field.scrollLeft - 20,\r\n                    behavior: 'smooth',\r\n                });\r\n            } else if (x > fieldBounds.right) {\r\n                this.field.scroll({\r\n                    top: 0,\r\n                    left: x - fieldBounds.right + this.field.scrollLeft + 20,\r\n                    behavior: 'smooth',\r\n                });\r\n            }\r\n        }\r\n    }\r\n    $insert(s: string, options?: InsertOptions): boolean {\r\n        if (typeof s === 'string' && s.length > 0) {\r\n            options = options ?? { mode: 'math' };\r\n            if (options.focus) {\r\n                this.$focus();\r\n            }\r\n            if (options.feedback) {\r\n                if (this.config.keypressVibration && navigator.vibrate) {\r\n                    navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\r\n                }\r\n                if (this.keypressSound) {\r\n                    this.keypressSound.load();\r\n                    this.keypressSound.play();\r\n                }\r\n            }\r\n            if (s === '\\\\\\\\') {\r\n                // This string is interpreted as an \"insert row after\" command\r\n                addRowAfter(this.model);\r\n            } else if (s === '&') {\r\n                addColumnAfter(this.model);\r\n            } else {\r\n                const savedStyle = this.style;\r\n                insert(this.model, s, {\r\n                    mode: this.mode,\r\n                    style: getAnchorStyle(this.model),\r\n                    ...options,\r\n                });\r\n                if (options.resetStyle) {\r\n                    this.style = savedStyle;\r\n                }\r\n            }\r\n            this.undoManager.snapshot(this.config);\r\n            requestUpdate(this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    switchMode(mode: ParseMode, prefix = '', suffix = ''): void {\r\n        this.resetKeystrokeBuffer();\r\n        // Suppress (temporarily) smart mode if switching to/from text or math\r\n        // This prevents switching to/from command mode from supressing smart mode.\r\n        this.smartModeSuppressed =\r\n            /text|math/.test(this.mode) && /text|math/.test(mode);\r\n        if (prefix) {\r\n            this.$insert(prefix, {\r\n                format: 'latex',\r\n                mode: { math: 'text', text: 'math' }[mode],\r\n            });\r\n        }\r\n        // Remove any error indicator on the current command sequence (if there is one)\r\n        decorateCommandStringAroundInsertionPoint(this.model, false);\r\n        if (mode === 'command') {\r\n            removeSuggestion(this.model);\r\n            hidePopover(this);\r\n            this.suggestionIndex = 0;\r\n            // Switch to the command mode keyboard layer\r\n            if (this.virtualKeyboardVisible) {\r\n                switchKeyboardLayer(this, 'lower-command');\r\n            }\r\n            insert(this.model, '\\u001b', { mode: 'math' });\r\n        } else {\r\n            this.mode = mode;\r\n        }\r\n        if (suffix) {\r\n            this.$insert(suffix, {\r\n                format: 'latex',\r\n                mode: mode,\r\n            });\r\n        }\r\n        // Notify of mode change\r\n        if (typeof this.config.onModeChange === 'function') {\r\n            this.config.onModeChange(this, this.mode);\r\n        }\r\n        requestUpdate(this);\r\n    }\r\n\r\n    $hasFocus(): boolean {\r\n        return (\r\n            document.hasFocus() && deepActiveElement(document) === this.textarea\r\n        );\r\n    }\r\n    $focus(): void {\r\n        if (!this.$hasFocus()) {\r\n            // The textarea may be a span (on mobile, for example), so check that\r\n            // it has a focus() before calling it.\r\n            if (typeof this.textarea.focus === 'function') {\r\n                this.textarea.focus();\r\n            }\r\n            this.model.announce('line');\r\n        }\r\n    }\r\n    $blur(): void {\r\n        if (this.$hasFocus()) {\r\n            if (this.textarea.blur) {\r\n                this.textarea.blur();\r\n            }\r\n        }\r\n    }\r\n    $select(): void {\r\n        selectAll(this.model);\r\n    }\r\n    $clearSelection(): void {\r\n        deleteChar(this.model);\r\n    }\r\n\r\n    $applyStyle(style: Style): void {\r\n        applyStyle(this.model, style);\r\n    }\r\n\r\n    $keystroke(keys: string, evt?: KeyboardEvent): boolean {\r\n        return onKeystroke(this, keys, evt);\r\n    }\r\n    $typedText(text: string): void {\r\n        onTypedText(this, text);\r\n    }\r\n}\r\n\r\nfunction deepActiveElement(\r\n    root: DocumentOrShadowRoot = document\r\n): Element | null {\r\n    if (root.activeElement?.shadowRoot?.activeElement) {\r\n        return deepActiveElement(root.activeElement.shadowRoot);\r\n    }\r\n    return root.activeElement;\r\n}\r\n","/* eslint no-console:0 */\r\nimport '../core/atom';\r\nimport { MACROS } from '../core/definitions';\r\nimport { AutoRenderOptions } from '../public/mathlive';\r\n\r\ntype AutoRenderOptionsPrivate = AutoRenderOptions & {\r\n    ignoreClassPattern: RegExp;\r\n    processClassPattern: RegExp;\r\n    processScriptTypePattern: RegExp;\r\n};\r\n\r\nfunction findEndOfMath(delimiter, text, startIndex) {\r\n    // Adapted from\r\n    // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\r\n    let index = startIndex;\r\n    let braceLevel = 0;\r\n\r\n    const delimLength = delimiter.length;\r\n\r\n    while (index < text.length) {\r\n        const character = text[index];\r\n\r\n        if (\r\n            braceLevel <= 0 &&\r\n            text.slice(index, index + delimLength) === delimiter\r\n        ) {\r\n            return index;\r\n        } else if (character === '\\\\') {\r\n            index++;\r\n        } else if (character === '{') {\r\n            braceLevel++;\r\n        } else if (character === '}') {\r\n            braceLevel--;\r\n        }\r\n\r\n        index++;\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\nfunction splitAtDelimiters(\r\n    startData,\r\n    leftDelim,\r\n    rightDelim,\r\n    mathstyle\r\n): {\r\n    type: string;\r\n    data: string;\r\n    rawData?: string;\r\n    mathstyle?: string;\r\n}[] {\r\n    const finalData = [];\r\n\r\n    for (let i = 0; i < startData.length; i++) {\r\n        if (startData[i].type === 'text') {\r\n            const text = startData[i].data;\r\n\r\n            let lookingForLeft = true;\r\n            let currIndex = 0;\r\n            let nextIndex;\r\n\r\n            nextIndex = text.indexOf(leftDelim);\r\n            if (nextIndex !== -1) {\r\n                currIndex = nextIndex;\r\n                if (currIndex > 0) {\r\n                    finalData.push({\r\n                        type: 'text',\r\n                        data: text.slice(0, currIndex),\r\n                    });\r\n                }\r\n                lookingForLeft = false;\r\n            }\r\n            let done = false;\r\n            while (!done) {\r\n                if (lookingForLeft) {\r\n                    nextIndex = text.indexOf(leftDelim, currIndex);\r\n                    if (nextIndex === -1) {\r\n                        done = true;\r\n                        break;\r\n                    }\r\n                    if (currIndex !== nextIndex) {\r\n                        finalData.push({\r\n                            type: 'text',\r\n                            data: text.slice(currIndex, nextIndex),\r\n                        });\r\n                    }\r\n\r\n                    currIndex = nextIndex;\r\n                } else {\r\n                    nextIndex = findEndOfMath(\r\n                        rightDelim,\r\n                        text,\r\n                        currIndex + leftDelim.length\r\n                    );\r\n                    if (nextIndex === -1) {\r\n                        done = true;\r\n                        break;\r\n                    }\r\n\r\n                    finalData.push({\r\n                        type: 'math',\r\n                        data: text.slice(\r\n                            currIndex + leftDelim.length,\r\n                            nextIndex\r\n                        ),\r\n                        rawData: text.slice(\r\n                            currIndex,\r\n                            nextIndex + rightDelim.length\r\n                        ),\r\n                        mathstyle: mathstyle,\r\n                    });\r\n\r\n                    currIndex = nextIndex + rightDelim.length;\r\n                }\r\n\r\n                lookingForLeft = !lookingForLeft;\r\n            }\r\n            if (currIndex < text.length) {\r\n                finalData.push({\r\n                    type: 'text',\r\n                    data: text.slice(currIndex),\r\n                });\r\n            }\r\n        } else {\r\n            finalData.push(startData[i]);\r\n        }\r\n    }\r\n\r\n    return finalData;\r\n}\r\n\r\nfunction splitWithDelimiters(\r\n    text,\r\n    delimiters\r\n): {\r\n    type: string;\r\n    data: string;\r\n    rawData?: string;\r\n    mathstyle?: string;\r\n}[] {\r\n    let data = [{ type: 'text', data: text }];\r\n    for (let i = 0; i < delimiters.inline.length; i++) {\r\n        const delimiter = delimiters.inline[i];\r\n        data = splitAtDelimiters(data, delimiter[0], delimiter[1], 'textstyle');\r\n    }\r\n    for (let i = 0; i < delimiters.display.length; i++) {\r\n        const delimiter = delimiters.display[i];\r\n        data = splitAtDelimiters(\r\n            data,\r\n            delimiter[0],\r\n            delimiter[1],\r\n            'displaystyle'\r\n        );\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nfunction createMathMLNode(latex: string, options: AutoRenderOptionsPrivate) {\r\n    // Create a node for AT (Assistive Technology, e.g. screen reader) to speak, etc.\r\n    // This node has a style that makes it be invisible to display but is seen by AT\r\n    const span = document.createElement('span');\r\n    try {\r\n        span.innerHTML =\r\n            \"<math xmlns='http://www.w3.org/1998/Math/MathML'>\" +\r\n            options.renderToMathML(latex, options) +\r\n            '</math>';\r\n    } catch (e) {\r\n        console.error(\"Could not convert'\" + latex + \"' to MathML with \", e);\r\n        span.textContent = latex;\r\n    }\r\n    span.className = 'sr-only';\r\n    return span;\r\n}\r\n\r\nfunction createMarkupNode(\r\n    text: string,\r\n    options: AutoRenderOptionsPrivate,\r\n    mathstyle,\r\n    createNodeOnFailure\r\n) {\r\n    // Create a node for displaying math.\r\n    //   This is slightly ugly because in the case of failure to create the markup,\r\n    //   sometimes a text node is desired and sometimes not.\r\n    //   'createTextNodeOnFailure' controls this and null is returned when no node is created.\r\n    // This node is made invisible to AT (screen readers)\r\n    let span: HTMLSpanElement | Text = document.createElement('span');\r\n    span.setAttribute('aria-hidden', 'true');\r\n    if (options.preserveOriginalContent) {\r\n        span.setAttribute(\r\n            'data-' + options.namespace + 'original-content',\r\n            text\r\n        );\r\n        if (mathstyle) {\r\n            span.setAttribute(\r\n                'data-' + options.namespace + 'original-mathstyle',\r\n                mathstyle\r\n            );\r\n        }\r\n    }\r\n\r\n    try {\r\n        span.innerHTML = options.renderToMarkup(text, {\r\n            mathstyle: mathstyle || 'displaystyle',\r\n            format: 'html',\r\n            macros: options.macros,\r\n        });\r\n    } catch (e) {\r\n        console.error(\"Could not parse'\" + text + \"' with \", e);\r\n        if (createNodeOnFailure) {\r\n            span = document.createTextNode(text);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    return span;\r\n}\r\n\r\nfunction createAccessibleMarkupPair(\r\n    text: string,\r\n    mathstyle: 'displaystyle' | 'inlinestyle' | string,\r\n    options: AutoRenderOptionsPrivate,\r\n    createNodeOnFailure: boolean\r\n) {\r\n    // Create a math node (a span with an accessible component and a visual component)\r\n    // If there is an error in parsing the latex, 'createNodeOnFailure' controls whether\r\n    //   'null' is returned or an accessible node with the text used.\r\n    const markupNode = createMarkupNode(\r\n        text,\r\n        options,\r\n        mathstyle,\r\n        createNodeOnFailure\r\n    );\r\n\r\n    if (\r\n        markupNode &&\r\n        /\\b(mathml|speakable-text)\\b/i.test(options.renderAccessibleContent)\r\n    ) {\r\n        const fragment = document.createDocumentFragment();\r\n        if (\r\n            /\\bmathml\\b/i.test(options.renderAccessibleContent) &&\r\n            options.renderToMathML\r\n        ) {\r\n            fragment.appendChild(createMathMLNode(text, options));\r\n        }\r\n        if (\r\n            /\\bspeakable-text\\b/i.test(options.renderAccessibleContent) &&\r\n            options.renderToSpeakableText\r\n        ) {\r\n            const span = document.createElement('span');\r\n            span.innerHTML = options.renderToSpeakableText(text, options);\r\n            span.className = 'sr-only';\r\n            fragment.appendChild(span);\r\n        }\r\n        fragment.appendChild(markupNode);\r\n        return fragment;\r\n    }\r\n\r\n    return markupNode;\r\n}\r\n\r\nfunction scanText(text: string, options: AutoRenderOptionsPrivate) {\r\n    // If the text starts with '\\begin'...\r\n    // (this is a MathJAX behavior)\r\n    let fragment = null;\r\n    if (options.TeX.processEnvironments && /^\\s*\\\\begin/.test(text)) {\r\n        fragment = document.createDocumentFragment();\r\n        fragment.appendChild(\r\n            createAccessibleMarkupPair(text, undefined, options, true)\r\n        );\r\n    } else {\r\n        const data = splitWithDelimiters(text, options.TeX.delimiters);\r\n        if (data.length === 1 && data[0].type === 'text') {\r\n            // This text contains no math. No need to continue processing\r\n            return null;\r\n        }\r\n        fragment = document.createDocumentFragment();\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].type === 'text') {\r\n                fragment.appendChild(document.createTextNode(data[i].data));\r\n            } else {\r\n                fragment.appendChild(\r\n                    createAccessibleMarkupPair(\r\n                        data[i].data,\r\n                        data[i].mathstyle,\r\n                        options,\r\n                        true\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    }\r\n    return fragment;\r\n}\r\n\r\nfunction scanElement(elem, options: AutoRenderOptionsPrivate) {\r\n    const originalContent = elem.getAttribute(\r\n        'data-' + options.namespace + 'original-content'\r\n    );\r\n    if (originalContent) {\r\n        const mathstyle = elem.getAttribute(\r\n            'data-' + options.namespace + 'mathstyle'\r\n        );\r\n        const span = createAccessibleMarkupPair(\r\n            originalContent,\r\n            mathstyle,\r\n            options,\r\n            false\r\n        );\r\n        if (span != null) {\r\n            elem.textContent = '';\r\n            elem.appendChild(span);\r\n        }\r\n        return;\r\n    }\r\n\r\n    if (elem.childNodes.length === 1 && elem.childNodes[0].nodeType === 3) {\r\n        // This is a node with textual content only. Perhaps an opportunity\r\n        // to simplify and avoid creating extra nested elements...\r\n        const text = elem.childNodes[0].textContent;\r\n        if (options.TeX.processEnvironments && /^\\s*\\\\begin/.test(text)) {\r\n            elem.textContent = '';\r\n            elem.appendChild(\r\n                createAccessibleMarkupPair(text, undefined, options, true)\r\n            );\r\n            return;\r\n        }\r\n\r\n        const data = splitWithDelimiters(text, options.TeX.delimiters);\r\n        if (data.length === 1 && data[0].type === 'math') {\r\n            // The entire content is a math expression: we can replace the content\r\n            // with the latex markup without creating additional wrappers.\r\n            elem.textContent = '';\r\n            elem.appendChild(\r\n                createAccessibleMarkupPair(\r\n                    data[0].data,\r\n                    data[0].mathstyle,\r\n                    options,\r\n                    true\r\n                )\r\n            );\r\n            return;\r\n        } else if (data.length === 1 && data[0].type === 'text') {\r\n            // This element only contained text with no math. No need to\r\n            // do anything.\r\n            return;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < elem.childNodes.length; i++) {\r\n        const childNode = elem.childNodes[i];\r\n        if (childNode.nodeType === 3) {\r\n            // A text node\r\n            // Look for math mode delimiters inside the text\r\n            const frag = scanText(childNode.textContent, options);\r\n            if (frag) {\r\n                i += frag.childNodes.length - 1;\r\n                elem.replaceChild(frag, childNode);\r\n            }\r\n        } else if (childNode.nodeType === 1) {\r\n            // An element node\r\n            const tag = childNode.nodeName.toLowerCase();\r\n            if (\r\n                tag === 'script' &&\r\n                options.processScriptTypePattern.test(childNode.type)\r\n            ) {\r\n                let style = 'displaystyle';\r\n                for (const l of childNode.type.split(';')) {\r\n                    const v = l.split('=');\r\n                    if (v[0].toLowerCase() === 'mode') {\r\n                        if (v[1].toLoweCase() === 'display') {\r\n                            style = 'displaystyle';\r\n                        } else {\r\n                            style = 'textstyle';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const span = createAccessibleMarkupPair(\r\n                    childNode.textContent,\r\n                    style,\r\n                    options,\r\n                    true\r\n                );\r\n                childNode.parentNode.replaceChild(span, childNode);\r\n            } else if (tag !== 'script') {\r\n                // Element node\r\n                const shouldRender =\r\n                    options.processClassPattern.test(childNode.className) ||\r\n                    !(\r\n                        options.skipTags.includes(tag) ||\r\n                        options.ignoreClassPattern.test(childNode.className)\r\n                    );\r\n\r\n                if (shouldRender) {\r\n                    scanElement(childNode, options);\r\n                }\r\n            }\r\n        }\r\n        // Otherwise, it's something else, and ignore it.\r\n    }\r\n}\r\n\r\nconst defaultOptions: AutoRenderOptions = {\r\n    // Optional namespace for the `data-` attributes.\r\n    namespace: '',\r\n\r\n    // Name of tags whose content will not be scanned for math delimiters\r\n    skipTags: [\r\n        'noscript',\r\n        'style',\r\n        'textarea',\r\n        'pre',\r\n        'code',\r\n        'annotation',\r\n        'annotation-xml',\r\n    ],\r\n\r\n    // <script> tags of the following types will be processed. Others, ignored.\r\n    processScriptType: 'math/tex',\r\n\r\n    // Regex pattern of the class name of elements whose contents should not\r\n    // be processed\r\n    ignoreClass: 'tex2jax_ignore',\r\n\r\n    // Regex pattern of the class name of elements whose contents should\r\n    // be processed when they appear inside ones that are ignored.\r\n    processClass: 'tex2jax_process',\r\n\r\n    // Indicate whether to preserve or discard the original content of the\r\n    // elements being rendered in a 'data-original-content' attribute.\r\n    preserveOriginalContent: true,\r\n\r\n    // Indicate the format to use to render accessible content\r\n    renderAccessibleContent: 'mathml',\r\n\r\n    TeX: {\r\n        processEnvironments: true,\r\n        delimiters: {\r\n            inline: [['\\\\(', '\\\\)']],\r\n            display: [\r\n                ['$$', '$$'],\r\n                ['\\\\[', '\\\\]'],\r\n            ],\r\n        },\r\n    },\r\n};\r\n\r\nfunction renderMathInElement(\r\n    elem: HTMLElement | string,\r\n    options: AutoRenderOptionsPrivate\r\n): void {\r\n    try {\r\n        options = { ...defaultOptions, ...options };\r\n        options.ignoreClassPattern = new RegExp(options.ignoreClass);\r\n        options.processClassPattern = new RegExp(options.processClass);\r\n        options.processScriptTypePattern = new RegExp(\r\n            options.processScriptType\r\n        );\r\n        options.macros = MACROS;\r\n\r\n        // Validate the namespace (used for `data-` attributes)\r\n        if (options.namespace) {\r\n            if (!/^[a-z]+[-]?$/.test(options.namespace)) {\r\n                throw Error(\r\n                    'options.namespace must be a string of lowercase characters only'\r\n                );\r\n            }\r\n            if (!/-$/.test(options.namespace)) {\r\n                options.namespace += '-';\r\n            }\r\n        }\r\n\r\n        scanElement(elem, options);\r\n    } catch (e) {\r\n        if (e instanceof Error) {\r\n            console.error('renderMathInElement(): ' + e.message);\r\n        } else {\r\n            console.error(\r\n                'renderMathInElement(): Could not render math for element ' +\r\n                    elem\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    renderMathInElement,\r\n};\r\n","/**\r\n * This module contains utilities to debug mathlive internal data structures.\r\n *\r\n * It is also used by the automated test suite.\r\n */\r\n\r\nimport { parseString } from '../core/parser';\r\nimport {\r\n    MACROS,\r\n    FUNCTIONS,\r\n    MATH_SYMBOLS,\r\n    TEXT_SYMBOLS,\r\n    ENVIRONMENTS,\r\n} from '../core/definitions';\r\nimport {\r\n    KEYBOARD_SHORTCUTS,\r\n    INLINE_SHORTCUTS,\r\n    getShortcutMarkup,\r\n} from '../editor/shortcuts';\r\n\r\nimport { atomToAsciiMath } from '../editor/atom-to-ascii-math';\r\nimport { parseMathString } from '../editor/parse-math-string';\r\n\r\nexport function latexToAsciiMath(latex, mode?) {\r\n    mode = mode || 'math';\r\n\r\n    const mathlist = parseString(latex, mode, null, null);\r\n\r\n    return atomToAsciiMath(mathlist);\r\n}\r\n\r\nexport function asciiMathToLatex(ascii) {\r\n    const [, result] = parseMathString(ascii, { format: 'ASCIIMath' });\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {object[]} spans\r\n * @param {string|number|number[]} symbol specify which span to consider.\r\n * If a string, a span whose body match the string\r\n * If a number, the nth span in the list\r\n * If an array, each element in the array indicate the nth child to traverse\r\n */\r\nfunction getSymbol(spans, symbol) {\r\n    if (!spans) return null;\r\n    let childSymbol = null;\r\n\r\n    if (Array.isArray(symbol)) {\r\n        childSymbol = symbol.slice(); // Clone the array\r\n        symbol = childSymbol.shift(); // Get the first element and remove it from the array\r\n    }\r\n\r\n    let result = null;\r\n    if (typeof symbol === 'number' && symbol < spans.length) {\r\n        if (childSymbol && childSymbol.length > 0) {\r\n            return getSymbol(spans[symbol].children, childSymbol);\r\n        }\r\n        return spans[symbol];\r\n    } else if (typeof symbol === 'string') {\r\n        for (let i = 0; i < spans.length; i++) {\r\n            // Does this span match the symbol we're looking for?\r\n            if (spans[i].body === symbol) {\r\n                if (childSymbol && childSymbol.length > 0) {\r\n                    return getSymbol(spans[i].children, childSymbol);\r\n                }\r\n                return spans[i];\r\n            }\r\n            // If not, try its children\r\n            result = getSymbol(spans[i].children, symbol);\r\n            if (result) return result;\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getProp(spans, symbol, prop) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s) return s[prop];\r\n    return null;\r\n}\r\n\r\n/**\r\n * Return the type ('mbin', etc...) of a span\r\n * @param {Span[]} spans\r\n * @param {string} symbol\r\n * @return {string}\r\n */\r\nfunction getType(spans, symbol) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s) return s.type;\r\n    return null;\r\n}\r\n\r\n/**\r\n * Return the tag ('span', 'var', etc...) of a span\r\n * @param {Span[]} spans\r\n * @param {string} symbol\r\n * @return {string}\r\n */\r\nfunction getTag(spans, symbol) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s) return s.tag;\r\n    return null;\r\n}\r\n\r\nfunction getStyle(spans, symbol, prop) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s?.style) return s.style[prop];\r\n    return null;\r\n}\r\n\r\nfunction getClasses(spans, symbol) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s) return s.classes || '';\r\n    return null;\r\n}\r\n\r\nfunction hasClass(spans, symbol, cls) {\r\n    let classes = getClasses(spans, symbol);\r\n    if (!classes) return false;\r\n    classes = classes.split(' ');\r\n    for (let j = 0; j < classes.length; j++) {\r\n        if (classes[j] === cls) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction spanToString(span, indent?) {\r\n    indent = indent || '';\r\n\r\n    let result = '';\r\n    if (Array.isArray(span)) {\r\n        if (span.length === 0) {\r\n            result += '[]\\n';\r\n        } else {\r\n            result += '[\\n';\r\n            for (let i = 0; i < span.length; i++) {\r\n                result += spanToString(span[i], '\\t' + indent + i + ',');\r\n                result += i < span.length - 1 ? ',\\n' : '\\n';\r\n            }\r\n            result += indent + ']\\n';\r\n        }\r\n    } else {\r\n        result = indent + '{\\n';\r\n        if (span.type) {\r\n            result += indent + 'type:\"' + span.type + '\",\\n';\r\n        }\r\n        if (span.body && span.body.length > 0) {\r\n            result += indent + 'body:\"' + span.body + '\",\\n';\r\n        }\r\n        if (span.classes && span.classes.length > 0) {\r\n            result += indent + 'classes:\"' + span.classes + '\",\\n';\r\n        }\r\n        if (span.style) {\r\n            for (const s in span.style) {\r\n                if (Object.prototype.hasOwnProperty.call(span.style, s)) {\r\n                    result += indent + s + ':\"';\r\n                    result += span.style[s] + '\",\\n';\r\n                }\r\n            }\r\n        }\r\n        if (span.children && span.children.length > 0) {\r\n            result +=\r\n                indent + 'children:' + spanToString(span.children, indent);\r\n        }\r\n        result += indent + '}';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mathlistPropToString(mathlist, prop, indent) {\r\n    const value = mathlist[prop];\r\n    if (typeof value === 'string') {\r\n        return indent + prop + ':\"' + value + '\",\\n';\r\n    } else if (typeof value === 'boolean') {\r\n        return indent + prop + ':' + value + ',\\n';\r\n    } else if (typeof value === 'number') {\r\n        return indent + prop + ':' + value + ',\\n';\r\n    } else if (Array.isArray(value)) {\r\n        return (\r\n            indent + prop + ':' + mathlistToString(value, indent + '\\t') + ',\\n'\r\n        );\r\n    }\r\n    return '';\r\n}\r\n\r\nfunction mathlistToString(mathlist, indent) {\r\n    if (!mathlist) return '';\r\n\r\n    indent = indent || '';\r\n    let result = '';\r\n    if (Array.isArray(mathlist)) {\r\n        if (mathlist.length === 0) return '';\r\n        result += '[\\n';\r\n        for (let i = 0; i < mathlist.length; i++) {\r\n            result += mathlistToString(mathlist[i], indent + '\\t') + ',\\n';\r\n        }\r\n        result += indent + ']\\n';\r\n    } else {\r\n        result = indent + '{\\n';\r\n        result += mathlistPropToString(mathlist, 'type', indent);\r\n        result += mathlistPropToString(mathlist, 'value', indent);\r\n\r\n        result += mathlistPropToString(mathlist, 'fontFamily', indent);\r\n\r\n        // Type 'genfrac'\r\n        result += mathlistPropToString(mathlist, 'hasBarLine', indent);\r\n        result += mathlistPropToString(mathlist, 'leftDelim', indent);\r\n        result += mathlistPropToString(mathlist, 'rightDelim', indent);\r\n        result += mathlistPropToString(mathlist, 'numer', indent);\r\n        result += mathlistPropToString(mathlist, 'denom', indent);\r\n\r\n        // Type...?\r\n        result += mathlistPropToString(mathlist, 'limits', indent);\r\n        result += mathlistPropToString(mathlist, 'symbol', indent);\r\n\r\n        // Type 'color'\r\n        result += mathlistPropToString(mathlist, 'framecolor', indent);\r\n\r\n        // Type 'line'\r\n        result += mathlistPropToString(mathlist, 'position', indent);\r\n\r\n        // Type 'mathstyle'\r\n        result += mathlistPropToString(mathlist, 'mathstyle', indent);\r\n\r\n        // Common\r\n        result += mathlistPropToString(mathlist, 'superscript', indent);\r\n        result += mathlistPropToString(mathlist, 'subscript', indent);\r\n        result += mathlistPropToString(mathlist, 'body', indent);\r\n\r\n        result += mathlistPropToString(mathlist, 'array', indent);\r\n\r\n        result += indent + '}';\r\n    }\r\n    return result;\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction spanToMarkup(span, indent) {\r\n    indent = indent || '';\r\n    // if (indent.length === 0) {\r\n    //     result += '<table>';\r\n    // }\r\n    let result = '';\r\n    if (Array.isArray(span)) {\r\n        for (let i = 0; i < span.length; i++) {\r\n            result += spanToMarkup(span[i], indent);\r\n        }\r\n    } else if (span && span.tag !== 'table') {\r\n        result = '<br>' + indent;\r\n        if (span.classes.includes('fontsize-ensurer')) {\r\n            result += 'FONTSIZE-ENSURER';\r\n        } else {\r\n            if (span.type) {\r\n                result += '<span class=\"type\">' + span.type + '</span>';\r\n            }\r\n            if (span.body && span.body.length > 0) {\r\n                result += '<span class=\"value\">' + span.body + '</span>';\r\n            }\r\n            if (span.classes && span.classes.length > 0) {\r\n                result +=\r\n                    '&nbsp;<span class=\"classes\">' + span.classes + '</span>';\r\n            }\r\n            if (span.isTight) {\r\n                result += '&nbsp;<span class=\"stylevalue\"> tight </span>';\r\n            }\r\n            if (span.caret) {\r\n                result += '&nbsp;<span class=\"stylevalue\"> caret </span>';\r\n            }\r\n\r\n            if (span.style) {\r\n                for (const s in span.style) {\r\n                    if (Object.prototype.hasOwnProperty.call(span.style, s)) {\r\n                        result +=\r\n                            '&nbsp;<span class=\"styleprop\">' + s + ':</span>';\r\n                        result +=\r\n                            '<span class=\"stylevalue\"> ' +\r\n                            span.style[s] +\r\n                            '</span>;&nbsp;';\r\n                    }\r\n                }\r\n            }\r\n            if (span.children) {\r\n                result += spanToMarkup(span.children, indent + '▷');\r\n            }\r\n        }\r\n    } else if (span) {\r\n        result +=\r\n            '<br>' +\r\n            indent +\r\n            'table ' +\r\n            span.array[0].length +\r\n            '&times;' +\r\n            span.array.length;\r\n        for (let i = 0; i < span.array.length; i++) {\r\n            for (let j = 0; j < span.array[i].length; j++) {\r\n                result +=\r\n                    '<br>' + indent + '[' + (i + 1) + ', ' + (j + 1) + '] ';\r\n                result += spanToMarkup(span.array[i][j], '');\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mathListColorToMarkup(mathlist, propname) {\r\n    let result = '';\r\n    if (mathlist[propname]) {\r\n        result += '<span class=\"styleprop\">' + propname + '=</span>';\r\n        result +=\r\n            '<span style=\"font-size:2em;vertical-align:middle;color:' +\r\n            mathlist[propname] +\r\n            '\">&#9632;</span>';\r\n        result += '<span class=\"stylevalue\">';\r\n        result += mathlist[propname];\r\n        result += '</span>';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mathListPropToMarkup(mathlist, propname) {\r\n    let result = '';\r\n    if (mathlist[propname]) {\r\n        result += '<span class=\"styleprop\">' + propname + '=</span>';\r\n        result += '<span class=\"stylevalue\">';\r\n        result += mathlist[propname];\r\n        result += '</span>\" ';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mathlistToMarkup(mathlist, indent) {\r\n    if (!mathlist) return '';\r\n\r\n    indent = indent || '';\r\n    let result = '';\r\n    if (Array.isArray(mathlist)) {\r\n        for (let i = 0; i < mathlist.length; i++) {\r\n            result += mathlistToMarkup(mathlist[i], i + '.' + indent);\r\n        }\r\n    } else {\r\n        result = '<br>' + indent;\r\n        if (mathlist.type) {\r\n            result += '<span class=\"type';\r\n            result += mathlist.isSelected ? ' selected' : '';\r\n            result += mathlist.caret ? ' caret' : '';\r\n            result +=\r\n                '\">' +\r\n                mathlist.type +\r\n                (mathlist.caret ? ' caret ' : '') +\r\n                '</span>';\r\n        }\r\n        if (typeof mathlist.body === 'string' && mathlist.body.length > 0) {\r\n            result += '&nbsp;<span class=\"value\">';\r\n            result += mathlist.body;\r\n            if (\r\n                mathlist.body.charCodeAt(0) < 32 ||\r\n                mathlist.body.charCodeAt(0) > 127\r\n            ) {\r\n                result +=\r\n                    '&nbsp;U+' +\r\n                    (\r\n                        '000000' + mathlist.body.charCodeAt(0).toString(16)\r\n                    ).substr(-6);\r\n            }\r\n            result += '</span>&nbsp;';\r\n        }\r\n        if (mathlist.fontFamily === 'mathrm') {\r\n            result += '<span style=\"opacity:.2\">';\r\n            result += mathListPropToMarkup(mathlist, 'fontFamily');\r\n            result += '</span>';\r\n        } else {\r\n            result += mathListPropToMarkup(mathlist, 'fontFamily');\r\n        }\r\n        // Type 'genfrac'\r\n        result += mathListPropToMarkup(mathlist, 'hasBarLine');\r\n        result += mathListPropToMarkup(mathlist, 'leftDelim');\r\n        result += mathListPropToMarkup(mathlist, 'rightDelim');\r\n        result += mathListPropToMarkup(mathlist, 'continuousFraction');\r\n\r\n        // Type...?\r\n        result += mathListPropToMarkup(mathlist, 'limits');\r\n        result += mathListPropToMarkup(mathlist, 'symbol');\r\n\r\n        // Type 'color'\r\n        result += mathListColorToMarkup(mathlist, 'framecolor');\r\n\r\n        // Type 'mathstyle'\r\n        result += mathListPropToMarkup(mathlist, 'mathstyle');\r\n\r\n        // Type 'sizeddelim'\r\n        result += mathListPropToMarkup(mathlist, 'size');\r\n        result += mathListPropToMarkup(mathlist, 'cls');\r\n        result += mathListPropToMarkup(mathlist, 'delim');\r\n\r\n        // Type 'rule'\r\n        result += mathListPropToMarkup(mathlist, 'shift');\r\n        result += mathListPropToMarkup(mathlist, 'width');\r\n        result += mathListPropToMarkup(mathlist, 'height');\r\n\r\n        // Type 'line'\r\n        result += mathListPropToMarkup(mathlist, 'position');\r\n\r\n        // Type 'overunder'\r\n        result += mathlistToMarkup(mathlist.overscript, indent + '↑');\r\n        result += mathlistToMarkup(mathlist.underscript, indent + '↓');\r\n\r\n        result += mathlistToMarkup(mathlist.superscript, indent + '↑');\r\n        result += mathlistToMarkup(mathlist.subscript, indent + '↓');\r\n        result += mathlistToMarkup(mathlist.body, indent + '▶');\r\n        result += mathlistToMarkup(mathlist.numer, indent + '\\u25B2');\r\n        result += mathlistToMarkup(mathlist.denom, indent + '\\u25Bc');\r\n\r\n        if (mathlist.array) {\r\n            for (let i = 0; i < mathlist.array.length; i++) {\r\n                result +=\r\n                    '<br>' +\r\n                    indent +\r\n                    '\\u2317 row ' +\r\n                    (i + 1) +\r\n                    '/' +\r\n                    mathlist.array.length;\r\n                for (let j = 0; j < mathlist.array[i].length; j++) {\r\n                    result += mathlistToMarkup(\r\n                        mathlist.array[i][j],\r\n                        indent + '\\u2317\\u232A'\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n// Export the public interface for this module\r\nexport default {\r\n    mathlistToMarkup,\r\n    spanToMarkup,\r\n\r\n    mathlistToString,\r\n    spanToString,\r\n\r\n    hasClass,\r\n    getClasses,\r\n    getProp,\r\n    getStyle,\r\n    getType,\r\n    getTag,\r\n\r\n    latexToAsciiMath,\r\n    asciiMathToLatex,\r\n    FUNCTIONS,\r\n    MATH_SYMBOLS,\r\n    TEXT_SYMBOLS,\r\n    ENVIRONMENTS,\r\n    MACROS,\r\n\r\n    KEYBOARD_SHORTCUTS,\r\n    INLINE_SHORTCUTS,\r\n\r\n    getShortcutMarkup,\r\n};\r\n","import { render } from './mathfield-render';\r\nimport { MathfieldConfig } from '../public/config';\r\n\r\nfunction removeHighlight(node) {\r\n    node.classList.remove('highlight');\r\n    if (node.children) {\r\n        Array.from(node.children).forEach((x) => {\r\n            removeHighlight(x);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Highlights the span corresponding to the specified atomID.\r\n *\r\n * This is used for text-to-speech with synchronized highlighting (read aloud)\r\n *\r\n * @category Read Aloud\r\n * @param {string} atomID\r\n *\r\n */\r\nfunction highlightAtomID(node, atomID?) {\r\n    if (!atomID || node.dataset.atomId === atomID) {\r\n        node.classList.add('highlight');\r\n        if (node.children && node.children.length > 0) {\r\n            Array.from(node.children).forEach((x) => {\r\n                highlightAtomID(x);\r\n            });\r\n        }\r\n    } else {\r\n        node.classList.remove('highlight');\r\n        if (node.children && node.children.length > 0) {\r\n            Array.from(node.children).forEach((x) => {\r\n                highlightAtomID(x, atomID);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \"Read Aloud\" is an asynchronous operation that reads the\r\n * reading with synchronized highlighting\r\n *\r\n * @param element - The DOM element to highlight\r\n * @param text - The text to speak\r\n */\r\nexport function defaultReadAloudHook(\r\n    element: HTMLElement,\r\n    text: string,\r\n    config: MathfieldConfig\r\n) {\r\n    if (!window) {\r\n        return;\r\n    }\r\n    if (!config && window['mathlive']) {\r\n        config = window['mathlive'].config;\r\n    }\r\n    config = config || {};\r\n\r\n    if (config.speechEngine !== 'amazon') {\r\n        console.warn('Use Amazon TTS Engine for synchronized highlighting');\r\n        if (config.speakHook) config.speakHook(text, config);\r\n        return;\r\n    }\r\n    if (!window['AWS']) {\r\n        console.warn(\r\n            'AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk'\r\n        );\r\n        return;\r\n    }\r\n    const polly = new window['AWS'].Polly({ apiVersion: '2016-06-10' });\r\n\r\n    const params = {\r\n        OutputFormat: 'json',\r\n        VoiceId: config.speechEngineVoice || 'Joanna',\r\n        Engine: [\r\n            'Amy',\r\n            'Emma',\r\n            'Brian',\r\n            'Ivy',\r\n            'Joanna',\r\n            'Kendra',\r\n            'Kimberly',\r\n            'Salli',\r\n            'Joey',\r\n            'Justin',\r\n            'Matthew',\r\n        ].includes(config.speechEngineVoice),\r\n        Text: text,\r\n        TextType: 'ssml',\r\n        SpeechMarkTypes: ['ssml'],\r\n    };\r\n\r\n    window['mathlive'] = window['mathlive'] ?? {};\r\n    window['mathlive'].readAloudElement = element;\r\n\r\n    const statusHook =\r\n        config.onReadAloudStatus || window['mathlive'].onReadAloudStatus;\r\n\r\n    // Request the mark points\r\n    polly.synthesizeSpeech(params, (err, data) => {\r\n        if (err) {\r\n            console.warn('polly.synthesizeSpeech() error:', err, err.stack);\r\n            return;\r\n        }\r\n        if (!data || !data.AudioStream) {\r\n            console.log('polly.synthesizeSpeech():' + data);\r\n            return;\r\n        }\r\n        const response = new TextDecoder('utf-8').decode(\r\n            new Uint8Array(data.AudioStream)\r\n        );\r\n        window['mathlive'].readAloudMarks = response\r\n            .split('\\n')\r\n            .map((x) => (x ? JSON.parse(x) : {}));\r\n        window['mathlive'].readAloudTokens = [];\r\n        for (const mark of window['mathlive'].readAloudMarks) {\r\n            if (mark.value) {\r\n                window['mathlive'].readAloudTokens.push(mark.value);\r\n            }\r\n        }\r\n        window['mathlive'].readAloudCurrentMark = '';\r\n\r\n        // Request the audio\r\n        params.OutputFormat = 'mp3';\r\n        params.SpeechMarkTypes = [];\r\n        polly.synthesizeSpeech(params, function (err, data) {\r\n            if (err) {\r\n                console.warn(\r\n                    'polly.synthesizeSpeech(',\r\n                    text,\r\n                    ') error:',\r\n                    err,\r\n                    err.stack\r\n                );\r\n                return;\r\n            }\r\n            if (!data || !data.AudioStream) {\r\n                return;\r\n            }\r\n            const uInt8Array = new Uint8Array(data.AudioStream);\r\n            const blob = new Blob([uInt8Array.buffer], {\r\n                type: 'audio/mpeg',\r\n            });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            if (!window['mathlive'].readAloudAudio) {\r\n                window['mathlive'].readAloudAudio = new Audio();\r\n                window['mathlive'].readAloudAudio.addEventListener(\r\n                    'ended',\r\n                    () => {\r\n                        const mathfield = window['mathlive'].readAloudMathField;\r\n                        if (statusHook) {\r\n                            statusHook(mathfield, 'ended');\r\n                        }\r\n                        if (mathfield) {\r\n                            render(mathfield);\r\n                            window['mathlive'].readAloudElement = null;\r\n                            window['mathlive'].readAloudMathField = null;\r\n                            window['mathlive'].readAloudTokens = [];\r\n                            window['mathlive'].readAloudMarks = [];\r\n                            window['mathlive'].readAloudCurrentMark = '';\r\n                        } else {\r\n                            removeHighlight(\r\n                                window['mathlive'].readAloudElement\r\n                            );\r\n                        }\r\n                    }\r\n                );\r\n                window['mathlive'].readAloudAudio.addEventListener(\r\n                    'timeupdate',\r\n                    () => {\r\n                        let value = '';\r\n                        // The target, the atom we're looking for, is the one matching the current audio\r\n                        // plus 100 ms. By anticipating it a little bit, it feels more natural, otherwise it\r\n                        // feels like the highlighting is trailing the audio.\r\n                        const target =\r\n                            window['mathlive'].readAloudAudio.currentTime *\r\n                                1000 +\r\n                            100;\r\n\r\n                        // Find the smallest element which is bigger than the target time\r\n                        for (const mark of window['mathlive'].readAloudMarks) {\r\n                            if (mark.time < target) {\r\n                                value = mark.value;\r\n                            }\r\n                        }\r\n                        if (window['mathlive'].readAloudCurrentMark !== value) {\r\n                            window['mathlive'].readAloudCurrentToken = value;\r\n                            if (\r\n                                value &&\r\n                                value === window['mathlive'].readAloudFinalToken\r\n                            ) {\r\n                                window['mathlive'].readAloudAudio.pause();\r\n                            } else {\r\n                                window['mathlive'].readAloudCurrentMark = value;\r\n                                highlightAtomID(\r\n                                    window['mathlive'].readAloudElement,\r\n                                    window['mathlive'].readAloudCurrentMark\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                window['mathlive'].readAloudAudio.pause();\r\n            }\r\n\r\n            window['mathlive'].readAloudAudio.src = url;\r\n            if (statusHook) {\r\n                statusHook(window['mathlive'].readAloudMathField, 'playing');\r\n            }\r\n            window['mathlive'].readAloudAudio.play();\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Returns the status of a Read Aloud operation (reading with synchronized\r\n * highlighting).\r\n *\r\n * Possible values are:\r\n * - `\"ready\"`\r\n * - `\"playing\"`\r\n * - `\"paused\"`\r\n * - `\"unavailable\"`\r\n *\r\n * **See** {@linkcode speak}\r\n * @category Read Aloud\r\n * @return {\"ready\" | \"playing\" | \"paused\" | \"unavailable\"}\r\n */\r\nexport function readAloudStatus() {\r\n    if (!window) return 'unavailable';\r\n    window['mathlive'] = window['mathlive'] || {};\r\n\r\n    if (!window['mathlive'].readAloudAudio) return 'ready';\r\n    if (window['mathlive'].readAloudAudio.paused) return 'paused';\r\n    if (!window['mathlive'].readAloudAudio.ended) return 'playing';\r\n\r\n    return 'ready';\r\n}\r\n\r\n/**\r\n * Pauses a read aloud operation if one is in progress.\r\n *\r\n * **See** {@linkcode speak}\r\n */\r\nexport function pauseReadAloud() {\r\n    if (!window) return;\r\n    window['mathlive'] = window['mathlive'] || {};\r\n    if (window['mathlive'].readAloudAudio) {\r\n        if (window['mathlive'].onReadAloudStatus) {\r\n            window['mathlive'].onReadAloudStatus(\r\n                window['mathlive'].readAloudMathField,\r\n                'paused'\r\n            );\r\n        }\r\n        window['mathlive'].readAloudAudio.pause();\r\n    }\r\n}\r\n\r\n/**\r\n * Resumes a read aloud operation if one was paused.\r\n *\r\n * **See** {@linkcode speak}\r\n */\r\nexport function resumeReadAloud() {\r\n    if (!window) return;\r\n    window['mathlive'] = window['mathlive'] || {};\r\n    if (window['mathlive'].readAloudAudio) {\r\n        if (window['mathlive'].onReadAloudStatus) {\r\n            window['mathlive'].onReadAloudStatus(\r\n                window['mathlive'].readAloudMathField,\r\n                'playing'\r\n            );\r\n        }\r\n        window['mathlive'].readAloudAudio.play();\r\n    }\r\n}\r\n\r\n/**\r\n * If a Read Aloud operation is in progress, read from a specified token\r\n *\r\n * **See** {@linkcode speak}\r\n *\r\n * @param {string} [token]\r\n * @param {number} [count] The number of tokens to read.\r\n */\r\nexport function playReadAloud(token, count) {\r\n    if (!window) return;\r\n    window['mathlive'] = window['mathlive'] || {};\r\n    if (window['mathlive'].readAloudAudio) {\r\n        let timeIndex = 0;\r\n        window['mathlive'].readAloudFinalToken = null;\r\n        if (token) {\r\n            window['mathlive'].readAloudMarks =\r\n                window['mathlive'].readAloudMarks || [];\r\n            for (const mark of window['mathlive'].readAloudMarks) {\r\n                if (mark.value === token) {\r\n                    timeIndex = mark.time / 1000;\r\n                }\r\n            }\r\n            let tokenIndex = window['mathlive'].readAloudTokens.indexOf(token);\r\n            if (tokenIndex >= 0) {\r\n                tokenIndex += count;\r\n                if (tokenIndex < window['mathlive'].readAloudTokens.length) {\r\n                    window['mathlive'].readAloudFinalToken = tokenIndex;\r\n                }\r\n            }\r\n        }\r\n        window['mathlive'].readAloudAudio.currentTime = timeIndex;\r\n        if (window['mathlive'].onReadAloudStatus) {\r\n            window['mathlive'].onReadAloudStatus(\r\n                window['mathlive'].readAloudMathField,\r\n                'playing'\r\n            );\r\n        }\r\n        window['mathlive'].readAloudAudio.play();\r\n    }\r\n}\r\n","/// ^.*('\\\\.*').*\r\nimport { FUNCTIONS, MATH_SYMBOLS } from '../core/definitions';\r\n\r\n// Frequency of a symbol.\r\n// String constants corresponding to frequency values,\r\n// which are the number of results returned by latexsearch.com\r\n// When the precise number is known, it is provided. Otherwise,\r\n// the following constants are used to denote an estimate.\r\nexport const CRYPTIC = 0;\r\nexport const ARCANE = 200;\r\nexport const VERY_RARE = 'VERY_RARE';\r\nexport const RARE = 1200;\r\nexport const UNCOMMON = 2000;\r\nexport const COMMON = 3000;\r\nexport const SUPERCOMMON = 4000;\r\n\r\n/*\r\n * Set the metadata for the specified symbols\r\n *\r\n * metadata('Functions', ['\\\\sin', '\\\\cos'], COMMON, '$0{a}')\r\n *\r\n */\r\nfunction metadata(category, symbols, frequency = COMMON, template = '$0') {\r\n    symbols.forEach((symbol) => {\r\n        if (MATH_SYMBOLS[symbol]) {\r\n            MATH_SYMBOLS[symbol].frequency = frequency;\r\n            MATH_SYMBOLS[symbol].category = category;\r\n            MATH_SYMBOLS[symbol].template = template.replace(/\\$0/g, symbol);\r\n        }\r\n        if (FUNCTIONS[symbol]) {\r\n            // Make a copy of the entry, since it could be shared by multiple\r\n            // symbols\r\n            FUNCTIONS[symbol] = {\r\n                ...FUNCTIONS[symbol],\r\n                frequency: frequency,\r\n                category: category,\r\n                template: template.replace(/\\$0/g, symbol),\r\n            };\r\n        }\r\n    });\r\n}\r\n\r\nmetadata('Trigonometry', ['\\\\cos', '\\\\sin', '\\\\tan'], SUPERCOMMON);\r\n\r\nmetadata(\r\n    'Trigonometry',\r\n    [\r\n        '\\\\arcsin',\r\n        '\\\\arccos',\r\n        '\\\\arctan',\r\n        '\\\\arctg',\r\n        '\\\\arcctg',\r\n        '\\\\arcsec',\r\n        '\\\\arccsc',\r\n        '\\\\arsinh',\r\n        '\\\\arccosh',\r\n        '\\\\arctanh',\r\n        '\\\\arcsech',\r\n        '\\\\arccsch',\r\n        '\\\\arg',\r\n        '\\\\ch',\r\n        '\\\\cosec',\r\n        '\\\\cosh',\r\n        '\\\\cot',\r\n        '\\\\cotg',\r\n        '\\\\coth',\r\n        '\\\\csc',\r\n        '\\\\ctg',\r\n        '\\\\cth',\r\n        '\\\\lg',\r\n        '\\\\lb',\r\n        '\\\\sec',\r\n        '\\\\sinh',\r\n        '\\\\sh',\r\n        '\\\\tanh',\r\n        '\\\\tg',\r\n        '\\\\th',\r\n    ],\r\n    UNCOMMON\r\n);\r\n\r\nmetadata('Functions', ['\\\\ln', '\\\\log', '\\\\exp', '\\\\lim'], SUPERCOMMON);\r\n\r\nmetadata(\r\n    'Functions',\r\n    ['\\\\dim', '\\\\ker', '\\\\deg', '\\\\det', '\\\\mod', '\\\\min', '\\\\max'],\r\n    COMMON\r\n);\r\nmetadata('Functions', ['\\\\hom'], RARE);\r\n\r\nmetadata('Decoration', ['\\\\rule'], ARCANE, '$0{2em}{1em}');\r\n\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\color', '\\\\textcolor'],\r\n    ARCANE,\r\n    '{$0{m0}A}{$0{m1}B}{$0{m2}C }{$0{m3}a}{$0{m4}b}{$0{m5}c}{$0{m6}8}'\r\n);\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\overline', '\\\\underline'],\r\n    COMMON,\r\n    '$0{\\\\placeholder{}}'\r\n);\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\enclose'],\r\n    RARE,\r\n    '\\\\enclose{updiagonalstrike,roundedbox}[1px solid red, mathbackground=\"#fbc0bd\"]{x=0}'\r\n);\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\fcolorbox'],\r\n    RARE,\r\n    '\\\\fcolorbox{#cd0030}{#ffd400}{\\\\unicode{\"2B1A}}'\r\n);\r\n\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\colorbox'],\r\n    RARE,\r\n    '\\\\colorbox{#fbc0bd}{\\\\unicode{\"2B1A}}'\r\n);\r\n\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\boxed', '\\\\cancel', '\\\\bcancel', '\\\\xcancel'],\r\n    RARE,\r\n    '$0{\\\\placeholder{}}'\r\n);\r\n\r\nmetadata(\r\n    'Decoration',\r\n    ['\\\\bbox'],\r\n    RARE,\r\n    '\\\\bbox[#ffd400, solid 2px #ffd400]{\\\\unicode{\"2B1A}}'\r\n);\r\n\r\nmetadata('Styling', ['\\\\mathbb'], SUPERCOMMON, '$0{Don Knuth}');\r\nmetadata(\r\n    'Styling',\r\n    [\r\n        '\\\\textbf',\r\n        '\\\\textup',\r\n        '\\\\textit',\r\n        '\\\\textrm',\r\n        '\\\\textsf',\r\n        '\\\\texttt',\r\n        '\\\\textnormal',\r\n        '\\\\textmd',\r\n        '\\\\textsl',\r\n        '\\\\textsc',\r\n\r\n        '\\\\mathsf',\r\n        '\\\\mathtt',\r\n        '\\\\mathrm',\r\n        '\\\\mathfrak',\r\n        '\\\\mathcal',\r\n        '\\\\mathscr',\r\n        '\\\\mathbf',\r\n        '\\\\mathmd',\r\n        '\\\\mathit',\r\n        '\\\\text',\r\n        '\\\\mbox',\r\n        '\\\\Bbb',\r\n        '\\\\bold',\r\n        '\\\\bm',\r\n        '\\\\boldsymbol',\r\n    ],\r\n    COMMON,\r\n    '$0{Don Knuth}'\r\n);\r\nmetadata(\r\n    'Styling',\r\n    [\r\n        '\\\\frak',\r\n        '\\\\tt',\r\n        '\\\\bf',\r\n        '\\\\it',\r\n        '\\\\rmfamily', // Note: In LaTeX, /rmfamily is a no-op in math mode\r\n        '\\\\sffamily',\r\n        '\\\\ttfamily',\r\n        '\\\\class',\r\n        '\\\\cssId',\r\n    ],\r\n    RARE,\r\n    '{$0 Don Knuth}'\r\n);\r\nmetadata(\r\n    'Styling',\r\n    ['\\\\bfseries', '\\\\mdseries', '\\\\upshape', '\\\\slshape', '\\\\scshape'],\r\n    RARE,\r\n    '\\\\text{$0 Don Knuth}'\r\n);\r\n\r\nmetadata(\r\n    'Styling',\r\n    ['\\\\class', '\\\\cssId'],\r\n    RARE,\r\n    '$0{testIdentifier}{Don Knuth}'\r\n);\r\n\r\n// Note: In LaTeX, \\fontseries, \\fontfamily, \\fontshape are applicable to\r\n// text mode only\r\nmetadata('Styling', ['\\\\fontseries'], RARE, '\\\\text{$0{b}Don Knuth}');\r\nmetadata('Styling', ['\\\\fontfamily'], RARE, '\\\\text{$0{cmtt}Don Knuth}');\r\nmetadata('Styling', ['\\\\fontshape'], RARE, '\\\\text{$0{sc}Don Knuth}');\r\nmetadata('Styling', ['\\\\selectfont'], RARE, '\\\\text{$0}'); // no-op, but only valid in text mode\r\n\r\nmetadata('Styling', ['\\\\emph'], RARE, 'Don$0{Knuth}');\r\nmetadata('Styling', ['\\\\em'], RARE, 'Don{$0 Knuth}');\r\n\r\nmetadata(\r\n    'Layout',\r\n    [\r\n        '\\\\mathop',\r\n        '\\\\mathbin',\r\n        '\\\\mathrel',\r\n        '\\\\mathopen',\r\n        '\\\\mathclose',\r\n        '\\\\mathpunct',\r\n        '\\\\mathord',\r\n        '\\\\mathinner',\r\n        '\\\\operatorname',\r\n        '\\\\operatorname*',\r\n    ],\r\n    RARE,\r\n    'x=$0{arg}=0'\r\n);\r\nmetadata('Layout', ['\\\\middle'], RARE, '\\\\left\\\\{x$0|x>0\\\\right\\\\}');\r\nmetadata(\r\n    'Layout',\r\n    ['\\\\overset', '\\\\underset', '\\\\stackrel', '\\\\stackbin'],\r\n    RARE,\r\n    '$0{arg}{x=0}'\r\n);\r\n\r\nmetadata('Layout', ['\\\\rlap', '\\\\mathrlap'], RARE, '$0{/}0');\r\nmetadata('Layout', ['\\\\llap', '\\\\mathllap'], RARE, 'o$0{/}');\r\n\r\nmetadata(\r\n    'Fractions',\r\n    ['\\\\frac'],\r\n    SUPERCOMMON,\r\n    '$0{\\\\placeholder{}}{\\\\placeholder{}}'\r\n);\r\nmetadata(\r\n    'Fractions',\r\n    [\r\n        '\\\\binom',\r\n        '\\\\dfrac',\r\n        '\\\\tfrac',\r\n        '\\\\dbinom',\r\n        '\\\\tbinom',\r\n        '\\\\pdiff',\r\n        '\\\\cfrac',\r\n    ],\r\n    RARE,\r\n    '$0{\\\\placeholder{}}{\\\\placeholder{}}'\r\n);\r\nmetadata(\r\n    'Fractions',\r\n    ['\\\\over', '\\\\atop', '\\\\choose'],\r\n    RARE,\r\n    '\\\\unicode{\"2B1A} $0 \\\\unicode{\"2B1A}'\r\n);\r\nmetadata(\r\n    'Fractions',\r\n    ['\\\\overwithdelims', '\\\\atopwithdelims'],\r\n    RARE,\r\n    '{\\\\unicode{\"2B1A} $0{\\\\lbrace}{\\\\rbrace} \\\\unicode{\"2B1A}}'\r\n);\r\n\r\nmetadata(\r\n    'Extensible Operators',\r\n    ['\\\\sum', '\\\\prod', '\\\\bigcap', '\\\\bigcup', '\\\\int'],\r\n    SUPERCOMMON\r\n);\r\nmetadata(\r\n    'Extensible Operators',\r\n    ['\\\\bigoplus', '\\\\smallint', '\\\\iint', '\\\\oint'],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Extensible Operators',\r\n    [\r\n        '\\\\bigwedge',\r\n        '\\\\bigvee',\r\n        '\\\\coprod',\r\n\r\n        '\\\\bigsqcup',\r\n        '\\\\bigotimes',\r\n        '\\\\bigodot',\r\n        '\\\\biguplus',\r\n\r\n        '\\\\intop',\r\n        '\\\\sqcup',\r\n        '\\\\sqcap',\r\n        '\\\\uplus',\r\n        '\\\\wr',\r\n        '\\\\Cap',\r\n        '\\\\Cup',\r\n        '\\\\doublecap',\r\n        '\\\\doublecup',\r\n        '\\\\amalg',\r\n\r\n        '\\\\iiint',\r\n        '\\\\oiint',\r\n        '\\\\oiiint',\r\n        '\\\\intclockwise',\r\n        '\\\\varointclockwise',\r\n        '\\\\ointctrclockwise',\r\n        '\\\\intctrclockwise',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Accents', ['\\\\vec'], SUPERCOMMON);\r\nmetadata(\r\n    'Accents',\r\n    ['\\\\bar', '\\\\ddot', '\\\\acute', '\\\\tilde', '\\\\check'],\r\n    COMMON,\r\n    '$0{\\\\placeholder{}}'\r\n);\r\nmetadata('Accents', ['\\\\^', '\\\\`', \"\\\\'\"], RARE, '$0{e}');\r\nmetadata('Accents', ['\\\\c'], RARE, '$0{c}');\r\nmetadata('Accents', ['\\\\~'], RARE, '$0{n}');\r\nmetadata(\r\n    'Accents',\r\n    ['\\\\mathring', '\\\\hat', '\\\\dot', '\\\\breve', '\\\\grave'],\r\n    RARE,\r\n    '$0{\\\\placeholder{}}'\r\n);\r\n\r\nmetadata(\r\n    'Extensible Symbols',\r\n    [\r\n        '\\\\overrightarrow',\r\n        '\\\\overleftarrow',\r\n        '\\\\Overrightarrow',\r\n        '\\\\overleftharpoon',\r\n        '\\\\overrightharpoon',\r\n        '\\\\overleftrightarrow',\r\n        '\\\\overbrace',\r\n        '\\\\overlinesegment',\r\n        '\\\\overgroup',\r\n        '\\\\widehat',\r\n        '\\\\widecheck',\r\n        '\\\\widetilde',\r\n    ],\r\n    COMMON,\r\n    '$0{ABC}'\r\n);\r\n\r\nmetadata(\r\n    'Extensible Symbols',\r\n    [\r\n        '\\\\underrightarrow',\r\n        '\\\\underleftarrow',\r\n        '\\\\underleftrightarrow',\r\n        '\\\\underbrace',\r\n        '\\\\underlinesegment',\r\n        '\\\\undergroup',\r\n        '\\\\utilde',\r\n    ],\r\n    COMMON,\r\n    '$0{ABC}'\r\n);\r\n\r\nmetadata(\r\n    'Sizing',\r\n    [\r\n        '\\\\tiny',\r\n        '\\\\scriptsize',\r\n        '\\\\footnotesize',\r\n        '\\\\small',\r\n        '\\\\normalsize',\r\n        '\\\\large',\r\n        '\\\\Large',\r\n        '\\\\LARGE',\r\n        '\\\\huge',\r\n        '\\\\Huge',\r\n    ],\r\n    RARE,\r\n    '$0{x=0}'\r\n);\r\n\r\nmetadata('Sizing', ['\\\\big', '\\\\Big', '\\\\bigg', '\\\\Bigg'], RARE, '$0($0)');\r\nmetadata('Sizing', ['\\\\bigl', '\\\\Bigl', '\\\\biggl', '\\\\Biggl'], RARE, '$0(');\r\nmetadata('Sizing', ['\\\\bigr', '\\\\Bigr', '\\\\biggr', '\\\\Biggr'], RARE, '$0)');\r\nmetadata('Sizing', ['\\\\bigm', '\\\\Bigm', '\\\\biggm', '\\\\Biggm'], RARE, '$0|');\r\n\r\nmetadata(\r\n    'Letterlike Symbols',\r\n    [\r\n        '\\\\nabla',\r\n        '\\\\partial',\r\n        '\\\\doubleStruckCapitalN',\r\n        '\\\\N',\r\n        '\\\\doubleStruckCapitalR',\r\n        '\\\\R',\r\n        '\\\\doubleStruckCapitalQ',\r\n        '\\\\Q',\r\n        '\\\\doubleStruckCapitalC',\r\n        '\\\\C',\r\n        '\\\\doubleStruckCapitalZ',\r\n        '\\\\Z',\r\n        '\\\\exponentialE',\r\n        '\\\\forall',\r\n        '\\\\exists',\r\n        '\\\\nexists',\r\n        '\\\\$',\r\n        '\\\\%',\r\n        '\\\\And',\r\n        '\\\\degree',\r\n    ],\r\n    SUPERCOMMON\r\n);\r\n\r\nmetadata(\r\n    'Letterlike Symbols',\r\n    [\r\n        '\\\\doubleStruckCapitalP',\r\n        '\\\\P',\r\n        '\\\\ell',\r\n        '\\\\hbar',\r\n        '\\\\hslash',\r\n        '\\\\imath',\r\n        '\\\\jmath',\r\n        '\\\\imaginaryI',\r\n        '\\\\imaginaryJ',\r\n        '\\\\differentialD',\r\n        '\\\\rd',\r\n        '\\\\capitalDifferentialD',\r\n        '\\\\rD',\r\n        '\\\\differencedelta',\r\n        '\\\\mid',\r\n        '@',\r\n        '\\\\Re',\r\n        '\\\\Im',\r\n    ],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Letterlike Symbols',\r\n    [\r\n        '\\\\top',\r\n        '\\\\bot',\r\n        '\\\\scriptCapitalE',\r\n        '\\\\scriptCapitalH',\r\n        '\\\\scriptCapitalL',\r\n        '\\\\gothicCapitalC',\r\n        '\\\\gothicCapitalH',\r\n        '\\\\gothicCapitalI',\r\n        '\\\\gothicCapitalR',\r\n        '\\\\Bbbk',\r\n        '\\\\Finv',\r\n        '\\\\Game',\r\n        '\\\\wp',\r\n        '\\\\eth',\r\n        '\\\\mho',\r\n        '\\\\pounds',\r\n        '\\\\yen',\r\n        '\\\\euro',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Crosses', ['\\\\dagger', '\\\\dag'], SUPERCOMMON);\r\n\r\nmetadata(\r\n    'Crosses',\r\n    ['\\\\ddag', '\\\\ddagger', '\\\\maltese', '\\\\textdagger', '\\\\textdaggerdbl'],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Various',\r\n    [\r\n        '\\\\checkmark',\r\n\r\n        '\\\\diagup',\r\n        '\\\\diagdown',\r\n\r\n        '\\\\angle',\r\n        '\\\\measuredangle',\r\n        '\\\\sphericalangle',\r\n\r\n        '\\\\prime',\r\n        '\\\\doubleprime',\r\n        '\\\\backprime',\r\n        '\\\\backdoubleprime',\r\n        '\\\\sharp',\r\n        '\\\\flat',\r\n        '\\\\natural',\r\n        '\\\\&',\r\n        '\\\\#',\r\n        '\\\\clubsuit',\r\n        '\\\\spadesuit',\r\n        '\\\\diamondsuit',\r\n        '\\\\heartsuit',\r\n        '\\\\backslash',\r\n        '\\\\infty',\r\n        '/',\r\n        '\\\\_',\r\n        '\\\\/',\r\n        '|',\r\n        \"'\",\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Various', ['\\\\unicode'], RARE, '$0{\"2B1A}');\r\n\r\nmetadata(\r\n    'Arrows',\r\n    ['\\\\longrightarrow', '\\\\rightarrow', '\\\\Longrightarrow', '\\\\Rightarrow'],\r\n    SUPERCOMMON\r\n);\r\nmetadata(\r\n    'Arrows',\r\n    [\r\n        '\\\\longmapsto',\r\n        '\\\\mapsto',\r\n        '\\\\Longleftrightarrow',\r\n        '\\\\rightleftarrows',\r\n        '\\\\leftarrow',\r\n        '\\\\curvearrowleft',\r\n        '\\\\uparrow',\r\n        '\\\\downarrow',\r\n        '\\\\hookrightarrow',\r\n        '\\\\rightharpoonup',\r\n        '\\\\rightleftharpoons',\r\n    ],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Arrows',\r\n    [\r\n        '\\\\Leftarrow',\r\n        '\\\\longleftrightarrow',\r\n        '\\\\longleftarrow',\r\n        '\\\\Longleftarrow',\r\n\r\n        '\\\\searrow',\r\n        '\\\\nearrow',\r\n        '\\\\swarrow',\r\n        '\\\\nwarrow',\r\n\r\n        '\\\\Uparrow',\r\n        '\\\\Downarrow',\r\n        '\\\\updownarrow',\r\n        '\\\\Updownarrow',\r\n\r\n        '\\\\hookleftarrow',\r\n        '\\\\leftharpoonup',\r\n        '\\\\leftharpoondown',\r\n        '\\\\rightharpoondown',\r\n\r\n        '\\\\leftrightarrows',\r\n\r\n        '\\\\dashrightarrow',\r\n        '\\\\dashleftarrow',\r\n        '\\\\leftleftarrows',\r\n        '\\\\Lleftarrow',\r\n        '\\\\twoheadleftarrow',\r\n        '\\\\leftarrowtail',\r\n        '\\\\looparrowleft',\r\n        '\\\\leftrightharpoons',\r\n        '\\\\circlearrowleft',\r\n        '\\\\Lsh',\r\n        '\\\\upuparrows',\r\n        '\\\\downharpoonleft',\r\n        '\\\\multimap',\r\n        '\\\\leftrightsquigarrow',\r\n        '\\\\twoheadrightarrow',\r\n        '\\\\rightarrowtail',\r\n        '\\\\looparrowright',\r\n        '\\\\curvearrowright',\r\n        '\\\\circlearrowright',\r\n        '\\\\Rsh',\r\n        '\\\\downdownarrows',\r\n        '\\\\upharpoonright',\r\n        '\\\\downharpoonright',\r\n        '\\\\rightsquigarrow',\r\n        '\\\\leadsto',\r\n        '\\\\Rrightarrow',\r\n        '\\\\restriction',\r\n    ],\r\n    RARE\r\n);\r\nmetadata('Arrows', ['\\\\upharpoonleft', '\\\\rightrightarrows'], CRYPTIC);\r\n\r\n// AMS Negated Arrows\r\nmetadata(\r\n    'Negated Arrows',\r\n    [\r\n        '\\\\nrightarrow',\r\n        '\\\\nRightarrow',\r\n        '\\\\nleftrightarrow',\r\n        '\\\\nLeftrightarrow',\r\n        '\\\\nleftarrow',\r\n        '\\\\nLeftarrow',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Extensible Symbols',\r\n    [\r\n        '\\\\xrightarrow',\r\n        '\\\\xleftarrow',\r\n        '\\\\xRightarrow',\r\n        '\\\\xLeftarrow',\r\n        '\\\\xleftharpoonup',\r\n        '\\\\xleftharpoondown',\r\n        '\\\\xrightharpoonup',\r\n        '\\\\xrightharpoondown',\r\n        '\\\\xlongequal',\r\n        '\\\\xtwoheadleftarrow',\r\n        '\\\\xtwoheadrightarrow',\r\n        '\\\\xleftrightarrow',\r\n        '\\\\xLeftrightarrow',\r\n        '\\\\xrightleftharpoons',\r\n        '\\\\xleftrightharpoons',\r\n        '\\\\xhookleftarrow',\r\n        '\\\\xhookrightarrow',\r\n        '\\\\xmapsto',\r\n        '\\\\xtofrom',\r\n        '\\\\xrightleftarrows', // From mhchem.sty package\r\n        '\\\\xrightequilibrium', // From mhchem.sty package\r\n        '\\\\xleftequilibrium',\r\n    ],\r\n    RARE,\r\n    '$0[below]{above}=0'\r\n);\r\n\r\n// AMS Negated Binary Relations\r\nmetadata(\r\n    'Negated Relations',\r\n    [\r\n        '\\\\nless',\r\n        '\\\\nleqslant',\r\n        '\\\\lneq',\r\n        '\\\\lneqq',\r\n        '\\\\nleqq',\r\n\r\n        '\\\\unlhd',\r\n        '\\\\unrhd',\r\n\r\n        '\\\\lvertneqq',\r\n        '\\\\lnsim',\r\n        '\\\\lnapprox',\r\n        '\\\\nprec',\r\n        '\\\\npreceq',\r\n        '\\\\precnsim',\r\n        '\\\\precnapprox',\r\n        '\\\\nsim',\r\n        '\\\\nshortmid',\r\n        '\\\\nmid',\r\n        '\\\\nvdash',\r\n        '\\\\nvDash',\r\n        '\\\\ngtr',\r\n        '\\\\ngeqslant',\r\n        '\\\\ngeqq',\r\n        '\\\\gneq',\r\n        '\\\\gneqq',\r\n        '\\\\gvertneqq',\r\n        '\\\\gnsim',\r\n        '\\\\nsucc',\r\n        '\\\\succnsim',\r\n        '\\\\ncong',\r\n        '\\\\nshortparallel',\r\n        '\\\\nparallel',\r\n        '\\\\nVDash',\r\n        '\\\\nVdash',\r\n        '\\\\precneqq',\r\n        '\\\\succneqq',\r\n        '\\\\gnapprox',\r\n        '\\\\succnapprox',\r\n        '\\\\nsucceq',\r\n    ],\r\n    RARE\r\n);\r\n\r\n// AMS Hebrew\r\nmetadata('Hebrew', ['\\\\aleph', '\\\\beth', '\\\\daleth', '\\\\gimel'], RARE);\r\n\r\nmetadata(\r\n    'Fences',\r\n    [\r\n        '\\\\lbrace',\r\n        '\\\\rbrace',\r\n        '\\\\vert',\r\n        '\\\\Vert',\r\n        '\\\\{',\r\n        '\\\\}',\r\n        '(',\r\n        ')',\r\n        '[',\r\n        ']',\r\n    ],\r\n    SUPERCOMMON\r\n);\r\nmetadata(\r\n    'Fences',\r\n    [\r\n        '\\\\langle',\r\n        '\\\\rangle',\r\n        '\\\\lfloor',\r\n        '\\\\rfloor',\r\n        '\\\\lceil',\r\n        '\\\\rceil',\r\n        '\\\\mvert',\r\n        '\\\\|',\r\n        '\\\\mVert',\r\n    ],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Fences',\r\n    [\r\n        '\\\\lvert',\r\n        '\\\\rvert',\r\n        '\\\\lVert',\r\n        '\\\\rVert',\r\n        '\\\\lbrack',\r\n        '\\\\rbrack',\r\n        '\\\\ulcorner',\r\n        '\\\\urcorner',\r\n        '\\\\llcorner',\r\n        '\\\\lrcorner',\r\n        '\\\\lgroup',\r\n        '\\\\rgroup',\r\n        '\\\\lmoustache',\r\n        '\\\\rmoustache',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Relations',\r\n    ['=', '\\\\ne', '\\\\neq', '<', '>', '\\\\leqslant', '\\\\geqslant', '\\\\approx'],\r\n    SUPERCOMMON\r\n);\r\nmetadata(\r\n    'Relations',\r\n    [\r\n        '\\\\lt',\r\n        '\\\\gt',\r\n        '\\\\le',\r\n        '\\\\ge',\r\n        '\\\\leq',\r\n        '\\\\geq',\r\n        '\\\\gg',\r\n        '\\\\cong',\r\n        '\\\\equiv',\r\n        '\\\\prec',\r\n        '\\\\preceq',\r\n        '\\\\succ',\r\n        '\\\\perp',\r\n        '\\\\parallel',\r\n        '\\\\propto',\r\n        '\\\\smile',\r\n        '\\\\frown',\r\n        '\\\\sim',\r\n        '\\\\gtrsim',\r\n    ],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Relations',\r\n    [\r\n        '\\\\coloneq',\r\n        '\\\\succeq',\r\n\r\n        '\\\\approxeq',\r\n        '\\\\thickapprox',\r\n        '\\\\lessapprox',\r\n        '\\\\gtrapprox',\r\n        '\\\\precapprox',\r\n        '\\\\succapprox',\r\n\r\n        '\\\\thicksim',\r\n        '\\\\succsim',\r\n        '\\\\precsim',\r\n        '\\\\backsim',\r\n        '\\\\eqsim',\r\n        '\\\\backsimeq',\r\n        '\\\\simeq',\r\n        '\\\\lesssim',\r\n\r\n        '\\\\nleq',\r\n        '\\\\ngeq',\r\n\r\n        '\\\\smallsmile',\r\n        '\\\\smallfrown',\r\n        '\\\\bowtie',\r\n\r\n        '\\\\asymp',\r\n\r\n        '\\\\leqq',\r\n        '\\\\eqslantless',\r\n\r\n        '\\\\ll',\r\n\r\n        '\\\\lll',\r\n        '\\\\lessgtr',\r\n        '\\\\lesseqgtr',\r\n        '\\\\lesseqqgtr',\r\n        '\\\\risingdotseq',\r\n        '\\\\fallingdotseq',\r\n        '\\\\preccurlyeq',\r\n        '\\\\curlyeqprec',\r\n        '\\\\vDash',\r\n        '\\\\Vvdash',\r\n        '\\\\bumpeq',\r\n        '\\\\Bumpeq',\r\n        '\\\\geqq',\r\n        '\\\\eqslantgtr',\r\n        '\\\\ggg',\r\n        '\\\\gtrless',\r\n        '\\\\gtreqless',\r\n        '\\\\gtreqqless',\r\n\r\n        '\\\\succcurlyeq',\r\n        '\\\\curlyeqsucc',\r\n        '\\\\Vdash',\r\n        '\\\\shortmid',\r\n        '\\\\shortparallel',\r\n        '\\\\between',\r\n        '\\\\pitchfork',\r\n        '\\\\varpropto',\r\n        '\\\\backepsilon',\r\n        '\\\\llless',\r\n        '\\\\gggtr',\r\n        '\\\\lhd',\r\n        '\\\\rhd',\r\n        '\\\\Join',\r\n\r\n        '\\\\doteq',\r\n        '\\\\doteqdot',\r\n        '\\\\Doteq',\r\n        '\\\\eqcirc',\r\n        '\\\\circeq',\r\n        '\\\\lessdot',\r\n        '\\\\gtrdot',\r\n        '\\\\measeq',\r\n        '\\\\eqdef',\r\n        '\\\\questeq',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Logic',\r\n    ['\\\\leftrightarrow', '\\\\Leftrightarrow', '\\\\to'],\r\n    SUPERCOMMON\r\n);\r\nmetadata('Logic', ['\\\\models', '\\\\vdash'], COMMON);\r\nmetadata(\r\n    'Logic',\r\n    [\r\n        '\\\\therefore',\r\n        '\\\\because',\r\n        '\\\\implies',\r\n        '\\\\gets',\r\n        '\\\\dashv',\r\n        '\\\\impliedby',\r\n        '\\\\biconditional',\r\n        '\\\\roundimplies',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Operators', ['+', '-', '*', '\\\\cdot'], SUPERCOMMON);\r\nmetadata('Operators', ['\\\\sqrt'], SUPERCOMMON, '$0{\\\\placeholder{}}');\r\n\r\nmetadata('Operators', ['\\\\pm', '\\\\mp', '\\\\times', '\\\\div', '\\\\surd'], COMMON);\r\n\r\nmetadata(\r\n    'Operators',\r\n    [\r\n        '\\\\ltimes',\r\n        '\\\\rtimes',\r\n        '\\\\leftthreetimes',\r\n        '\\\\rightthreetimes',\r\n        '\\\\intercal',\r\n        '\\\\dotplus',\r\n        '\\\\centerdot',\r\n        '\\\\doublebarwedge',\r\n        '\\\\divideontimes',\r\n        '\\\\divides',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Logic', ['\\\\wedge', '\\\\vee', '\\\\neg'], SUPERCOMMON);\r\nmetadata('Logic', ['\\\\lnot'], COMMON);\r\nmetadata(\r\n    'Logic',\r\n    [\r\n        '\\\\land',\r\n        '\\\\lor',\r\n        '\\\\barwedge',\r\n        '\\\\veebar',\r\n        '\\\\nor',\r\n        '\\\\curlywedge',\r\n        '\\\\curlyvee',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Greek',\r\n    [\r\n        '\\\\alpha',\r\n        '\\\\beta',\r\n        '\\\\gamma',\r\n        '\\\\delta',\r\n        '\\\\epsilon',\r\n        '\\\\varepsilon',\r\n        '\\\\zeta',\r\n        '\\\\eta',\r\n        '\\\\theta',\r\n        '\\\\vartheta',\r\n        '\\\\iota',\r\n        '\\\\kappa',\r\n        '\\\\varkappa',\r\n        '\\\\lambda',\r\n        '\\\\mu',\r\n        '\\\\nu',\r\n        '\\\\xi',\r\n        '\\\\pi',\r\n        '\\\\varpi',\r\n        '\\\\rho',\r\n        '\\\\varrho',\r\n        '\\\\sigma',\r\n        '\\\\varsigma',\r\n        '\\\\tau',\r\n        '\\\\phi',\r\n        '\\\\varphi',\r\n        '\\\\upsilon',\r\n        '\\\\chi',\r\n        '\\\\psi',\r\n        '\\\\omega',\r\n        '\\\\Gamma',\r\n        '\\\\Delta',\r\n        '\\\\Theta',\r\n        '\\\\Lambda',\r\n        '\\\\Xi',\r\n        '\\\\Pi',\r\n        '\\\\Sigma',\r\n        '\\\\Upsilon',\r\n        '\\\\Phi',\r\n        '\\\\Psi',\r\n        '\\\\Omega',\r\n        '\\\\digamma',\r\n        '\\\\omicron',\r\n    ],\r\n    COMMON\r\n);\r\n\r\nmetadata(\r\n    'Sets',\r\n    [\r\n        '\\\\emptyset',\r\n        '\\\\varnothing',\r\n        '\\\\cap',\r\n        '\\\\cup',\r\n        '\\\\in',\r\n        '\\\\notin',\r\n        '\\\\subset',\r\n        '\\\\supset',\r\n        '\\\\subseteq',\r\n        '\\\\supseteq',\r\n        '\\\\sqsubseteq',\r\n    ],\r\n    SUPERCOMMON\r\n);\r\nmetadata(\r\n    'Sets',\r\n    [\r\n        '\\\\setminus',\r\n        '\\\\not',\r\n        '\\\\ni',\r\n        '\\\\sqsupseteq',\r\n        '\\\\nsupseteqq',\r\n        '\\\\supsetneq',\r\n        '\\\\varsupsetneq',\r\n        '\\\\supsetneqq',\r\n        '\\\\varsupsetneqq',\r\n    ],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Sets',\r\n    [\r\n        '\\\\smallsetminus',\r\n        '\\\\complement',\r\n\r\n        '\\\\owns',\r\n        '\\\\subsetneq',\r\n        '\\\\varsubsetneq',\r\n        '\\\\subsetneqq',\r\n        '\\\\varsubsetneqq',\r\n        '\\\\nsubset',\r\n        '\\\\nsupset',\r\n        '\\\\nsubseteq',\r\n        '\\\\nsupseteq',\r\n        '\\\\nsubseteqq',\r\n        '\\\\subseteqq',\r\n        '\\\\Subset',\r\n        '\\\\sqsubset',\r\n        '\\\\supseteqq',\r\n        '\\\\Supset',\r\n        '\\\\sqsupset',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Spacing',\r\n    ['\\\\space, \\\\quad', '\\\\qquad'],\r\n    COMMON,\r\n    '\\\\unicode{\"203A}$0\\\\unicode{\"2039}'\r\n);\r\nmetadata(\r\n    'Spacing',\r\n    ['\\\\!', '\\\\,', '\\\\:', '\\\\;', '\\\\enskip', '\\\\enspace'],\r\n    RARE,\r\n    '\\\\unicode{\"203A}$0\\\\unicode{\"2039}'\r\n);\r\nmetadata(\r\n    'Spacing',\r\n    ['\\\\hspace', '\\\\hspace*'],\r\n    RARE,\r\n    '\\\\unicode{\"203A}$0{1em}\\\\unicode{\"2039}'\r\n);\r\nmetadata(\r\n    'Punctuation',\r\n    [\r\n        '\\\\colon',\r\n        '\\\\cdotp',\r\n        '\\\\ldots',\r\n        '\\\\cdots',\r\n        '\\\\ddots',\r\n        '\\\\vdots',\r\n        '?',\r\n        '!',\r\n        ':',\r\n        '\"',\r\n        ',',\r\n        '.',\r\n        ';',\r\n    ],\r\n    COMMON\r\n);\r\nmetadata('Punctuation', ['\\\\mathellipsis', '\\\\ldotp', '\\\\Colon'], RARE);\r\n\r\nmetadata('Boxes', ['\\\\square', '\\\\Box'], COMMON);\r\nmetadata(\r\n    'Boxes',\r\n    ['\\\\blacksquare', '\\\\boxminus', '\\\\boxplus', '\\\\boxtimes', '\\\\boxdot'],\r\n    RARE\r\n);\r\n\r\nmetadata(\r\n    'Circles',\r\n    ['\\\\circ', '\\\\bullet', '\\\\circleddash', '\\\\oplus', '\\\\otimes'],\r\n    COMMON\r\n);\r\nmetadata(\r\n    'Circles',\r\n    [\r\n        '\\\\bigcirc',\r\n        '\\\\circledast',\r\n        '\\\\ominus',\r\n        '\\\\circledcirc',\r\n        '\\\\oslash',\r\n        '\\\\circledS',\r\n        '\\\\circledR',\r\n        '\\\\odot',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Triangles', ['\\\\triangle', '\\\\triangleq'], COMMON);\r\nmetadata(\r\n    'Triangles',\r\n    [\r\n        '\\\\bigtriangleup',\r\n        '\\\\vartriangle',\r\n        '\\\\triangledown',\r\n        '\\\\bigtriangledown',\r\n        '\\\\triangleleft',\r\n        '\\\\vartriangleleft',\r\n        '\\\\trianglelefteq',\r\n        '\\\\ntriangleleft',\r\n        '\\\\ntrianglelefteq',\r\n        '\\\\triangleright',\r\n        '\\\\vartriangleright',\r\n        '\\\\trianglerighteq',\r\n        '\\\\ntriangleright',\r\n        '\\\\ntrianglerighteq',\r\n        '\\\\blacktriangle',\r\n        '\\\\blacktriangledown',\r\n        '\\\\blacktriangleleft',\r\n        '\\\\blacktriangleright',\r\n    ],\r\n    RARE\r\n);\r\n\r\nmetadata('Shapes', ['\\\\ast', '\\\\star'], COMMON);\r\nmetadata(\r\n    'Shapes',\r\n    ['\\\\diamond', '\\\\Diamond', '\\\\lozenge', '\\\\blacklozenge', '\\\\bigstar'],\r\n    RARE\r\n);\r\n","import { Mathfield } from './public/mathfield';\r\nimport { MathfieldConfig, TextToSpeechOptions } from './public/config';\r\nimport { ParserErrorListener } from './public/core';\r\n\r\nimport { Atom } from './core/atom';\r\nimport { Span } from './core/span';\r\nimport { decompose } from './core/atom-utils';\r\nimport { parseString } from './core/parser';\r\nimport { coalesce, makeSpan, makeStruts } from './core/span';\r\nimport { MACROS, MacroDictionary } from './core/definitions';\r\nimport { MathfieldPrivate } from './editor/mathfield-class';\r\nimport AutoRender from './addons/auto-render';\r\nimport { jsonToLatex, atomtoMathJson } from './addons/math-json';\r\nimport MathLiveDebug from './addons/debug';\r\nimport { MATHSTYLES } from './core/mathstyle';\r\nimport { defaultSpeakHook } from './editor/speech';\r\nimport {\r\n    defaultReadAloudHook,\r\n    readAloudStatus,\r\n    pauseReadAloud,\r\n    resumeReadAloud,\r\n    playReadAloud,\r\n} from './editor/speech-read-aloud';\r\nimport { atomToSpeakableText } from './editor/atom-to-speakable-text';\r\nimport { atomsToMathML } from './addons/math-ml';\r\n\r\nimport './addons/definitions-metadata';\r\n\r\nfunction latexToMarkup(\r\n    text: string,\r\n    options: {\r\n        mathstyle?: 'displaystyle' | 'textstyle';\r\n        letterShapeStyle?: 'tex' | 'french' | 'iso' | 'upright' | 'auto';\r\n        macros?: MacroDictionary;\r\n        onError?: ParserErrorListener;\r\n        format?: string;\r\n    }\r\n): string | Atom[] | Span[] {\r\n    options = options || {};\r\n    options.mathstyle = options.mathstyle || 'displaystyle';\r\n    options.letterShapeStyle = options.letterShapeStyle || 'auto';\r\n\r\n    //\r\n    // 1. Parse the formula and return a tree of atoms, e.g. 'genfrac'.\r\n    //\r\n\r\n    const atoms = parseString(\r\n        text,\r\n        'math',\r\n        null,\r\n        options.macros,\r\n        false,\r\n        options.onError\r\n    );\r\n\r\n    //\r\n    // 2. Transform the math atoms into elementary spans\r\n    //    for example from genfrac to vlist.\r\n    //\r\n    let spans = decompose(\r\n        {\r\n            mathstyle: MATHSTYLES[options.mathstyle],\r\n            letterShapeStyle: options.letterShapeStyle,\r\n        },\r\n        atoms\r\n    );\r\n\r\n    //\r\n    // 3. Simplify by coalescing adjacent nodes\r\n    //    for example, from <span>1</span><span>2</span>\r\n    //    to <span>12</span>\r\n    //\r\n    spans = coalesce(spans);\r\n\r\n    if (options.format === 'span') return spans;\r\n\r\n    //\r\n    // 4. Wrap the expression with struts\r\n    //\r\n    const wrapper = makeStruts(makeSpan(spans, 'ML__base'), 'ML__mathlive');\r\n\r\n    //\r\n    // 5. Generate markup\r\n    //\r\n\r\n    return wrapper.toMarkup();\r\n}\r\n\r\nfunction makeMathField(\r\n    element: HTMLElement,\r\n    config?: MathfieldConfig\r\n): Mathfield {\r\n    config = config ?? {};\r\n    config.speakHook = config.speakHook ?? defaultSpeakHook;\r\n    config.readAloudHook = config.readAloudHook ?? defaultReadAloudHook;\r\n    return new MathfieldPrivate(getElement(element), config);\r\n}\r\n\r\nfunction latexToMathML(\r\n    latex: string,\r\n    options?: {\r\n        macros?: MacroDictionary;\r\n        onError?: ParserErrorListener;\r\n        generateID?: boolean;\r\n    }\r\n): string {\r\n    options = options ?? {};\r\n    options.macros = { ...MACROS, ...(options.macros ?? {}) };\r\n\r\n    return atomsToMathML(\r\n        parseString(\r\n            latex,\r\n            'math',\r\n            null,\r\n            options.macros,\r\n            false,\r\n            options.onError\r\n        ),\r\n        options\r\n    );\r\n}\r\n\r\nfunction latexToAST(\r\n    latex: string,\r\n    options?: {\r\n        macros?: MacroDictionary;\r\n        onError?: ParserErrorListener;\r\n    }\r\n) {\r\n    options = options ?? {};\r\n    options.macros = { ...MACROS, ...(options.macros ?? {}) };\r\n\r\n    return atomtoMathJson(\r\n        parseString(\r\n            latex,\r\n            'math',\r\n            null,\r\n            options.macros,\r\n            false,\r\n            options.onError\r\n        ),\r\n        options\r\n    );\r\n}\r\n\r\nfunction astToLatex(\r\n    ast,\r\n    options: {\r\n        precision?: number;\r\n        decimalMarker?: string;\r\n        groupSeparator?: string;\r\n        product?: string;\r\n        exponentProduct?: string;\r\n        exponentMarker?: string;\r\n        scientificNotation?: 'auto' | 'engineering' | 'on';\r\n        beginRepeatingDigits?: string;\r\n        endRepeatingDigits?: string;\r\n    }\r\n): string {\r\n    return jsonToLatex(\r\n        typeof ast === 'string' ? JSON.parse(ast) : ast,\r\n        options\r\n    );\r\n}\r\n\r\nfunction latexToSpeakableText(\r\n    latex: string,\r\n    options: TextToSpeechOptions & {\r\n        macros?: MacroDictionary;\r\n        onError?: ParserErrorListener;\r\n    }\r\n): string {\r\n    options = options ?? {};\r\n    options.macros = options.macros || {};\r\n    Object.assign(options.macros, MACROS);\r\n\r\n    const mathlist = parseString(\r\n        latex,\r\n        'math',\r\n        null,\r\n        options.macros,\r\n        false,\r\n        options.onError\r\n    );\r\n\r\n    return atomToSpeakableText(\r\n        mathlist,\r\n        options as Required<TextToSpeechOptions>\r\n    );\r\n}\r\n\r\nfunction renderMathInDocument(options): void {\r\n    renderMathInElement(document.body, options);\r\n}\r\n\r\nfunction getElement(element: string | HTMLElement): HTMLElement {\r\n    if (typeof element === 'string') {\r\n        const result: HTMLElement = document.getElementById(element);\r\n        if (!result) {\r\n            throw Error(`The element with ID \"${element}\" could not be found.`);\r\n        }\r\n        return result;\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction renderMathInElement(element, options): void {\r\n    options = options || {};\r\n    options.renderToMarkup = options.renderToMarkup || latexToMarkup;\r\n    options.renderToMathML = options.renderToMathML || latexToMathML;\r\n    options.renderToSpeakableText =\r\n        options.renderToSpeakableText || latexToSpeakableText;\r\n    options.macros = options.macros || MACROS;\r\n    AutoRender.renderMathInElement(getElement(element), options);\r\n}\r\n\r\nfunction validateNamespace(options): void {\r\n    if (options.namespace) {\r\n        if (!/^[a-z]+[-]?$/.test(options.namespace)) {\r\n            throw Error(\r\n                'options.namespace must be a string of lowercase characters only'\r\n            );\r\n        }\r\n        if (!/-$/.test(options.namespace)) {\r\n            options.namespace += '-';\r\n        }\r\n    }\r\n}\r\n\r\nfunction revertToOriginalContent(element: HTMLElement, options): void {\r\n    // element is a pair: accessible span, math -- set it to the math part\r\n    element = getElement(element).children[1] as HTMLElement;\r\n\r\n    if (element instanceof MathfieldPrivate) {\r\n        element.$revertToOriginalContent();\r\n    } else {\r\n        options = options || {};\r\n        validateNamespace(options);\r\n        element.innerHTML = element.getAttribute(\r\n            'data-' + (options.namespace || '') + 'original-content'\r\n        );\r\n    }\r\n}\r\n\r\nfunction getOriginalContent(element: string | HTMLElement, options): string {\r\n    // element is a pair: accessible span, math -- set it to the math part\r\n    element = getElement(element).children[1] as HTMLElement;\r\n\r\n    if (element instanceof MathfieldPrivate) {\r\n        return element.originalContent;\r\n    }\r\n    options = options || {};\r\n    validateNamespace(options);\r\n    return element.getAttribute(\r\n        'data-' + (options.namespace || '') + 'original-content'\r\n    );\r\n}\r\n\r\n// This GIT_VERSION variable will be replaced during the build process.\r\nexport const version = '{{GIT_VERSION}}';\r\n\r\nexport default {\r\n    version,\r\n    latexToMarkup,\r\n    latexToMathML,\r\n    latexToSpeakableText,\r\n    latexToAST,\r\n    astToLatex,\r\n    makeMathField,\r\n    renderMathInDocument,\r\n    renderMathInElement,\r\n    revertToOriginalContent,\r\n    getOriginalContent,\r\n\r\n    readAloud: defaultReadAloudHook,\r\n    readAloudStatus,\r\n    pauseReadAloud,\r\n    resumeReadAloud,\r\n    playReadAloud,\r\n\r\n    debug: {\r\n        getStyle: MathLiveDebug.getStyle,\r\n        getType: MathLiveDebug.getType,\r\n        spanToString: MathLiveDebug.spanToString,\r\n        hasClass: MathLiveDebug.hasClass,\r\n        latexToAsciiMath: MathLiveDebug.latexToAsciiMath,\r\n        asciiMathToLatex: MathLiveDebug.asciiMathToLatex,\r\n        FUNCTIONS: MathLiveDebug.FUNCTIONS,\r\n        MATH_SYMBOLS: MathLiveDebug.MATH_SYMBOLS,\r\n        TEXT_SYMBOLS: MathLiveDebug.TEXT_SYMBOLS,\r\n        ENVIRONMENTS: MathLiveDebug.ENVIRONMENTS,\r\n        MACROS: MathLiveDebug.MACROS,\r\n        KEYBOARD_SHORTCUTS: MathLiveDebug.KEYBOARD_SHORTCUTS,\r\n        getShortcutMarkup: MathLiveDebug.getShortcutMarkup,\r\n    },\r\n};\r\n"],"names":["applyStyleForMode","emit","emitDefinition","spanHeight","spanDepth","FONTMETRICS","spanItalic","height","depth","skew","spanSkew","applyStyle","clonePath","makeID","toString","register","registerCommand","SPECIAL_OPERATORS","platform","latexToMarkup","l10n","isFunction","isNumber","parse","updateConfig","getDefaultConfig","getConfig","scanText","renderMathInElement"],"mappings":"SAAgB,OAAO,CAAC,KAAU;IAC9B,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;SAUe,UAAU,CAAC,GAAQ;IAC/B,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;AACrC;;ACdA,kBAAe;IACX,aAAa,EAAE;QACX,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACvB,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACrB,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACvB,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACrB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EA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,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;KAC9B;IACD,WAAW,EAAE;QACT,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACtC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACvB,MAAM,EAAE,C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AAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACnC;IACD,aAAa,EAAE;QACX,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACpC,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACpC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACpC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACpC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QACnC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACpC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7B,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAClC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;KAC7B;IACD,cAAc,EAAE;QACZ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAClB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EA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OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,MAAM,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IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QACpC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EA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E,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QAC3C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QAC3C,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAA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AE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC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AO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAClC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CA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C,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACnC;IACD,mBAAmB,EAAE;QACjB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACjC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAChC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,OAA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,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACzB,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,EAAE,CAAC,CAAC,EAAE,O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"}