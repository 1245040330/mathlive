@primary: #0066ce;

@system: -apple-system,BlinkMacSystemFont,Roboto,Oxygen-Sans,Ubuntu,Cantarell,
    "Droid Sans","Helvetica Neue",sans-serif;

.ML__mathlive {
    font: normal 1em KaTeX_Main, 'Times New Roman', serif;
    line-height: 1.2;
    white-space: nowrap;
    text-shadow: none;
    user-select: none;

    // Protect elements from inheriting text-indent.
    text-indent: 0;
    
    // Encourage browsers to consider allocating a hardware accelerated 
    // layer for this element.
    transform: translateZ(0);
}

.ML__base {
    display: inline-flex;
    flex-flow: row wrap;
}

.ML__strut {
    display: inline-block;
}

.ML__caret {
    border: none;
    border-radius: 0;
    border-right: 2px solid @primary;
    margin-right: -2px;
    // z-index: 1;

    animation: ML__caret-blink 1.05s step-end forwards infinite;
}
.ML__command.ML__caret {
    border: none;
    margin-right: 0;
}
.ML__command.ML__caret:after {
    content: '_';
    color: @primary;
    animation: ML__caret-command-blink 1.05s step-end forwards infinite;
}

@keyframes  ML__caret-command-blink {
    from, to    { opacity: 1; }
    50%         { opacity: 0; }
}


@keyframes  ML__caret-blink {
    from, to    { border-color: @primary; }
    50%         { border-color: transparent; }
}

/* Style for the invisible textarea element which is used
to capture keyboard events. We're just trying really hard 
to make sure it doesn't show. */
.ML__textarea--textarea {
    transform: scale(0);
    resize: none;
    /* user-select: text;   Not sure it's needed  */

    /* Need these for Microsoft Edge */
    position: absolute;
    clip: rect(0 0 0 0);
    width: 1px;
    height: 1px;
    /*-ms-transform: scale(0);*/

    /* Need this to prevent iOS Safari from auto-zooming */
    font-size: 16px;
}

.ML__HiddenAccessibleMath {
    clip: rect(1px, 1px, 1px, 1px);
    position: absolute !important;
    white-space: nowrap;
    height: 1px;
    width: 1px;
    overflow: hidden;
}


.ML__fieldcontainer {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    align-items: flex-end;
    // overflow: scroll; /* Doesn't work yet (partial clip), because of incorrect height calculcations */ 
    min-height: 39px;       /* Need some room for the command bar toggle */

    /* Prevent the browser from trying to interpret touch gestures in the field */
    /* "Disabling double-tap to zoom removes the need for browsers to 
        delay the generation of click events when the user taps the screen." */
    touch-action: none;
}

/* This is the actual field content (formula) */
.ML__fieldcontainer--field {
    align-self: center;
}

/* The element that displays the keys as the user type them */
.ML__keystrokecaption {
    visibility: hidden;
    /*min-width: 160px;*/
    /*background-color: rgba(97, 97, 200, .95);*/
    background: rgba(255, 255, 255, 0.8);
    text-align: center;
    border-radius: 6px;
    padding: 16px;
    position: absolute;
    z-index: 1;

    display: flex;
    flex-direction: row;
    justify-content: center;
}

/* The element that displays commands available */
.ML__commandbar {
    // display: inline-block;
    position: fixed;
    visibility: hidden;
    left: 0;
    bottom: 0;
    width: 100%;
    max-width: 100vw;

    z-index: 100;

    display: flex;
    flex-direction: column;
    justify-content: center;

    background: #d1d5d9;
    border: 1px solid #ddd;

    user-select: none;
    cursor: pointer;

    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, .14),
                0 3px 14px 2px rgba(0, 0, 0, .12),
                0 5px 5px -3px rgba(0, 0, 0, .4);
}
.ML__commandbartoggle {
    display: flex;
    align-self: center;
    align-items: center;
    color: #aaa;
    flex-shrink: 0;
    flex-direction: column;
    justify-content: center;

    width: 34px;
    height: 34px;
    margin-right: 4px;
    cursor: pointer;
    box-sizing: border-box;
    /* Avoid some weird blinking with :hover */
    border-radius: 50%;
    border: 1px solid transparent;
    transition: background 0.2s cubic-bezier(.64,.09,.08,1);
}

.ML__commandbartoggle:hover {
    border-radius: 50%;
    border: 1px solid #f0f0f0;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
}
.ML__commandbartoggle {
    fill: #aaa;
}


/* The element that display info while in command mode */
.ML__popover {
    visibility: hidden;
    min-width: 160px;
    background-color: rgba(97, 97, 97, .95);
    color: #fff;
    text-align: center;
    border-radius: 6px;
    // padding: 8px 8px;
    position: absolute;
    z-index: 1;

    display: flex;
    flex-direction: column;
    justify-content: center;

    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    transition: all 0.2s cubic-bezier(.64,.09,.08,1);
}

/* The 'tip' of the popover panel */
.ML__popover::after {
    content: "";
    position: absolute;
    top: -5px;
    left: calc(50% - 3px);
    width: 0; 
    height: 0; 
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    
    font-size: 1rem;
    
    border-bottom: 5px solid rgba(97, 97, 97, .9);
}

